[
    {
        "original_sentence": "GOOD",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "When do I have a Band Practice with Sara, Susan, John, and Mike?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Band Practice\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sara\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Susan\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mike\")))))))))))"
    },
    {
        "original_sentence": "Schedule a Star Viewing past 8 but before midnight tomorrow.",
        "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Star Viewing\")) (Event.start_? (DateTimeAndConstraint x0 (TimeAfterDateTime x0 (Midnight)))))))))"
    },
    {
        "original_sentence": "Schedule weight lifting for tomorrow morning.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"weight lifting\")) (Event.start_? (DateTimeConstraint (Morning) (Tomorrow)))))))"
    },
    {
        "original_sentence": "How long is the new project event?",
        "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"new project\")))))))"
    },
    {
        "original_sentence": "Create an event reminder for my daughter's birthday on Friday.",
        "parse": "(FenceReminder)"
    },
    {
        "original_sentence": "Pick the second option.",
        "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "No",
        "parse": "(DoNotConfirm)"
    },
    {
        "original_sentence": "please cancel my football game tomorrow",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"football game\"))))))))))"
    },
    {
        "original_sentence": "Is there any meeting in the month of July",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (July)))))) 0L))"
    },
    {
        "original_sentence": "I've had some issues with friends recently and want to cancel some things. Start by getting rid of Friendsgiving in early fall.",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Friendsgiving\")) (EarlyDateRange (SeasonFall))))))))))"
    },
    {
        "original_sentence": "Am I free Tomorrow at noon",
        "parse": "(Yield (IsFree (RecipientAvailability (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon)))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
    },
    {
        "original_sentence": "I would like you to remove Laura from the Talk on May 3.",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 3L (May)) (Event.subject_? (?~= \"Talk\"))))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Laura\")))))))))))"
    },
    {
        "original_sentence": "I need you to make a meeting from 8-10 am on Monday.",
        "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 10L)))))))))"
    },
    {
        "original_sentence": "Thank you",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "On the 8th I'm going to Paper Tiger in San Antonio from 7-10PM",
        "parse": "(let (x0 (NextTime (NumberPM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 8L)))) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 10L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Paper Tiger in San Antonio\"))))))))"
    },
    {
        "original_sentence": "Will it rain in San Antonio today?",
        "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"San Antonio\"))) (DateTime.date_? (?= (Today))))))"
    },
    {
        "original_sentence": "Schedule dinner and a movie for tomorrow night at 5 pm with Karen.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner and a movie\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\")))))))))))"
    },
    {
        "original_sentence": "yes. Now please schedule an event on Sunday at 8 for me",
        "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 8L))))))))"
    },
    {
        "original_sentence": "create lunch with doug",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"doug\")))))))))))"
    },
    {
        "original_sentence": "thank you very much",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Can you change the time to 10:30 instead?",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 10L 30L)))))))"
    },
    {
        "original_sentence": "I want to be with my team tomorrow in Bellevue",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.location_? (?= (LocationKeyphrase.apply \"Bellevue\")))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
    },
    {
        "original_sentence": "Okay, Sally and Jim must also be removed.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sally\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\"))))))))))))"
    },
    {
        "original_sentence": "hmm, can you do that again",
        "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
    },
    {
        "original_sentence": "The second one, and make a Dinner Date for Sunday at 7pm",
        "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dinner Date\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 7L)))))))))"
    },
    {
        "original_sentence": "Make an appointment for plastic surgery in 2021.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"plastic surgery\")) (Event.start_? (DateTime.date_? (FullYearofYear (Year.apply 2021L))))))))"
    },
    {
        "original_sentence": "Yes, schedule the one at 1PM!",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "How does the weather look in Wyoming for the weekend?",
        "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Wyoming\"))) (DateTime.date_? (ThisWeekend))))"
    },
    {
        "original_sentence": "10:30AM is perfect",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (HourMinuteAm 10L 30L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "schedule a meeting with Jared's manager asap",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jared\")))))))))))"
    },
    {
        "original_sentence": "Who didnt accept the Gulf War",
        "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Gulf War\")))))) (ResponseStatusType.Accepted)))"
    },
    {
        "original_sentence": "The concert starts at 7 pm.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
    },
    {
        "original_sentence": "Perfect. Now decline the invite to go to Europe and say that I will be in China curing corona",
        "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I will be in china curing corona\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"go to Europe\"))))) :response (ResponseStatusType.Declined))))"
    },
    {
        "original_sentence": "The first one is look good",
        "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Sure",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Sounds good. Who is on Kim's team?",
        "parse": "(Yield (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))"
    },
    {
        "original_sentence": "Delete the meeting with Luke",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Luke\")))))))))))"
    },
    {
        "original_sentence": "When is Mom coming to visit?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Mom coming to visit\")))))))"
    },
    {
        "original_sentence": "I need to invite mark to that dinner as well",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"mark\"))))))))))"
    },
    {
        "original_sentence": "I want to meet with Johnson at 2 Pm Friday",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Johnson\")))))))))))"
    },
    {
        "original_sentence": "Try meeting with Joel last week.",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joel\")))) (LastWeekNew))))"
    },
    {
        "original_sentence": "Correct.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "What day of the week is Halloween next year?",
        "parse": "(Yield (Date.dayOfWeek (HolidayYear (Holiday.Halloween) (NextYear))))"
    },
    {
        "original_sentence": "Can you add the football game i went to yesterday to the calandar",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"football game\")) (Event.start_? (DateTime.date_? (?= (Yesterday))))))))"
    },
    {
        "original_sentence": "cancel lunch",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))))))"
    },
    {
        "original_sentence": "set breakfast at 11.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"breakfast\")) (Event.start_? (?= (NextTime (NumberAM 11L))))))))"
    },
    {
        "original_sentence": "Can you make an event for Thursday for dinner at 5pm",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 5L))))))))"
    },
    {
        "original_sentence": "Alright, thank you",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "That will do!",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "That's exactly right.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Create Doctors Appointment on Thursday",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Doctors Appointment\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday)))))))))"
    },
    {
        "original_sentence": "Add Dan Marton's boss and his skip to the meeting on December 2nd.",
        "parse": "(let (x0 (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Marton\"))))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (MD 2L (December))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager (FindManager x0))))))))))"
    },
    {
        "original_sentence": "Schedule dinner with my family on easter sunday",
        "parse": "(FenceAttendee)"
    },
    {
        "original_sentence": "do I have any appointment tomorrow after 3pm?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (Tomorrow) (^(Event) EmptyStructConstraint) (NumberPM 3L))))) 0L))"
    },
    {
        "original_sentence": "What about Kim Possible's team?",
        "parse": "(Yield (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim Possible\")))))))"
    },
    {
        "original_sentence": "When is my next meeting at the office?",
        "parse": "(Yield (Event.start (FindNumNextEvent (Event.location_? (?= (LocationKeyphrase.apply \"the office\"))) 1L)))"
    },
    {
        "original_sentence": "Ok. Can I modify any events?",
        "parse": "(FenceOther)"
    },
    {
        "original_sentence": "no thanks",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "I don't care about Virginia. I want to know the weather in Wyoming.",
        "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Wyoming\"))) (?= (Now))))"
    },
    {
        "original_sentence": "What do you show on my schedule for Thursday?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "Hi, I have to cancel the Lawyer's meeting I set up for tomorrow at 4pm and move it to Friday at 3pm please.",
        "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L)) (Event.subject_? (?~= \"Lawyer's meeting\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)) (NumberPM 3L))))))))"
    },
    {
        "original_sentence": "Yes but I also need Jessica to be uninvite from Vacation.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jessica\")))))))))))"
    },
    {
        "original_sentence": "ok, create a schedule and name it as tend to food forest",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"tend to food forest\")))))"
    },
    {
        "original_sentence": "Great. Invite Scot to that as well please.",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scot\"))))))))))"
    },
    {
        "original_sentence": "Can you make my meeting with Darryl a little earlier next week?",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Darryl\")))) (NextWeekList)))))) (Event.start_? (DateTime.date_? (EarlyDateRange (NextWeekList)))))))"
    },
    {
        "original_sentence": "The first one looks good, but please schedule a arm workout at noon after that.",
        "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"arm workout\")) (Event.start_? (?= (TimeAfterDateTime (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (NumberPM 12L)))))))))"
    },
    {
        "original_sentence": "Whtat about Denver Colorado on Monday",
        "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Denver Colorado\"))) (DateTime.date_? (?= (NextDOW (Monday))))))"
    },
    {
        "original_sentence": "Oh then please make it at Magnuson Park then",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Magnuson Park\"))))))"
    },
    {
        "original_sentence": "Delete all events that don't include Nicole.",
        "parse": "(FenceMultiAction)"
    },
    {
        "original_sentence": "I want to meet with car mechanic at 1 pm today.",
        "parse": "(FenceAttendee)"
    },
    {
        "original_sentence": "Accept the labbing invite and say Snake is difficult",
        "parse": "(Yield (EventAttendance (RespondComment.apply \"Snake is difficult\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"labbing\"))))) :response (ResponseStatusType.Accepted)))"
    },
    {
        "original_sentence": "Please add Saturday Family Dinner at 6:45 Pm",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Family Dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (HourMinutePm 6L 45L))))))))"
    },
    {
        "original_sentence": "good",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "good",
        "parse": "(Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Make an event",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "Add a dinner with Fiona Mason on 9/11",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTime.date_? (?= (MD 11L (toMonth 9L)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fiona Mason\")))))))))))"
    },
    {
        "original_sentence": "Yes, please get rid of that meeting.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Ok Set a date for dinner fro 7 pm to 9 pm.",
        "parse": "(let (x0 (NextTime (NumberPM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"date for dinner\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 9L)))))))))"
    },
    {
        "original_sentence": "no it should end at 4 pm",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 4L)))))))"
    },
    {
        "original_sentence": "Please redo this.",
        "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
    },
    {
        "original_sentence": "I need to add a tetris battle to my calendar tomorrow at 6 pm",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"tetris battle\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L))))))))"
    },
    {
        "original_sentence": "yes that looks great",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "yes, it is!",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Can you add business meeting to my calendar for monday",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"business meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))))))"
    },
    {
        "original_sentence": "Fine thanks",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "The pipes are calling! Who set that up?",
        "parse": "(Yield (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"The pipes are calling\")))))))"
    },
    {
        "original_sentence": "What time do I have to be at the salon tomorrow?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.location_? (?= (LocationKeyphrase.apply \"salon\")))))))))"
    },
    {
        "original_sentence": "How about the week after next?",
        "parse": "(FenceDateTime)"
    },
    {
        "original_sentence": "Hrmm",
        "parse": "(UserPauseResponse)"
    },
    {
        "original_sentence": "I need to make a calendar entry for tomorrow.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
    },
    {
        "original_sentence": "Set a meeting in Raleigh with Paul Mainer for Wednesday at 10 am.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 10L)))) (Event.location_? (?= (LocationKeyphrase.apply \"Raleigh\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paul Mainer\")))))))))))"
    },
    {
        "original_sentence": "Yes it does!",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "End the time of the team building exercise August 28 to 7 pm.",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 28L (August)) (Event.subject_? (?~= \"team building exercise\"))))))) (Event.end_? (DateTime.time_? (?= (NumberPM 7L)))))))"
    },
    {
        "original_sentence": "Do they do takeout there?",
        "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
    },
    {
        "original_sentence": "I have a birthday party Sunday 3 pm to 7 pm",
        "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"birthday party\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 7L)))))))))"
    },
    {
        "original_sentence": "Schedule a dentist appointment ending at 4 pm Monday.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.end_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 4L))))))))"
    },
    {
        "original_sentence": "What about this month?",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today)))))))"
    },
    {
        "original_sentence": "I need to schedule lunch with Paige Ashworth",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\")))))))))))"
    },
    {
        "original_sentence": "Yes that looks just about right",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Cool, now add rock climbing practice on the 22nd",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"rock climbing practice\")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 22L))))))))"
    },
    {
        "original_sentence": "Perfect, thank you.",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "If there are any meetings on Friday next week, delete them.",
        "parse": "(FenceConditional)"
    },
    {
        "original_sentence": "Can you set up a meeting with Jake on monday at 4 pm through the end of the day?",
        "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (EndOfWorkDay))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))))))))"
    },
    {
        "original_sentence": "Who is the current user?",
        "parse": "(Yield (CurrentUser))"
    },
    {
        "original_sentence": "ok",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "that's the one",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "actually I've changed my mind. Don't cancel",
        "parse": "(DoNotConfirm)"
    },
    {
        "original_sentence": "Hello",
        "parse": "(GenericPleasantry)"
    },
    {
        "original_sentence": "Help me to get a conference room in Bellevue at 4 pm please.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 4L)))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Bellevue\")) (roomRequest)))))))"
    },
    {
        "original_sentence": "okay, thanks",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "the second one is good",
        "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Please have me listed in Ventura for next week.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.location_? (?= (LocationKeyphrase.apply \"Ventura\")))))))"
    },
    {
        "original_sentence": "Thanks. Lets book a room at Berkeley for building Ikea furniture on Friday afternoon.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"building Ikea furniture\")) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Friday))))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Berkeley\")) (roomRequest)))))))"
    },
    {
        "original_sentence": "i plan to visit lyndsi on 12/1 of the following year.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MDY 1L (toMonth 12L) (Year.apply 2020L)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lyndsi\")))))))))))"
    },
    {
        "original_sentence": "Can you tell me who Damon's manager is?",
        "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon\")))))))"
    },
    {
        "original_sentence": "thanks for your help see you soon",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "At 7pm schedule dinner with Kim that day as well.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (NextTime (NumberPM 7L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))))))"
    },
    {
        "original_sentence": "MAKE A PARTY WITH BOND ON NEXT MONTH",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"PARTY\")) (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"BOND\")))))))))))"
    },
    {
        "original_sentence": "set dinner meeting tomorrow at 8 pm",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 8L))))))))"
    },
    {
        "original_sentence": "when does the easter festival fall on",
        "parse": "(Yield (NextHolidayFromToday (Holiday.Easter)))"
    },
    {
        "original_sentence": "Awesome, but delete my event after that one.",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (EventAfterDateTime (^(Event) EmptyStructConstraint) (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) 1L)))))"
    },
    {
        "original_sentence": "what is the weather like at my 1 pm meeting",
        "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))))"
    },
    {
        "original_sentence": "Do I have any meetings tomorrow?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
    },
    {
        "original_sentence": "Add dinner at 6pm.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (NextTime (NumberPM 6L))))))))"
    },
    {
        "original_sentence": "Add a lunch at 12:00pm to my calendar on Tuesday.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 12L))))))))"
    },
    {
        "original_sentence": "Create a new appointment for my eyedoctor tomorrow",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"eyedoctor\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
    },
    {
        "original_sentence": "yes",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Yes it seems fine",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Add Tyler, Jackson, and Carrie to that.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tyler\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jackson\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carrie\")))))))))))"
    },
    {
        "original_sentence": "Schedule the event on Tuesday. Also, do I have any parties in April 2020?",
        "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"parties\")) (FullMonthofMonth (April) (Year.apply 2020L))))))))"
    },
    {
        "original_sentence": "Can we make it to 2PM please?",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
    },
    {
        "original_sentence": "Let's add Jason to it too.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jason\"))))))))))"
    },
    {
        "original_sentence": "Add to my calendar an appointment with John Tuesday afternoon from 4-5pm",
        "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))))))"
    },
    {
        "original_sentence": "absolutely",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Can you add shopping with Sue after party planning?",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"shopping\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sue\")))))))))))"
    },
    {
        "original_sentence": "can you check where is the today lunch with John's manager?",
        "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))) (EventOnDate (Today) (^(Event) EmptyStructConstraint))))))))"
    },
    {
        "original_sentence": "Can you check how expensive Novilhos Brazilian Steak House in Bellevue is?",
        "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Novilhos Brazilian Steak House in Bellevue\"))))))"
    },
    {
        "original_sentence": "Okay, can you make a reminder for 5:55am then?",
        "parse": "(FenceReminder)"
    },
    {
        "original_sentence": "When my meeting at Starbucks?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (?= (LocationKeyphrase.apply \"Starbucks\"))))))))"
    },
    {
        "original_sentence": "Can you reschedule my dinner date at 9 pm?",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 9L)) (Event.subject_? (?~= \"dinner date\"))))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))"
    },
    {
        "original_sentence": "Please use the bottom one.",
        "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Can you find my Food Network Taping in June?",
        "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Food Network Taping\")) (FullMonthofMonth (June)))))))"
    },
    {
        "original_sentence": "I need an appointment with Wade Blakeley",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wade Blakeley\"))))))))))"
    },
    {
        "original_sentence": "Okay, I'll get in touch with them. Can you tell me if Sqirl in Los Angeles has waiter service?",
        "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Sqirl in Los Angeles\"))))))"
    },
    {
        "original_sentence": "Yes, exactly.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "No, what else do I have available?",
        "parse": "(Yield (RecipientAvailability (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser)))) true))"
    },
    {
        "original_sentence": "Yes, cancel that.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Create an event called \"Dentist Appointment\" for December 18th at 2:00 pm.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dentist Appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 18L (December)) (NumberPM 2L))))))))"
    },
    {
        "original_sentence": "Thanks. Also schedule time for \"Follow Up\" immediately after the meeting.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Follow Up\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
    },
    {
        "original_sentence": "yep",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Thank you. Please search for any meetings with Jan.",
        "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jan\"))))))"
    },
    {
        "original_sentence": "Can you actually change that so it is an hour long?",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
    },
    {
        "original_sentence": "yes it is",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Looks good man!",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "hi, i need to delete my doctors appointment",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctors appointment\")))))))))"
    },
    {
        "original_sentence": "Please schedule lunch for 1 hour at 12 pm on Monday May 13, 2019 with Paige Ashworth.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (MDY 13L (May) (Year.apply 2019L)) (NumberPM 12L))))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\")))))))))))"
    },
    {
        "original_sentence": "Dinner will be about 2 hours",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 2))))))"
    },
    {
        "original_sentence": "Thank you",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "i need to go shopping with Cecelia Waller and Wade Blakeley tomorrow",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"go shopping\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cecelia Waller\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wade Blakeley\"))))))))))))"
    },
    {
        "original_sentence": "I got invited to the celebration but I need you to decline it and tell them we are not friends no moe.",
        "parse": "(Yield (EventAttendance (RespondComment.apply \"we are not friends no moe\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"the celebration\"))))) :response (ResponseStatusType.Declined)))"
    },
    {
        "original_sentence": "Yes, the second one works perfect. Could you also put moving out on the calandar for me sometime before the weekend?",
        "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"moving out\")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))))"
    },
    {
        "original_sentence": "Put in my calendar tomorrow at 12pm: Coffee at starbucks with Donald, Tiffany, Rebecca, Nick, and Buddy.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Coffee at starbucks\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 12L))))) (Event.location_? (?= (LocationKeyphrase.apply \"starbucks\")))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Donald\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tiffany\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rebecca\"))))))) (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nick\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Buddy\")))))))))))))"
    },
    {
        "original_sentence": "No don't cancel that just yet. Can you move it to 4 PM?",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
    },
    {
        "original_sentence": "I meant at 6 pm.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 6L)))))))"
    },
    {
        "original_sentence": "put on my appointment in calender",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Can you move my end of work day meeting to tomorrow at end of work day?",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (EndOfWorkDay)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (EndOfWorkDay)))))))"
    },
    {
        "original_sentence": "Can you delete my meetings and appointments on Friday?",
        "parse": "(FenceMultiAction)"
    },
    {
        "original_sentence": "The 2nd one works.",
        "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "I need the office meeting to last an hour.",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"office meeting\")))))) (Event.duration_? (?= (toHours 1))))))"
    },
    {
        "original_sentence": "yep thats right",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "hi, is the meeting still on?",
        "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))))"
    },
    {
        "original_sentence": "What will the weather be tomorrow in chicago",
        "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"chicago\"))) (DateTime.date_? (?= (Tomorrow)))))"
    },
    {
        "original_sentence": "How tight is tomorrows schedule?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "put dinner with mary at 8th",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"mary\")))))))))))"
    },
    {
        "original_sentence": "I will do the first one",
        "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "No",
        "parse": "(DoNotConfirm)"
    },
    {
        "original_sentence": "Add John Peter in the meeting list.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John Peter\"))))))))))"
    },
    {
        "original_sentence": "Did my manager arrange this?",
        "parse": "(Yield (== (Event.organizer (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (FindManager (toRecipient (CurrentUser)))))"
    },
    {
        "original_sentence": "Wednesday will be fine.",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Looks good",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Actually, rename it to Erin Go Bragh and schedule it for April 20th",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.subject_? (?= \"Erin Go Bragh\")) (Event.start_? (DateTime.date_? (?= (MD 20L (April)))))))))"
    },
    {
        "original_sentence": "i need to update the time on that",
        "parse": "(FenceSpecify)"
    },
    {
        "original_sentence": "Yugioh at 4.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Yugioh\")) (Event.start_? (?= (NextTime (NumberPM 4L))))))))"
    },
    {
        "original_sentence": "How long does that last",
        "parse": "(Yield (Event.duration (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
    },
    {
        "original_sentence": "Any meetings on the agenda today?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"meetings\")))))"
    },
    {
        "original_sentence": "thanks",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Thanks great work",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Can you do the same for tomorrow from 3-5",
        "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
    },
    {
        "original_sentence": "How much is pizza at emmy squared in brooklyn?",
        "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"emmy squared in brooklyn\"))))))"
    },
    {
        "original_sentence": "now i need a new conference room for this saturday in Berkeley",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Berkeley\")) (roomRequest)))))))"
    },
    {
        "original_sentence": "Schedule for casting interviews next Saturday at 3pm.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"casting interviews\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 3L))))))))"
    },
    {
        "original_sentence": "Add 12:30pm to my calendar tomorrow, titled, \"Lunch\".",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 12L 30L))))))))"
    },
    {
        "original_sentence": "Schedule a dinner date with Michelle, Michael, David Lax, and Greg.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner date\")) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Michelle\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Michael\"))))))) (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David Lax\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Greg\")))))))))))))"
    },
    {
        "original_sentence": "Put that I went to church with Elli and Abby last week",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"church\")) (Event.start_? (DateTime.date_? (LastWeekNew)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))))))))"
    },
    {
        "original_sentence": "It should be two hours long",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 2))))))"
    },
    {
        "original_sentence": "that will be all for now thanks",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Is Fool's Errand in Cambridge costly?",
        "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Fool's Errand in Cambridge\"))))))"
    },
    {
        "original_sentence": "Great job. Thank you. Bye.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Looks great thank you",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "cool mr. bot. Have a nice night",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "I need to add a board meeting next thursday at 3 pm",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"board meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 3L))))))))"
    },
    {
        "original_sentence": "I would like to reschedule my doctors appointment for a later date.",
        "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctors appointment\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?> (DateTime.date (Event.start x0)))))))))"
    },
    {
        "original_sentence": "It ends at 8:15.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (HourMinutePm 8L 15L)))))))"
    },
    {
        "original_sentence": "Yes, the one at 1:00pm",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Book 1 hour between 7pm and 10pm for coffee",
        "parse": "(let (x0 (NextTime (NumberPM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"coffee\")) (Event.start_? (DateTimeAndConstraint x0 (TimeAfterDateTime x0 (NumberPM 10L))))) (Event.duration_? (?= (toHours 1))))))))"
    },
    {
        "original_sentence": "Ok, and what time do I see Griffin next?",
        "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Griffin\")))) 1L)))"
    },
    {
        "original_sentence": "the top one. I also need a car check not on the weekend",
        "parse": "(do (Yield (Execute (ChooseCreateEvent (TopResult) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"car check\")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))))"
    },
    {
        "original_sentence": "Add \"Meeting with Cara\" for Friday 3:00 to 4:35 PM",
        "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Meeting with Cara\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 4L 35L)))))))))"
    },
    {
        "original_sentence": "I need you to cancel any lunch appointments next month and schedule an appointment to get my tonsils removed the first Tuesday of February at 9 am, which will mean that I cannot make any appointments that day.",
        "parse": "(FenceMultiAction)"
    },
    {
        "original_sentence": "please wait",
        "parse": "(UserPauseResponse)"
    },
    {
        "original_sentence": "When is my next vacation?",
        "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"vacation\")) 1L)))"
    },
    {
        "original_sentence": "change the meeting",
        "parse": "(FenceSpecify)"
    },
    {
        "original_sentence": "Do I have anything on March 25th?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 25L (March)) (^(Event) EmptyStructConstraint))))) 0L))"
    },
    {
        "original_sentence": "set go to the shop after 1PM",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go to the shop\")) (Event.start_? (OnDateAfterTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 1L)))))))"
    },
    {
        "original_sentence": "Okay, thank you. Please see if Taylor's in Loomis has a bar",
        "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Taylor's in Loomis\"))))))"
    },
    {
        "original_sentence": "Yes",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Search my contact list for George Smith and give him a call.",
        "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"George Smith\"))))))))"
    },
    {
        "original_sentence": "Please set up a lunch meeting at Milano's for Friday at 12pm.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 12L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Milano's\")))))))"
    },
    {
        "original_sentence": "Yes, I could not make that time.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "What events do I have next year?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullYearofYear (NextYear)))))"
    },
    {
        "original_sentence": "What time am I supposed to drop off my car tomorrow",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"drop off car\"))))))))"
    },
    {
        "original_sentence": "Do I have a workshop meeting tomorrow?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"workshop meeting\")))))) 0L))"
    },
    {
        "original_sentence": "I have the information I need. Good bye",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Do I have a meeting today?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
    },
    {
        "original_sentence": "Reschedule my dinner with the family to next Monday. Make a event for Beyonce's concert on March 3 and show me as busy the whole time.",
        "parse": "(FenceMultiAction)"
    },
    {
        "original_sentence": "Great, so what all do I have scheduled on February 1st now?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 1L (February)) (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "why did not remider?",
        "parse": "(FenceOther)"
    },
    {
        "original_sentence": "Is Sonia included in the next meeting at sarova?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \"sarova\"))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sonia\")))))))) 0L))"
    },
    {
        "original_sentence": "Make a appointment for today",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Today)))))))"
    },
    {
        "original_sentence": "ok arrange it",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Can you schedule a meeting with the of directors next week?",
        "parse": "(FenceAttendee)"
    },
    {
        "original_sentence": "Can you tell me when my lunch date with Paige Ashworth is?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch date\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\"))))))))))"
    },
    {
        "original_sentence": "Am I meeting with Tove tomorrow morning?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tove\"))))) (Morning))))) 0L))"
    },
    {
        "original_sentence": "Nothing else that's it",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Do I have anything scheduled with Paige Ashworth?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\"))))))) 0L))"
    },
    {
        "original_sentence": "Yes, that's good. Accept my Trip to the Library and tell the organizer that I have a lot of books to return.",
        "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I have a lot of books to return.\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Trip to the Library\"))))) :response (ResponseStatusType.Accepted))))"
    },
    {
        "original_sentence": "Looks goat",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Remove the meeting with Austin, Kristen, Seth, and Joseph from Friday's schedule.",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Austin\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Seth\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kristen\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joseph\"))))))))))))"
    },
    {
        "original_sentence": "I'm going to a concert with Alicia, Jenny, and Thomson and Zizagoon",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"concert\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alicia\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jenny\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Thomson\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Zizagoon\"))))))))))))"
    },
    {
        "original_sentence": "Please, add this event to the calendar: Meeting at Peter´s school. Wednesday 19th, December 2018 at 8:30 a.m.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MDY 19L (December) (Year.apply 2018L)) (HourMinuteAm 8L 30L)))) (Event.location_? (?= (LocationKeyphrase.apply \"Peter\\u00B4s school\")))))))"
    },
    {
        "original_sentence": "Let's make it on August 3rd.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (MD 3L (August)) (^(Event) EmptyStructConstraint)))))"
    },
    {
        "original_sentence": "The 8 pm one, also schedule Bar Hop at 9:30 pm after that.",
        "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Bar Hop\")) (Event.start_? (?= (TimeAfterDateTime (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (HourMinutePm 9L 30L)))))))))"
    },
    {
        "original_sentence": "its called fast food only quick lunch time to save office hours",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"fast food\")))))"
    },
    {
        "original_sentence": "wait a minute",
        "parse": "(UserPauseResponse)"
    },
    {
        "original_sentence": "June 4 will work but I need you to mark me as busy from 9 am to 4 pm so I can set up and clean up after.",
        "parse": "(FenceMultiAction)"
    },
    {
        "original_sentence": "What is the second event i have on friday?",
        "parse": "(Yield (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint))))))"
    },
    {
        "original_sentence": "EXACTLY, CANCEL IT AND INTIMATE TO ME",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Do I have anything else scheduled for that day?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))) 0L))"
    },
    {
        "original_sentence": "Schedule the second one. Also, what events are in my calendar during July 2020?",
        "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (July) (Year.apply 2020L))))))"
    },
    {
        "original_sentence": "Let's change it to football game",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"football game\")))))"
    },
    {
        "original_sentence": "Tasha Gold",
        "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tasha Gold\")))))))"
    },
    {
        "original_sentence": "The 2nd one works great",
        "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Great. Please add change oil in car for the spring.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"change oil in car\")) (Event.start_? (DateTime.date_? (SeasonSpring)))))))"
    },
    {
        "original_sentence": "Remind me to call dad at 0400",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"call dad\")) (Event.start_? (?= (NextTime (HourMinuteMilitary 4L 0L))))))))"
    },
    {
        "original_sentence": "What's the third event?",
        "parse": "(Yield (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 3L)) (extensionConstraint (^(Event) EmptyStructConstraint))))))"
    },
    {
        "original_sentence": "Find me a room for a group meeting with Josh and Brandon. It will be on Friday.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"group meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.location_? (roomRequest))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Josh\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brandon\"))))))))))))"
    },
    {
        "original_sentence": "The 28th would work better for me. Lets add Cynthia.",
        "parse": "(FenceMultiAction)"
    },
    {
        "original_sentence": "cancel this sales meeting",
        "parse": "(DoNotConfirm)"
    },
    {
        "original_sentence": "yes right ok",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Show me my events tomorrow.",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "What am I doing on 2/1/2019 at 3 PM?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (MDY 1L (toMonth 2L) (Year.apply 2019L)) (NumberPM 3L)) (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "Any rain in the forecast?",
        "parse": "(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
    },
    {
        "original_sentence": "Do I have a meeting on April 3rd that's shorter than 20 minutes?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.duration_? (?< (toMinutes 20))) (EventOnDate (MD 3L (April)) (^(Event) EmptyStructConstraint)))))) 0L))"
    },
    {
        "original_sentence": "save in my calendar after 1 pm tomorrow go to shop",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go to shop\")) (Event.start_? (OnDateAfterTime (Tomorrow) (NumberPM 1L)))))))"
    },
    {
        "original_sentence": "Check my availability on May 5th.",
        "parse": "(Yield (IsFree (RecipientAvailability (& (Event.start_? (DateTime.date_? (?= (MD 5L (May))))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
    },
    {
        "original_sentence": "Find me Shilowan in Hawaii",
        "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Shilowan in Hawaii\")))"
    },
    {
        "original_sentence": "are there outdoor tables ?",
        "parse": "(Yield (PlaceHasFeature (PlaceFeature.OutdoorDining) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
    },
    {
        "original_sentence": "Ripperoni, actually make that Grandpa's Deathday.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"Grandpa's Deathday\")))))"
    },
    {
        "original_sentence": "What do I have to do at 4:00 PM?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 4L)) (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "Book that meeting.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "1:00 PM works",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "How's the weather?",
        "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (?= (Now))))"
    },
    {
        "original_sentence": "Can you make an appointment at 2 pm on Friday for teeth?",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"teeth\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))))))))"
    },
    {
        "original_sentence": "It should be an hour long!",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
    },
    {
        "original_sentence": "when is my next doctor appointment?",
        "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"doctor appointment\")) 1L)))"
    },
    {
        "original_sentence": "Can you make an event for Friday the 13th",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 13L)))))))"
    },
    {
        "original_sentence": "Hello can you decline Pen shopping",
        "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Pen shopping\"))))) :response (ResponseStatusType.Declined)))"
    },
    {
        "original_sentence": "Can you list who is on my team?",
        "parse": "(Yield (FindTeamOf (toRecipient (CurrentUser))))"
    },
    {
        "original_sentence": "Add Loriri to that meeting.",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Loriri\"))))))))))"
    },
    {
        "original_sentence": "i would like to meet carol on tomorrow 9p.m.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"carol\")))))))))))"
    },
    {
        "original_sentence": "cancel the meeting with alexa",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"alexa\")))))))))))"
    },
    {
        "original_sentence": "Hi, I think I have an appointment with the endocrinologist on Monday at 3:20 and I need to reschedule that for Wednesday at 3 instead.",
        "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Monday)) (HourMinutePm 3L 20L)) (Event.subject_? (?= \"appointment with the endocrinologist\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Wednesday)) (NumberPM 3L))))))))"
    },
    {
        "original_sentence": "I need to put a game of checkers on the calendar as well",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"game of checkers\")))))"
    },
    {
        "original_sentence": "When is my next meeting with my boss?",
        "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))) 1L)))"
    },
    {
        "original_sentence": "We will have a big party for lunch, would Qdoba be accommodating of this?",
        "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
    },
    {
        "original_sentence": "Can you make a lunch meeting at 12:30?",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (?= (NextTime (HourMinutePm 12L 30L))))))))"
    },
    {
        "original_sentence": "Ok, so I need to know the weather in Palm Beach on Saturday",
        "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Palm Beach\"))) (DateTime.date_? (?= (NextDOW (Saturday))))))"
    },
    {
        "original_sentence": "change the time to 4pm",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
    },
    {
        "original_sentence": "Are you sure? Please do not cancel the meeting with Rangeela.",
        "parse": "(DoNotConfirm)"
    },
    {
        "original_sentence": "When is the board meeting?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"board meeting\")))))))"
    },
    {
        "original_sentence": "Yes",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Schedule coffee with Marina on Friday at 8 AM at the Starbucks near my house.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"coffee\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 8L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Starbucks near my house\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marina\")))))))))))"
    },
    {
        "original_sentence": "i would like to make an appointment for 5pm on thursday",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 5L)))))))"
    },
    {
        "original_sentence": "Can you make it a little later still?",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
    },
    {
        "original_sentence": "Make an event for meeting with ceo on Friday from 3-5pm",
        "parse": "(FenceAttendee)"
    },
    {
        "original_sentence": "what was the weather like in buffalo last year on October 29",
        "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"buffalo\"))) (DateTime.date_? (?= (MD 29L (October))))))"
    },
    {
        "original_sentence": "Can you cancel all of my meetings from Monday to Friday?",
        "parse": "(FenceMultiAction)"
    },
    {
        "original_sentence": "What are the prices like at Chili's in Lawrence, Kansas",
        "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Chili's in Lawrence, Kansas\"))))))"
    },
    {
        "original_sentence": "Yes but its at 12",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))))))"
    },
    {
        "original_sentence": "Make an event for Thursday this week",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (DowOfWeekNew (Thursday) (ThisWeek))))))))"
    },
    {
        "original_sentence": "Can you schedule a meeting with client at 3 pm on Monday.",
        "parse": "(FenceAttendee)"
    },
    {
        "original_sentence": "Can you move that to 4 pm.",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
    },
    {
        "original_sentence": "That looks great",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Can you make it last three hours actually?",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 3))))))"
    },
    {
        "original_sentence": "Cancel my meeting with Yuri on Sunday scheduled for 12:00pm.",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 12L)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Yuri\"))))))))))))"
    },
    {
        "original_sentence": "Do I have any appointments on Monday?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))) 0L))"
    },
    {
        "original_sentence": "Could you make an Camping event in March 2021",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventDuringRange (Event.subject_? (?= \"Camping\")) (FullMonthofMonth (March) (Year.apply 2021L))))))"
    },
    {
        "original_sentence": "3 pm would be the best",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Hi, I need to see all of the events I have scheduled for both Thursday and Friday of this week please.",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (DowToDowOfWeek (Thursday) (Friday) (ThisWeek)))))"
    },
    {
        "original_sentence": "Do I have a meeting with Pam today?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Pam\")))))))) 0L))"
    },
    {
        "original_sentence": "The second one works best, but make it last an hour.",
        "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1)))))))"
    },
    {
        "original_sentence": "Make this end at 11AM please",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberAM 11L)))))))"
    },
    {
        "original_sentence": "Add Tina as well.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tina\"))))))))))"
    },
    {
        "original_sentence": "Thanks, do I have any other events scheduled on Saturday?",
        "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))"
    },
    {
        "original_sentence": "Show me any meetings with Bob.",
        "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\"))))))"
    },
    {
        "original_sentence": "Yes, that is the meeting. Thank you.",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "need a meeting tomorrow around 7 am",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 7L)))))))"
    },
    {
        "original_sentence": "Nice. Is Chad coming to the softball game on Thursday?",
        "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.subject_? (?~= \"softball game\")))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chad\")))))))) (ResponseStatusType.Accepted)))"
    },
    {
        "original_sentence": "What time is my early morning workout scheduled to start?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"early morning workout\")))))))"
    },
    {
        "original_sentence": "Please mark me as busy all weekend then.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.showAs_? (?= (ShowAsStatus.Busy))) (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (ThisWeekend))))))"
    },
    {
        "original_sentence": "Do I have any meetings Tuesday from 2 to 4:00 pm?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint) (NumberPM 2L) (NumberPM 4L))))) 0L))"
    },
    {
        "original_sentence": "Do I have anything else scheduled this weekend?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend)))))) 0L))"
    },
    {
        "original_sentence": "Yes that looks great",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Can you move my dinner date from tomorrow to the day after?",
        "parse": "(let (x0 (Tomorrow)) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate x0 (Event.subject_? (?~= \"dinner date\"))))))) (Event.start_? (DateTime.date_? (?= (adjustByPeriod x0 (toDays 1)))))))))"
    },
    {
        "original_sentence": "Schedule me for a #Wine Party Saturday night please.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"#Wine Party\")) (Event.start_? (DateTimeConstraint (Night) (NextDOW (Saturday))))))))"
    },
    {
        "original_sentence": "What do I have booked the day after that?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (adjustByPeriod (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (toDays 1)) (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "When is it officially winter?",
        "parse": "(FenceWeather)"
    },
    {
        "original_sentence": "please my office address find and remainder in my calender",
        "parse": "(FenceSpecify)"
    },
    {
        "original_sentence": "schedule Dentist Monday morning",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dentist\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Monday))))))))"
    },
    {
        "original_sentence": "yeah!this one is i want to cancel.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Yes, who's coming?",
        "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (AttendeesWithResponse (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (ResponseStatusType.Accepted))))"
    },
    {
        "original_sentence": "Well done! can nick attend the rodeo",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"nick\"))))))))))"
    },
    {
        "original_sentence": "peieio i ehgeb hs e eh icr ceam",
        "parse": "(FenceGibberish)"
    },
    {
        "original_sentence": "Make an annual review in 3 hours",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"annual review\")) (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 3)))))))))"
    },
    {
        "original_sentence": "Add meeting with Elvis to today's calendar at 3 PM.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elvis\")))))))))))"
    },
    {
        "original_sentence": "cancel this movie",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (Event.subject_? (?~= \"movie\")))))))))"
    },
    {
        "original_sentence": "Yes, the second one.",
        "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "what is the weather tomorrow in milwaukee",
        "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"milwaukee\"))) (DateTime.date_? (?= (Tomorrow)))))"
    },
    {
        "original_sentence": "Do I have anything with people attending on my calendar?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint)))))) 0L))"
    },
    {
        "original_sentence": "What's going on now?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (Now) (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "What time is my event tomorrow",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))"
    },
    {
        "original_sentence": "i need to go shopping tomorrow with Cecelia Waller and Wade Blakeley. We can go at 1pm until 5pm.",
        "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"go shopping\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cecelia Waller\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wade Blakeley\")))))))))))))"
    },
    {
        "original_sentence": "What do I have that is not \"Sleep?",
        "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (negate (?~= \"Sleep\")))))"
    },
    {
        "original_sentence": "Add something for 5pm tomorrow",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"something\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L))))))))"
    },
    {
        "original_sentence": "Thanks. Accept my Star Gazing party and say that I will bring a telescope that we can use.",
        "parse": "(Yield (EventAttendance (RespondComment.apply \"I will bring a telescope that we can use\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Star Gazing party\"))))) :response (ResponseStatusType.TentativelyAccepted)))"
    },
    {
        "original_sentence": "Have I accepted wednesday's thing?",
        "parse": "(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint))))))) (ResponseStatusType.Accepted)))"
    },
    {
        "original_sentence": "I need a dentist appointment late morning tomorrow",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (DateTimeConstraint (LateMorning) (Tomorrow)))))))"
    },
    {
        "original_sentence": "Find out date night restaurants",
        "parse": "(FenceScope)"
    },
    {
        "original_sentence": "Schedule out of office on Friday from 7 to 11 am.",
        "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 11L))))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))))))))"
    },
    {
        "original_sentence": "change dinner to 8 pm for 1 hour",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\")))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))) (Event.duration_? (?= (toHours 1)))))))"
    },
    {
        "original_sentence": "What about early next month",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (EarlyDateRange (FullMonthofMonth (NextMonth)))))))"
    },
    {
        "original_sentence": "Delete tomorrow's meeting at the office",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \"the office\"))) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))))))))"
    },
    {
        "original_sentence": "Yes. The first one and the timeframe is 1 hour",
        "parse": "(let (x0 (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (do (Yield x0) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (^(Dynamic) item x0)) (Event.duration_? (?= (toHours 1))))))))"
    },
    {
        "original_sentence": "Looks good, thanks.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Thanks, can you schedule a birthday breakfast too?",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"birthday breakfast\")))))"
    },
    {
        "original_sentence": "What about the Ben & Jerry's Ice Cream?",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"Ben & Jerry's Ice Cream\")))))"
    },
    {
        "original_sentence": "Make an event to go swimming on Sunday",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go swimming\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))))))"
    },
    {
        "original_sentence": "Friday would work great.",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "No, i actually meant the update to be for the lunch.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (Event.subject_? (?~= \"lunch\")))))"
    },
    {
        "original_sentence": "Hey does Golden Flower in Reno have a bar?",
        "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Golden Flower in Reno\"))))))"
    },
    {
        "original_sentence": "How many events next week include Jim and Nicole, but not our manager?",
        "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nicole\")))) (AttendeeListExcludesRecipient (?= (FindManager (toRecipient (CurrentUser))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))))"
    },
    {
        "original_sentence": "Are there any thunderstorms on the road between here and Seminole, Texas?",
        "parse": "(FenceWeather)"
    },
    {
        "original_sentence": "change the birthday from Robertos to Chuckee Cheese",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"birthday\")) (Event.location_? (?= (LocationKeyphrase.apply \"Robertos\")))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Chuckee Cheese\"))))))"
    },
    {
        "original_sentence": "yeah good",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "When is my dinner with Nancy?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nancy\"))))))))))"
    },
    {
        "original_sentence": "What time is my meeting with Ben?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ben\")))))))))"
    },
    {
        "original_sentence": "IS there a lunch schedule after the dentist?",
        "parse": "(let (x0 (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist\"))))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (Event.subject_? (?~= \"lunch\")) (DateTime.time x0))))) 0L)))"
    },
    {
        "original_sentence": "thanks for that",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Create a calendar event",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "Sarah birthday?",
        "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Sarah birthday\"))))))"
    },
    {
        "original_sentence": "No, make it for breakfast",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (Breakfast)))))))"
    },
    {
        "original_sentence": "That's great! And will it rain tomorrow?",
        "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"
    },
    {
        "original_sentence": "How long is the planning committee meeting this week?",
        "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"planning committee meeting\")) (ThisWeek)))))))"
    },
    {
        "original_sentence": "Thanks, do I have anything else scheduled on the 21st?",
        "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (nextDayOfMonth (Today) 21L) (^(Event) EmptyStructConstraint)))))"
    },
    {
        "original_sentence": "When is the concert this weekend with Jamie?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"concert\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamie\"))))) (ThisWeekend)))))))"
    },
    {
        "original_sentence": "Name the meeting \"Budget Planning\".",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"Budget Planning\")))))"
    },
    {
        "original_sentence": "Do I have any available time on Thursday?",
        "parse": "(Yield (IsFree (RecipientAvailability (& (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday))))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
    },
    {
        "original_sentence": "I would like to add Shoe Shining for Saturday please",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Shoe Shining\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))))))"
    },
    {
        "original_sentence": "Make a appointment for tomorrow",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
    },
    {
        "original_sentence": "Has anyone mentioned they might be able to attend the Conference?",
        "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Conference\")))))) (ResponseStatusType.TentativelyAccepted)))"
    },
    {
        "original_sentence": "What is the temperature in Houston",
        "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Houston\"))) (?= (Now)))))"
    },
    {
        "original_sentence": "what is the weather report now",
        "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (?= (Now))))"
    },
    {
        "original_sentence": "Can you have this event end at 6:30 PM?",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 6L 30L)))))))"
    },
    {
        "original_sentence": "I want to make an event at Disney World next Saturday.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))) (Event.location_? (?= (LocationKeyphrase.apply \"Disney World\")))))))"
    },
    {
        "original_sentence": "Call Dad at 04:00",
        "parse": "(FenceAttendee)"
    },
    {
        "original_sentence": "Kim Foster",
        "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim Foster\")))))))"
    },
    {
        "original_sentence": "I want to meet with William and Antony at 2 pm today.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 2L)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"William\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Antony\"))))))))))))"
    },
    {
        "original_sentence": "My next meeting was cancelled so delete it from the calendar.",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))))"
    },
    {
        "original_sentence": "Can you change it to 10 AM?",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))"
    },
    {
        "original_sentence": "what did i have today before now",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))"
    },
    {
        "original_sentence": "What is my second event next month?",
        "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))) 2L))"
    },
    {
        "original_sentence": "ERie, pa",
        "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"ERie, pa\")))))))"
    },
    {
        "original_sentence": "Great. Do I have anything else scheduled for the 1st?",
        "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (nextDayOfMonth (Today) 1L) (^(Event) EmptyStructConstraint)))))"
    },
    {
        "original_sentence": "That looks good to me!",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Please accept the Oscars Afterparty.",
        "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Oscars Afterparty\"))))) :response (ResponseStatusType.Accepted)))"
    },
    {
        "original_sentence": "What is my manager's first name?",
        "parse": "(FencePeopleQa)"
    },
    {
        "original_sentence": "Add a work luncheon with Carlos tommorrow at noon",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"work luncheon\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carlos\")))))))))))"
    },
    {
        "original_sentence": "Please accept my sales meeting and say that I'm gonna make a big sale",
        "parse": "(Yield (EventAttendance (RespondComment.apply \"I'm gonna make a big sale\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"sales meeting\"))))) :response (ResponseStatusType.Accepted)))"
    },
    {
        "original_sentence": "Create a new appointment that's half as long as my last one 3 days from today",
        "parse": "(FenceAggregation)"
    },
    {
        "original_sentence": "How long is the chairman meeting?",
        "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"chairman meeting\")))))))"
    },
    {
        "original_sentence": "I have a music festival with Rocky and Lola all next week.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rocky\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lola\")))))))) (EventAllDayForDateRange (Event.subject_? (?= \"music festival\")) (NextWeekList))))))"
    },
    {
        "original_sentence": "Can you tell me the date of the Grammy's?",
        "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"the Grammy's\"))))"
    },
    {
        "original_sentence": "Schedule meeting with Eric and Susan at 4pm.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 4L)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Eric\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Susan\"))))))))))))"
    },
    {
        "original_sentence": "ok tomorrow at 2:30 pm events",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 2L 30L)) (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "Can you please help me set up recurring dates in my calendar that are every 3 months?",
        "parse": "(FenceRecurring)"
    },
    {
        "original_sentence": "awesome! thanks!",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Set an event tomorrow Call Ricky about the date at 1 pm.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Call Ricky about the date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L))))))))"
    },
    {
        "original_sentence": "What about this weekend?",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend)))))"
    },
    {
        "original_sentence": "When was the birthday celebration last year?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"birthday celebration\")) (FullYearofYear (LastYear))))))))"
    },
    {
        "original_sentence": "will it rain in lancaster tomorrow?",
        "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"lancaster\"))) (DateTime.date_? (?= (Tomorrow))))))"
    },
    {
        "original_sentence": "Thanks that's all I needed to know.",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Never mind, don't cancel this.",
        "parse": "(DoNotConfirm)"
    },
    {
        "original_sentence": "and please cancel my appointment with jenny tonight at 5pm",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jenny\")))))))))))"
    },
    {
        "original_sentence": "Cancel meeting with Wade",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wade\")))))))))))"
    },
    {
        "original_sentence": "hold on a first",
        "parse": "(UserPauseResponse)"
    },
    {
        "original_sentence": "Please schedule me a later afternoon appontment for tomorrow",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (LateAfternoon) (Tomorrow))))))"
    },
    {
        "original_sentence": "Is there a smokers section at this Cochon Butcher?",
        "parse": "(FenceOther)"
    },
    {
        "original_sentence": "When is my next meeting with Chris from sales?",
        "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chris\")))) 1L)))"
    },
    {
        "original_sentence": "tomorrow joining the appointment",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Schedule a meeting for me tomorrow at 3PM for 1 hour with 10 attendees.",
        "parse": "(FenceAttendee)"
    },
    {
        "original_sentence": "Schedule breakfast tomorrow at the local Tim Horton's at 7am.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"breakfast\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 7L))))) (Event.location_? (?= (LocationKeyphrase.apply \"the local Tim Horton's\")))))))"
    },
    {
        "original_sentence": "Do I have any other events in Tokyo?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Tokyo\"))))))) 0L))"
    },
    {
        "original_sentence": "How about in July?",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (July))))))"
    },
    {
        "original_sentence": "What is the weather going to be like tomorrow?",
        "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow)))))"
    },
    {
        "original_sentence": "Can you delete my meeting before this event",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.end_? (?= (Execute (refer (& (^(DateTime) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(DateTime) EmptyStructConstraint))))))))))))))"
    },
    {
        "original_sentence": "Can you add a lunch date for tomorrow at 12 pm with Paige Ashworth?",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 12L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\")))))))))))"
    },
    {
        "original_sentence": "Whens my next band concert without Tina or Ben?",
        "parse": "(Yield (Event.start (FindNumNextEvent (& (Event.subject_? (?~= \"band concert\")) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tina\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ben\")))))))))) 1L)))"
    },
    {
        "original_sentence": "Move my smash weekly to be not on the weekend",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"smash weekly\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
    },
    {
        "original_sentence": "Remove calendar events",
        "parse": "(FenceMultiAction)"
    },
    {
        "original_sentence": "Schedule a call to my manager for today at 1:00 pm.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"call\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
    },
    {
        "original_sentence": "Is there a board meeting next month?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"board meeting\")) (FullMonthofMonth (NextMonth)))))) 0L))"
    },
    {
        "original_sentence": "change the name of the event to doctors appointment",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"doctors appointment\")))))"
    },
    {
        "original_sentence": "What time do I go to yoga?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"yoga\")))))))"
    },
    {
        "original_sentence": "When was my birthday party last year?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"birthday party\")) (FullYearofYear (LastYear))))))))"
    },
    {
        "original_sentence": "Open all the windows in the house at 4.",
        "parse": "(FenceScope)"
    },
    {
        "original_sentence": "The bottom one works for me thanks. Can you do something else for me?",
        "parse": "(do (Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint))))) (PleasantryCalendar))"
    },
    {
        "original_sentence": "Change the title to \"Lunch with Kim\".",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"Lunch with Kim\")))))"
    },
    {
        "original_sentence": "What else is scheduled for tomorrow?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "Sunday I am going to be having a breakfast at 11 am.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"breakfast\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 11L))))))))"
    },
    {
        "original_sentence": "Schedule a meeting with Paige Ashworth",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\"))))))))))"
    },
    {
        "original_sentence": "what meetings do i have next month",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth)))))"
    },
    {
        "original_sentence": "Add coffee with Sam for tomorrow at 6am.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"coffee\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 6L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\")))))))))))"
    },
    {
        "original_sentence": "what about late next week?",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (LateDateRange (NextWeekList))))))"
    },
    {
        "original_sentence": "Look not good",
        "parse": "(DoNotConfirm)"
    },
    {
        "original_sentence": "Uninvite Beth from the work meeting tomorrow.",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (& (Event.subject_? (?~= \"work\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Beth\")))))))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Beth\")))))))))))"
    },
    {
        "original_sentence": "yes of course good. I also need a staff meeting on Sunday morning",
        "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"staff meeting\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Sunday)))))))))"
    },
    {
        "original_sentence": "Move my meeting with Brian later in the day after 3 pm please.",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brian\")))))))) (Event.start_? (DateTime.time_? (?> (NumberPM 3L)))))))"
    },
    {
        "original_sentence": "When does my meeting with James start?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\")))))))))"
    },
    {
        "original_sentence": "Please delete one event from last Tuesday that I had scheduled.",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Tuesday)) (^(Event) EmptyStructConstraint)))))))))"
    },
    {
        "original_sentence": "How long will the chairman speak?",
        "parse": "(FenceScope)"
    },
    {
        "original_sentence": "yes",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "ok",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Delete Kayak and instead schedule a board meeting from 9 am to 11 am.",
        "parse": "(FenceMultiAction)"
    },
    {
        "original_sentence": "Hold that thought",
        "parse": "(UserPauseResponse)"
    },
    {
        "original_sentence": "put Play First Gig with the Band starting on Monday at 7 pm for 2 hours, and show me as Unknown",
        "parse": "(FenceAttendee)"
    },
    {
        "original_sentence": "Please schedule an event",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "What about tomorrow?",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
    },
    {
        "original_sentence": "what will the weather be like on oct 27 in blytheville ar",
        "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"blytheville ar\"))) (DateTime.date_? (?= (MD 27L (October))))))"
    },
    {
        "original_sentence": "second",
        "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Okay. I would like to create a new event with Barack Obama.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\"))))))))))"
    },
    {
        "original_sentence": "how many meetings are remaining for me this week",
        "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))))"
    },
    {
        "original_sentence": "Schedule Destroy Kings Landing for next Tuesday at 1 pm.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Destroy Kings Landing\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 1L))))))))"
    },
    {
        "original_sentence": "Me and my team are going to have to meet on Saturday.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
    },
    {
        "original_sentence": "Add Daniel to that appointment please",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Daniel\"))))))))))"
    },
    {
        "original_sentence": "yes",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "ok proceed.",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Move my 4 o clock meeting on Thursday to 2 o clock on Friday",
        "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 4L)) (^(Event) EmptyStructConstraint)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)) (NumberPM 2L))))))))"
    },
    {
        "original_sentence": "10 am - 10.30 am ok",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Looks good, thanks!",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Second one",
        "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Yes",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Can you see if I have any other meetings scheduled for this week?",
        "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))"
    },
    {
        "original_sentence": "Can you add a 2 hour hair appointment this Saturday at noon?",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"hair appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (Noon))))) (Event.duration_? (?= (toHours 2)))))))"
    },
    {
        "original_sentence": "Cancel pick up my sister.",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"pick up my sister\")))))))))"
    },
    {
        "original_sentence": "When is my third event next month?",
        "parse": "(Yield (Event.start (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))) 3L)))"
    },
    {
        "original_sentence": "cancel lunch",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))))))"
    },
    {
        "original_sentence": "What's my last lunch of the day tomorrow?",
        "parse": "(Yield (FindLastEvent (EventOnDate (Tomorrow) (Event.subject_? (?~= \"lunch\")))))"
    },
    {
        "original_sentence": "the appointment should be changed on next monday",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))))))"
    },
    {
        "original_sentence": "that is good",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "The first will work but it has to last a hour.",
        "parse": "(do (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1)))))))"
    },
    {
        "original_sentence": "So what do I have on my calendar with Sara and Bec?",
        "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sara\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bec\")))))))"
    },
    {
        "original_sentence": "how about next month?",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))))))"
    },
    {
        "original_sentence": "That looks good. Also while you're at it delete my snow board trip in feb 2021",
        "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"snow board\")) (FullMonthofMonth (February) (Year.apply 2021L)))))))))))"
    },
    {
        "original_sentence": "Where is my Racing event located?",
        "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Racing\")))))))"
    },
    {
        "original_sentence": "What day am I meeting with Karen, Jim, Kyle and Kayla?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kyle\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kayla\"))))))))))"
    },
    {
        "original_sentence": "do I have anything happening now?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (Now) (^(Event) EmptyStructConstraint))))) 0L))"
    },
    {
        "original_sentence": "gddngj",
        "parse": "(FenceGibberish)"
    },
    {
        "original_sentence": "Mark on the calendar for a Dinner Date with Marsha on Friday at 8pm.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Dinner Date\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marsha\")))))))))))"
    },
    {
        "original_sentence": "Create an event",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "Cancel shopping with mom last Saturday",
        "parse": "(FenceAttendee)"
    },
    {
        "original_sentence": "What can you do?",
        "parse": "(PleasantryCalendar)"
    },
    {
        "original_sentence": "When is the next meeting with Sarah and her manager?",
        "parse": "(let (x0 (PersonName.apply \"Sarah\")) (Yield (Event.start (FindNumNextEvent (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))) 1L))))"
    },
    {
        "original_sentence": "My cousin has decided to purchase an online tutoring package so I will need you to cancel the event tutor my cousin in algebra.",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"tutor my cousin in algebra\")))))))))"
    },
    {
        "original_sentence": "Yup! When does my Mexico Vacation start in 2021?>",
        "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Mexico Vacation\")) (FullYearofYear (Year.apply 2021L)))))))))"
    },
    {
        "original_sentence": "Will you put on my schedule lunch with bob tomorrow at 1pm.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bob\")))))))))))"
    },
    {
        "original_sentence": "cancel the meeting with joshes",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"joshes\")))))))))))"
    },
    {
        "original_sentence": "You can choose either.",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "search lunch",
        "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\"))))"
    },
    {
        "original_sentence": "Will I have anything on the 24th?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 24L) (^(Event) EmptyStructConstraint))))) 0L))"
    },
    {
        "original_sentence": "is there waiter service available in Blue Coyote in Truckee?",
        "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Blue Coyote in Truckee\"))))))"
    },
    {
        "original_sentence": "Do that once more.",
        "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
    },
    {
        "original_sentence": "No, 7 pm",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
    },
    {
        "original_sentence": "Now find out if Haru in Reno has a full bar",
        "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Haru in Reno\"))))))"
    },
    {
        "original_sentence": "Remove lunch with Dad for next week.",
        "parse": "(FenceAttendee)"
    },
    {
        "original_sentence": "Please add presentation for the next day at 9 am.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?~= \"presentation\")) (Event.start_? (?= (DateAtTimeWithDefaults (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (NumberAM 9L))))))))"
    },
    {
        "original_sentence": "I need to get the kids to school this morning.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"get the kids to school\")) (Event.start_? (DateTimeConstraint (Morning) (Today)))))))"
    },
    {
        "original_sentence": "Yes, the first one",
        "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "That's good.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Delete coffee with Ann.",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"coffee\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ann\"))))))))))))"
    },
    {
        "original_sentence": "Yes agent, thank you for the speedy response. Also decline lunch on Friday and mention that I'm too popular that day.",
        "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I'm too popular that day\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"lunch\")))))) :response (ResponseStatusType.Declined))))"
    },
    {
        "original_sentence": "When is the next meeting with Jon coming up next?",
        "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jon\")))) 1L)))"
    },
    {
        "original_sentence": "what is my last event for friday?",
        "parse": "(Yield (FindLastEvent (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "Please add my dad's 74th birthday for the 5th.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dad's 74th birthday\")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 5L))))))))"
    },
    {
        "original_sentence": "Make an event for Tuesday at 2pm",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 2L)))))))"
    },
    {
        "original_sentence": "Add band practice Sara, Susan, John, and Mike at 6:00 pm on Friday.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"band practice\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 6L))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sara\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Susan\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))) (AttendeeListHasRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mike\"))))))))))"
    },
    {
        "original_sentence": "good",
        "parse": "(GenericPleasantry)"
    },
    {
        "original_sentence": "hello",
        "parse": "(GenericPleasantry)"
    },
    {
        "original_sentence": "Yes please, also am i free next month",
        "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (IsFree (RecipientAvailability (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth)))) true))))"
    },
    {
        "original_sentence": "Do I have an appointment with Emily?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\"))))))) 0L))"
    },
    {
        "original_sentence": "goodbye",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Hi",
        "parse": "(GenericPleasantry)"
    },
    {
        "original_sentence": "What other meetings do I have with Darren North this month?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Darren North\"))))) (FullMonthofMonth (Date.month (Today))))))"
    },
    {
        "original_sentence": "remove new event",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"new event\")))))))))"
    },
    {
        "original_sentence": "Okay. Can you add an appointment with Juan Carlos at 5:30 pm on the same date?",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (HourMinutePm 5L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Juan Carlos\")))))))))))"
    },
    {
        "original_sentence": "Oh no! Will there be rain that day?",
        "parse": "(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
    },
    {
        "original_sentence": "what are my events next month?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth)))))"
    },
    {
        "original_sentence": "Hi, please set up a coffee date with Lisa for tomorrow at 2 PM at Starbucks.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"coffee date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Starbucks\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lisa\")))))))))))"
    },
    {
        "original_sentence": "What is the second event?",
        "parse": "(Yield (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint))))))"
    },
    {
        "original_sentence": "Food",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Yes, thank you",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Can you make the time from 12:30PM to 1:15PM?",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (HourMinutePm 12L 30L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 1L 15L))))))))"
    },
    {
        "original_sentence": "That's great, thanks",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Yes please",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "What is the temp right now?",
        "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))"
    },
    {
        "original_sentence": "Find events on my schedule that are not Crossfit.",
        "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (negate (?~= \"Crossfit\")))))"
    },
    {
        "original_sentence": "The first one please",
        "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Can you try to make a new dentist appointment for tomorrow?",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
    },
    {
        "original_sentence": "Was my meeting with Jamie on the 15th?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousDayOfMonth (Today) 15L) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamie\")))))))) 0L))"
    },
    {
        "original_sentence": "The first option.",
        "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "What about Paris on Monday ?",
        "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"Paris\")))))))"
    },
    {
        "original_sentence": "I'm also going to want to add leaving work early on the 1st at 2 pm.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"leaving work early\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 1L) (NumberPM 2L))))))))"
    },
    {
        "original_sentence": "When will it rain next in San Antonio?",
        "parse": "(FenceWeather)"
    },
    {
        "original_sentence": "How long will it take?",
        "parse": "(Yield (Event.duration (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
    },
    {
        "original_sentence": "When is my 2nd Event friday?",
        "parse": "(Yield (FindNumNextEvent (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) 2L))"
    },
    {
        "original_sentence": "Show me out of office until 10 AM on December 28 2018.",
        "parse": "(let (x0 (Today)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"out of office\")) (Event.start_? (?= (DateAtTimeWithDefaults x0 (DateTime.time (Now)))))) (Event.end_? (?= (DateAtTimeWithDefaults (nextMonthDay x0 (December) 28L) (NumberAM 10L))))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))))))))"
    },
    {
        "original_sentence": "Update it to 3pm",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
    },
    {
        "original_sentence": "schedule a meeting with my team on saturday",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
    },
    {
        "original_sentence": "Add Beth and Sara to the Fair",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Fair\")))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Beth\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sara\")))))))))))"
    },
    {
        "original_sentence": "Was there a pizza party with Matt last year?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"pizza party\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Matt\"))))) (FullYearofYear (LastYear)))))) 0L))"
    },
    {
        "original_sentence": "who is the birthday card for",
        "parse": "(FenceScope)"
    },
    {
        "original_sentence": "Please schedule a one hour meeting with Kayla from sales about the shipment tomorrow at 2 pm.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"sales about the shipment\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kayla\")))))))))))"
    },
    {
        "original_sentence": "Yes I want 8:30-9:15 pm",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (& (Event.start_? (DateTime.time_? (?= (HourMinutePm 8L 30L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 9L 15L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "nothing",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Tell me if the Bones restaurant in Atlanta has waiter service please?",
        "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Bones restaurant in Atlanta\"))))))"
    },
    {
        "original_sentence": "Take Noah off the attendee list for work meeting.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Noah\")))))))))))"
    },
    {
        "original_sentence": "may 1 looks prefect fix that one",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 1L (May))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Yes",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "What the weather like in Buffalo",
        "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Buffalo\"))) (?= (Now))))"
    },
    {
        "original_sentence": "add Cecelia Waller, Wade Blakeley, Damon Ellery, Karl Boon and Jeong-Ho Kim to the meeting",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cecelia Waller\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wade Blakeley\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon Ellery\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karl Boon\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeong-Ho Kim\")))))))))))"
    },
    {
        "original_sentence": "Nice. Confirm.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "ok! thank you.",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Replace Kacey with Amanda.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kacey\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amanda\")))))))))))"
    },
    {
        "original_sentence": "Will it rain this week in Houston, Texas?",
        "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Houston, Texas\"))) (DateTime.date_? (ThisWeek)))))"
    },
    {
        "original_sentence": "How about in the afternoon on the same day?",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDateWithTimeRange (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)) (Afternoon)))))"
    },
    {
        "original_sentence": "Can you tell me whose playing next week?",
        "parse": "(PleasantryCalendar)"
    },
    {
        "original_sentence": "I went to a birthday party last monday at 8 pm",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"birthday party\")) (Event.start_? (?= (DateAtTimeWithDefaults (previousDayOfWeek (Today) (Monday)) (NumberPM 8L))))))))"
    },
    {
        "original_sentence": "Do I have any meetings with Darren North this week?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Darren North\")))) (ThisWeek))))) 0L))"
    },
    {
        "original_sentence": "What event do I have in June",
        "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (June)))))))"
    },
    {
        "original_sentence": "Do I have anything else at the Indy 500 Track.",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Indy 500 Track\"))))))) 0L))"
    },
    {
        "original_sentence": "Please add the Pepsi Center as the location.",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Pepsi Center\"))))))"
    },
    {
        "original_sentence": "The second one looks good",
        "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "What will the weather be on oct 27 in cape girardeau missouri",
        "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"cape girardeau missouri\"))) (DateTime.date_? (?= (MD 27L (October))))))"
    },
    {
        "original_sentence": "please check if I have anything after 2 pm today",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (Today) (^(Event) EmptyStructConstraint) (NumberPM 2L))))"
    },
    {
        "original_sentence": "It should be moved to the 30th.",
        "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 30L)))))))))"
    },
    {
        "original_sentence": "Can you add Josh to this for me please?",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Josh\"))))))))))"
    },
    {
        "original_sentence": "Please see what time my meeting with Wilson is for today.",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wilson\"))))))))))"
    },
    {
        "original_sentence": "lunch with wade at 2:00 on March 28th",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 28L (March)) (NumberPM 2L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"wade\")))))))))))"
    },
    {
        "original_sentence": "second one looks prefect fix it",
        "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Can you put an extra 30 minutes on my doctors appointment to allow for xrays on Monday?",
        "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"doctors appointment\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toMinutes 30))))))))"
    },
    {
        "original_sentence": "Reschedule brunch with Marsha today to sometime next Thursday.",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"brunch\"))))))) (EventSometimeOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)))))"
    },
    {
        "original_sentence": "look for tea party event",
        "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"tea party\"))))))"
    },
    {
        "original_sentence": "Actually it will need to be a little later than that.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
    },
    {
        "original_sentence": "Can you add lunch with my mother to my calendar for June 14th at 12pm?",
        "parse": "(FenceAttendee)"
    },
    {
        "original_sentence": "Yes cancel this meeting instead.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "no",
        "parse": "(DoNotConfirm)"
    },
    {
        "original_sentence": "Looks great.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "can you make it for 2 hours long",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 2))))))"
    },
    {
        "original_sentence": "Hello, can you help me with a reservation?",
        "parse": "(PleasantryCalendar)"
    },
    {
        "original_sentence": "I have a coffee date tomorrow at 11 am. It will be at an expensive hip cafe.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"coffee date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L))))) (Event.location_? (?= (LocationKeyphrase.apply \"an expensive hip cafe\")))))))"
    },
    {
        "original_sentence": "Can you make that go to 11 pm?",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 11L)))))))"
    },
    {
        "original_sentence": "How many events do I have with Travis next month?",
        "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Travis\")))) (FullMonthofMonth (NextMonth)))))))"
    },
    {
        "original_sentence": "No, add bill, tim and simon to that",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bill\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"tim\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"simon\")))))))))))"
    },
    {
        "original_sentence": "What do I have scheduled this weekend?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
    },
    {
        "original_sentence": "No Thanks",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Add coffee with Annie at 8 am at the Starbucks near my house to tomorrow's calendar.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"coffee\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L))))) (Event.location_? (?= (LocationKeyphrase.apply \"the Starbucks near my house\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Annie\")))))))))))"
    },
    {
        "original_sentence": "Add a meeting at 10 am",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberAM 10L)))))))"
    },
    {
        "original_sentence": "Block my calendar for an hour before my presentation so I can get ready.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (PeriodDurationBeforeDateTime (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"presentation\")))))) (PeriodDuration.apply :duration (toHours 1))))))))"
    },
    {
        "original_sentence": "where i was in last Sunday?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Sunday)) (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "change the time for meeting with abby at 1.00 pm - 6.00 pm",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 6L))))))))"
    },
    {
        "original_sentence": "Please begin my three month maternity leave February 10th and mark me as out of the office.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"maternity leave\")) (MD 10L (February)) (toMonths 3))))))"
    },
    {
        "original_sentence": "Schedule Anniversary dinner Monday evening",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Anniversary dinner\")) (Event.start_? (DateTimeConstraint (Evening) (NextDOW (Monday))))))))"
    },
    {
        "original_sentence": "ok set the second one appointment timing",
        "parse": "(Yield (CreateCommitEventWrapper (Execute (refer (& (^(CreateCommitEvent) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(CreateCommitEvent) EmptyStructConstraint)))))))"
    },
    {
        "original_sentence": "I need to know when my next meeting with Amy is.",
        "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\")))) 1L)))"
    },
    {
        "original_sentence": "peaches and pies",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Can you add Larry and Zach",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Larry\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Zach\")))))))))))"
    },
    {
        "original_sentence": "Can you tell me when it will rain again?",
        "parse": "(FenceWeather)"
    },
    {
        "original_sentence": "what day will be the coldest day in the next week",
        "parse": "(Yield (WhenProperty (temperature) (WeatherQuantifier.Min) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (NextWeekList)))))"
    },
    {
        "original_sentence": "I want to know where I'm having dinner tomorrow?",
        "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"dinner\"))))))))"
    },
    {
        "original_sentence": "I have a manager meeting on Tuesday at 3 pm",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"manager meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 3L))))))))"
    },
    {
        "original_sentence": "What do I have on my schedule for Friday?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "Can you create a meeting with Sarah today at 11 AM?",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberAM 11L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\")))))))))))"
    },
    {
        "original_sentence": "Add a meeting with Paul for Wednesday at breakfast time.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (Breakfast)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paul\")))))))))))"
    },
    {
        "original_sentence": "put meeting with gloriya at aug 14",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (MD 14L (August))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"gloriya\")))))))))))"
    },
    {
        "original_sentence": "Move that event to this saturday",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))))))"
    },
    {
        "original_sentence": "Can you please add a team meeting to my calendar for this Friday and invite Paige, Cher, Jerri, and Janice?",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jerri\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice\"))))))))))))"
    },
    {
        "original_sentence": "What do I have the 2nd week of november?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NumberWeekOfMonth 2L (November)))))"
    },
    {
        "original_sentence": "Sure, can you add Brad to the meeting?",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brad\"))))))))))"
    },
    {
        "original_sentence": "What is Jen's office phone number?",
        "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jen\"))))))))"
    },
    {
        "original_sentence": "Looks fantastic",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Thanks",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "ok",
        "parse": "(Yield (CreateCommitEventWrapper (Execute (refer (extensionConstraint (^(CreateCommitEvent) EmptyStructConstraint))))))"
    },
    {
        "original_sentence": "Put read shonen jump from 3:30 to 5.",
        "parse": "(let (x0 (NextTime (HourMinutePm 3L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"read shonen jump\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
    },
    {
        "original_sentence": "Bye",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Get me the website for cheesecake factory in charlotte",
        "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"cheesecake factory in charlotte\"))))))"
    },
    {
        "original_sentence": "Are you serious bot bot??",
        "parse": "(GenericPleasantry)"
    },
    {
        "original_sentence": "Change the time to 12pm",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))))))"
    },
    {
        "original_sentence": "I meant review my VHS collection",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"review my VHS collection\")))))"
    },
    {
        "original_sentence": "where is my 3 Event at",
        "parse": "(Yield (Event.location (FindNumNextEvent (^(Event) EmptyStructConstraint) 3L)))"
    },
    {
        "original_sentence": "yes right okay",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Put it on.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Can you invite scot hanson to that?",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"scot hanson\"))))))))))"
    },
    {
        "original_sentence": "That is correct.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Actually I want to accept it?",
        "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(ResponseStatusType) AlwaysTrueConstraint)) (intension (ResponseStatusType.Accepted)))))"
    },
    {
        "original_sentence": "Will Frank be attending the rodeo next Saturday?",
        "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.location_? (?= (LocationKeyphrase.apply \"rodeo\"))))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Frank\")))))))) (ResponseStatusType.Accepted)))"
    },
    {
        "original_sentence": "Did I accept the annual fishing trip?",
        "parse": "(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"annual fishing trip\"))))))) (ResponseStatusType.Accepted)))"
    },
    {
        "original_sentence": "yes",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Will it snow in houston?",
        "parse": "(Yield (WillSnow (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"houston\"))) (DateTime.date_? (?= (Today))))))"
    },
    {
        "original_sentence": "who will be at the meeting tomorrow?",
        "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))) (ResponseStatusType.Accepted)))"
    },
    {
        "original_sentence": "Thanks, what else do I have that day?",
        "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))"
    },
    {
        "original_sentence": "I am planning a vacation to California in December. What is the weather like there?",
        "parse": "(FenceWeather)"
    },
    {
        "original_sentence": "Make the time last 80 minutes.",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toMinutes 80))))))"
    },
    {
        "original_sentence": "Add staff meeting on Monday at 7:30 AM.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"staff meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (HourMinuteAm 7L 30L))))))))"
    },
    {
        "original_sentence": "Add a business meeting with Tony Monday at 5 pm.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"business meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 5L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tony\")))))))))))"
    },
    {
        "original_sentence": "delete",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
    },
    {
        "original_sentence": "Meeting with Tim Cancel now.",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\")))))))))))"
    },
    {
        "original_sentence": "Do I have any other appointments on Friday?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) 0L))"
    },
    {
        "original_sentence": "Can you make an event for work meeting from 10am-12pm on Monday?",
        "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"work meeting\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 12L)))))))))"
    },
    {
        "original_sentence": "How many seminars did I attend last year?",
        "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"seminars\")) (FullYearofYear (LastYear)))))))"
    },
    {
        "original_sentence": "I need to contact my grandma at 900",
        "parse": "(FenceAttendee)"
    },
    {
        "original_sentence": "List my events between 2 and 6 on the 24th",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (nextDayOfMonth (Today) 24L) (^(Event) EmptyStructConstraint) (NumberPM 2L) (NumberPM 6L))))"
    },
    {
        "original_sentence": "Please decline my meeting in tomorrow?",
        "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) :response (ResponseStatusType.Declined)))"
    },
    {
        "original_sentence": "Put dinner on my schedule for tomorrow at 7pm.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 7L))))))))"
    },
    {
        "original_sentence": "Yes and accept the bachelorette party next week and say im so excited!!",
        "parse": "(Yield (EventAttendance (RespondComment.apply \"im so excited!!!\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"bachelorette party\")) (NextWeekList))))) :response (ResponseStatusType.Accepted)))"
    },
    {
        "original_sentence": "good",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "The meeting with Jane on Friday is cancelled.",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\"))))))))))))"
    },
    {
        "original_sentence": "yes march 18th is perfect",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 18L (March))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "I have a hike at a park in Los Angeles on Sunday.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"hike\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))) (Event.location_? (?= (LocationKeyphrase.apply \"park in Los Angeles\")))))))"
    },
    {
        "original_sentence": "Actually meant book club",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"book club\")))))"
    },
    {
        "original_sentence": "name it as emily's wedding anniversary party and the dress code is blue",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"emily's wedding anniversary party and the dress code is blue\")))))"
    },
    {
        "original_sentence": "Set up Quick Lunch for Thursday at 1 pm at Subway.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Quick Lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 1L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Subway\")))))))"
    },
    {
        "original_sentence": "Yeah, the 10 am is fine, but can you tell me where my lunch with Jana is on next Tuesday?",
        "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jana\"))))))))))))"
    },
    {
        "original_sentence": "When was my meeting with Rachel and her boss last year?",
        "parse": "(let (x0 (PersonName.apply \"Rachel\")) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullYearofYear (LastYear))))))))))"
    },
    {
        "original_sentence": "Can you schedule an appointment for me?",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "create a camp meeting event between 8 pm and 11pm",
        "parse": "(let (x0 (NextTime (NumberPM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"camp meeting\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 11L)))))))))"
    },
    {
        "original_sentence": "Yes, now can you also tell me what I've got going for late Saturday afternoon?",
        "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)) (LateAfternoon)))))"
    },
    {
        "original_sentence": "Change the name of that doctor appointment to Liv's doctor appointment.",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor appointment\")))))) (Event.subject_? (?= \"Liv's doctor appointment\")))))"
    },
    {
        "original_sentence": "I need it to be an hour.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))"
    },
    {
        "original_sentence": "Can you tell me when my next dentist appointment is?",
        "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"dentist appointment\")) 1L)))"
    },
    {
        "original_sentence": "Delete last week's flight to Houston",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"flight to Houston\")) (LastWeekNew)))))))))"
    },
    {
        "original_sentence": "Hi, what time is the big game this weekend?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"big game\")) (ThisWeekend)))))))"
    },
    {
        "original_sentence": "please show away from office on my calendar this afternoon",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Afternoon) (Today))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
    },
    {
        "original_sentence": "Schedule 3 pm tentative shareholders huddle",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"shareholders huddle\")) (Event.start_? (?= (NextTime (NumberPM 3L))))) (Event.showAs_? (?= (ShowAsStatus.Tentative)))))))"
    },
    {
        "original_sentence": "How many events do I have with Beth over the next month?",
        "parse": "(let (x0 (Today)) (Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Beth\")))) (DateAndConstraint x0 (adjustByPeriod x0 (toMonths 1)))))))))"
    },
    {
        "original_sentence": "Who is the supervisor of Huey?",
        "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Huey\")))))))"
    },
    {
        "original_sentence": "yes",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Make a shopping spree event later on today",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventOnDate (Today) (& (Event.subject_? (?~= \"shopping spree\")) (Event.start_? (Later)))))))"
    },
    {
        "original_sentence": "cancel it",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
    },
    {
        "original_sentence": "Is that a casual restaurant?",
        "parse": "(PlaceHasFeature (PlaceFeature.Casual) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint)))))"
    },
    {
        "original_sentence": "go away",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Did I go on a date last week?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"date\")) (LastWeekNew))))) 0L))"
    },
    {
        "original_sentence": "Is a Dance Recital scheduled for the 5th?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 5L) (Event.subject_? (?~= \"Dance Recital\")))))) 0L))"
    },
    {
        "original_sentence": "The second one is best but can it be later in the afternoon",
        "parse": "(FenceMultiAction)"
    },
    {
        "original_sentence": "Move the appointment from tomorrow to friday",
        "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)))))))))"
    },
    {
        "original_sentence": "Excellent. What other Soccer practices do I have over the next month?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Soccer practices\")) (FullMonthofMonth (NextMonth)))))"
    },
    {
        "original_sentence": "yes",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "im meeting my friend charles tomorrow at 7pm",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 7L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"charles\")))))))))))"
    },
    {
        "original_sentence": "ok cool, but now can you change my meeting with Kim to be AM not PM.",
        "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))) (do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (ConvertTimeToAM (DateTime.time (Event.start x0)))))))))))"
    },
    {
        "original_sentence": "its ok, can you try it again?",
        "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
    },
    {
        "original_sentence": "Nicole is no longer with the company, uninvite her from all events.",
        "parse": "(FenceMultiAction)"
    },
    {
        "original_sentence": "Delete my call with Elli and her skip",
        "parse": "(let (x0 (PersonName.apply \"Elli\")) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"call\")) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))))))))))))))))"
    },
    {
        "original_sentence": "I think number two.",
        "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Great thank y ou very much.",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "OK thanks",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Yes please do.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Make a appointment for tomorrow",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
    },
    {
        "original_sentence": "Decline my monday meeting and say that I won't be in the office that day",
        "parse": "(Yield (EventAttendance (RespondComment.apply \"I won't be in the office that day\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))) :response (ResponseStatusType.Declined)))"
    },
    {
        "original_sentence": "Create a event in 10 days to get a job at 2:00 PM to 4:00 PM",
        "parse": "(let (x0 (DateAtTimeWithDefaults (adjustByPeriod (Today) (toDays 10)) (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"get a job\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L)))))))))"
    },
    {
        "original_sentence": "Is Trueblood's a very family friendly place to eat?",
        "parse": "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Trueblood\"))))))"
    },
    {
        "original_sentence": "There is nothing else!",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Create a meeting with Jay for Friday before 11am.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (OnDateBeforeTime (NextDOW (Friday)) (NumberAM 11L))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jay\")))))))))))"
    },
    {
        "original_sentence": "tank you",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "thanks",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "I need a meeting with Jake tomorrow at 7 am",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 7L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))))))))))"
    },
    {
        "original_sentence": "ok!",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "I think so",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Looking good!!! could you please reduce as an one hour",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
    },
    {
        "original_sentence": "Cancel my meeting with Gavin and make a meeting with George instead",
        "parse": "(FenceMultiAction)"
    },
    {
        "original_sentence": "Make it start at 11:15 am.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 11L 15L)))))))"
    },
    {
        "original_sentence": "Yes, I no longer need that.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Do I have anything at 1 today?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 1L)) (^(Event) EmptyStructConstraint))))) 0L))"
    },
    {
        "original_sentence": "Make an event for Friday through sunday",
        "parse": "(let (x0 (NextDOW (Friday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (DateAndConstraint x0 (nextDayOfWeek x0 (Sunday))))))))"
    },
    {
        "original_sentence": "I would like to add Hiking to my calendar for Sunday.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Hiking\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))))))"
    },
    {
        "original_sentence": "Do I have anything after that?",
        "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))) 0L)))"
    },
    {
        "original_sentence": "I guess so. Lunch time?",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (Lunch)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Set up swim meet for saturday at 8.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"swim meet\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 8L))))))))"
    },
    {
        "original_sentence": "Great, do they have a bar?",
        "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
    },
    {
        "original_sentence": "Appointment",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Has Tom responded ot my email?",
        "parse": "(FenceSwitchTabs)"
    },
    {
        "original_sentence": "I have a beef eaters anonymous meeting tonight",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"beef eaters anonymous meeting\")) (Event.start_? (DateTimeConstraint (Night) (Today)))))))"
    },
    {
        "original_sentence": "what is the exact date and time of my doctor appointment?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor appointment\")))))))"
    },
    {
        "original_sentence": "The 2PM one. Also mark me as busy for that meeting.",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (& (Event.showAs_? (?= (ShowAsStatus.Busy))) (EventAtTime (^(Event) EmptyStructConstraint) (NumberPM 2L))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Please add the location Ellis Island to that appointment.",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Ellis Island\"))))))"
    },
    {
        "original_sentence": "Please remove my lunch on MAy 13",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 13L (May)) (Event.subject_? (?~= \"lunch\"))))))))))"
    },
    {
        "original_sentence": "Schedule a lunch with Tom at noon today.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (Noon))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))))))))"
    },
    {
        "original_sentence": "Can you schedule a BBQ for the weekend?",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"BBQ\")) (Event.start_? (DateTime.date_? (ThisWeekend)))))))"
    },
    {
        "original_sentence": "What is the other event that I have this weekend?",
        "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend)))))"
    },
    {
        "original_sentence": "can you move the meeting with sara from Arbys to Burget King?",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \"Arbys\"))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"sara\"))))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Burget King\"))))))"
    },
    {
        "original_sentence": "Are there any responses for the Erin Go Bragh event?",
        "parse": "(Yield (> (size (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Erin Go Bragh\")))))) (ResponseStatusType.None))) 0L))"
    },
    {
        "original_sentence": "I want to go on Monday",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "what events is Cornelio Hernandez",
        "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cornelio Hernandez\"))))))"
    },
    {
        "original_sentence": "Meet with Wade Blakeley after lunch to discuss finances",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"discuss finances\")) (Event.start_? (OnDateAfterTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Lunch)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wade Blakeley\")))))))))))"
    },
    {
        "original_sentence": "create meeting on monday at 5",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 5L)))))))"
    },
    {
        "original_sentence": "Add clean the house on Monday at 5:00 PM.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"clean the house\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 5L))))))))"
    },
    {
        "original_sentence": "Please display status \"Out of Office\" for all day, tomorrow.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (Tomorrow)))))"
    },
    {
        "original_sentence": "make arrangement for team meeting to next week monday",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (DateTime.date_? (?= (DowOfWeekNew (Monday) (NextWeekList)))))))))"
    },
    {
        "original_sentence": "Looks good, thanks.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Can you make me a meeting with Kim and Dan Schoffel for end of work day?",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (EndOfWorkDay)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Schoffel\"))))))))))))"
    },
    {
        "original_sentence": "have this going until 4:00",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 4L)))))))"
    },
    {
        "original_sentence": "I need to schedule an appointment with my team for tomorrow",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
    },
    {
        "original_sentence": "Can you list all the lunches I have scheduled for next week?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"lunches\")) (NextWeekList))))"
    },
    {
        "original_sentence": "Call it a business trip to see the big client.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"business trip to see the big client\")))))"
    },
    {
        "original_sentence": "Anything earlier",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
    },
    {
        "original_sentence": "add dinner party on the 23rd at Nancy's",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner party\")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 23L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Nancy's\")))))))"
    },
    {
        "original_sentence": "could you actually make my team lunch to start sometime tomorrow?",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"team lunch\")))))) (EventSometimeOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
    },
    {
        "original_sentence": "Can you cancel my dentist appointment for Thursday and change it for Friday instead. Also set a cook timer for 1 hour.",
        "parse": "(do (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dentist appointment\")) (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)))))))))) (FenceScope))"
    },
    {
        "original_sentence": "Hey what's going on with Katy tomorrow again?",
        "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Katy\")))) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
    },
    {
        "original_sentence": "Sally and Jim and Tim can't go to the party anymore",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"party\")))))) (Event.attendees_? (& (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sally\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\"))))))))))))"
    },
    {
        "original_sentence": "Okay, thanks.",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "i meant the Happy Death Day in May",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.subject_? (?~= \"Happy Death Day\")) (FullMonthofMonth (May))))))"
    },
    {
        "original_sentence": "Alright.",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "good",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "search pick up kids",
        "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"pick up kids\"))))"
    },
    {
        "original_sentence": "What about my doctor's appointment?",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"doctor's appointment\")))))"
    },
    {
        "original_sentence": "change time doctor appointment at 1.00 pm",
        "parse": "(FenceSpecify)"
    },
    {
        "original_sentence": "Ok, I would like to delete the meeting I have with Cher on Friday",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher\"))))))))))))"
    },
    {
        "original_sentence": "Nice, check my events now again",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (Now) (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "reschedule my 3pm meeting to 4pm",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 3L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
    },
    {
        "original_sentence": "Where is it going to be colder tomorrow, Toronto, Vancouver, or Ottawa?",
        "parse": "(FenceComparison)"
    },
    {
        "original_sentence": "Yes this is good.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Yes",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Remove all events after this coming Saturday.",
        "parse": "(FenceMultiAction)"
    },
    {
        "original_sentence": "When will the next conference be?",
        "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"conference\")) 1L)))"
    },
    {
        "original_sentence": "When is the first event I have with Jamaal?",
        "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamaal\")))) 1L)))"
    },
    {
        "original_sentence": "And what's the status for that one set to?",
        "parse": "(Yield (Event.showAs (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
    },
    {
        "original_sentence": "That looks good, can you tell me what I have on Sunday?",
        "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)))))"
    },
    {
        "original_sentence": "Can you also remind me of Joel's email address? I'm trying to get a hold of him.",
        "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joel\"))))))))"
    },
    {
        "original_sentence": "Let me check.",
        "parse": "(UserPauseResponse)"
    },
    {
        "original_sentence": "yes",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "I need to reschedule my nail appointment to be on Monday afternoon.",
        "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"nail appointment\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTimeConstraint (Afternoon) (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Monday))))))))"
    },
    {
        "original_sentence": "Great!",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Make a 7 day event with tomorrow",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (Tomorrow) (toDays 7)))))"
    },
    {
        "original_sentence": "Make a lunch date with my wife for thursday",
        "parse": "(FenceAttendee)"
    },
    {
        "original_sentence": "Cancel meeting with doctor harris.",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"doctor harris\")))))))))))"
    },
    {
        "original_sentence": "Can you also put meeting with Milo at 9 on Friday?",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Milo\")))))))))))"
    },
    {
        "original_sentence": "Invite Jess to that",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jess\"))))))))))"
    },
    {
        "original_sentence": "ok that's fine , what about the weather in texas yesterday?",
        "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"texas\"))) (DateTime.date_? (?= (Yesterday)))))"
    },
    {
        "original_sentence": "Can you schedule me a dentist appointment tomorrow before my hair appointment at 3 PM?",
        "parse": "(let (x0 (Tomorrow)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.end_? (?= (DateAtTimeWithDefaults x0 (DateTime.time (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults x0 (NumberPM 3L)) (Event.subject_? (?~= \"hair appointment\"))))))))))))))))"
    },
    {
        "original_sentence": "Needs Title \"Doctor's Appointment\"",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"Doctor's Appointment\")))))"
    },
    {
        "original_sentence": "Can you please update my appointment tomorrow to 2 pm instead of 3 pm?",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
    },
    {
        "original_sentence": "Create a timer for 35 minutes from 6:30am",
        "parse": "(FenceReminder)"
    },
    {
        "original_sentence": "volleyball match sunday morning",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"volleyball match\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Sunday))))))))"
    },
    {
        "original_sentence": "Top one works",
        "parse": "(Yield (Execute (ChooseCreateEvent (TopResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "I need to know who my supervisor is.",
        "parse": "(Yield (FindManager (toRecipient (CurrentUser))))"
    },
    {
        "original_sentence": "yes",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Hello, can you please confirm that I have a meeting with Elvis at three?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elvis\")))) (NumberPM 3L))))) 0L))"
    },
    {
        "original_sentence": "Can you extend meeting from 1-130 to 1-2?",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 2L))))))))"
    },
    {
        "original_sentence": "Hi, can you tell me what events I have scheduled for noon today?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (Noon)) (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "How expensive is Copacabana Cafe in Seattle?",
        "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Copacabana Cafe in Seattle\"))))))"
    },
    {
        "original_sentence": "Is there anything scheduled next week?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))) 0L))"
    },
    {
        "original_sentence": "Is there a website for Lampost Pizza in Reno?",
        "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Lampost Pizza in Reno\"))))))"
    },
    {
        "original_sentence": "Hi!",
        "parse": "(GenericPleasantry)"
    },
    {
        "original_sentence": "MM YES DINNER DATE IS 23. Now can you put me down for an oil change anytime that isnt on the weekend?",
        "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.day_? (?= (Day.apply 23L))))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"oil change\")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))))"
    },
    {
        "original_sentence": "Schedule my flight to New York next weekend of Friday, go to concert on Saturday at 7pm and flight back home on Monday morning at 10am.",
        "parse": "(FenceMultiAction)"
    },
    {
        "original_sentence": "Thanks, show me the rest of the week",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
    },
    {
        "original_sentence": "When is Jen's wedding?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Jen's wedding\")))))))"
    },
    {
        "original_sentence": "How long is the team meeting next Wednesday morning?",
        "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Wednesday)) (Event.subject_? (?~= \"team meeting\"))) (Morning)))))))"
    },
    {
        "original_sentence": "Actually call it a sales discussion.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"sales discussion\")))))"
    },
    {
        "original_sentence": "yes it's right",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Move appointment to 2:00 pm",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Can you please block off 2 hours tomorrow for a Soccer Practice with Jenna?",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Soccer Practice\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.duration_? (?= (toHours 2)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jenna\")))))))))))"
    },
    {
        "original_sentence": "Schedule Wow Playing Session for tomorrow at 2 pm.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Wow Playing Session\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))))))"
    },
    {
        "original_sentence": "What do I have scheduled tomorrow afternoon?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Afternoon))))"
    },
    {
        "original_sentence": "Make me a meeting with Jennifer, her boss, Elli, and his boss",
        "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer\"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1)))))))))"
    },
    {
        "original_sentence": "Do I have anything before that?",
        "parse": "(let (x0 (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateBeforeTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))) 0L)))"
    },
    {
        "original_sentence": "Can you change my meeting to an hour earlier.",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (?= (PeriodDurationBeforeDateTime (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply :duration (toHours 1))))))))"
    },
    {
        "original_sentence": "Schedule a cake walk fundraiser for next week for 4 hours",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"cake walk fundraiser\")) (Event.start_? (DateTime.date_? (NextWeekList)))) (Event.duration_? (?= (toHours 4)))))))"
    },
    {
        "original_sentence": "What time do I have my meeting with Tim?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\")))))))))"
    },
    {
        "original_sentence": "delete dentist appointment",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\")))))))))"
    },
    {
        "original_sentence": "Can we put \"renewal of mturk contract\" on for January 12 2022",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"renewal of mturk contract\")) (Event.start_? (DateTime.date_? (?= (MDY 12L (January) (Year.apply 2022L)))))))))"
    },
    {
        "original_sentence": "Thanks, that is not many people. Who hasn't responded to the Poker Night event yet?",
        "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Poker Night\")))))) (ResponseStatusType.NotResponded)))"
    },
    {
        "original_sentence": "Uninvite Luis, Juan Paulina and Monica from my birthday",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"birthday\")))))) (Event.attendees_? (& (& (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Luis\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Juan\")))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paulina\")))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Monica\"))))))))))))"
    },
    {
        "original_sentence": "Do I have anything on my schedule on Monday afternoon",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"
    },
    {
        "original_sentence": "Yes and please add restaurant as the location.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.location_? (?= (LocationKeyphrase.apply \"restaurant\"))))))"
    },
    {
        "original_sentence": "IT'S GOOD",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "No, I mean the whole afternoon from 12:00 PM until 5:00 PM",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 5L))))))))"
    },
    {
        "original_sentence": "Make a doctor appointment on Tuesday, jog in the afternoon and pick up my daughter from school.",
        "parse": "(FenceMultiAction)"
    },
    {
        "original_sentence": "Do I have any events with Cher?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher\"))))))) 0L))"
    },
    {
        "original_sentence": "Create an event for Dr Appointment on May 4th at 8AM",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dr Appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 4L (May)) (NumberAM 8L))))))))"
    },
    {
        "original_sentence": "Actually cancel my six o clock appointment.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDateTime (NextTime (NumberPM 6L)) (^(Event) EmptyStructConstraint)))))"
    },
    {
        "original_sentence": "When is the maze run",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"maze run\")))))))"
    },
    {
        "original_sentence": "Add Carol, and Kacey to that please.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carol\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kacey\")))))))))))"
    },
    {
        "original_sentence": "Schedule a meeting at brunch",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.time_? (?= (Brunch)))))))"
    },
    {
        "original_sentence": "Cool perfect",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "No",
        "parse": "(DoNotConfirm)"
    },
    {
        "original_sentence": "Yeah, okay. I'm not going to be in the office all of Monday.",
        "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (NextDOW (Monday)))))))"
    },
    {
        "original_sentence": "Erie",
        "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"Erie\")))))))"
    },
    {
        "original_sentence": "Can you actually make that end at 5 pm instead. And mark me as out of the office for that time so no one tries to contact me.",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.end_? (DateTime.time_? (?= (NumberPM 5L)))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
    },
    {
        "original_sentence": "Add a meeting at The Three Broomsticks with Harry, Hermione and Ron.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \"Three Broomsticks\"))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harry\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Hermione\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ron\"))))))))))))"
    },
    {
        "original_sentence": "What is bobby's email?",
        "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bobby\"))))))))"
    },
    {
        "original_sentence": "Find the last event that has a guest in my calendar",
        "parse": "(FenceAttendee)"
    },
    {
        "original_sentence": "Accept the invite for next week.",
        "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))) :response (ResponseStatusType.Accepted)))"
    },
    {
        "original_sentence": "Thanks, delete my flight to Amarillo",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Amarillo\")))))))))"
    },
    {
        "original_sentence": "Can you change my golf time to 4 PM?",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"golf time\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
    },
    {
        "original_sentence": "I have a meeting tomorrow at 2pm. It's with Nora, Emily and James.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nora\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\"))))))))))))"
    },
    {
        "original_sentence": "add appointment with doctor harris today evening",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Evening) (Today))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"doctor harris\")))))))))))"
    },
    {
        "original_sentence": "Hi, I want to create an event called birthday party for Friday at 3pm.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"birthday party\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L))))))))"
    },
    {
        "original_sentence": "can you make a meeting for 3pm tomorrow to meet boos",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"meet boos\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))))))"
    },
    {
        "original_sentence": "im in new york",
        "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"new york\")))))))"
    },
    {
        "original_sentence": "Is Susan still my boss?",
        "parse": "(Yield (== (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Susan\"))))) (FindManager (toRecipient (CurrentUser)))))"
    },
    {
        "original_sentence": "Par-Ty",
        "parse": "(FenceGibberish)"
    },
    {
        "original_sentence": "Add dentist appointment at 4:00 PM on Wednesday.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 4L))))))))"
    },
    {
        "original_sentence": "Create an event on December 19th at 9am for 1 hour, subject is \"discuss next steps of planning\".",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"discuss next steps of planning\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 19L (December)) (NumberAM 9L))))) (Event.duration_? (?= (toHours 1)))))))"
    },
    {
        "original_sentence": "Can you tell me if I have a doctor's appointment scheduled next week?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctor's appointment\")) (NextWeekList))))"
    },
    {
        "original_sentence": "Ya so this weekend is a no go so change it.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
    },
    {
        "original_sentence": "yessiree",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Put tap dancing lessons on the calender at 4:00 to 5:00 on Saturday.",
        "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"tap dancing lessons\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
    },
    {
        "original_sentence": "What time is my meeting on Friday?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))))"
    },
    {
        "original_sentence": "when is my meeting with Tim's manager?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\")))))))))))))"
    },
    {
        "original_sentence": "Add a baseball game viewing party with Mark Sunday at 3 pm.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"baseball game viewing party\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 3L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))))))))))"
    },
    {
        "original_sentence": "That should be 0630",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinuteMilitary 6L 30L)))))))"
    },
    {
        "original_sentence": "What birthdays are listed on my calendar?",
        "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"birthday\"))))"
    },
    {
        "original_sentence": "do i have any other event on the same day",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))) 0L))"
    },
    {
        "original_sentence": "Cancel that meeting I have with Will and his boss at 2pm",
        "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Will\")))))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 2L)) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))))))"
    },
    {
        "original_sentence": "Do I have anything else that day>",
        "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (DateTime.date (Event.start x0)) (Event.id_? (negate (?= (Event.id x0)))))))) 0L)))"
    },
    {
        "original_sentence": "Tell me what will happen next Tuesday",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "Can you change the appointment to Monday the 8th please.",
        "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 8L)))))))))"
    },
    {
        "original_sentence": "whats my plans for today",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "When is my meeting with Daveed?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Daveed\")))))))))"
    },
    {
        "original_sentence": "I need to know if I am busy between the 5th 12pm and the 6th 12pm.",
        "parse": "(let (x0 (nextDayOfMonth (Today) 5L)) (Yield (FindEventWrapperWithDefaults (EventDuringRangeDateTime (^(Event) EmptyStructConstraint) (DateTimeAndConstraint (DateAtTimeWithDefaults x0 (NumberPM 12L)) (DateAtTimeWithDefaults (nextDayOfMonth x0 6L) (NumberPM 12L)))))))"
    },
    {
        "original_sentence": "Where was that located?",
        "parse": "(Yield (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
    },
    {
        "original_sentence": "update my Bowling on Friday to last for 3 hours",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"Bowling\"))))))) (Event.duration_? (?= (toHours 3))))))"
    },
    {
        "original_sentence": "Add Go to the Vet a half hour after Work with Dogs.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Go to the Vet\")) (Event.start_? (?= (adjustByPeriodDuration (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Work with Dogs\")))))) (PeriodDuration.apply :duration (toHours 0.5)))))))))"
    },
    {
        "original_sentence": "Yes",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Make me a new event tomorrow called \"I Suck at Naming Things\"",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"I Suck at Naming Things\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
    },
    {
        "original_sentence": "i told you to remove laura from the talk. check it again.",
        "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
    },
    {
        "original_sentence": "The 2nd one works for me.",
        "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Look for any meetings between next Thursday and next Saturday.",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (DateAndConstraint (NextDOW (Thursday)) (NextDOW (Saturday))))))"
    },
    {
        "original_sentence": "Get rid of tomorrow morning's coffee with Milford and his manager.",
        "parse": "(let (x0 (PersonName.apply \"Milford\")) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (& (Event.subject_? (?~= \"coffee\")) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))))))) (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Morning)))))))))))"
    },
    {
        "original_sentence": "No, that's no good, cross it off.",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
    },
    {
        "original_sentence": "Yep",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "OK thank you",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Yes the second option is best. Schedule that one",
        "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "What am I doing after my last basketball game next Friday?",
        "parse": "(let (x0 (Event.end (FindLastEvent (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"basketball game\")))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)))))"
    },
    {
        "original_sentence": "Reminder on April 8 to call Jerri Skinner RE: May Vacation",
        "parse": "(FenceReminder)"
    },
    {
        "original_sentence": "perfect!",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Cancel my doctor appointment last week, they had to reschedule it.",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctor appointment\")) (LastWeekNew)))))))))"
    },
    {
        "original_sentence": "create a lunch meeting at 12pm with Jill",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (?= (NextTime (NumberPM 12L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jill\")))))))))))"
    },
    {
        "original_sentence": "Grab that later one",
        "parse": "(FenceOther)"
    },
    {
        "original_sentence": "thanks",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Yes.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Let's add relaxation to my calendar on that day at 1 pm lasting for 2 hours and I need to be shown as busy during that time",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"relaxation\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 1L))))) (Event.duration_? (?= (toHours 2)))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))"
    },
    {
        "original_sentence": "That looks good to me.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Thank you. Please also schedule lunch for that day with Josh",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Josh\")))))))))))"
    },
    {
        "original_sentence": "That is perfect.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Is Mark coming over to watch football tomorrow?",
        "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"watch football\")))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))))))) (ResponseStatusType.Accepted)))"
    },
    {
        "original_sentence": "make start time as 3 pm",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
    },
    {
        "original_sentence": "What events do i have early next week?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (EarlyDateRange (NextWeekList)))))"
    },
    {
        "original_sentence": "Remove John from the convention happening next year.",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"convention\")))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))))"
    },
    {
        "original_sentence": "Either of those is fine. When did my Soccer Game happen last year?",
        "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Soccer Game\")) (FullYearofYear (LastYear)))))))))"
    },
    {
        "original_sentence": "When was my surgery last year?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"surgery\")) (FullYearofYear (LastYear))))))))"
    },
    {
        "original_sentence": "Actually make it at 2 pm.",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
    },
    {
        "original_sentence": "Cancel my meeting with Alexa for this afternoon.",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alexa\"))))) (Afternoon)))))))))"
    },
    {
        "original_sentence": "That looks good",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Great, clear my calendar for Friday too please.",
        "parse": "(FenceMultiAction)"
    },
    {
        "original_sentence": "yes",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "No, I'm sick, I think I meant take a book to Doctor's Office",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"take a book to Doctor's Office\")))))"
    },
    {
        "original_sentence": "delete tomorrow's first event",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (List.apply (take (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))) 1L) 0L)))))"
    },
    {
        "original_sentence": "Add roller skating practice to my calendar on Tuesday at 7.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"roller skating practice\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 7L))))))))"
    },
    {
        "original_sentence": "ok give your any other option???",
        "parse": "(FenceOther)"
    },
    {
        "original_sentence": "Can we move this to the middle of next week?",
        "parse": "(FenceDateTime)"
    },
    {
        "original_sentence": "is Rum Sugar Lime in Reno family friendly",
        "parse": "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Rum Sugar Lime in Reno\"))))))"
    },
    {
        "original_sentence": "Set the 2nd one",
        "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "What about tomorrow's?",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
    },
    {
        "original_sentence": "Do I have any meetings this afternoon?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"
    },
    {
        "original_sentence": "That looks great, can you book lunch after too?",
        "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (Event.end (^(Dynamic) item x0))))))))))"
    },
    {
        "original_sentence": "create work meeting on sunday at 5",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"work meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 5L))))))))"
    },
    {
        "original_sentence": "Kaww",
        "parse": "(FenceGibberish)"
    },
    {
        "original_sentence": "I'd like to book the second one",
        "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Yep.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "How about next month?",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))))))"
    },
    {
        "original_sentence": "Please accept my dancing with the moon event and say that I will become a star",
        "parse": "(Yield (EventAttendance (RespondComment.apply \"I will become a star\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dancing with the moon\"))))) :response (ResponseStatusType.Accepted)))"
    },
    {
        "original_sentence": "Well",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "What do I have going on at this moment",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (Now) (^(Event) EmptyStructConstraint))))"
    },
    {
        "original_sentence": "no thanks",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "change the meeting to October 11 and add Kim Possible and Elli Parker to it",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.date_? (?= (MD 11L (October))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim Possible\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli Parker\"))))))))))))"
    },
    {
        "original_sentence": "What's for dinner tonight?",
        "parse": "(FenceScope)"
    },
    {
        "original_sentence": "Sure does.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "good",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "schedule pizza party after the game",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pizza party\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"game\"))))))))))))"
    },
    {
        "original_sentence": "Let's cancel anything after 8AM on the 20th",
        "parse": "(FenceMultiAction)"
    },
    {
        "original_sentence": "Schedule a meeting with Paige Ashworth",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\"))))))))))"
    },
    {
        "original_sentence": "will it rain in milwaukee next week ?",
        "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"milwaukee\"))) (DateTime.date_? (NextWeekList)))))"
    },
    {
        "original_sentence": "make it last until 5:30",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (HourMinutePm 5L 30L)))))))"
    },
    {
        "original_sentence": "thank you very much",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "no, check for other meeting on the same day",
        "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (^(Event) EmptyStructConstraint)))))"
    },
    {
        "original_sentence": "THANK YOU, CREATE A CHECKLIST FOR ME",
        "parse": "(FenceScope)"
    },
    {
        "original_sentence": "Please call Linda!",
        "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Linda\"))))))))"
    },
    {
        "original_sentence": "second one",
        "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "I want to go swimming tomorrow afternoon.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go swimming\")) (Event.start_? (DateTimeConstraint (Afternoon) (Tomorrow)))))))"
    },
    {
        "original_sentence": "What events did I have last month?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (LastPeriod (toMonths 1)))))"
    },
    {
        "original_sentence": "Will it rain tonight ?",
        "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTimeConstraint (Night) (Today)))))"
    },
    {
        "original_sentence": "I am going to dinner at 5:30 after the train station.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"going to dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (HourMinutePm 5L 30L))))))))"
    },
    {
        "original_sentence": "Anything on my schedule for this evening?",
        "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Night))))"
    },
    {
        "original_sentence": "appointment for the next Friday",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))))))"
    },
    {
        "original_sentence": "Do I have anything at the end of the day on Friday?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (EndOfWorkDay)) (^(Event) EmptyStructConstraint))))) 0L))"
    },
    {
        "original_sentence": "That looks correct.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "do the first one",
        "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Do I have a flight scheduled for Sunday morning?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"flight\"))) (Morning))))) 0L))"
    },
    {
        "original_sentence": "Let's put the second one on the schedule.",
        "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "NO",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Schedule doctor's appointment with Jeong",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeong\")))))))))))"
    },
    {
        "original_sentence": "Update meeting on April 8",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 8L (April)) (^(Event) EmptyStructConstraint)))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))"
    },
    {
        "original_sentence": "whats my name",
        "parse": "(Yield (CurrentUser))"
    },
    {
        "original_sentence": "I would like to create a reminder for a day in March.",
        "parse": "(FenceReminder)"
    },
    {
        "original_sentence": "what about the meet with Gary on webcast?",
        "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Gary\"))))))))"
    },
    {
        "original_sentence": "Can Nick make the basktetball game on saturday?",
        "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"basktetball game\")))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nick\")))))))) (ResponseStatusType.Accepted)))"
    },
    {
        "original_sentence": "I met with tim this morning at 6am, can you add that?",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberAM 6L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"tim\")))))))))))"
    },
    {
        "original_sentence": "Yes. It should last 75 minutes.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toMinutes 75))))))"
    },
    {
        "original_sentence": "Mark my schedule as busy from Monday at 10am until Tuesday at 6pm and remind me that I have a meeting on tueday at 2:00pm one hour before.",
        "parse": "(FenceMultiAction)"
    },
    {
        "original_sentence": "Make it later in teh day",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
    },
    {
        "original_sentence": "Can I count on a snowday tomorrow in Boston?",
        "parse": "(Yield (WillSnow (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Boston\"))) (DateTime.date_? (?= (Tomorrow))))))"
    },
    {
        "original_sentence": "Delete work meeting December 28th 9am",
        "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (MD 28L (December)) (NumberAM 9L)) (Event.subject_? (?~= \"work meeting\"))))))))))"
    },
    {
        "original_sentence": "Good I am going to need to schedule yoga at 2 pm today.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"yoga\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 2L))))))))"
    },
    {
        "original_sentence": "What is the temperature in Owensboro, KY",
        "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Owensboro, KY\"))) (?= (Now)))))"
    },
    {
        "original_sentence": "Can you try to tell me what my second thing on Tuesday is?",
        "parse": "(Yield (FindNumNextEvent (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) 2L))"
    },
    {
        "original_sentence": "Add shopping trip with mom at park meadows on friday 9am",
        "parse": "(FenceAttendee)"
    },
    {
        "original_sentence": "When is my staff meeting?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"staff meeting\")))))))"
    },
    {
        "original_sentence": "I have a meeting at 5 am Tuesday",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 5L)))))))"
    },
    {
        "original_sentence": "I need a one on one meeting with Billy next week sometime",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.isOneOnOne_? (?= true))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Billy\")))))))))))"
    },
    {
        "original_sentence": "Do I have anything on Thursday?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))) 0L))"
    },
    {
        "original_sentence": "Schedule a Rugby Practice tomorrow at noon.",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Rugby Practice\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))))))"
    },
    {
        "original_sentence": "Yes, set that",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Need 3 pm Fri event",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L)))))))"
    },
    {
        "original_sentence": "When is my Brainstorming meeting with my boss?",
        "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Brainstorming meeting\")) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))))"
    },
    {
        "original_sentence": "is Flag Day in May",
        "parse": "(Yield (allows (FullMonthofMonth (May)) (NextHolidayFromToday (Holiday.FlagDay))))"
    },
    {
        "original_sentence": "Hmm, I have to think about this",
        "parse": "(UserPauseResponse)"
    },
    {
        "original_sentence": "Wait, what is the name of Mona's boss again?",
        "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mona\")))))))"
    },
    {
        "original_sentence": "add an additional 30 minutes to that meeting",
        "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toMinutes 30))))))))"
    },
    {
        "original_sentence": "ye",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Change time for casting interviews on saturday from 3:00 pm to 4:00pm",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 3L)) (Event.subject_? (?~= \"casting interviews\"))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
    },
    {
        "original_sentence": "Do they have outdoor seating?",
        "parse": "(Yield (PlaceHasFeature (PlaceFeature.OutdoorDining) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
    },
    {
        "original_sentence": "That will work just fine.",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "I like very much",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Si",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "I need to move my tetris battle to 8 pm",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"tetris battle\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))"
    },
    {
        "original_sentence": "Schedule a meeting with Cher Monday",
        "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher\")))))))))))"
    },
    {
        "original_sentence": "yes the afternoon meeting looks great",
        "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (Afternoon))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Do you see any meetings the rest of this week?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))) 0L))"
    },
    {
        "original_sentence": "Yes it is.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Can you change the time to 11am",
        "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))) (intension (NumberAM 11L)))))"
    },
    {
        "original_sentence": "The second meeting works best.",
        "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "Will I be having dinner with Hans, his boss , Fenny and her boss anytime this week?",
        "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Hans\"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fenny\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTime.date_? (ThisWeek)))) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1))))))))))"
    },
    {
        "original_sentence": "Please schedule the first choice, agent. I appreciate it. Also, set up a Job Interview with Nancy on next Monday at around 10 am.",
        "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Job Interview\")) (Event.start_? (DateTimeConstraint (TimeAround (NumberAM 10L)) (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nancy\"))))))))))))"
    },
    {
        "original_sentence": "yes",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Can you move the Lunch Saturday to be at 1 pm",
        "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"Lunch\"))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
    },
    {
        "original_sentence": "Thanks.",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "That's fine. Cancel the Meeting with Dave before that",
        "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Event.start (^(Dynamic) item x0)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dave\"))))))))))))))"
    },
    {
        "original_sentence": "Remain me for that appointment",
        "parse": "(FenceReminder)"
    },
    {
        "original_sentence": "Is there a reason why you cancelled all my appointments?",
        "parse": "(FenceScope)"
    },
    {
        "original_sentence": "Yes do that one.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Okay great, thank you!",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "I will give you more access",
        "parse": "(PleasantryAnythingElseCombined)"
    },
    {
        "original_sentence": "Looks great. Keep it.",
        "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
    },
    {
        "original_sentence": "Either works",
        "parse": "(Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
    },
    {
        "original_sentence": "No, please move the party to Saturday. But put birthday dinner the 5th at 7pm",
        "parse": "(FenceMultiAction)"
    },
    {
        "original_sentence": "Good, but change it to the 18th.",
        "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDay (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Day.apply 18L))))))))"
    },
    {
        "original_sentence": "Are you sure that's today?",
        "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
    },
    {
        "original_sentence": "Nevermind, delete that.",
        "parse": "(DoNotConfirm)"
    },
    {
        "original_sentence": "How about the day after tomorrow? Tell me the time and the location.",
        "parse": "(FenceMultiAction)"
    }
]