[
  {
    "original_sentence": "create work conference and invite supervisor",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"work conference\")) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "July 25 works",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 25L (July))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please delete the meeting with Bob Dobberson and his supervisor.",
    "parse": "(let (x0 (PersonName.apply \"Bob Dobberson\")) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))))))))))))))"
  },
  {
    "original_sentence": "cancel this board games meeting",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule event \"Worldwide Tag\" with Bob for this Sunday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Worldwide Tag\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))))))))"
  },
  {
    "original_sentence": "Do I have anything scheduled this afternoon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"
  },
  {
    "original_sentence": "Schedule a new appointment for then for a baloon party",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"baloon party\")) (Event.start_? (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Please delete Dentist appointment in Arlington.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Dentist appointment\")) (Event.location_? (?= (LocationKeyphrase.apply \"Arlington\")))))))))))"
  },
  {
    "original_sentence": "Actually just move it to tomorrow.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Yes, that's right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Set a reminder for my dentist appointment an hour before the appointment.",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "When is the next meeting I have and with who?",
    "parse": "(Yield (Event.start (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))"
  },
  {
    "original_sentence": "i need that to be for 3 hours",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 3))))))"
  },
  {
    "original_sentence": "Yes. When is my next meeting with Abby Gonano?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby Gonano\")))) 1L))))"
  },
  {
    "original_sentence": "When will I meet with just abby gonano alone?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.isOneOnOne_? (?= true)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"abby gonano\"))))))))))"
  },
  {
    "original_sentence": "Do I have anything else going on that day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "Hey could you find when my Boxing match is this Friday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"Boxing match\"))))))))"
  },
  {
    "original_sentence": "Im sorry I meant my Kickboxing Practice on the next day",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (Event.subject_? (?~= \"Kickboxing Practice\")))))))"
  },
  {
    "original_sentence": "When is the Socializing event?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Socializing\")))))))"
  },
  {
    "original_sentence": "Oh I meant my Quarantines over event the month after",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.subject_? (?~= \"Quarantines over\")) (FullMonthofMonth (Date.month (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toMonths 1))))))))"
  },
  {
    "original_sentence": "show me lockdowns over in July",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"lockdowns over\")) (FullMonthofMonth (July)))))))"
  },
  {
    "original_sentence": "oh I meant the Date event the night after",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDateWithTimeRange (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (Event.subject_? (?~= \"Date\"))) (Night)))))"
  },
  {
    "original_sentence": "Please look up an event titled \"birthday party\"",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?= \"birthday party\"))))"
  },
  {
    "original_sentence": "Can you tell me what I have to do on January 22nd?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 22L (January)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Find what is on Friday between 5-8pm",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) (TimeToTime (NumberPM 5L) (NumberPM 8L)))))"
  },
  {
    "original_sentence": "change it to 7",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "Yes THAT IS CORRECT.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "its great thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you book my spa appointment after my dentist appointment?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"spa appointment\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\"))))))))))))"
  },
  {
    "original_sentence": "remind mae a day before the footiball match",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Please move my Sell Candy event to be not on the weekend",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Sell Candy\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "change boat ride to not be on the weekend",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"boat ride\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "No",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Update my buy candy event to not take place on the weekend",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"buy candy\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "I'd like to book a staff meeting for next Tuesday at 9:30 to 10:00 AM.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Tuesday)) (HourMinuteAm 9L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"staff meeting\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 10L)))))))))"
  },
  {
    "original_sentence": "Can you add another one to wednesday at 1 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"another one\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thanks for your help",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I want to book another appointment.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "I need to add an event with a room to my calender for December 14th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (MD 14L (December))))) (Event.location_? (roomRequest))))))"
  },
  {
    "original_sentence": "the 2nd one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Get me a room in Cambridge",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.location_? (& (?= (LocationKeyphrase.apply \"Cambridge\")) (roomRequest))))))"
  },
  {
    "original_sentence": "The second one works",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Nice, and book me a room at Berkeley",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.location_? (& (?= (LocationKeyphrase.apply \"Berkeley\")) (roomRequest))))))"
  },
  {
    "original_sentence": "I need to do a medical exam starting tomorrow for 3 years",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"medical exam\")) (Tomorrow) (toYears 3)))))"
  },
  {
    "original_sentence": "No, I want it to be 3 days.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 3)))))"
  },
  {
    "original_sentence": "Perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, I need to put train for marathon in December 14 for 30 days",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"train for marathon\")) (MD 14L (December)) (toDays 30)))))"
  },
  {
    "original_sentence": "After that can you put prepare presentation for 5 days?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"prepare presentation\")) (DateTime.date (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (toDays 5)))))"
  },
  {
    "original_sentence": "Can you search for meetings with sam next month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"sam\")))) (FullMonthofMonth (NextMonth)))))"
  },
  {
    "original_sentence": "Do you know if it's going to rain during my hike on friday?",
    "parse": "(Yield (WillRain (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"hike\")))))))))"
  },
  {
    "original_sentence": "Ok cancel hike",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"hike\")))))))))"
  },
  {
    "original_sentence": "yes good to work",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Find meeting with Barack Obama",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\"))))))"
  },
  {
    "original_sentence": "Nice",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "do i need to rearrang in my calendar",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Can you book my spa appointment after my dentist appointment?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"spa appointment\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\"))))))))))))"
  },
  {
    "original_sentence": "select it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "How do I get there the fastest way?",
    "parse": "(FenceNavigation)"
  },
  {
    "original_sentence": "Is the meeting tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Will it be windy in Hanzhou on Saturday of next week at 4:55 pm?",
    "parse": "(Yield (IsWindy (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Hanzhou\"))) (?= (DateAtTimeWithDefaults (DowOfWeekNew (Saturday) (NextWeekList)) (HourMinutePm 4L 55L))))))"
  },
  {
    "original_sentence": "Schedule a 1 hour drum lesson for then.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"drum lesson\")) (Event.start_? (?= (Execute (refer (extensionConstraint (^(DateTime) EmptyStructConstraint))))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Also, add my concert for a week later from 7:00 pm to 8:30 pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toWeeks 1)) (NumberPM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"concert\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 8L 30L)))))))))"
  },
  {
    "original_sentence": "Will I be at any meetings next Tuesday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Is there a meeting with Kaitlin sometime next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kaitlin\")))) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Meetings with other attendees",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Can you schedule lunch with Mark tomorrow at 12?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 12L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))))))))))"
  },
  {
    "original_sentence": "Yep it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "it's great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "please make a meet with my doctor",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "put meeting with laura",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"laura\"))))))))))"
  },
  {
    "original_sentence": "I had a meeting with kim yesterday at noon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Yesterday) (Noon)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"kim\")))))))))))"
  },
  {
    "original_sentence": "Yeah",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "OK! i have a vasectomy 2 weeks ago",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"vasectomy\")) (Event.start_? (DateTime.date_? (?= (PeriodBeforeDate (Today) (toWeeks 2)))))))))"
  },
  {
    "original_sentence": "I went to the opera last night.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"opera\")) (Event.start_? (DateTimeConstraint (Night) (Yesterday)))))))"
  },
  {
    "original_sentence": "Please add my lunch with Katie from last thursday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (previousDayOfWeek (Today) (Thursday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Katie\")))))))))))"
  },
  {
    "original_sentence": "yes may i know the present events",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "that's ok thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "nothing",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When is Bryce's soccer practice next week?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Bryce's soccer practice\")) (NextWeekList)))))))"
  },
  {
    "original_sentence": "Add Bryce's Clarinet Recital at 2:30 pm this Saturday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Bryce's Clarinet Recital\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (HourMinutePm 2L 30L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add dinner with family tomorrow from 4:00 PM until 5:30 PM.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Could you move my dinner plans to 9pm?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner plans\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 9L)))))))"
  },
  {
    "original_sentence": "Have it last until 10:30 PM.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (HourMinutePm 10L 30L)))))))"
  },
  {
    "original_sentence": "Do you have anything earlier?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "move the dinner plans to an earlier time on that date",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "The first option works the best for me.",
    "parse": "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Set up a ski trip to Welch Ski Village for 1pm on Saturday and let me know what the weather will be like at that time.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Extend the ski trip end time from 1:30 PM to 2:30 PM.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "I need 15 minutes for dinner prep on Wednesday evening.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner prep\")) (Event.start_? (DateTimeConstraint (Evening) (NextDOW (Wednesday))))) (Event.duration_? (?= (toMinutes 15)))))))"
  },
  {
    "original_sentence": "The second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Set up a new festival all day tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"festival\")) (Tomorrow)))))"
  },
  {
    "original_sentence": "Have it go until Sunday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Sunday))))))))"
  },
  {
    "original_sentence": "Yeah, that's way much better.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add Skiing vacation Jan 23 to Jan 29",
    "parse": "(let (x0 (MD 23L (January))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"Skiing vacation\")) (DateAndConstraint x0 (nextMonthDay x0 (January) 29L)))))))"
  },
  {
    "original_sentence": "This looks pretty good thanks!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule a \"Doctor's Appointment\" at 4pm this Thursday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Doctor's Appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Do I have anything else scheduled that day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Thanks. How about friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Schedule a lunch meeting on Friday at 2 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "I would like to cancel the field trip planned for tomorrow.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"field trip\"))))))))))"
  },
  {
    "original_sentence": "Actually it's the one next week.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))"
  },
  {
    "original_sentence": "Yes, please cancel it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete tomorrows meeting.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "yeah that is the one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "How is the weather in Tempe, Arizona",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Tempe, Arizona\"))) (?= (Now))))"
  },
  {
    "original_sentence": "Is it cold in Toronto right now?",
    "parse": "(Yield (IsCold (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Toronto\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "Will it rain in Washington, DC today?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Washington, DC\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "Do I need a jacket if I'm in Manhattan, New York?",
    "parse": "(Yield (NeedsJacket (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Manhattan, New York\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "Okay. Bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need a meeting with Derek tomorrow at 1 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Derek\")))))))))))"
  },
  {
    "original_sentence": "wait a minute please sir",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "No, it should actually be at noon, my mistake.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (Noon)))))))"
  },
  {
    "original_sentence": "yes, that works.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I also need a team meeting on Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "The second one is much better for me.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Add time to check email to my calendar tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"check email\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "top one is perfect.",
    "parse": "(Yield (Execute (ChooseCreateEvent (TopResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Set up a pool party for June 16 at Naval Air Station Oceana.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"pool party\")) (Event.start_? (DateTime.date_? (?= (MD 16L (June)))))) (Event.location_? (?= (LocationKeyphrase.apply \"Naval Air Station Oceana\")))))))"
  },
  {
    "original_sentence": "Set up a hiking time with my son for this afternoon.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Set up Hike with Summer with Joe",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Hike\")) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Summer\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joe\"))))))))))))"
  },
  {
    "original_sentence": "Add apple picking this fall to the calendar.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"apple picking\")) (Event.start_? (DateTime.date_? (SeasonFall)))))))"
  },
  {
    "original_sentence": "select second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Select free time for me to go hiking in the fall.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go hiking\")) (Event.start_? (DateTime.date_? (SeasonFall)))))))"
  },
  {
    "original_sentence": "Move my meetings on Friday to two weeks later.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I need to schedule a break at 1 pm today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"break\")) (Event.start_? (DateTimeConstraint (?= (NumberPM 1L)) (Today)))))))"
  },
  {
    "original_sentence": "almost. extend it for another 45 minutes.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (addDurations (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint)))) (toMinutes 45)))))))"
  },
  {
    "original_sentence": "looks good to moi",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add a one hour lunch with Rachael to Thursday at 1 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 1L))))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rachael\")))))))))))"
  },
  {
    "original_sentence": "it seems to me very well continue with your work",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you put the location at McDonald's?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"McDonald's\"))))))"
  },
  {
    "original_sentence": "yeap",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When am I free on Sunday?",
    "parse": "(Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday))))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true))"
  },
  {
    "original_sentence": "When am I Going Over Ship Plans with Jean-Luc, William, and Catherine?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Going Over Ship Plans\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jean-Luc\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"William\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Catherine\")))))))))))"
  },
  {
    "original_sentence": "change the time to noon same day.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "have this event ending at 1",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Yes this event looks right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Okay, thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need an earlier start than 4 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (OnDateBeforeTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 4L))))))"
  },
  {
    "original_sentence": "Is there anything later in the day?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Make it later in the day for me please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Not, it should be a little bit later.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Can you make it later still?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "What time is Jan's party on Saturday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (& (Event.subject_? (?~= \"party\")) (Event.attendees_? (AttendeeListHasRecipientWithType (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jan\"))))) (AttendeeType.Required))))))))))"
  },
  {
    "original_sentence": "Move it to 2 days prior.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (PeriodDurationBeforeDateTime (Event.start x0) (PeriodDuration.apply (toDays 2)))))))))"
  },
  {
    "original_sentence": "Was there a sales meeting on my calendar anytime last week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"sales meeting\")) (LastWeekNew))))) 0L))"
  },
  {
    "original_sentence": "ok add all the office colleagues to the meeting",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Add Jessica and Luke to the event \"sales meeting.\"",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"sales meeting\")))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jessica\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Luke\")))))))))))"
  },
  {
    "original_sentence": "Is there a meeting on Thursday taking place?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "I need to pick up eggs on my way home this evening",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pick up eggs on my way home\")) (Event.start_? (DateTimeConstraint (Evening) (Today)))))))"
  },
  {
    "original_sentence": "The first one is perfect.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have anything on Friday morning?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) (Morning))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything on Monday morning at 9am?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 9L)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "OK GOOD JOB",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Hi I would like to remove a calendar event",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Can you delete the birthday party I was going to on the 24th?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 24L) (Event.subject_? (?~= \"birthday party\"))))))))))"
  },
  {
    "original_sentence": "Do I have an event on the 24th?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 24L) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Okay, the part was rescheduled to the 25th at 4pm",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"part\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 25L)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Can you create an event?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Yes, but for the 24th of april",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (MD 24L (April))))))))"
  },
  {
    "original_sentence": "Yes. Can you make it from 2pm to 4 pm?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "jfusoeheudhdeu smeluth",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "Glocanspeil is a very weird word that is not that it is",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "fdhiodng",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "I need to meet with Kevin Devine sometime later this month.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (FullMonthofMonth (Date.month (Today))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kevin Devine\")))))))))))"
  },
  {
    "original_sentence": "Actually I want to meet with Andrew instead.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Andrew\"))))))"
  },
  {
    "original_sentence": "ok arrange my meeting on sep 10",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 10L (September))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I want to be with Abby all day",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.isAllDay_? (?= true)) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "Make that later",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Make it earlier",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I would like the meeting to end one hour later since we have many topics to cover.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.end_? (?= (adjustByPeriodDuration (Event.end x0) (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "Schedule a go-kart race with Mario, Luigi, and Toad.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go-kart race\")) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mario\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Luigi\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Toad\"))))))))))))"
  },
  {
    "original_sentence": "Yes, schedule the go-kart race with Mario, Luigi, and Toad on Wednesday at 10am.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (& (& (Event.subject_? (?~= \"go-kart race\")) (Event.start_? (DateTimeFromDowConstraint (?= (Wednesday)) (NumberAM 10L)))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mario\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Luigi\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Toad\"))))))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Yes, this is perfect.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add a Pizza Party with Jennifer, Jesse and Elli and make it on Friday evening",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Pizza Party\")) (Event.start_? (DateTimeConstraint (Evening) (NextDOW (Friday))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\"))))))))))))"
  },
  {
    "original_sentence": "Add drinks with Sue, Brett and Jon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"drinks\")) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sue\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brett\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jon\"))))))))))))"
  },
  {
    "original_sentence": "Add drinks with Brett, Sue and Jon Saturday evening at the bar Cheers.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday))))) (Event.location_? (?= (LocationKeyphrase.apply \"Cheers\")))))))"
  },
  {
    "original_sentence": "I wanna have a hike at 7am on Mt. Rainier.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"hike\")) (Event.start_? (?= (NextTime (NumberAM 7L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Mt. Rainier\")))))))"
  },
  {
    "original_sentence": "Will the weather be good during that hike?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "What about if the hike goes another hour?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Book a 3pm meeting on Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Yes, that 3pm looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "4-5PM is basketball practice",
    "parse": "(let (x0 (NextTime (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"basketball practice\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "looking good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Go to delete my 1pm",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 1L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Book me a meeting for next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (NextWeekList))))))"
  },
  {
    "original_sentence": "tueday",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))))))"
  },
  {
    "original_sentence": "second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "add another appointment for thursday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday))))))))"
  },
  {
    "original_sentence": "first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "great thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "show calendar",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "change time on may 2 to 1 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 2L (May)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "nevermind. goodbye",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Booked meeting called :Dinner\" at 8pm tonight.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "Yep!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "change the time to 8pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make me a meeting with Abby",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))))))"
  },
  {
    "original_sentence": "first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please try that one again.",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "Add a meeting with Ronald Friday at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (Noon)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ronald\")))))))))))"
  },
  {
    "original_sentence": "Yes, this looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Help in making an appointment with the staff tomorrow at 11 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L)))) (Event.attendees_? (AttendeeListHasPeople (FindReports (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Where am I scheduled to have lunch tomorrow?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"lunch\"))))))))"
  },
  {
    "original_sentence": "Does this location have a delivery service?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Does this location offer takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Can I wear jeans and a t-shirt to the restaurant?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Add Texas Tech tour Friday at 11 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Texas Tech tour\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "The tour will last 3 hours.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 3))))))"
  },
  {
    "original_sentence": "Great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add tour Texas State Monday from 11 AM to 2 PM",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 11L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"tour Texas State\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 2L)))))))))"
  },
  {
    "original_sentence": "Yes, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create doctors appointment today noon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctors appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (Noon))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make it 2 hours appointment",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "No thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What am I schedule to do on Tuesday at right before brunch time?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventBeforeDateTime (DateAtTimeWithDefaults (NextDOW (Tuesday)) (Brunch)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you schedule me an event on May 20 at brunch?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (MD 20L (May)) (Brunch)))))))"
  },
  {
    "original_sentence": "Can you delete my Event on May 21 at brunch?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (MD 21L (May)) (Brunch)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "I need to see if I have any events or appointments on Saturday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "moment that looks very good all",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Tell me what meetings I have scheduled for tomorrow.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Tell me what meetings I have scheduled for tonight then.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Night))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I would want to have Coffee with all the supervisors at 4 pm tomorrow.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Where is dinner scheduled for tonight with Jon?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jon\")))) (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"dinner\"))) (Night))))))))"
  },
  {
    "original_sentence": "Does the restaurant have entrees besides beef?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Are cocktails served there?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Would they be able to accommodate a group?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "I have a resource meeting with Fred at 3 pm today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"resource meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fred\")))))))))))"
  },
  {
    "original_sentence": "Yes looks good thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you add Pam to that meeting.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Pam\"))))))))))"
  },
  {
    "original_sentence": "Yes thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thanks can you book a breakfast meeting with john at 9 am tomorrow?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"breakfast meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"john\")))))))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "add dinner with Wade Blakeley at 6pm june 1",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 1L (June)) (NumberPM 6L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wade Blakeley\")))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Enter lunch for noon tomorrow. It will be with Harry, Tommy and Thomas.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harry\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tommy\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Thomas\"))))))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks for this great job",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make me a lunch event with Abby Jake and Kim",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))))))"
  },
  {
    "original_sentence": "That is amazing",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Remind me of my meeting with my Dentist",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "The dentist should last for 2 hours",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist\")))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Looks good, add a reminder the day before please",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceReminder))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When is my next meeting with Barbara Walters?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barbara Walters\")))) 1L)))"
  },
  {
    "original_sentence": "What date is my next meeting with Bob Saget?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob Saget\")))) 1L)))"
  },
  {
    "original_sentence": "Thanks. When is my next meeting with Joey Gladstone?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joey Gladstone\")))) 1L)))"
  },
  {
    "original_sentence": "The next time I am meeting with D.J Tanner is when?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"D.J Tanner\")))) 1L)))"
  },
  {
    "original_sentence": "The next time I am meeting with Stephanie is when?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Stephanie\")))) 1L)))"
  },
  {
    "original_sentence": "Schedule appointment with travel agent Tuesday at 4:30 pm for 1 hour.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "looks good. do I have any other appointments this week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))"
  },
  {
    "original_sentence": "Book a dentist's appointment for next week.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist's appointment\")) (Event.start_? (DateTime.date_? (NextWeekList)))))))"
  },
  {
    "original_sentence": "Please book the 10 am appointment",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Great! Can you also book a Dermatologist appointment for Sunday afternoon?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dermatologist\")) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Sunday))))))))"
  },
  {
    "original_sentence": "I need it booked at 3PM please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "That looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create a date at the Eiffel Tower at 3PM tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Eiffel Tower\")))))))"
  },
  {
    "original_sentence": "Yes that looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you make it last 3 hours instead.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 3))))))"
  },
  {
    "original_sentence": "Look good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What will the weather be like for that event?",
    "parse": "(Yield (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "I need you to book an interview for the marketing position at 10:00AM next Wednesday, if that time is available.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"interview for the marketing position\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Is 11:00AM free?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "Works great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I appreciate it.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Setup lunch with mom tomorrow.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Add to schedule business meeting at Dave & Busters on Tuesday from 4:00 pm to 6:30 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"business meeting\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 6L 30L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Dave & Busters\"))))))))"
  },
  {
    "original_sentence": "Yes. Will the skies be clear that day?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (IsSunny (WeatherForEvent (^(Dynamic) item x0))))))"
  },
  {
    "original_sentence": "ok, may i ttake the umbrella with me",
    "parse": "(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Schedule Tour of Lodge on Tuesday from 1 pm to 3 pm at Yavapai Lodge.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Tour of Lodge\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Yavapai Lodge\"))))))))"
  },
  {
    "original_sentence": "is it safe to go in that time",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Cancel the meeting with Greenpeace",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Do I have any meetings?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))) 0L))"
  },
  {
    "original_sentence": "ok!make a meet with jane on friday 2p.m.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jane\")))))))))))"
  },
  {
    "original_sentence": "thank you friday 2 PM at for",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please change it to end at 3pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Put my status as out of office all day",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (Today)))))"
  },
  {
    "original_sentence": "I want to know if I need to set aside time to shovel snow off of my driveway tomorrow.",
    "parse": "(Yield (WillSnow (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "How hot will be it be here after work today?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (Here)) (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"work\")))))))))))"
  },
  {
    "original_sentence": "Dallas. Will I need a jacket?",
    "parse": "(Yield (NeedsJacket (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Dallas\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "Okay. And what about for my walk on Sunday?",
    "parse": "(Yield (NeedsJacket (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"walk\")))))))))"
  },
  {
    "original_sentence": "Will I need to bring a rain coat for my trip to Oklahoma City on the 27th?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Oklahoma City\"))) (DateTime.date_? (?= (nextDayOfMonth (Today) 27L))))))"
  },
  {
    "original_sentence": "I need to look for my appointments this week",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
  },
  {
    "original_sentence": "Can you say that again?",
    "parse": "(RepeatAgent)"
  },
  {
    "original_sentence": "Can you schedule an appointment at 2pm on Thursday and Friday called \"Project Update\"?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Project Update\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Make my status \"busy\" during that time.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.showAs_? (?= (ShowAsStatus.Busy))))))"
  },
  {
    "original_sentence": "Do I have any Events next Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Are there any events for Saturday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Do I have a Doctors Appointment tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"Doctors Appointment\")))))) 0L))"
  },
  {
    "original_sentence": "Do I have a meeting with Jim tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))))))) 0L))"
  },
  {
    "original_sentence": "No problem.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Cancel my meeting for 10 AM and reschedule it for Tuesday at 10 AM and allow a 2 hour time for commute after.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I need the 10am meeting to go for an hour, so make it 10 to 11am and then schedule the two hour commute and add dinner from 8 to 9:30pm with Joey.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Create an event in Orlando, Florida.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.location_? (?= (LocationKeyphrase.apply \"Orlando, Florida\"))))))"
  },
  {
    "original_sentence": "Change the location to Downtown Kissimmee.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Downtown Kissimmee\"))))))"
  },
  {
    "original_sentence": "The first is right.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you give me the street address.",
    "parse": "(Yield (PlaceDescribableLocation (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Alright, thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "delete soccer game now",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"soccer game\")))))))))"
  },
  {
    "original_sentence": "Yes, and add Dinner at 6:00 PM instead.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 6L)))))))))"
  },
  {
    "original_sentence": "When is my meeting with Abby?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))"
  },
  {
    "original_sentence": "Oh im sorry, I meant my meeting with Abby and Kim on the 25th of April.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (MD 25L (April)) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))))"
  },
  {
    "original_sentence": "what about the Bowling party with James?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.subject_? (?~= \"Bowling party\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\"))))))))"
  },
  {
    "original_sentence": "Cool, now can you tell me do I have a Coffee Date this weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Coffee Date\")) (ThisWeekend))))) 0L))"
  },
  {
    "original_sentence": "i meant pick up poop in May",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.subject_? (?~= \"pick up poop\")) (FullMonthofMonth (May))))))"
  },
  {
    "original_sentence": "nothing.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is on the schedule for July 28th at 1 PM?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (MD 28L (July)) (NumberPM 1L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Okay. Then add a 3 hour dry run with Sarah to the 28th, starting at 1.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"dry run\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 28L) (NumberPM 1L))))) (Event.duration_? (?= (toHours 3)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\")))))))))))"
  },
  {
    "original_sentence": "looks good!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "cancel this dry run",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dry run\")))))))))"
  },
  {
    "original_sentence": "Schedule Jennie's Ob GYN appointment for Wednesday at 8 am for 1 hour.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Jennie's Ob GYN appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 8L))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "yes it is good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change my meeting with Max to saturday at 3",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Max\")))))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Yes, also add Jenny to the same meeting.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jenny\"))))))))))"
  },
  {
    "original_sentence": "Find my doctor appointment time on Wednesday.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (Event.subject_? (?~= \"doctor appointment\")))))"
  },
  {
    "original_sentence": "Find an hour on Friday to talk with Cora.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"talk\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cora\")))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks. Now please find my dinner schedule with Matt.",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Matt\")))))))"
  },
  {
    "original_sentence": "Find 20 minutes this Sunday to mop the floors.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"mop the floors\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))) (Event.duration_? (?= (toMinutes 20)))))))"
  },
  {
    "original_sentence": "Delete the last event I set.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindLastEvent (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "set me an event tonight where I start at 2000 and finish by 2330",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Today) (HourMinuteMilitary 20L 0L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinuteMilitary 23L 30L)))))))))"
  },
  {
    "original_sentence": "do i have anything scheduled at 1930 saturday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Saturday)) (HourMinuteMilitary 19L 30L)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "wow that's right I always forget to drink water",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "well, sure, i'd like to watch a movie next friday at 08h",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"watch a movie\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMilitary 8L))))))))"
  },
  {
    "original_sentence": "sorry I meant 8 PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "simply perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Set a time for me to relax this evening.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"relax\")) (Event.start_? (DateTimeConstraint (Evening) (Today)))))))"
  },
  {
    "original_sentence": "Tell me everything I have for friday from noon to 5",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (NextDOW (Friday)) (^(Event) EmptyStructConstraint) (Noon) (NumberPM 5L))))"
  },
  {
    "original_sentence": "On Friday at 1:30, schedule a meeting for 1 hour.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 1L 30L)))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Can you tell me when do I need to be at Starbucks to meet Sally?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \"Starbucks\"))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sally\"))))))))))"
  },
  {
    "original_sentence": "reschedule it",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "The second option please.",
    "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Reschedule the staff meeting to Thursday",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"staff meeting\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Thursday)))))))))"
  },
  {
    "original_sentence": "No that doesn't work. Schedule it for earlier on Thursday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTimeConstraint (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))) (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Thursday)))))))"
  },
  {
    "original_sentence": "I NEED HELP WITH MY CALENDAR",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "I MAY USING THE FOLLOWING PEOPLE IN MY REQUEST : JERRI SKINNER, FIONA MASON",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "ITS OKAY",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "NO THANKS",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "THANK YOU",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I will be in Seattle for my Proctologist appointment tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Proctologist appointment\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.location_? (?= (LocationKeyphrase.apply \"Seattle\")))))))"
  },
  {
    "original_sentence": "Yeah, Perfect Create it",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "do that action again for me",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "Great can you schedule 1:30 to three as rest time?I have a feeling that I will need it.",
    "parse": "(let (x0 (NextTime (HourMinutePm 1L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"rest time\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L)))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to have a meeting with Rex at 4 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rex\")))))))))))"
  },
  {
    "original_sentence": "The meeting with Rex at 4:00 on Monday is the best option .",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (& (Event.start_? (DateTimeFromDowConstraint (?= (Monday)) (NumberPM 4L))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rex\")))))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Do I have any other meetings planned for today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "Can you add Ryan to my swim meeting?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"swim meeting\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ryan\"))))))))))"
  },
  {
    "original_sentence": "Yes, but Can you also add Kate, i forgot.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kate\"))))))))))"
  },
  {
    "original_sentence": "Set up an appointment with Candice about HR today at 3.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"HR\")) (Event.start_? (DateTimeConstraint (?= (NumberPM 3L)) (Today)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Candice\")))))))))))"
  },
  {
    "original_sentence": "Looks good but can you also add James and Cameron to the meeting as well please?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cameron\")))))))))))"
  },
  {
    "original_sentence": "I need to shop for a school book on Sunday morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"shop for a school book\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Sunday))))))))"
  },
  {
    "original_sentence": "I have a project planning meeting with Jess at 3 pm on the 23rd of February and I think we said we'd be done at 4:15 pm. Also since we are meeting at Waffleberry's I need to be marked working elsewhere.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (MD 23L (February)) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (& (& (Event.subject_? (?= \"project planning meeting\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 4L 15L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Waffleberry's\")))) (Event.showAs_? (?= (ShowAsStatus.WorkingElsewhere)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jess\"))))))))))))"
  },
  {
    "original_sentence": "Remind me tuesday morning that its Senior day at Good Will",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Senior day\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Tuesday))))) (Event.location_? (?= (LocationKeyphrase.apply \"Good Will\")))))))"
  },
  {
    "original_sentence": "yeah, thanks",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "put lunch meet on monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch meet\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))))))"
  },
  {
    "original_sentence": "put on the one at 1:00 pm.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What do I have scheduled for Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Make a lunch appointment on that day.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "yes how to solve the maths",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "Can you tell me what the weather will be in Tuscon tomorrow?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Tuscon\"))) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "What day does labor day happen on?",
    "parse": "(Yield (NextHolidayFromToday (Holiday.LaborDay)))"
  },
  {
    "original_sentence": "What day is Secretary's Day in 50 years?",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "Can you make an event for Thursday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday))))))))"
  },
  {
    "original_sentence": "I need to schedule a doctor's appointment for Thursday at 2 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "I want it later, sorry",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Anything later?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "first",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "well thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to see if there's a time next week where John, bill, tim and myself have an hour free",
    "parse": "(Yield (RecipientAvailability (& (Event.duration_? (?= (toHours 1))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bill\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"tim\"))))))) (AttendeeListHasRecipient (toRecipient (CurrentUser)))))) true))"
  },
  {
    "original_sentence": "Can you see if I have an event with John next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "I want to invite Harry, Ron and Hermione.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harry\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ron\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Hermione\")))))))))))"
  },
  {
    "original_sentence": "Yes. Add the location Hogwarts.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.location_? (?= (LocationKeyphrase.apply \"Hogwarts\"))))))"
  },
  {
    "original_sentence": "I want to add Going Fishing for tomorrow at 7 AM to the calendar. Kirk, Spock and Bones are invited.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Going Fishing\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 7L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kirk\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Spock\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bones\"))))))))))))"
  },
  {
    "original_sentence": "What time do you open?",
    "parse": "(FencePlaces)"
  },
  {
    "original_sentence": "What restaurant am I having dinner with Alison at tomorrow?",
    "parse": "(let (x0 (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alison\")))) (Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? x0)) (Event.attendees_? x0))))))))"
  },
  {
    "original_sentence": "Does Red Lobster do birthday celebrations?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Are they expensive?",
    "parse": "(Yield (Place.price (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Does Red Lobster serve alcoholic drinks?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Red Lobster\"))))))"
  },
  {
    "original_sentence": "When is the dinner with Jenny?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jenny\"))))))))))"
  },
  {
    "original_sentence": "Any lunches with her?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunches\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))))) 0L))"
  },
  {
    "original_sentence": "put the meeting with geneliya at sep 13 9.00 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 13L (September)) (NumberAM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"geneliya\")))))))))))"
  },
  {
    "original_sentence": "Make it with Rachel instead",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rachel\"))))))))))"
  },
  {
    "original_sentence": "Good thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I would like to add an event to my calender, involving a meeting with Cher Roydon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher Roydon\"))))))))))"
  },
  {
    "original_sentence": "April 10th",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 10L (April))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I woudl like to add an event to my calender, meeting with Barack Obama on the 15th of April",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (MD 15L (April))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\")))))))))))"
  },
  {
    "original_sentence": "The second option",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Add event, Lunch with Jerri Skinner on April 11th at 1PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 11L (April)) (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jerri Skinner\")))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add event: Meeting with Janice Kang, Scot Hanson, and Kristen Clifford at 5pm on april 17th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 17L (April)) (NumberPM 5L)))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice Kang\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scot Hanson\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kristen Clifford\"))))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Remove meeting with Cher Roydon on April 10th",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 10L (April)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher Roydon\"))))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add phone meeting with Paige Ashworth on April 20th at 4pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"phone meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 20L (April)) (NumberPM 4L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\")))))))))))"
  },
  {
    "original_sentence": "Change name of event to Phone Call Meeting",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"Phone Call Meeting\")))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I want to find an event my friend made called \"YOLO\"",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"YOLO\"))))))"
  },
  {
    "original_sentence": "No, it should be in the spring. I didn't know there were two.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (SeasonSpring)))))"
  },
  {
    "original_sentence": "That's the one. Kill it. It's not funny.",
    "parse": "(Yield (EventAttendance :event (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Do it. Strike it down with all of your hatred, and your journey to the dark side will be complete.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "hi, i want to book a train",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "make an appointment with emiley",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"emiley\"))))))))))"
  },
  {
    "original_sentence": "the bottom one is ok. fix it.",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "GOOD WORK",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "fix a meeting wit emiley",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"emiley\"))))))))))"
  },
  {
    "original_sentence": "create football game on monday at 8",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"football game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When was the last time I met with Ashley?",
    "parse": "(Yield (Event.start (FindLastEvent (EventBeforeDateTime (Now) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ashley\"))))))))"
  },
  {
    "original_sentence": "great thanks, can you add John to the meeting?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))))"
  },
  {
    "original_sentence": "Can you make the meeting 2 hours long?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Do i have an event scheduled for December 31st?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 31L (December)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Are there any appointments this weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))) 0L))"
  },
  {
    "original_sentence": "Can you search for meetings with martha next month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"martha\")))) (FullMonthofMonth (NextMonth)))))"
  },
  {
    "original_sentence": "Cancel it please.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Can you book me a hotel in Chicago for September 1st for one night.",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Ok add event at Chicago on September 1",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (MD 1L (September))))) (Event.location_? (?= (LocationKeyphrase.apply \"Chicago\")))))))"
  },
  {
    "original_sentence": "The earlier one works. Make it at \"The Regeancy\" though.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"The Regeancy\"))))))"
  },
  {
    "original_sentence": "Yes, the first one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Add a hair appointment to my calendar on Wednesday at 6pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"hair appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "How long has it been since I've had my hair appointment?",
    "parse": "(Yield (TimeSinceEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (Event.subject_? (?~= \"hair appointment\"))))))))"
  },
  {
    "original_sentence": "Yea it looks right then.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "can you change the hair appointment on sep 19, thur 6.00 pm - 6.30 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"hair appointment\")))))) (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 19L (September)) (NumberPM 6L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 6L 30L))))))))"
  },
  {
    "original_sentence": "When was my last hair appointment?",
    "parse": "(Yield (Event.start (FindLastEvent (EventBeforeDateTime (Now) (Event.subject_? (?~= \"hair appointment\"))))))"
  },
  {
    "original_sentence": "I need a team meeting put on my calendar sometime Monday afternoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Monday))))))))"
  },
  {
    "original_sentence": "Lets use the first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "can you add date with sarah friday at 7 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"date\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 7L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"sarah\")))))))))))"
  },
  {
    "original_sentence": "actually she just called we are going to do it the friday after feb 1 at 2 pm and end at 6 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (nextDayOfWeek (MD 1L (February)) (Friday)) (NumberPM 2L))) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 6L)))))))))"
  },
  {
    "original_sentence": "hi can you make an event for december 29 at 3:00pm please",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"event\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 29L (December)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "hi",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "delete today's doctor visit",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"doctor visit\"))))))))))"
  },
  {
    "original_sentence": "Set an new doctor's visit for Thursday at 3 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's visit\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Can you tell me if I am free on Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Make sure my meeting with kim is not on the weekend",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"kim\")))))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Move the school function to be not on the weekend.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"school function\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Sure. And. I would very much to have lunch with Kim but not on the weekend, will you rearrange that?",
    "parse": "(do (Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend)))))))))"
  },
  {
    "original_sentence": "yes. Now move my pedicure to sometime not on the weekend",
    "parse": "(do (Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"pedicure\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend)))))))))"
  },
  {
    "original_sentence": "Do I have any meetings with Dave's boss?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dave\"))))))))))) 0L))"
  },
  {
    "original_sentence": "Can you tell me who Amy's boss is?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\")))))))"
  },
  {
    "original_sentence": "Can you send him an invite for tomorrow's meeting",
    "parse": "(Yield (ForwardEventWrapper (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "looks good to me, now create the meeting",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Hi. How many days do I have completely free next month?",
    "parse": "(FenceAggregation)"
  },
  {
    "original_sentence": "Does Queen street Cafe & Grill in Hawaii have takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Queen street Cafe & Grill in Hawaii\"))))))"
  },
  {
    "original_sentence": "Does Cottonwood in Truckee have takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Cottonwood in Truckee\"))))))"
  },
  {
    "original_sentence": "What about Joe's Coney Island, do they have takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Joe's Coney Island\"))))))"
  },
  {
    "original_sentence": "Do I have any openings in my schedule today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "who am i meeting on Friday morning?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) (Morning)))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Do I have any free time for coffee on Wednesday?",
    "parse": "(Yield (RecipientAvailability (& (& (Event.subject_? (?= \"coffee\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday)))))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true))"
  },
  {
    "original_sentence": "Do I have a meeting scheduled with Tom tomorrow at 5 PM?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))))) 0L))"
  },
  {
    "original_sentence": "Do I have any trips in july?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"trip\")) (FullMonthofMonth (July)))))) 0L))"
  },
  {
    "original_sentence": "Add to schedule product idea meeting with R & D department on Friday at 1:00 pm.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "put meeting with yerk and goldberg",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"yerk\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"goldberg\")))))))))))"
  },
  {
    "original_sentence": "I need the meeting to happen at 1 p.m.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "ok number 2",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please make a study session a few days from today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"study session\")) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (Today) (toDays (longToNum (Afew)))))))))))"
  },
  {
    "original_sentence": "I need it a few minutes later.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (adjustByDuration (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))))) (toMinutes (longToNum (Afew))))))))))"
  },
  {
    "original_sentence": "Make it a few days later",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays (longToNum (Afew))))))))))"
  },
  {
    "original_sentence": "Please push a few more days further ahead",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays (longToNum (Afew))))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "where is my appointments this week",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))))"
  },
  {
    "original_sentence": "What is the first appointment this week?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)) 1L))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "it's ok thanks for asking",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What's on my calendar for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Block off two hours tomorrow morning for Parent Teacher Conference at 9:30 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Parent Teacher Conference\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinuteAm 9L 30L))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "Perfect!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Right after schedule grocery shopping.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"grocery shopping\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Schedule 2 hours on Saturday at 2:00 pm for a Date at the Dallas Arboretum.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Date\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 2L))))) (Event.duration_? (?= (toHours 2)))) (Event.location_? (?= (LocationKeyphrase.apply \"Dallas Arboretum\")))))))"
  },
  {
    "original_sentence": "second one please",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "How warm will it be during my Date?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Date\"))))))))"
  },
  {
    "original_sentence": "That's good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "make an appointment with emiley",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"emiley\"))))))))))"
  },
  {
    "original_sentence": "What time is my doctor's appointment tomorrow?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"doctor's appointment\"))))))))"
  },
  {
    "original_sentence": "Great, can you also schedule a Blood Test right after that?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Blood Test\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "ok fix it",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "2PM is a better start time for Blood Test",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Blood Test\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hey! How long is my conference call?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"conference call\")))))))"
  },
  {
    "original_sentence": "Ok. What about the company luncheon?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"company luncheon\")))))"
  },
  {
    "original_sentence": "And the after work quality check?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"after work quality check\")))))"
  },
  {
    "original_sentence": "Do I have any events coming up with Ron?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ron\"))))))) 0L))"
  },
  {
    "original_sentence": "What about Steve Carroll?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steve Carroll\"))))))"
  },
  {
    "original_sentence": "cancel my appointment with Cecelia Waller",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cecelia Waller\")))))))))))"
  },
  {
    "original_sentence": "create a calendar event with Cecelia Waller called dinner on Friday night",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTimeConstraint (Night) (NextDOW (Friday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cecelia Waller\")))))))))))"
  },
  {
    "original_sentence": "that is fine, thanks",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "thank you, that is ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "nothing for now",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have a meeting today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Will I have a doctor appointment next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctor appointment\")) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Am I going to a concert tonight?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"concert\"))) (Night))))) 0L))"
  },
  {
    "original_sentence": "Are there any events in my calendar on Monday morning?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)) (Morning))))) 0L))"
  },
  {
    "original_sentence": "Do I have a vet appointment next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"vet appointment\")) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Cancel my meeting on Wednesday at 3pm with Jane, Carl, Michael, and Warren.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carl\")))) (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Michael\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Warren\")))))) (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 3L)) (^(Event) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "Correct, please cancel.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When am I going camping with Roy, Brock, Tiffany, and Vicky?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"camping\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Roy\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brock\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tiffany\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Vicky\")))))))))))"
  },
  {
    "original_sentence": "I need to add Sarah and Jake to the camping also",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"camping\")))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))))))))))"
  },
  {
    "original_sentence": "That is perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cancel my dentist appointment, book a chiropractor appointment at 2pm and schedule meeting with Todd about the new project next Wednesday morning.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Move my meeting with my team from tomorrow morning to Friday morning.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))) (Morning)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTimeConstraint (Morning) (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday))))))))"
  },
  {
    "original_sentence": "This is fine",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I would like to meet with Abby and his immediate supervisor on Friday.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "The first one is fine. When can I meet with Bill and his manager?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bill\")))))) (do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "Looks good",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "please check if I have anything after 2 pm today",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (Today) (^(Event) EmptyStructConstraint) (NumberPM 2L))))"
  },
  {
    "original_sentence": "Good I am going to need to schedule yoga at 2 pm today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"yoga\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Extend yoga by half of an hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (addDurations (Event.duration (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (toHours 0.5)))))))"
  },
  {
    "original_sentence": "what did i have today before now",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "what was my last event from earlier today?",
    "parse": "(Yield (FindLastEvent (EventBeforeDateTime (Now) (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "What time was breakfast earlier this morning?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"breakfast\"))) (Morning))))))))"
  },
  {
    "original_sentence": "Can you tell me if I have any events for this Thursday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "1",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need you to create an event for 2 pm on tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "No, Change the time to 1:00 PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "it should be 45 minutes long",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toMinutes 45))))))"
  },
  {
    "original_sentence": "What Italian restaurants are near me?",
    "parse": "(Yield (PlaceSearchResponse.results (FindPlaceAtHere (LocationKeyphrase.apply \"Italian restaurants\") (AtPlace (Here)))))"
  },
  {
    "original_sentence": "What does Olive Garden in San Antonio cost?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Olive Garden in San Antonio\"))))))"
  },
  {
    "original_sentence": "How much is Pammy's in Cambridge?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Pammy's in Cambridge\"))))))"
  },
  {
    "original_sentence": "Change my meeting with Mark on Wednesday to be around 4pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday))))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\"))))))))) (Event.start_? (DateTime.time_? (TimeAround (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "The second time-frame works for me, now make an event around 4 pm for this Saturday",
    "parse": "(do (Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Either one works, now make a pool party for Saturday around 1",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pool party\")) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 1L)))))))))"
  },
  {
    "original_sentence": "Can you tell me Dan Marton email address?",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Marton\"))))))))"
  },
  {
    "original_sentence": "Schedule a lunch with his team. They've done really well.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Let's add Kim and her team, please.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindTeamOf x0))))))))"
  },
  {
    "original_sentence": "please conform the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need to get a hold of Abby and her team, can you tell me who's on it?",
    "parse": "(Yield (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))"
  },
  {
    "original_sentence": "Hi Cherry, cancel my blind date from yesterday at 7 pm.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Yesterday) (NumberPM 7L)) (Event.subject_? (?~= \"blind date\"))))))))))"
  },
  {
    "original_sentence": "That's it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "My painting session last week was on Wednesday at 2pm, monday at 3 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"painting session\")) (Event.start_? (?= (DateAtTimeWithDefaults (DowOfWeekNew (Monday) (LastWeekNew)) (NumberPM 3L))))))))) (Event.start_? (?= (DateAtTimeWithDefaults (DowOfWeekNew (Wednesday) (LastWeekNew)) (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Did I have anything last Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Do I have anything on my schedule tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Set an appointment for Lunch with Karen at 2:30 pm tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 2L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\")))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, change the end time to 3:30 PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What do I have going on Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Cancel Black Friday Shopping on Friday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"Black Friday Shopping\"))))))))))"
  },
  {
    "original_sentence": "I meant so cancel the one on Saturday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Yes I do not want that in my phone",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What is the address for my doctors appointment tomorrow?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "please help me put something on my calendar",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "ok then add a lunch with Mona at 13h on sunday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (HourMilitary 13L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mona\")))))))))))"
  },
  {
    "original_sentence": "yes only I'd like it to be called fancy lunch",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"fancy lunch\")))))"
  },
  {
    "original_sentence": "that'll do",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When is my next work ?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"work\")) 1L)))"
  },
  {
    "original_sentence": "After work, schedule a two hour book club meeting.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"book club meeting\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"work\"))))))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "Yep. That`s what I wanted.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I like it to extend to 6:30 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 6L 30L)))))))"
  },
  {
    "original_sentence": "Yes that is exactly what I want",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "hi, i want to cancel a meeting",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "cancel my meeting with Ted",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ted\")))))))))))"
  },
  {
    "original_sentence": "I made an appointment with my mom",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "meeting with Mary at 10 tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 10L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\")))))))))))"
  },
  {
    "original_sentence": "that looks great to me",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule a two hour Tour of the Space Needle in Seattle at 4pm tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Tour of the Space Needle\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L))))) (Event.duration_? (?= (toHours 2)))) (Event.location_? (?= (LocationKeyphrase.apply \"Seattle\")))))))"
  },
  {
    "original_sentence": "Yeah.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Weather?",
    "parse": "(Yield (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "What is the chance of rain?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (rainPrecipProbability) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Oh, okay, well, can you also add a trip down to Telegraph Avenue in Berkeley California on the 3rd at 12 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"trip\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 3L) (NumberPM 12L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Telegraph Avenue in Berkeley California\")))))))"
  },
  {
    "original_sentence": "When is Jen's wedding?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Jen's wedding\")))))))"
  },
  {
    "original_sentence": "add a reminder for jens wedding on april 15th 2019",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"jens wedding\")) (Event.start_? (DateTime.date_? (?= (MDY 15L (April) (Year.apply 2019L)))))))))"
  },
  {
    "original_sentence": "Set it for noon through 9pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (Noon)))) (Event.end_? (DateTime.time_? (?= (NumberPM 9L))))))))"
  },
  {
    "original_sentence": "Show me my events for tomorrow that's a couple minutes long",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.duration_? (?= (toMinutes (longToNum (Acouple))))) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Can you move my Rise of Skywalker event back a couple minutes.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Rise of Skywalker\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply :duration (toMinutes (longToNum (Acouple)))))))))))"
  },
  {
    "original_sentence": "Let's do a couple more minutes.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (addDurations (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint)))) (toMinutes (longToNum (Acouple)))))))))"
  },
  {
    "original_sentence": "Who is the manager of George?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"George\")))))))"
  },
  {
    "original_sentence": "schedule pizza making time this afternoon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pizza making\")) (Event.start_? (DateTimeConstraint (Afternoon) (Today)))))))"
  },
  {
    "original_sentence": "I thought Dan was MY manager...",
    "parse": "(Yield (== (FindManager (toRecipient (CurrentUser))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan\")))))))"
  },
  {
    "original_sentence": "Weird. Okay, the first one please.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "This looks perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, can you make it 1 hour long though?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Yea this looks much better.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "schedule ice cream tonight after pizza.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"ice cream\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"pizza\"))))))))))))"
  },
  {
    "original_sentence": "I need a meeting with Jake in 3 hours",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 3))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))))))))))"
  },
  {
    "original_sentence": "Looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What meeting do I have scheduled in 1 hour?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 1))) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Delete the event at 10:00 pm.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (^(Event) EmptyStructConstraint) (NumberPM 10L)))))))))"
  },
  {
    "original_sentence": "Yes it is.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Can you tell me about the weather in New Orleans, Louisiana?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"New Orleans, Louisiana\"))) (?= (Now))))"
  },
  {
    "original_sentence": "Can you tell me what the weather in New Orleans, Louisiana will be like tomorrow?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"New Orleans, Louisiana\"))) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "What's the chance of rain in New Orleans tomorrow?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (rainPrecipProbability) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"New Orleans\"))) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "Wow! What's the chance of rain in New Orleans in two days?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"New Orleans\"))) (DateTime.date_? (?= (adjustByPeriod (Today) (toDays 2)))))))"
  },
  {
    "original_sentence": "It sounds like it's going to rain in New Orleans in two days",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"New Orleans\"))) (DateTime.date_? (?= (adjustByPeriod (Today) (toDays 2)))))))"
  },
  {
    "original_sentence": "Thank you for your information!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to know Dan Schoffel's direct reports",
    "parse": "(Yield (FindReports (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Schoffel\")))))))"
  },
  {
    "original_sentence": "Let's schedule a meeting with Dan's reports for Thursday afternoon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Thursday)))) (Event.attendees_? (AttendeeListHasPeople (FindReports (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan\"))))))))))))"
  },
  {
    "original_sentence": "the 2nd one works",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Who does Jake Cobb report to?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake Cobb\")))))))"
  },
  {
    "original_sentence": "Who is Kim's manager?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))"
  },
  {
    "original_sentence": "Can you change the manager meeting from 5:00 to 2:00?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.subject_? (?~= \"manager meeting\")) (NumberPM 5L)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Yes, it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Actually, I do need you to extend the end time to 2:45 please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 2L 45L)))))))"
  },
  {
    "original_sentence": "Yes that looks right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Am I having a meeting with Cora and her boss tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cora\"))) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))))))) 0L))"
  },
  {
    "original_sentence": "Do i have anything besides practice next monday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (negate (?~= \"practice\"))) (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "do i have anything next week that's not a game?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (negate (?~= \"game\"))) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything on my calendar that isn't Watch TV?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (negate (?~= \"Watch TV\")))))) 0L))"
  },
  {
    "original_sentence": "Is there anthing to do tomorrow besides call mom?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (negate (?~= \"call mom\")))))) 0L))"
  },
  {
    "original_sentence": "Please add an event on my calendar. I need to go to the grocery store tomorrow at 10am for a birthday cake for Kim.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"birthday cake for Kim\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 10L))))) (Event.location_? (?= (LocationKeyphrase.apply \"grocery store\")))))))"
  },
  {
    "original_sentence": "put the meeting with john",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"john\"))))))))))"
  },
  {
    "original_sentence": "Change the time to 11am",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "Yes that's the right one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change the end time to 12:00",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "The conference call today at 2pm will be Bob, Jim, Sue, and Ann.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"conference call\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 2L))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sue\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ann\"))))))))))))"
  },
  {
    "original_sentence": "can you add Sara to the Conference call",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sara\"))))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hey when is my party with Paul, Tim, Harry, and Saul?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"party\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paul\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harry\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Saul\")))))))))))"
  },
  {
    "original_sentence": "Have it last 2 hours.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Cancel my last Banjo meeting today",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindLastEvent (EventOnDate (Today) (Event.subject_? (?~= \"Banjo meeting\"))))))))"
  },
  {
    "original_sentence": "change banjo meeting at 10.30 pm - 11.00 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"banjo meeting\")))))) (& (Event.start_? (DateTime.time_? (?= (HourMinutePm 10L 30L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 11L))))))))"
  },
  {
    "original_sentence": "Sorry, Yes, cancel my last Banjo meeting this week.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindLastEvent (EventDuringRange (Event.subject_? (?~= \"Banjo meeting\")) (ThisWeek)))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule Banjo Meeting for Monday at 10 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Banjo Meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "How is the weather in London today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"London\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "Is it going to rain in South Carolina?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"South Carolina\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "what is the 7 day forecast for Berwick, PA?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Berwick, PA\"))) (DateTime.date_? (NextPeriod (toDays 7)))))"
  },
  {
    "original_sentence": "7 day for Dentsville, SC",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Dentsville, SC\"))) (DateTime.date_? (NextPeriod (toDays 7)))))"
  },
  {
    "original_sentence": "what will the weather be on Halloween in Charlotte?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Charlotte\"))) (DateTime.date_? (?= (NextHolidayFromToday (Holiday.Halloween))))))"
  },
  {
    "original_sentence": "Is it good weather for running in Atlanta?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Atlanta\"))) (?= (Now))))"
  },
  {
    "original_sentence": "Please add Sarah to the meeting with anybody from my team.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasPeopleAnyOf (FindTeamOf (toRecipient (CurrentUser))))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\"))))))))))"
  },
  {
    "original_sentence": "okay!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What meetings to I have tomorrow with David Crim or Kim?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (orConstraint (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David Crim\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Can you help me update something else",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Can I update the meeting to add James?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\"))))))))))"
  },
  {
    "original_sentence": "Please decline my invite to buy pc parts and say that I'm poor and can't afford new parts",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I'm poor and can't afford new parts\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"buy pc parts\"))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Yes, that is perfect. Can you decline the Bake off at Office on March 3",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 3L (March)) (Event.subject_? (?~= \"Bake off at Office\")))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "yes that is right, also can Decline Shopping at BestBuy",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Shopping at BestBuy\"))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "Create an event with the name of Cafe in 2023",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Cafe\")) (Event.start_? (DateTime.date_? (FullYearofYear (Year.apply 2023L))))))))"
  },
  {
    "original_sentence": "Yeah that works choose the first one. How many compliance meetings do I have scheduled in 2020 already?",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"compliance meetings\")) (FullYearofYear (Year.apply 2020L))))))))"
  },
  {
    "original_sentence": "Add Movie Night to my calendar for next year",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Movie Night\")) (Event.start_? (DateTime.date_? (FullYearofYear (NextYear))))))))"
  },
  {
    "original_sentence": "Hey. Is my meeting with Sarah tomorrow? I need to cancel if so",
    "parse": "(FenceConditional)"
  },
  {
    "original_sentence": "Am I meeting with Sarah?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\"))))))) 0L))"
  },
  {
    "original_sentence": "Please cancel this meeting.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "yep!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I want Timothy included on the project discussion next week.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"project discussion\")) (NextWeekList)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Timothy\"))))))))))"
  },
  {
    "original_sentence": "Hold your horses.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Ok, it does look right, set it for me",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Okay and also add Gina to the project discussion.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"project discussion\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Gina\"))))))))))"
  },
  {
    "original_sentence": "create lakers game on tuesday at 8",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lakers game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "schedule a meeting with my boss on Wednesday in the morning from 8 to 9, and cancel my breakfast meeting with my sister",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Change meeting with boss to two hours and add breakfast with sister tomorrow at 8 am.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Please add an event with Matt's team after the meeting with my team.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser))))))))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Matt\"))))))))))))"
  },
  {
    "original_sentence": "Set up a lunch at Mexico Burrito right afterward - and add Anna's team.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Mexico Burrito\")))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Anna\"))))))))))))"
  },
  {
    "original_sentence": "Looks perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "After the budget meeting I need to see Mark and his team.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"budget meeting\")))))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindTeamOf x0)))))))))"
  },
  {
    "original_sentence": "That is what I asked for.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create a meeting with Bob today at 3pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))))))))"
  },
  {
    "original_sentence": "Remove Mary and Joseph from today's birthday celebration.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"birthday celebration\")) (EventOnDate (Today) (^(Event) EmptyStructConstraint))))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joseph\"))))))))))))"
  },
  {
    "original_sentence": "Yes, that is perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cool, also remove Abel from birthday celebration.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"birthday celebration\")))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abel\")))))))))))"
  },
  {
    "original_sentence": "I was attempting to see if you noticed Abel was never invited in the first place.",
    "parse": "(Yield (allows (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abel\"))) (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Jon won't be able to join us tomorrow for the doctors appointment, take him off.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"doctors appointment\"))))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jon\")))))))))))"
  },
  {
    "original_sentence": "cancel all meetings after lunch",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "can you arrange with event",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "is my job fair after lunch?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (Today) (Event.subject_? (?~= \"job fair\")) (Lunch))))) 0L))"
  },
  {
    "original_sentence": "schedule Job interview after lunch Wednesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Job interview\")) (Event.start_? (OnDateAfterTime (NextDOW (Wednesday)) (Lunch)))))))"
  },
  {
    "original_sentence": "I will have the first one?",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need a doctor appointment after lunch Wednesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor appointment\")) (Event.start_? (OnDateAfterTime (NextDOW (Wednesday)) (Lunch)))))))"
  },
  {
    "original_sentence": "Make me an event on Saturday at 5pm to watch the game with Matt, Margret and Jackie.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"watch the game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 5L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Matt\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Margret\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jackie\"))))))))))))"
  },
  {
    "original_sentence": "yes this look good to me",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you extend that by 2 hours?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toHours 2))))))))"
  },
  {
    "original_sentence": "change the time to 6pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "Change the time to 7pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "change the dinner date time at 9.00 pm - 10.00 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner date\")))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 9L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 10L))))))))"
  },
  {
    "original_sentence": "have this take place at Burger King",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.location_? (?= (LocationKeyphrase.apply \"Burger King\"))))))"
  },
  {
    "original_sentence": "this looks perfect, thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "good make it",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "thanks you, put on the good dinner time changed",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "what is on my calendar for Monday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Add haircut at 10am monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"haircut\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "No, make it an hour",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Yes, thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please change my haircut to 10-11am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"haircut\")))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "yeah sure",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "create a meeting for saturday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))))))"
  },
  {
    "original_sentence": "yes second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What is on my calendar for this Wednesday at 1 pm?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 1L)) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Can you cancel that meeting please?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "I need to set a conference call for work for two on the same day.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"conference call for work\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Are Jeff, Terry, and myself still getting lunch tomorrow at Steve's Tavern?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \"Steve's Tavern\"))) (EventOnDate (Tomorrow) (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeff\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Terry\"))))))))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything scheduled on Monday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything with Terry after our Dec 4 lunch?",
    "parse": "(let (x0 (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 4L (December)) (Event.subject_? (?~= \"lunch\")))))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Terry\")))) (DateTime.time x0))))) 0L)))"
  },
  {
    "original_sentence": "Do I have a doctors appointment next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctors appointment\")) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Am I going rock climbing anytime this month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"rock climbing\")) (FullMonthofMonth (Date.month (Today))))))) 0L))"
  },
  {
    "original_sentence": "delete my trail run",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"trail run\")))))))))"
  },
  {
    "original_sentence": "yeah it's the one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cancel the group meeting set for Friday at 1pm with Gina and Greg.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Gina\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Greg\"))))) (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 1L)) (Event.subject_? (?~= \"group meeting\")))))))))))"
  },
  {
    "original_sentence": "yes cancel that one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Okay, now mark down a meeting with Davey for Friday at 4:30 please.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 4L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Davey\")))))))))))"
  },
  {
    "original_sentence": "Looks good, but can you add Nate to that as well?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nate\"))))))))))"
  },
  {
    "original_sentence": "Perfect can you add Peter Johnson to the appointment",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Peter Johnson\"))))))))))"
  },
  {
    "original_sentence": "Please mark on my calendar a dentist appointment for Tomorrow at 3 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "It's going to be an hour long.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Yes, that works. And cancel my dinner event after that meeting.",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction)) x1 (Event.start (^(Dynamic) item x0))) (do (Yield x0) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x1) (Event.subject_? (?~= \"dinner\")) (DateTime.time x1)))))))))))"
  },
  {
    "original_sentence": "Yes, cancel it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you schedule a 3 pm Bakery Date with Samanatha on Monday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Bakery Date\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 3L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Samanatha\")))))))))))"
  },
  {
    "original_sentence": "Set up a run for 60 minutes at Piedmont Park on Sunday at 9am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"run\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 9L))))) (Event.duration_? (?= (toMinutes 60)))) (Event.location_? (?= (LocationKeyphrase.apply \"Piedmont Park\")))))))"
  },
  {
    "original_sentence": "yarp",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I wanted that to be an hour",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "ya",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Is it cold during my run?",
    "parse": "(Yield (IsCold (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"run\"))))))))"
  },
  {
    "original_sentence": "My run on sunday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"run\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Update the baseball game on Saturday to be around 3pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"baseball game\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))))))) (Event.start_? (DateTime.time_? (TimeAround (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "The first choice is good, thanks. Also, please schedule a Breakfast Meeting with Joy around 9 am tomorrow.",
    "parse": "(do (Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Breakfast Meeting\")) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joy\"))))))))))))"
  },
  {
    "original_sentence": "Can you change my dinner appointment to be around 7?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner appointment\")))))) (Event.start_? (DateTime.time_? (TimeAround (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "what is the temperature",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))"
  },
  {
    "original_sentence": "how do you know where i live",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "will it rain today",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "will it snow",
    "parse": "(Yield (WillSnow (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "whats the weather in dubai",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"dubai\"))) (?= (Now))))"
  },
  {
    "original_sentence": "what kind of climate does dubai have",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "does it rain in dubai",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"dubai\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "does it ever snow in dubai",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "what will the temperature be on December 20",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (MD 20L (December)))))))"
  },
  {
    "original_sentence": "what season is it",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "why does it rain",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "good bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "what is the weather in la",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"la\"))) (?= (Now))))"
  },
  {
    "original_sentence": "does in snow in la",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "will it snow la",
    "parse": "(Yield (WillSnow (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"la\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "Please add an event titled, \"Timmy's basketball game at church\" for 9pm today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Timmy's basketball game\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 9L))))) (Event.location_? (?= (LocationKeyphrase.apply \"church\")))))))"
  },
  {
    "original_sentence": "I have a meeting at the church at 7 pm so put that on the schedule.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 7L)))) (Event.location_? (?= (LocationKeyphrase.apply \"church\")))))))"
  },
  {
    "original_sentence": "Good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you set a reminder two hours before church today?",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Can you delete the submit novel draft event on the 28th?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 28L) (Event.subject_? (?~= \"submit novel draft\"))))))))))"
  },
  {
    "original_sentence": "Yep that's the one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add work on Novel on the 29th from 2 to 5 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (nextDayOfMonth (Today) 29L) (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"work on Novel\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "Yes great thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Remove the event at Hawker Fare",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (?= (LocationKeyphrase.apply \"Hawker Fare\"))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Also delete crepes this weeked",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"crepes\")) (ThisWeekend)))))))))"
  },
  {
    "original_sentence": "That's it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please add board meeting to my calendar for this Thursday at 12:30 p.m.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"board meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinutePm 12L 30L))))))))"
  },
  {
    "original_sentence": "Yes. Change the event duration to one hour.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Good. Is this all the on the calendar for the day?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.id_? (negate (?= (Event.id (^(Dynamic) item x0))))))))) 0L))))"
  },
  {
    "original_sentence": "Then shoe me what are the events i have tomorrow.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What about the day after tomorrow?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (adjustByPeriod (Tomorrow) (toDays 1)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Hi bot bot, I would like to check my appointments for the week.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
  },
  {
    "original_sentence": "Please reschedule my dentist appointment to 7 am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\")))))) (Event.start_? (DateTime.time_? (?= (NumberAM 7L)))))))"
  },
  {
    "original_sentence": "Yes!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I would like to have lunch with Cecelia Waller",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cecelia Waller\")))))))))))"
  },
  {
    "original_sentence": "Yes, the 10 am",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Perfect thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "tell me about my spring",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (SeasonSpring))))"
  },
  {
    "original_sentence": "invite David to the event",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"panda\"))))))))))"
  },
  {
    "original_sentence": "yup yup",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What's first on the calendar next week?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)) 1L))"
  },
  {
    "original_sentence": "What's last on the calendar next week?",
    "parse": "(Yield (FindLastEvent (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "What's the first event this week?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)) 1L))"
  },
  {
    "original_sentence": "What's the last event this week?",
    "parse": "(Yield (FindLastEvent (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
  },
  {
    "original_sentence": "Decline my Tennis Game on March 2 and say I hurt my wrist",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I hurt my wrist\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 2L (March)) (Event.subject_? (?~= \"Tennis Game\")))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "yes that looks great. I just remember can you Decline my Spa Day on March 1 and say that I aint fancy",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I aint fancy\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 1L (March)) (Event.subject_? (?~= \"Spa Day\")))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "that is okay. Now I need you to decline my Create Mii Brawler event and say that I'm not scummy",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I'm not scummy\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Create Mii Brawler\"))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "when is my meeting with Lisa and Jim supposed to start?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lisa\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\"))))))))))"
  },
  {
    "original_sentence": "let them know I accepted that",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "What will the weather be like tomorrow in New York City?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"New York City\"))) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "What is the weather like today in New York City?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"New York City\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "When will it stop raining?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "What will the high be today in New York City?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"New York City\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "What is the temperature next Friday in Minneapolis?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Minneapolis\"))) (DateTime.date_? (?= (NextDOW (Friday)))))))"
  },
  {
    "original_sentence": "What was the temperature last week in Miami?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Miami\"))) (DateTime.date_? (LastWeekNew)))))"
  },
  {
    "original_sentence": "What will be the hottest day next week in Miami?",
    "parse": "(Yield (WhenProperty (temperature) (WeatherQuantifier.Max) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Miami\"))) (DateTime.date_? (NextWeekList)))))"
  },
  {
    "original_sentence": "What is the hottest city in the U.S. today?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Where is it coldest toda?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "What is the temperature in Anchorage Alaska?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Anchorage Alaska\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "Is it hotter in New York City or Buffalo, NY?",
    "parse": "(Yield (> (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"New York City\"))) (?= (Now)))) (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Buffalo, NY\"))) (?= (Now))))))"
  },
  {
    "original_sentence": "Accept the D&D invite on Jan 12th and respond with the comment \"I'll bring chips\"",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I'll bring chips\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 12L (January)) (Event.subject_? (?~= \"D&D\")))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Actually, respond with \"Where are the Cheetos?\"",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(RespondComment) AlwaysTrueConstraint)) (intension (RespondComment.apply \"Where are the Cheetos?\")))))"
  },
  {
    "original_sentence": "Actually, no. Sorry again. Add a comment We really need soda.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(RespondComment) AlwaysTrueConstraint)) (intension (RespondComment.apply \"We really need soda\")))))"
  },
  {
    "original_sentence": "WAIT, change comment to bring Fritos.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(RespondComment) AlwaysTrueConstraint)) (intension (RespondComment.apply \"bring Fritos\")))))"
  },
  {
    "original_sentence": "add Susie and her manager to the project",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Susie\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"project\")))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))))))))"
  },
  {
    "original_sentence": "Please also add Ryan and his boss.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ryan\")))))) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))))))))"
  },
  {
    "original_sentence": "Looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need a meeting with Abby and her boss",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))))))))"
  },
  {
    "original_sentence": "October 16th works great, thanks.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 16L (October))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Cancel my reservation friday night and say \"something came up\"",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"something came up\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"reservation\"))) (Night))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Yes. I need to decline my invitation to the panel discussion on Tuesday. could you also add the comment \"Sorry my kid has the dentist that day.\"",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"Sorry my kid has the dentist that day.\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?= \"panel discussion\")))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "Can you decline my Lunch event with Tim and say that I already ate",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I already ate\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\")))))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Perfect! Decline my Escape Room Party and say that I'm afraid of getting stuck in the room.",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I'm afraid of getting stuck in the room\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Escape Room Party\"))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Make me something to do tomorrow with Abby, Jesse, Kim, and Jake",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))))))))"
  },
  {
    "original_sentence": "Go with the first option",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Add a sales meeting on Monday with Kim, Jake, and Gerald",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"sales meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Gerald\"))))))))))))"
  },
  {
    "original_sentence": "Please put the second option on the schedule.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "It's great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have anything next week at 10 pm?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.start_? (DateTime.time_? (?= (NumberPM 10L)))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))) 0L))"
  },
  {
    "original_sentence": "I meant AM, my prob",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (ConvertTimeToAM (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))))))))))))"
  },
  {
    "original_sentence": "Can you make me a new meeting at 4 pm on Friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Sorry I meant for that to be AM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (ConvertTimeToAM (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you make me a new meeting next Friday at 9 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 9L)))))))"
  },
  {
    "original_sentence": "Hmm, can you make that start in the am please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (ConvertTimeToAM (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))))))))))))"
  },
  {
    "original_sentence": "Hello. Can you tell me if anyone has declined the invite to the political fundraiser for next week?",
    "parse": "(Yield (> (size (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"political fundraiser\")) (NextWeekList)))))) (ResponseStatusType.Declined))) 0L))"
  },
  {
    "original_sentence": "who as accepted my invitation to the Movies",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Movies\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Who accepted the weekly sync?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"weekly sync\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "i wish to review my meeting for this week",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))))"
  },
  {
    "original_sentence": "Ok, I think Ellis was supposed to be in that meeting, but I need to delete him from it",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ellis\")))))))))))"
  },
  {
    "original_sentence": "I need the meeting to include Laura and Tom only. Please delete Ellis.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Laura\")))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\"))))))))))))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "hi",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "explain a listings of events in which I am curated towards",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "I would like to schedule a recurring event on my calendar.",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "Okay. I would like to schedule a single event on my calendar.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"single\")))))"
  },
  {
    "original_sentence": "No.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "I want to add an event titled \"Nicole\" on Friday, May 3rd, from 3:30 pm to 4:30 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (MD 3L (May)) (HourMinutePm 3L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Nicole\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 4L 30L)))))))))"
  },
  {
    "original_sentence": "YEs!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "can you search for a calendar event",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "okay thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I would like to set an appointment for Friday at 8:00AM this week.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (DowOfWeekNew (Friday) (ThisWeek)) (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "The appointment needs to be from 8 to noon.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberAM 8L))) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (Noon)))))))))"
  },
  {
    "original_sentence": "Did I see Susan last month at all?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Susan\")))) (FullMonthofLastMonth))))) 0L))"
  },
  {
    "original_sentence": "Could you change that timeslot to 12:30 instead?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 12L 30L)))))))"
  },
  {
    "original_sentence": "Perfectly. Can you add Aaraiaoi9rwara to the person list?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Aaraiaoi9rwara\"))))))))))"
  },
  {
    "original_sentence": "What was listed on July 11th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (previousMonthDay (Today) (July) 11L) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Good. I need to take a day off.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Create a meeting with Dwight at Chili's at 4 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (NextTime (NumberPM 4L)))) (Event.location_? (?= (LocationKeyphrase.apply \"Chili's\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dwight\")))))))))))"
  },
  {
    "original_sentence": "Change location to Applebees",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Applebees\"))))))"
  },
  {
    "original_sentence": "That'll do it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "It should be an hour long",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Will it be sunny that day?",
    "parse": "(Yield (IsSunny (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Is it going to rain then?",
    "parse": "(Yield (WillRain (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "i need this address",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Do I have any appointments right after breakfast today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (Today) (^(Event) EmptyStructConstraint) (Breakfast))))) 0L))"
  },
  {
    "original_sentence": "I want to move that appointment so it takes place after lunch",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (OnDateAfterTime (DateTime.date (Event.start x0)) (Lunch)))))))"
  },
  {
    "original_sentence": "I want the appointment to start at 1 pm, which is after lunch.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "make a schedule with john after lunch",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (OnDateAfterTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Lunch))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"john\")))))))))))"
  },
  {
    "original_sentence": "I would like to meet with my manager earlier than monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?< (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Looks good",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks, I also need to move my meeting with Neil to after 2:30 PM tomorrow.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Neil\")))))))) (Event.start_? (OnDateAfterTime (Tomorrow) (HourMinutePm 2L 30L))))))"
  },
  {
    "original_sentence": "Those might work but is there anything open later in the day?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "The second one is fine. Please add coffee with mom a little later afterwards.",
    "parse": "(do (Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint))))) (FenceAttendee))"
  },
  {
    "original_sentence": "Create event titled Birthday Party for January 17 from 3-7pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (MD 17L (January)) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Birthday Party\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 7L)))))))))"
  },
  {
    "original_sentence": "No, have it start at 4 instead.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))) (intension (NumberPM 4L)))))"
  },
  {
    "original_sentence": "cancel natasaha party earlier",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"natasaha party\")))))))))"
  },
  {
    "original_sentence": "Yes. Any other events this weekend?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))) 0L)))"
  },
  {
    "original_sentence": "Anything today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Cancel event 9 pm",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 9L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Yes please",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Is my supervisor the organizer of Happy Hour?",
    "parse": "(Yield (== (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Happy Hour\")))))) (FindManager (toRecipient (CurrentUser)))))"
  },
  {
    "original_sentence": "Is there a work breakfast scheduled for this month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"work breakfast\")) (FullMonthofMonth (Date.month (Today))))))) 0L))"
  },
  {
    "original_sentence": "Did my boss arrange Work Breakfast?",
    "parse": "(Yield (== (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Work Breakfast\")))))) (FindManager (toRecipient (CurrentUser)))))"
  },
  {
    "original_sentence": "Hello. Can you tell me who has declined my invitation to go out for dinner tonight? Thanks!",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"go out for dinner\"))) (Night)))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Is there anyone who declined the invite for the bowling tournament next week?",
    "parse": "(Yield (> (size (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"bowling tournament\")) (NextWeekList)))))) (ResponseStatusType.Declined))) 0L))"
  },
  {
    "original_sentence": "And who has declined an invitation for the company barbecue?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"company barbecue\")))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Hello, we are expecting it to be windy tomorrow. Can 60 MPH wind gusts topple trees? If so, what can I do to protect them from the wind?",
    "parse": "(Yield (IsWindy (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "Rhode Island",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"Rhode Island\")))))))"
  },
  {
    "original_sentence": "How much rain will we be getting",
    "parse": "(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Will it be windy?",
    "parse": "(Yield (IsWindy (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Okay thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule fix up home gym this Saturday afternoon, block out 45 minutes for it and delete my schedule to go fishing.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "What is my longest meeting for Thursday?",
    "parse": "(FenceAggregation)"
  },
  {
    "original_sentence": "What are my meetings on Thursday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "How about the next day?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "And the day after that?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Check for next week as well",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))"
  },
  {
    "original_sentence": "Hi, I'm trying to figure out when my dinner with Peter is scheduled for next weekend.",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Peter\"))))) (NextWeekend)))))))"
  },
  {
    "original_sentence": "Add Doc Oc to that dinner",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Doc Oc\"))))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "take Jim and his supervisor names off the event on the 19th",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 19L) (^(Event) EmptyStructConstraint)))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= x0)) (AttendeeListExcludesRecipient (?= (FindManager x0)))))))))"
  },
  {
    "original_sentence": "Add Pam and her boss to that meeting.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Pam\")))))) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))))))))"
  },
  {
    "original_sentence": "Looks great my guy",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Actually, please add Jim back to the meeting.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\"))))))))))"
  },
  {
    "original_sentence": "Yes, this works.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to cancel the meeting with Leslie and her manager today.",
    "parse": "(let (x0 (PersonName.apply \"Leslie\")) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))))))))))))"
  },
  {
    "original_sentence": "Yes that's the right one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "OK",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "put meeting with rolly",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"rolly\"))))))))))"
  },
  {
    "original_sentence": "Make meeting for today, thanks!",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (Today)))))))"
  },
  {
    "original_sentence": "can you schedule a workout tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"workout\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "Please put an event into my calendar for Cindy's wedding starting Sunday at 11am and ending Friday at 3am.",
    "parse": "(let (x0 (NextDOW (Sunday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Cindy's wedding\")) (Event.start_? (?= (DateAtTimeWithDefaults x0 (NumberAM 11L))))) (Event.end_? (?= (DateAtTimeWithDefaults (nextDayOfWeek x0 (Friday)) (NumberAM 3L)))))))))"
  },
  {
    "original_sentence": "Good, set it for me",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please schedule a trip to the Bahamas for a week starting monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"trip to the Bahamas\")) (NextDOW (Monday)) (toWeeks 1)))))"
  },
  {
    "original_sentence": "Yes, this is it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great, thanks! Can you add an all day event in November called Habitat for Humanity?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Habitat for Humanity\")) (Event.start_? (DateTime.date_? (FullMonthofMonth (November))))) (Event.isAllDay_? (?= true))))))"
  },
  {
    "original_sentence": "have fun today sarath",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I am having lunch at Labellas Italian Piatto Monday at 2 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 2L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Labellas Italian Piatto\")))))))"
  },
  {
    "original_sentence": "I want to know the address.",
    "parse": "(Yield (PlaceDescribableLocation (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Thank you. What time does the restaurant close?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Cool, thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "make an appointment with my dad at today 2 pm",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Can you add a 1 on 1 appointment today at 2, it's with my dad.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I see, then please add a 1-1 with George for today at 2 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 2L)))) (Event.isOneOnOne_? (?= true))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"George\")))))))))))"
  },
  {
    "original_sentence": "yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need a 1-1 with Max on Wednesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday))))) (Event.isOneOnOne_? (?= true))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Max\")))))))))))"
  },
  {
    "original_sentence": "I need to change my meeting with my manager on Friday to 1 hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "put meet with cancel",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "put meet with john in friday evg",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"john\")))))))))))"
  },
  {
    "original_sentence": "No. The time is not evening",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "i pick second one meeting on my calender",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "change my event so kelly isnt there and invite Shanice",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"kelly\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Shanice\")))))))))))"
  },
  {
    "original_sentence": "it's perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "change my meeting with Kellogs to exclude Kim Najeed and include DeeDee.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"meeting with Kellogs\")))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim Najeed\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"DeeDee\")))))))))))"
  },
  {
    "original_sentence": "that looks perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add Jane to the meeting with Kellogs.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"meeting with Kellogs\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\"))))))))))"
  },
  {
    "original_sentence": "What is the weather like today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "Will it rain later?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (& (Later) (DateTime.date_? (?= (Today)))))))"
  },
  {
    "original_sentence": "What will the weather be like for the weekend?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeekend))))"
  },
  {
    "original_sentence": "How cold will it be on Friday?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextDOW (Friday)))))))"
  },
  {
    "original_sentence": "Can you give me a 5 day forecast?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (NextPeriod (toDays 5)))))"
  },
  {
    "original_sentence": "What will be the weather be like near the beach",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"near the beach\"))) (?= (Now))))"
  },
  {
    "original_sentence": "What was the weather like yesterday?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Yesterday)))))"
  },
  {
    "original_sentence": "What will the weather be like on November 1st",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (MD 1L (November))))))"
  },
  {
    "original_sentence": "search all events next month",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth)))))"
  },
  {
    "original_sentence": "Do I have any meetings this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "When is my meeting with latoya?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"latoya\")))))))))"
  },
  {
    "original_sentence": "Can you look up when my next appointment with Claire is?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Claire\")))) 1L)))"
  },
  {
    "original_sentence": "Could you take a peak at when is the next time I will see Arthur?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Arthur\")))) 1L)))"
  },
  {
    "original_sentence": "When will I see Carmen next?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carmen\")))) 1L)))"
  },
  {
    "original_sentence": "When is my next meeting scheduled with Seneca?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Seneca\")))) 1L)))"
  },
  {
    "original_sentence": "When is the next event after this one for Seneca?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (FindNumNextEvent (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)) 1L)))"
  },
  {
    "original_sentence": "I want Tiwa Kitchen Restaurant in Taos rating",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Tiwa Kitchen Restaurant in Taos\"))))))"
  },
  {
    "original_sentence": "What about Thai 101 in Reno?",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Thai 101 in Reno\"))))))"
  },
  {
    "original_sentence": "What is the Knowledge Center in Reno rated?",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Knowledge Center in Reno\"))))))"
  },
  {
    "original_sentence": "I need a meeting with Dan Schoffel and all of his reports on Tuesday.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Schoffel\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindReports x0)))))))))"
  },
  {
    "original_sentence": "Hold on a first",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "This is the right choice",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need a meeting with Kim and her reports as soon as possible.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Now))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindReports x0)))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make a meeting tomorrow at 3 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "do I have anything else scheduled this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))) 0L))"
  },
  {
    "original_sentence": "What else is planned?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Can you check if I have anything scheduled on the 27th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 27L) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Make a meeting called Show on that day.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Show\")) (Event.start_? (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "when is my 2nd event this week?",
    "parse": "(Yield (Event.start (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)) 2L)))"
  },
  {
    "original_sentence": "when is my 2nd event start",
    "parse": "(Yield (Event.start (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "When is my 2nd event",
    "parse": "(Yield (Event.start (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Hi, I need to add a trip to the San Francisco airport for Monday, the first of April at 1 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"trip to the San Francisco airport\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 1L (April)) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "yes it is perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, that's all for now.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Find anyone appointment after the trip.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (^(Event) EmptyStructConstraint) (DateTime.time (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"trip\"))))))))))"
  },
  {
    "original_sentence": "Make an appointment for breakfast on April 2nd with Lionel",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"breakfast\")) (Event.start_? (DateTime.date_? (?= (MD 2L (April)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lionel\")))))))))))"
  },
  {
    "original_sentence": "please delete next week's performance review from my calendar",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"performance review\")) (NextWeekList)))))))))"
  },
  {
    "original_sentence": "Perhaps ..",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule Car Maintenance for July 24th at 11 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Car Maintenance\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 24L (July)) (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "perhaps it's good?",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Update my meeting next week to start at 8 am.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))) (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "It could be.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do i have any time to meet with Jessica and her manager today?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jessica\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Today)))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "I want to cancel this completely",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Yes, add a meeting with Jake and his boss for tomorrow",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "The first one seems like the best.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "On Friday schedule a phone conference with Sam and his supervisor in the evening.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"phone conference\")) (Event.start_? (DateTimeConstraint (Evening) (NextDOW (Friday))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "I need a lunch date with Karen Smalls this week.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch date\")) (Event.start_? (DateTime.date_? (ThisWeek)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen Smalls\")))))))))))"
  },
  {
    "original_sentence": "Tuesday is good, but have it end 45 minutes later.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Can you please add the lunch date for Tuesday from 10:00 am to 11:15 am?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch date\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinuteAm 11L 15L)))))))))"
  },
  {
    "original_sentence": "Yes, that will work.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please add ice skating with Wanda tomorrow evening.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"ice skating\")) (Event.start_? (DateTimeConstraint (Evening) (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wanda\")))))))))))"
  },
  {
    "original_sentence": "I need to change Carrie Long to Carrie Smith",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carrie Long\")))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carrie Smith\"))))))))))"
  },
  {
    "original_sentence": "yea thats perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can we add Adam to the zoo also?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (Event.subject_? (?~= \"zoo\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Adam\"))))))))))"
  },
  {
    "original_sentence": "Let's have just adam",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (alwaysTrueConstraintConstraint (^((List Attendee)) AlwaysTrueConstraint))) (intension (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"adam\"))))))))))"
  },
  {
    "original_sentence": "No, remove Carriee",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carriee\")))))))))))"
  },
  {
    "original_sentence": "Do I have a lunch meeting schedule for this coming Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"lunch meeting\")))))) 0L))"
  },
  {
    "original_sentence": "Am I meeting with Katherine on Thursday for drinks?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"drinks\")) (EventOnDate (NextDOW (Thursday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Katherine\"))))))))) 0L))"
  },
  {
    "original_sentence": "Do I have an event \"Drinks\" with Katherine on Sunday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (& (Event.subject_? (?~= \"Drinks\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Katherine\"))))))))) 0L))"
  },
  {
    "original_sentence": "Is there a budget meeting on Tuesday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"budget meeting\")))))) 0L))"
  },
  {
    "original_sentence": "Am I busy on Saturday at 8 pm?",
    "parse": "(Yield (IsBusy (RecipientAvailability (& (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (Today) (Saturday)) (NumberPM 8L)))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
  },
  {
    "original_sentence": "Can you tell me when my colonoscopy will begin on Tuesday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"colonoscopy\"))))))))"
  },
  {
    "original_sentence": "Get a room in the NERD with Abby on tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))) (Event.location_? (& (?= (LocationKeyphrase.apply \"NERD\")) (roomRequest)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "Lets go with the one in the morning.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (Morning))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Get me a conference room at Bellevue to go over recipes.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go over recipes\")) (Event.location_? (& (?= (LocationKeyphrase.apply \"Bellevue\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "I like the 1st one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can I get a conference room at Cambridge tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Cambridge\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "what is my today appointment ..?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Schedule a one hour meeting with Rick at 10 AM today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberAM 10L)))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rick\")))))))))))"
  },
  {
    "original_sentence": "okay",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I want the location to be Conference Room 2-B.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Conference Room 2-B\"))))))"
  },
  {
    "original_sentence": "Add Michael as another attendant",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Michael\"))))))))))"
  },
  {
    "original_sentence": "I need three hours put in sometime next week to go over finances with Robert.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"go over finances\")) (Event.start_? (DateTime.date_? (NextWeekList)))) (Event.duration_? (?= (toHours 3)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Robert\")))))))))))"
  },
  {
    "original_sentence": "the tues one for 3 hours",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (& (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (Event.duration_? (?= (toHours 3)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Ok, Setup an appointment to go over finances with Robert on Tuesday from 10 AM to 1 PM.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"go over finances\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Robert\"))))))))))))"
  },
  {
    "original_sentence": "yes that is perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok fine thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add to the schedule a dress appointment with the bridal shop on Friday at 5 pm to get fitted for my bridesmaids dress for my sisters wedding.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dress appointment with the bridal shop\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Show me another timing to the dress appointment.",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Is the \"#AustralianFire\" charity event still happening this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"#AustralianFire charity\")) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Please create the event \"Joey's27thBirthday\" for March 27th, 2020.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Joey's27thBirthday\")) (Event.start_? (DateTime.date_? (?= (MDY 27L (March) (Year.apply 2020L)))))))))"
  },
  {
    "original_sentence": "Ok thank you",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Who is coming to Joey's27thBirthday?.",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Joey's27thBirthday\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "When is Joey's27thBirthday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Joey's27thBirthday\")))))))"
  },
  {
    "original_sentence": "Change meeting to noon today",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"meeting\")))))) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (Noon)))))))"
  },
  {
    "original_sentence": "Change my meeting with Tim to be 3 hours long.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\")))))))) (Event.duration_? (?= (toHours 3))))))"
  },
  {
    "original_sentence": "Please change my study session to Wednesday afternoon",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"study session\")))))) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Wednesday)))))))"
  },
  {
    "original_sentence": "Make my meeting with Tim 2 hours",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\")))))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Add Tim to the study session",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"study session\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\"))))))))))"
  },
  {
    "original_sentence": "add hair appointment to my schedule Wednesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"hair appointment\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday)))))))))"
  },
  {
    "original_sentence": "Yes it does, thank you!",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make my hair appointment at 1PM on the 20th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"hair appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 20L) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "i confirmin appointment on wed",
    "parse": "(Yield (Execute (ConfirmCreateAndReturnAction (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))))))"
  },
  {
    "original_sentence": "why do you confirm this time.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Can you make an event on my calendar called, call mom?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"call mom\")))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Are there any meetings on Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Ok, cancel that meeting and schedule an all day vacation day for me.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "What do I have scheduled for tomorrow at 3",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Do I have anything scheduled for 3 PM this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "That should work Great at 3:10 I have to stop by the bakery and at 4 set nap time to 6 pm.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "After the nap I an going to read to 7 pm.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Add coffee with Theresa at 9 AM tomorrow at the Starbucks near her house.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"coffee\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Starbucks near her house\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Theresa\")))))))))))"
  },
  {
    "original_sentence": "Great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What's on my calendar tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "what room is that gonna be in?",
    "parse": "(Yield (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "okay sounds good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what's happening tonight?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Night))))"
  },
  {
    "original_sentence": "I need you to move the basketball game from Saturday at 9 to 10 am, and then add an appointment for the doctor's the following Thursday at 11",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Make that appointment go until 12, then add lunch with Sarah at 12 for an hour and set me to out of office then.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "No, cancel that lunch, but add dinner with Naomi next Thursday at the Cheesecake Factory from 7 to 9.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Add a meeting with Bob at 3 pm two Saturdays from now, then make a meeting at Friday's with Melanie on Tuesday at 9 pm until 10:30 pm.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Schedule a dinner with Kim on Saturday night.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTimeConstraint (Night) (NextDOW (Saturday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))))))"
  },
  {
    "original_sentence": "Nevermind, I want it to be on a non weekend.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Schedule sleepy time this weekend.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"sleepy time\")) (Event.start_? (DateTime.date_? (ThisWeekend)))))))"
  },
  {
    "original_sentence": "Let's make that not on the weekend.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "the 24th at 1pm works. Could you also schedule a time for me to go to the dog park this weekend?",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 24L)))) (DateTime.time_? (?= (NumberPM 1L))))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go to the dog park\")) (Event.start_? (DateTime.date_? (ThisWeekend))))))))"
  },
  {
    "original_sentence": "lets not do the weekend actually",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "first one is good",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please schedule 3 hours on 2/14 starting at 7 for Valentine dinner",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Valentine dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 14L (toMonth 2L)) (NumberPM 7L))))) (Event.duration_? (?= (toHours 3)))))))"
  },
  {
    "original_sentence": "Set the place to La Terraza.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"La Terraza\"))))))"
  },
  {
    "original_sentence": "Thanks, clear my morning schedule for the 15th.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceMultiAction))"
  },
  {
    "original_sentence": "Change Valentine Dinner to V-D.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Valentine Dinner\")))))) (Event.subject_? (?= \"V-D\")))))"
  },
  {
    "original_sentence": "Set me to out of office on the 15th.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "How many cities are we visiting on tour this month?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "What is on my schedule for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Add office meeting at 9 AM to my schedule for tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"office meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "Tomorrow I have a lunch at 12 as well.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "When do I have a meeting with Joanna?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joanna\")))))))))"
  },
  {
    "original_sentence": "If not find to add new event meeting with Joanna on coming Monday at 5 PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 5L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joanna\")))))))))))"
  },
  {
    "original_sentence": "yep it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to set up something with Emily early in the day on Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Early) (NextDOW (Monday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\")))))))))))"
  },
  {
    "original_sentence": "Both work for me.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "please bring the food early on Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"bring the food\")) (Event.start_? (DateTimeConstraint (Early) (NextDOW (Monday))))))))"
  },
  {
    "original_sentence": "second one. Schedule a nap early on April 28",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"nap\")) (Event.start_? (DateTimeConstraint (Early) (MD 28L (April)))))))))"
  },
  {
    "original_sentence": "what's on my calendar this friday ?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "ok can you change the time after 10.00am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (?> (DateAtTimeWithDefaults (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "Yes, Appointment on Friday at 10:00 am looks great!",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "looks great, thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "what about the weather in ohio now?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"ohio\"))) (?= (Now))))"
  },
  {
    "original_sentence": "I need to go to CVS on Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go to CVS\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "Please do the first work on the go to CVS",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "that's fine",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "One more thing, it will take me an hour to go to CVS. Please update.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"go to CVS\")))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "That works out.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "when is my next meeting",
    "parse": "(Yield (Event.start (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))"
  },
  {
    "original_sentence": "When's my first meeting on friday?",
    "parse": "(Yield (Event.start (FindNumNextEvent (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) 1L)))"
  },
  {
    "original_sentence": "what's my first meeting this week?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)) 1L))"
  },
  {
    "original_sentence": "Do I have any events scheduled after 6pm for this month?",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "I need to add a meeting with Lee Gu at 9am Monday March 16",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 16L (March)) (NumberAM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lee Gu\")))))))))))"
  },
  {
    "original_sentence": "Sure, I guess",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change meeting with Lee Gu to Monay March 18th at 9am until 10am",
    "parse": "(let (x0 (DateAtTimeWithDefaults (MD 18L (March)) (NumberAM 9L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lee Gu\"))))))))) (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 10L)))))))))"
  },
  {
    "original_sentence": "Yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Put lunch with Lee Gu at noon until 1pm on tuesday next week",
    "parse": "(let (x0 (DateAtTimeWithDefaults (DowOfWeekNew (Tuesday) (NextWeekList)) (Noon))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lee Gu\"))))))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What is on my calendar for wednesday next week",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (DowOfWeekNew (Wednesday) (NextWeekList)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Are there any items on tomorrow s date",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Put dinner with Josh on Thursday at 6pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 6L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Josh\")))))))))))"
  },
  {
    "original_sentence": "yes thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "make it from 6pm until 9pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (NumberPM 6L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 9L)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add my community service at 3 pm to next week Sunday for 3 hours",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"community service\")) (Event.start_? (?= (DateAtTimeWithDefaults (DowOfWeekNew (Sunday) (NextWeekList)) (NumberPM 3L))))) (Event.duration_? (?= (toHours 3)))))))"
  },
  {
    "original_sentence": "Add the phone repair for Monday at 10 am which will probably take an hour",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"phone repair\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Find my service",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"service\"))))))"
  },
  {
    "original_sentence": "Okay. And that will be at the Humane Society",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Humane Society\"))))))"
  },
  {
    "original_sentence": "when do i have to buy a birthday card?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"buy a birthday card\")))))))"
  },
  {
    "original_sentence": "when am I going to meet kim?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"kim\")))))))))"
  },
  {
    "original_sentence": "is hernandez has an appointmetn this week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (ThisWeek))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"hernandez\")))))))))))"
  },
  {
    "original_sentence": "it needs to be may 21",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (MD 21L (May))))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "when do i have appointment with obama?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"obama\")))))))))"
  },
  {
    "original_sentence": "can you change thursday meeting to monday?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Monday)))))))))"
  },
  {
    "original_sentence": "is it ?",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what events do I have this week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
  },
  {
    "original_sentence": "Create an event titled \"Beware of Pranks\" for all day tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"Beware of Pranks\")) (Tomorrow)))))"
  },
  {
    "original_sentence": "IT'S OK THANK YOU",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "not need for your help on this time",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what do i have on my calendar today",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "ok thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Find times during evenings this week where nothing is scheduled and add an hour of going to the gym each day.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "its good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make a pool day for the whole weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"pool day\")) (ThisWeekend)))))"
  },
  {
    "original_sentence": "Yes it does thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make an all day bowling event for this weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"bowling\")) (Today)))))"
  },
  {
    "original_sentence": "Hello, schedule me a staff meeting for Friday 2 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"staff meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Change the staff meeting scheduled on Friday at 2 pm to 3 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L)) (Event.subject_? (?~= \"staff meeting\"))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Make the meeting one hour long.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Change the meeting to next Friday instead of this Friday.",
    "parse": "(Yield (nextHoliday (NextDOW (Friday)) (Execute (ReviseConstraint (refer (^(Holiday) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday)))))))))"
  },
  {
    "original_sentence": "That is correct, finally.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "hi can you help me update my calender",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "jan 5 my birthday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"my birthday\")) (Event.start_? (DateTime.date_? (?= (MD 5L (January)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "thankyou",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "enter Daniels birthday feb 21 all day",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"Daniels birthday\")) (MD 21L (February))))))"
  },
  {
    "original_sentence": "my brothers birthday feb 21",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"brothers birthday\")) (Event.start_? (DateTime.date_? (?= (MD 21L (February)))))))))"
  },
  {
    "original_sentence": "yes first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "one more item to put in calendar",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Dr Appointment Friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dr Appointment\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "no sorry",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Dr Appointment Friday 8am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dr Appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "yes thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thats it thank you so much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Did you clear my schedule for today?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "DO I HAVE ANY MEETING TODAY?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "make an appointment with emiley",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"emiley\"))))))))))"
  },
  {
    "original_sentence": "First one is look well",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "That's great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add a haircut appointment immediately following that please.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"haircut appointment\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "That is correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "My flight last night was cancelled due to weather.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Yesterday) (Event.subject_? (?~= \"flight\"))) (Night)))))))))"
  },
  {
    "original_sentence": "Yes I do.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change my meeting last Friday to 7pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Friday)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "Yea it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I had a breakfast burrito making party last Monday with Jess Smith at 7pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"breakfast burrito making party\")) (Event.start_? (?= (DateAtTimeWithDefaults (previousDayOfWeek (Today) (Monday)) (NumberPM 7L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jess Smith\")))))))))))"
  },
  {
    "original_sentence": "Can you push back that lunch with my boss for tomorrow to Monday?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Monday)))))))))"
  },
  {
    "original_sentence": "change the topic to \"lunch with boss\"",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.subject_? (?= \"lunch with boss\")))))"
  },
  {
    "original_sentence": "Yes, but change the end time to 2:00pm please.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Can you change it to 1pm to end at 2:00 pm?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "correct",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you tell me when my next sales meeting with Jennifer is?",
    "parse": "(Yield (Event.start (FindNumNextEvent (& (Event.subject_? (?~= \"sales meeting\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer\"))))) 1L)))"
  },
  {
    "original_sentence": "Is her boss invited?",
    "parse": "(Yield (allows (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))) (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Would you tell me when the next conference is with Anthony?",
    "parse": "(Yield (Event.start (FindNumNextEvent (& (Event.subject_? (?~= \"conference\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Anthony\"))))) 1L)))"
  },
  {
    "original_sentence": "Is his boss invited?",
    "parse": "(Yield (allows (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))) (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Can you remind me when is the next conference with Elli?",
    "parse": "(Yield (Event.start (FindNumNextEvent (& (Event.subject_? (?~= \"conference\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\"))))) 1L)))"
  },
  {
    "original_sentence": "Ok, is her supervisor invited?",
    "parse": "(Yield (allows (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))) (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Put on schedule a PTA meeting at Jen's school on Friday at 5:30 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"PTA meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 5L 30L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Jen's school\")))))))"
  },
  {
    "original_sentence": "No, I need it to be for an hour and 15 minutes.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (addDurations (toHours 1) (toMinutes 15)))))))"
  },
  {
    "original_sentence": "No, it's getting moved to the 5th.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 5L)))))))"
  },
  {
    "original_sentence": "yes thats the one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Why'd you do that, that's not what I wanted.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "How many yes responses are there for John's birthday?",
    "parse": "(Yield (size (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"John's birthday\")))))) (ResponseStatusType.Accepted))))"
  },
  {
    "original_sentence": "who has accepted \"drinks after work\"",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"drinks after work\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Who declined that?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "My baby shower is going to be on Sunday August 25th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"baby shower\")) (Event.start_? (DateTime.date_? (?= (MD 25L (August)))))))))"
  },
  {
    "original_sentence": "invite all my relatives to the baby shower",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Schedule baby shower for 2 pm on August 25th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"baby shower\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 25L (August)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "yes that looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "change the timing",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Hello I have a skype call from now for an hour",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"skype call\")) (Event.start_? (?= (Now)))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "And I have a recital at 6 pm at church",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"recital\")) (Event.start_? (?= (NextTime (NumberPM 6L))))) (Event.location_? (?= (LocationKeyphrase.apply \"church\")))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What's happening at this moment?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (Now) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Show me the next time I am meeting with Alexa",
    "parse": "(Yield (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alexa\")))) 1L))"
  },
  {
    "original_sentence": "Great, thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have anything after that time?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))) 0L)))"
  },
  {
    "original_sentence": "cancel moped race for me",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"moped race\")))))))))"
  },
  {
    "original_sentence": "Yes, that is the one.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I am going to my parents for the entire week next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"going to my parents\")) (NextWeekList)))))"
  },
  {
    "original_sentence": "how you go with?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "I'm going to a fitness retreat that will last from the 19th until the 24th.",
    "parse": "(let (x0 (nextDayOfMonth (Today) 19L)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"fitness retreat\")) (DateAndConstraint x0 (nextDayOfMonth x0 24L)))))))"
  },
  {
    "original_sentence": "That is right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I am going on an Island trip starting Saturday and ending on Monday.",
    "parse": "(let (x0 (NextDOW (Saturday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Island trip\")) (Event.start_? (DateTime.date_? (?= x0)))) (Event.end_? (DateTime.date_? (?= (nextDayOfWeek x0 (Monday))))))))))"
  },
  {
    "original_sentence": "Today is what date?",
    "parse": "(Yield (Today))"
  },
  {
    "original_sentence": "Can you clear my schedule for monday?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "And ShowAs busy all day Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.showAs_? (?= (ShowAsStatus.Busy))) (NextDOW (Monday))))))"
  },
  {
    "original_sentence": "include John for that",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))))"
  },
  {
    "original_sentence": "thats great thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What time is trivia night with Ryan, Jane, Chad, and Melissa?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"trivia night\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ryan\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chad\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Melissa\")))))))))))"
  },
  {
    "original_sentence": "What time is laundry with Jim, Ned, Ted and Fred?",
    "parse": "(Yield (DateTime.time (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"laundry\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ned\")))) (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ted\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fred\")))))))))))))"
  },
  {
    "original_sentence": "When am I meeting Kate, Marcus, Bryan, and Raymond for drinks?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"drinks\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kate\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marcus\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bryan\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Raymond\")))))))))))"
  },
  {
    "original_sentence": "Nice, add Jake, Kim, Abby, and Jesse to the event as well.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\")))))))))))"
  },
  {
    "original_sentence": "That looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cancel my meeting tomorrow",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "I meant the day after tomorrow",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (adjustByPeriod (Tomorrow) (toDays 1)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Yes, that's the one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule golf for Saturday from 9 AM until 2 PM.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 9L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"golf\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 2L)))))))))"
  },
  {
    "original_sentence": "Set the location to Central Golf Clube please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Central Golf Clube\"))))))"
  },
  {
    "original_sentence": "Change my 10am to 11am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "wait a minute",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Create a meeting in the afternoon on Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Monday)))))))"
  },
  {
    "original_sentence": "appssss is good to confirm now",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you set up an event for tomorrow as well?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "give me some time bro",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "I want the 1st one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Is it cold out right now?",
    "parse": "(Yield (IsCold (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))"
  },
  {
    "original_sentence": "Hey ya, Can you add a meeting for me? It's going to be on the 21st, no wait. It's going to be on the 23rd. It's the Everything Rhymes with Orange concert. It's taking place at Red Rocks. It starts at like seven pm and should go for 3 hours, and mark it as working elsewhere",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (& (Event.subject_? (?= \"Everything Rhymes with Orange concert\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 23L) (NumberPM 7L))))) (Event.duration_? (?= (toHours 3)))) (Event.location_? (?= (LocationKeyphrase.apply \"Red Rocks\")))) (Event.showAs_? (?= (ShowAsStatus.WorkingElsewhere)))))))"
  },
  {
    "original_sentence": "Sweet. Now add the Duke Silver concert. It's exactly 2 weeks after that, but it starts at 7:30 pm and is just two hours long.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Duke Silver concert\")) (Event.start_? (?= (DateAtTimeWithDefaults (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toWeeks 2)) (HourMinutePm 7L 30L))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "Can you find every concert I have scheduled?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"concert\"))))"
  },
  {
    "original_sentence": "Can you add Interview with Jeff at 11AM Thursday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Interview\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberAM 11L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeff\")))))))))))"
  },
  {
    "original_sentence": "yeah, it looks perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "where's my next meeting with Jeff?",
    "parse": "(Yield (Event.location (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeff\")))) 1L)))"
  },
  {
    "original_sentence": "move my interview to 1 pm please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"interview\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Set up a date with Dad this friday at noon.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Do I have anything else that day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "Mark me as busy during that time period please.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Where is the nearest fast food restaurant where I can buy a meal for less than 10 dollars?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Have I got any appointments with Melissa this month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Melissa\")))) (FullMonthofMonth (Date.month (Today))))))) 0L))"
  },
  {
    "original_sentence": "When is the next time I'm free to meet with Melissa McCartney?",
    "parse": "(Yield (RecipientAvailability (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Melissa McCartney\"))))))) true))"
  },
  {
    "original_sentence": "Do I have any meetings on the 30th?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 30L) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "What are they?",
    "parse": "(Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Can you cancel this event?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Where am I?",
    "parse": "(Yield (Here))"
  },
  {
    "original_sentence": "please create an event and title it \"brunch with mom\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"brunch with mom\")))))"
  },
  {
    "original_sentence": "What else do I have scheduled tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Add another event. I have a meeting with John tomorrow afternoon at 4pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))))"
  },
  {
    "original_sentence": "Yes, good, but can you add 30 minutes to the meeting as well?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (addDurations (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint)))) (toMinutes 30)))))))"
  },
  {
    "original_sentence": "Who reports to Kim Possible",
    "parse": "(Yield (FindReports (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim Possible\")))))))"
  },
  {
    "original_sentence": "make a meeting with Kim's reports then",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasPeople (FindReports (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))))))"
  },
  {
    "original_sentence": "Lets set it to thursday please",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Who are the reports for David Lax?",
    "parse": "(Yield (FindReports (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David Lax\")))))))"
  },
  {
    "original_sentence": "What are Kim's reports",
    "parse": "(Yield (FindReports (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))"
  },
  {
    "original_sentence": "Gaming time with son starts at 4 on the 18th.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Perfect thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I'll be out of the office this weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (ThisWeekend))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
  },
  {
    "original_sentence": "Schedule Late Lunch for 3 pm tomorrow at Clermont Fish House.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Late Lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Clermont Fish House\")))))))"
  },
  {
    "original_sentence": "Yes. What's the weather going to be like?",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Will it be bad weather for Late Lunch?",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Late Lunch\")))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Start the brainstorming session on new ideas with Bob Wednesday morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"brainstorming session on new ideas\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Wednesday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))))))))"
  },
  {
    "original_sentence": "second one please",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Also block off a 45 minute meeting at 12:00 pm tomorrow with Justin and Corey to discuss Chip Production.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Chip Production\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 12L))))) (Event.duration_? (?= (toMinutes 45)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Justin\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Corey\"))))))))))))"
  },
  {
    "original_sentence": "why must I toil away on this day? let me know my schedule",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "hey, please set up a lunch meeting with Ruth on Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ruth\")))))))))))"
  },
  {
    "original_sentence": "Neither one looks good.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you cancel all events for May 5th",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Actually, can you cancel my request for lunch meeting with ruth on Monday?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (& (Event.subject_? (?~= \"lunch meeting\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"ruth\")))))))))))))"
  },
  {
    "original_sentence": "Hm, I changed my mind. Just move that lunch meeting to Wednesday at the same time.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Wednesday)) (DateTime.time (Event.start x0)))))))))"
  },
  {
    "original_sentence": "Delete the Ladies Lunch. Laura, Molly, and Rachel were attending.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Ladies Lunch\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Laura\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Molly\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rachel\")))))))))))))"
  },
  {
    "original_sentence": "change meeting to 2:00 PM",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "make meeting on 3:00 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "It is.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What did I do last Monday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Monday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Woww. Nice",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Yes, please delete that event from the past.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "It is.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "add it for Friday at 5",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "What is the current temperature in Anchorage Alaska?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Anchorage Alaska\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "What is the temperature in Moscow Russia?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Moscow Russia\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "Will it snow in Moscow tomorrow?",
    "parse": "(Yield (WillSnow (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Moscow\"))) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "What about the next day?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "What is the forecast for Sunday, Oct 27 in Paris France?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Paris France\"))) (DateTime.date_? (?= (MD 27L (October))))))"
  },
  {
    "original_sentence": "Why is it so cold?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "What is the temperature tomorrow in Rio de Janiero?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Rio de Janiero\"))) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "What time is the meeting this afternoon?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Afternoon)))))))"
  },
  {
    "original_sentence": "Push the meeting with Elli and her skip to Wednesday at noon.",
    "parse": "(let (x0 (PersonName.apply \"Elli\") x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x1) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x1)) (Wednesday)) (Noon))))))))"
  },
  {
    "original_sentence": "Yes, thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you. Is Elli Parker's manager coming? He is invited too.",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli Parker\"))))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Could you add Kim's skip to that?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))))))"
  },
  {
    "original_sentence": "create an event next Tuesday at 11 am for job interview at Facebook headquarters",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"job interview\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 11L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Facebook headquarters\")))))))"
  },
  {
    "original_sentence": "Should I expect rain for my job interview at Facebook headquarters tomorrow?",
    "parse": "(Yield (WillRain (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \"Facebook headquarters\"))) (EventOnDate (Tomorrow) (Event.subject_? (?~= \"job interview\"))))))))))"
  },
  {
    "original_sentence": "Please enter it on my calendar. Job interview at Facebook headquarters tomorrow at 11 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Job interview\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Facebook headquarters\")))))))"
  },
  {
    "original_sentence": "The time is actually 12:00 noon. Can you change it?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (Noon)))))))"
  },
  {
    "original_sentence": "What do i have going on after that?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)))))"
  },
  {
    "original_sentence": "Please delete my appointment on the 23rd of December at 2:00 PM.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (MD 23L (December)) (NumberPM 2L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "That's alright.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you restore that event?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Where is Lara Croft's office?",
    "parse": "(Yield (Person.officeLocation (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lara Croft\"))))))))"
  },
  {
    "original_sentence": "What about her phone number?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Okay, then, how can I contact her?",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Cool, thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have any appointments Thursday evening?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)) (Evening))))) 0L))"
  },
  {
    "original_sentence": "it's okay, thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "make an appointment thursday morning with alex",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Thursday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"alex\")))))))))))"
  },
  {
    "original_sentence": "first one is perfect",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Do I have anything scheduled this afternoon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"
  },
  {
    "original_sentence": "Please book an hour Thursday afternoon for a workout.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"workout\")) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Thursday))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Leave my Tue afternoon free",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "I have a music festival for Wednesday through Friday of next week. It will be in Austin.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \"Austin\"))) (EventAllDayForDateRange (Event.subject_? (?= \"music festival\")) (DowToDowOfWeek (Wednesday) (Friday) (NextWeekList)))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great! Also, add that I'll be out of office all day on the 4th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (nextDayOfMonth (Today) 4L)))))"
  },
  {
    "original_sentence": "Yep, looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I am going to DIA to pick up Mom on thursday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"pick up Mom\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday)))))) (Event.location_? (?= (LocationKeyphrase.apply \"DIA\")))))))"
  },
  {
    "original_sentence": "Schedule basketball on Saturday at 9:00 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"basketball\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "That looks fine to me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "OK THANK YOU",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "no thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Create a meeting with Mary for tomorrow, around 3pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\")))))))))))"
  },
  {
    "original_sentence": "Yes, please schedule the meeting.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "can you arrange with 4.00 PM",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Create an appointment with steve from 1pm to 2pm",
    "parse": "(let (x0 (NextTime (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 2L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"steve\"))))))))))))"
  },
  {
    "original_sentence": "yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "It's good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Okay, yes, actually, can you please add another meeting with Alejandro between 1 and 5 pm on Monday the 15th?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (nextDayOfMonth (Today) 15L) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeAndConstraint x0 (TimeAfterDateTime x0 (NumberPM 5L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alejandro\"))))))))))))"
  },
  {
    "original_sentence": "The bottom suits my needs the best",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Help me customize my 2019 yearly.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Schedule a lunch with noelle and her manager tomorrow at 12",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"noelle\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 12L))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "can you update the location too?",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "add this event at work",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"work\"))))))"
  },
  {
    "original_sentence": "Change the time to 2pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Yeah is i t",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you tell me the closest McDonalds?",
    "parse": "(FencePlaces)"
  },
  {
    "original_sentence": "create meeting monday from 1-4",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create a board meeting on Friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"board meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "No, It needs to start at 11:30 am.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 11L 30L)))))))"
  },
  {
    "original_sentence": "The bottom one will do for now",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "add 30 minutes to that",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toMinutes 30))))))))"
  },
  {
    "original_sentence": "Please add Frank to the meeting.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Francis will no longer be coming to the party.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"party\")))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Francis\")))))))))))"
  },
  {
    "original_sentence": "it's perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Marvelous. Add Berry to that event as well.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Berry\"))))))))))"
  },
  {
    "original_sentence": "Yes also add Adam to it and remove roger",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Adam\")))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"roger\"))))))))))))"
  },
  {
    "original_sentence": "Ok, Kaity and Willow will be there instead of Lauren",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kaity\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Willow\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lauren\"))))))))))))"
  },
  {
    "original_sentence": "Enter an all day weekend fishing event",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"fishing\")) (ThisWeekend)))))"
  },
  {
    "original_sentence": "I am not feeling well. Delete the event.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Change the time for the board meeting to 6pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"board meeting\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "it's fine",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "OK",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "thats all for now thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What can you tell me about the weather?",
    "parse": "(WeatherPleasantry)"
  },
  {
    "original_sentence": "Do you know about the weather?",
    "parse": "(WeatherPleasantry)"
  },
  {
    "original_sentence": "I would like to have a question answered about the weather",
    "parse": "(WeatherPleasantry)"
  },
  {
    "original_sentence": "Do I have any events planned today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Can you schedule a meeting with paige Asworth for me?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"paige Asworth\"))))))))))"
  },
  {
    "original_sentence": "Schedule a meeting with Scot Hanson",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scot Hanson\"))))))))))"
  },
  {
    "original_sentence": "How about from 12:30 PM to 2:00 PM tomorrow?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 12L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 2L)))))))))"
  },
  {
    "original_sentence": "Yes!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have any meetings tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "dentist appointment at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (NextTime (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "please make that 3 pm to 4:30 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 4L 30L))))))))"
  },
  {
    "original_sentence": "That should be for an hour as well.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "cancel the dinner date at 5pm",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.subject_? (?~= \"dinner date\")) (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "Yes, please cancel that event",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, and can you also reject the movie date set up for tomorrow at 7 pm?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 7L)) (Event.subject_? (?= \"movie date\"))))))))))"
  },
  {
    "original_sentence": "Yeah, just cancel that please.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cancel my next doctor's appointment please.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (Event.subject_? (?~= \"doctor's appointment\")) 1L)))))"
  },
  {
    "original_sentence": "Cancel this for me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "please remove all calender entry for this year.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "lease remove all calender entry i have with obama",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "please remove all calendar entries I have for this month",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "please remove all calendar entry i have with Obama this week",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "yes",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Please tell me I scheduled a Sales Meeting this week...",
    "parse": "(Yield (>= (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Sales Meeting\")) (ThisWeek))))) 1L))"
  },
  {
    "original_sentence": "How good am I? Unfortunately, that's just not going to work, let's move it to Saturday from 8 am to 9:30 am",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) x1 (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Saturday)) (NumberAM 8L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (HourMinuteAm 9L 30L)))))))))"
  },
  {
    "original_sentence": "Did I see tom last week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"tom\")))) (LastWeekNew))))) 0L))"
  },
  {
    "original_sentence": "Create teh meeting with Tom to this week end",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (ThisWeekend))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))))))))"
  },
  {
    "original_sentence": "Yes, the second one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Am I having dinner with James this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\"))))) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Is there a dinner planned for next weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"dinner\")) (NextWeekend))))) 0L))"
  },
  {
    "original_sentence": "Karl Boon and I need to meet tomorrow. Please add an event.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karl Boon\")))))))))))"
  },
  {
    "original_sentence": "Second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Time is incorrect. Change it to 10 AM",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "Yes. Duration 1 hour.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "duration of event 1 hour",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Location is Central Office",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Central Office\"))))))"
  },
  {
    "original_sentence": "Yes. Add that to my calendar.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks so much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "OK. Bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "helo",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Will it be sunny for our Easter Egg Hunt on Sunday at McKinley Park?",
    "parse": "(Yield (IsSunny (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"McKinley Park\"))) (DateTime.date_? (?= (NextDOW (Sunday)))))))"
  },
  {
    "original_sentence": "Is it going to rain that day?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (Event.location x0))) (DateTime.date_? (?= (DateTime.date (Event.start x0))))))))"
  },
  {
    "original_sentence": "Can you set up a business meeting at the Empire State building at 4:00 pm tomorrow as well?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"business meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L))))) (Event.location_? (?= (LocationKeyphrase.apply \"the Empire State building\")))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you tell me what the weather will be like for the meeting at the Empire State building tomorrow?",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \"the Empire State building\"))) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "I need to schedule a meeting with Angel's boss's boss",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Angel\"))))))))))))"
  },
  {
    "original_sentence": "I need to schedule a meeting with Dan Marton's skip.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Marton\"))))))))))))"
  },
  {
    "original_sentence": "The fist one works is look fare",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make it a half hour longer",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toHours 0.5))))))))"
  },
  {
    "original_sentence": "That's fine.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I'm supposed to meet with Ben tomorrow at 1pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ben\")))))))))))"
  },
  {
    "original_sentence": "Yes. When do I go moon watching with Edward, Bella and Jacob?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?= \"moon watching\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Edward\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bella\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jacob\"))))))))))))"
  },
  {
    "original_sentence": "create this meeting ending at 2:00",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (?= (TimeAfterDateTime (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (NumberAM 2L)))))))"
  },
  {
    "original_sentence": "yes it looks prefect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "and invite rosy to the event",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"rosy\"))))))))))"
  },
  {
    "original_sentence": "hey computer, where am?",
    "parse": "(Yield (Here))"
  },
  {
    "original_sentence": "add Bahama wedding cruise for 10/24- 10/28",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"Bahama wedding cruise\")) (DateAndConstraint (MD 24L (toMonth 10L)) (MD 28L (toMonth 10L)))))))"
  },
  {
    "original_sentence": "Yes, this looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to be with my team tomorrow for 918 days",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser))))) (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (Tomorrow) (toDays 918))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "how can you help me bot?",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "What am I doing tomorrow morning?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Morning))))"
  },
  {
    "original_sentence": "Give me the room number for the standup please",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"standup\")))))))"
  },
  {
    "original_sentence": "Add a dentist appointment on Monday at 4:00 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Uninvite Max from dentist appointment.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Max\")))))))))))"
  },
  {
    "original_sentence": "Good, seeing as how Max isn't part of the appointment.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you extend it to 5:30PM please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 5L 30L)))))))"
  },
  {
    "original_sentence": "What room is my meeting with Richard and his supervisor?",
    "parse": "(let (x0 (PersonName.apply \"Richard\")) (Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))))))))))))"
  },
  {
    "original_sentence": "Cancel this meeting.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes thank you. Notify Richard and Dan of the cancellation.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceSwitchTabs))"
  },
  {
    "original_sentence": "Ok, add a one-on-one with Liz's boss please",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"one-on-one\")) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Liz\"))))))))))))"
  },
  {
    "original_sentence": "Delete one-on-one for now. What is the name of Liz' boss?",
    "parse": "(do (DoNotConfirm) (Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Liz\"))))))))"
  },
  {
    "original_sentence": "Please update my calendar to include \"Look for apartments\" tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Look for apartments\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "Change the start time for the soccer match to 3 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"soccer match\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Are you able to schedule anything earlier?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "I like the first one.",
    "parse": "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Sounds good.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I will, thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "where i have meet with Robert this week?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Robert\")))) (ThisWeek)))))))"
  },
  {
    "original_sentence": "Reserve a time block from 5 PM to 9PM tomorrow.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Meeting time, 5 PM to 9 PM on Friday",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 5L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 9L)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "can I move that to Sunday?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Sunday)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Next week, schedule a date for Tuesday morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"date\")) (Event.start_? (DateTimeConstraint (Morning) (DowOfWeekNew (Tuesday) (NextWeekList))))))))"
  },
  {
    "original_sentence": "second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "change duration to 2 hours",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I meet with Brad this month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brad\")))) (FullMonthofMonth (Date.month (Today))))))) 0L))"
  },
  {
    "original_sentence": "great, thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What do I have tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Add Stan to pizza party event.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"pizza party\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Stan\"))))))))))"
  },
  {
    "original_sentence": "WELL GOOD",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Show meeeeee the money, I mean calendar.",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "I have a business trip tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"business trip\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "Hang on a sec.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "confirm the business trip",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please extend the business trip from 9:00AM through 5:00PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"business trip\")))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Hold on just one second.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "The business trip looks good to me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you add business meetings with Eric after the trip?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"business meetings\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"trip\"))))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Eric\")))))))))))"
  },
  {
    "original_sentence": "Create a meeting at 10am on Friday and invite Wendy, Laurie, Willis, and Jerome.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 10L)))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wendy\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Laurie\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Willis\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jerome\"))))))))))))"
  },
  {
    "original_sentence": "My manager wants to attend too. His name is Ray Southerland.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ray Southerland\"))))))))))"
  },
  {
    "original_sentence": "Please cancel the meeting with Ray Southerland.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Please cancel the meeting with Kim Possible and her skip",
    "parse": "(let (x0 (PersonName.apply \"Kim Possible\")) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))))))))))))"
  },
  {
    "original_sentence": "Yes this one to be cancel",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to setup meetings with marketing at 9am every day starting Thursday for 2 weeks and reschedule the Vegas trip to begin on the following Friday.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Remind myself that I'm having lunch with John, May, Jane, and Joe tomorrow",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "John will not be able to make it. Elly will come instead. These are people who will join me for lunch: Elly, May, Jane, and Joe.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elly\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"May\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joe\")))))))))))"
  },
  {
    "original_sentence": "That is correct, I just got a last minute reply. Add Bill to the lunch as well.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bill\"))))))))))"
  },
  {
    "original_sentence": "Wait, May cancelled.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"May\")))))))))))"
  },
  {
    "original_sentence": "Yuuuuuuup",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "tell me what day my 2nd event is",
    "parse": "(Yield (Event.start (FindNumNextEvent (^(Event) EmptyStructConstraint) 2L)))"
  },
  {
    "original_sentence": "What time is my second event on Sunday",
    "parse": "(Yield (Event.start (FindNumNextEvent (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)) 2L)))"
  },
  {
    "original_sentence": "What is my second event on March 7th?",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (MD 7L (March)) (^(Event) EmptyStructConstraint)) 2L))"
  },
  {
    "original_sentence": "What's my supervisors name?",
    "parse": "(Yield (FindManager (toRecipient (CurrentUser))))"
  },
  {
    "original_sentence": "put dinner meeting with Dan Schoffel",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner meeting\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Schoffel\")))))))))))"
  },
  {
    "original_sentence": "put dinner meeting with smith",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner meeting\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"smith\")))))))))))"
  },
  {
    "original_sentence": "Yes, the second one . can you also add a new meeting with my manager for next week on tuesday.",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (DowOfWeekNew (Tuesday) (NextWeekList))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))))))))"
  },
  {
    "original_sentence": "Yes. Who is logged in on this computer?",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CurrentUser)))"
  },
  {
    "original_sentence": "Show when I next see Molly",
    "parse": "(Yield (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Molly\"))))))) 1L))"
  },
  {
    "original_sentence": "Show me any other meetings with Molly next week",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Molly\"))))) (NextWeekList))))"
  },
  {
    "original_sentence": "great schedule a-team on thursday afternoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"a-team\")) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Thursday))))))))"
  },
  {
    "original_sentence": "can you arrange with 2.30 PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinutePm 2L 30L)))))))"
  },
  {
    "original_sentence": "Yes that looks correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "How many hours should my meeting last?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Make an event for Tuesday at 3pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "make start time as 2 PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "That looks good to me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I wonder if I should extend the duration of the meeting since there will be more than one presenter.",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "I would like a meeting with the team this coming Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "I think that the first time will work better, please put it on my calendar.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you set up a meeting with my team tomorrow?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Give me the second.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I've got to set up a time with my team tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "accept lunch with Becky but do not send a repsonse.",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Becky\")))))))) :response (ResponseStatusType.Accepted) :sendResponse (RespondShouldSend.apply false)))"
  },
  {
    "original_sentence": "Decline brunch with Elli tomorrow and send a response that I will be working.",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I will be working\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"brunch\")))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Actually don't send a response.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(RespondShouldSend) AlwaysTrueConstraint)) (intension (RespondShouldSend.apply false)))))"
  },
  {
    "original_sentence": "Search for events that are not in Austin today.",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.location_? (negate (?= (LocationKeyphrase.apply \"Austin\")))) (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Bring up my meetings that will take place outside Austin",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \"Austin\"))))))"
  },
  {
    "original_sentence": "Do i have any other deals that aren't in san antonio?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \"san antonio\"))))))"
  },
  {
    "original_sentence": "Add a lunch meeting wednesday next week at noon. Include Emily and Corvo.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (DowOfWeekNew (Wednesday) (NextWeekList)) (Noon))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Corvo\"))))))))))))"
  },
  {
    "original_sentence": "Looks right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create a event, job interview at Macy's Thursday 2 PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"job interview\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 2L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Macy's\")))))))"
  },
  {
    "original_sentence": "Please extend out to 4 PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "I need to look at my calendar for Wednesday",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Move the second event to Thursday.",
    "parse": "(let (x0 (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Thursday)))))))))"
  },
  {
    "original_sentence": "That works.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What am I doing on Saturday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "set dinner tomorrow at park with family",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Am i meeting with Craig and Jeff today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Craig\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeff\")))))))) 0L))"
  },
  {
    "original_sentence": "Delete event \"Jen's Baby Shower\"",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Jen's Baby Shower\")))))))))"
  },
  {
    "original_sentence": "Add Baby Shower to next Sunday at 5 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Baby Shower\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Add my doctor's appointment on Tuesday the 25th at 4 pm to 5 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (nextDayOfMonth (Today) 25L) (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Will I be meeting with Aragorn next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Aragorn\")))) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "What about with Arwen?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Arwen\"))))))"
  },
  {
    "original_sentence": "What about Gimli?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Gimli\"))))))"
  },
  {
    "original_sentence": "Is there any chance i'll be meeting with Legolas before Aragorn?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Aragorn\")))))))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Legolas\")))))))) 0L))"
  },
  {
    "original_sentence": "Will I be traveling to Gondor tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.location_? (?= (LocationKeyphrase.apply \"Gondor\"))))))) 0L))"
  },
  {
    "original_sentence": "Do I have any events at 3pm today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 3L)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Ok at 5 pm add task scheduling.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"task scheduling\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "At 6pm add diner with emily",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"diner\")) (Event.start_? (?= (NextTime (NumberPM 6L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"emily\")))))))))))"
  },
  {
    "original_sentence": "Adjust that to be from 6:00 to 8:00pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 6L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "I want to book a haircut next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"haircut\")) (Event.start_? (DateTime.date_? (NextWeekList)))))))"
  },
  {
    "original_sentence": "Just book me for Monday at 10am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "Sure",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you change my next dentist appointment to the week prior?",
    "parse": "(let (x0 (FindNumNextEvent (Event.subject_? (?~= \"dentist appointment\")) 1L)) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (PeriodBeforeDate (DateTime.date (Event.start x0)) (toWeeks 1)))))))))"
  },
  {
    "original_sentence": "That looks right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Yeah, thanks, now can you also add \"Movies with Kim\" to tonight at 6:15pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Movies with Kim\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (HourMinutePm 6L 15L))))))))"
  },
  {
    "original_sentence": "Perfect.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "When is my next appointment with Dr. Johnston?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dr. Johnston\")))) 1L)))"
  },
  {
    "original_sentence": "Did I have a Snail Race earlier today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (EventOnDate (Today) (Event.subject_? (?~= \"Snail Race\"))))))) 0L))"
  },
  {
    "original_sentence": "What was my last event from earlier today?",
    "parse": "(Yield (EventBeforeDateTime (Now) (EventOnDate (Today) (?= (FindLastEvent (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "When was my Bike Ride from earlier today?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (EventOnDate (Today) (Event.subject_? (?~= \"Bike Ride\")))))))))"
  },
  {
    "original_sentence": "We are going to go kill zombies with Negan, but I need to coordinate with him so I need contact information. Specifically where his office is",
    "parse": "(Yield (Person.officeLocation (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Negan\"))))))))"
  },
  {
    "original_sentence": "That's way too far. Let me call him to change locations. I need his number",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Well we decided we are going to exchange emails. What is his email?",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Schedule a Car Showing at 11:00 AM on Wednesday and set my status to Out of Office.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Car Showing\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 11L))))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
  },
  {
    "original_sentence": "That is perfect, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, do I have anything else scheduled that Wednesday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Ahh, okay, nice, can you also add that I need to pick up Joey at 6pm on the same day?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pick up Joey\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "Please set up an event for a faculty meeting this Friday at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"faculty meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "change the time to 4pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "5PM is actually a better start time.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When am I having lunch with Brittany?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brittany\"))))))))))"
  },
  {
    "original_sentence": "Accept that invitation",
    "parse": "(Yield (EventAttendance :event (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Hello, can you please add a dinner meeting with Joe tomorrow at 7 pm and tell me who his supervisor is so I can alert him?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Okay, please schedule a dinner meeting with Joe tomorrow at 7pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 7L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joe\")))))))))))"
  },
  {
    "original_sentence": "add donald trump to this dinner",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"donald trump\"))))))))))"
  },
  {
    "original_sentence": "Is donald trump joe's manager?",
    "parse": "(Yield (== (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"donald trump\"))))) (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"joe\"))))))))"
  },
  {
    "original_sentence": "Who is Joe's manager at this time?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joe\")))))))"
  },
  {
    "original_sentence": "I need to know what date valentines day fell on last year.",
    "parse": "(Yield (Date.dayOfWeek (HolidayYear (Holiday.ValentinesDay) (LastYear))))"
  },
  {
    "original_sentence": "Create an event titled \"VDAY Dinner\" for Valentines Day this year not last year.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"VDAY Dinner\")) (Event.start_? (DateTime.date_? (?= (NextHolidayFromToday (Holiday.ValentinesDay)))))))))"
  },
  {
    "original_sentence": "What day was my Dart game last year?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Dart game\")) (FullYearofYear (LastYear)))))))"
  },
  {
    "original_sentence": "find the event with Tom and cancel it",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))))))))"
  },
  {
    "original_sentence": "Actually I meant the event with Dracula.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dracula\"))))))"
  },
  {
    "original_sentence": "please cancel all my events in thursday",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "yes.. i need help from you",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add an event for last Thursday titled \"Meeting with Janice\" and it lasted for one hour, 3PM to 4PM.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (previousDayOfWeek (Today) (Thursday)) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Meeting with Janice\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L))))) (Event.duration_? (?= (toHours 1))))))))"
  },
  {
    "original_sentence": "Move it to last Friday since we had to postpone the meeting.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (previousDayOfWeek (Today) (Friday))))))))"
  },
  {
    "original_sentence": "that looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you change the meeting time at 4:30 PM",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 4L 30L)))))))"
  },
  {
    "original_sentence": "Yes it looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When is the general manager set to call a meeting",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "What is on my schedule this week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
  },
  {
    "original_sentence": "What's next on my calendar?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "THANK YOU",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "add dinner party with david tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner party\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"david\")))))))))))"
  },
  {
    "original_sentence": "Please tell me which meeting today is not with Camden Camerini?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Camden Camerini\")))))))) (EventOnDate (Today) (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Do i have a party coming up that excludes Camden?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"party\")) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Camden\")))))))))))) 0L))"
  },
  {
    "original_sentence": "What sales pitch meeting doesn't include my manager next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"sales pitch meeting\")) (Event.attendees_? (AttendeeListExcludesRecipient (?= (FindManager (toRecipient (CurrentUser))))))) (NextWeekList))))"
  },
  {
    "original_sentence": "Thanks, do I have any meetings without Don?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Don\"))))))))))"
  },
  {
    "original_sentence": "Are there anything else?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))) 0L))"
  },
  {
    "original_sentence": "hi",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "I need to schedule a Dermatologist appointment on the 15th starting at 3:00 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dermatologist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 15L) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Extend the appointment for an hour.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Is there anything on my calendar for monday the 18th ?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 18L) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Great can you add a group meeting that day anytime after noon?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"group meeting\")) (Event.start_? (OnDateAfterTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Noon)))))))"
  },
  {
    "original_sentence": "Is the quarterly meeting this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"quarterly meeting\")) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "I had a basketball game with Elli Parker last week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"basketball game\")) (Event.start_? (DateTime.date_? (LastWeekNew)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli Parker\")))))))))))"
  },
  {
    "original_sentence": "The second one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I had a football game with Brent last Friday at 2 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"football game\")) (Event.start_? (?= (DateAtTimeWithDefaults (previousDayOfWeek (Today) (Friday)) (NumberPM 2L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brent\")))))))))))"
  },
  {
    "original_sentence": "I went to a game last saturday at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"game\")) (Event.start_? (?= (DateAtTimeWithDefaults (previousDayOfWeek (Today) (Saturday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "create baseball game on monday at 5",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"baseball game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "how long is thursdays meeting",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "ok!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "How many events do I have with Kim next month?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))) (FullMonthofMonth (NextMonth)))))))"
  },
  {
    "original_sentence": "What about in January?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (January))))))"
  },
  {
    "original_sentence": "What about May?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (May))))))"
  },
  {
    "original_sentence": "Have I got anything going on Thursday afternoon",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)) (Afternoon))))"
  },
  {
    "original_sentence": "Do I meet with Abby later today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventForRestOfToday (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))) 0L))"
  },
  {
    "original_sentence": "Do I have any meetings on 26 Oct",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 26L (October)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Am I meeting with Kim about the budget on Tuesday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (& (Event.subject_? (?~= \"budget\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))) 0L))"
  },
  {
    "original_sentence": "Is Kim going to be at the meeting on Monday?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "can i complete a survey for you?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "What movies are playing on Saturday?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Update my movie date on tomorrow to after 7 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"movie date\"))))))) (Event.start_? (DateTime.time_? (?> (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "anything later than that?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "No, I want something really late. What's the latest showing they have that evening or early morning?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Alright just find a free time in my calendar very late that evening.",
    "parse": "(Yield (RecipientAvailability (& (Event.start_? (DateTime.time_? (LateTimeRange (Evening)))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true))"
  },
  {
    "original_sentence": "i need an urgent meeting with Esther",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"urgent meeting\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Esther\")))))))))))"
  },
  {
    "original_sentence": "The 2nd one works much better",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Ok. Add morning walk for Saturday morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"morning walk\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Saturday))))))))"
  },
  {
    "original_sentence": "The 2nd one. Also add studying for exams to my calendar on Sunday for 2 hours",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"studying for exams\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))) (Event.duration_? (?= (toHours 2))))))))"
  },
  {
    "original_sentence": "The 1 pm one. Also Put Take Exam on my schedule at 5:30 pm.",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Take Exam\")) (Event.start_? (DateTime.time_? (?= (HourMinutePm 5L 30L)))))))))"
  },
  {
    "original_sentence": "Add a Lunch with my sister on Monday at 1:00 p.m., at Gigis´s",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Add my brother too.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Change the location to Gigis.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Gigis\"))))))"
  },
  {
    "original_sentence": "Do I have anything scheduled for 11 AM tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "The next day I think put a lunch for 12 noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (Noon))))))))"
  },
  {
    "original_sentence": "fix an appointment with mr. robert on monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"mr. robert\")))))))))))"
  },
  {
    "original_sentence": "Gary, Jen, and Ben are supposed to meet me in 403 for a meeting at 4.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (NextTime (NumberPM 4L)))) (Event.location_? (?= (LocationKeyphrase.apply \"403\")))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Gary\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jen\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ben\"))))))))))))"
  },
  {
    "original_sentence": "change the time to 5pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "That looks good to me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great, now when do I meet with Phoebe, Alma, Brodie, and Chuck?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Phoebe\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alma\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brodie\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chuck\")))))))"
  },
  {
    "original_sentence": "Remove my appointment with my doctor on my calendar",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor\")))))))))"
  },
  {
    "original_sentence": "Yes, please cancel the doctor appointment on Friday at 2:00 to 3:00pm.",
    "parse": "(Yield (Execute (ConfirmDeleteAndReturnAction (& (& (& (Event.subject_? (?~= \"doctor\")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L))))) (Event.end_? (DateTime.time_? (?= (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Please set up lunch with Cornelio Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cornelio\")))))))))))"
  },
  {
    "original_sentence": "Add softball from 6:15 to 7:15 on Wednesday.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Wednesday)) (HourMinutePm 6L 15L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"softball\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 7L 15L)))))))))"
  },
  {
    "original_sentence": "yeppers",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "You know what, no, that's not right. It starts at 6.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "No, that's not right either. Change the ending to 8.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "Make softball last from 6 to 8",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"softball\"))))) x1 (DateAtTimeWithDefaults (DateTime.date (Event.start x0)) (NumberPM 6L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (NumberPM 8L)))))))))"
  },
  {
    "original_sentence": "Once my lunch meeting ends, I'm going to see Carl's team.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch meeting\")))))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carl\"))))))))))))"
  },
  {
    "original_sentence": "Yes, I look forward to Carl`s team.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Immediately after that, set up a meeting with Tom's team.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\"))))))))))))"
  },
  {
    "original_sentence": "Thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Enter another meeting after the luncheon on Monday and invite Tom's team members.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"luncheon\"))))))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\"))))))))))))"
  },
  {
    "original_sentence": "I need a Football Game scheduled for Nov 2 with donald",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Football Game\")) (Event.start_? (DateTime.date_? (?= (MD 2L (November)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"donald\")))))))))))"
  },
  {
    "original_sentence": "I want the first alternative. Tell me other future events I have with Donald.",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Donald\"))))))))"
  },
  {
    "original_sentence": "that's ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make a appointment for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "I'll go for the earlier one.",
    "parse": "(Yield (Execute (ChooseCreateEvent (Earliest) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make an appointment with doctor",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Am I going to that meeting?",
    "parse": "(Yield (Event.responseStatus (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Can you check if Mike got the invite?",
    "parse": "(Yield (allows (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mike\"))) (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Has Paul responded to the sports meeting this week?",
    "parse": "(Yield (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"sports meeting\")) (Event.start_? (DateTime.date_? (ThisWeek))))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paul\"))))))))"
  },
  {
    "original_sentence": "Is it confirmed that everyone is coming to my birthday dinner this weekend?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Has Irene accepted the happy hour invite this week?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"happy hour\")) (ThisWeek))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Irene\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Did Steve accept the same invite?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steve\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Make a salon appointment next monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"salon appointment\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))))))"
  },
  {
    "original_sentence": "The one at 10:00 am works but can you make it last until 11:30 am?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Perfect!",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "where is my salon appointment.",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"salon appointment\")))))))"
  },
  {
    "original_sentence": "Make location for salon appointment Hair n Things on Main street.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"salon appointment\")))))) (Event.location_? (?= (LocationKeyphrase.apply \"Hair n Things on Main street\"))))))"
  },
  {
    "original_sentence": "Schedule board meeting on november 10th at 12 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"board meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 10L (November)) (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "Wait, no, it should be later than that.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "The second one please.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks. I need to meet Kathy tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kathy\")))))))))))"
  },
  {
    "original_sentence": "bottom one",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I am attending all women against divorce from 15th for 7days",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"women against divorce\")) (nextDayOfMonth (Today) 15L) (toDays 7)))))"
  },
  {
    "original_sentence": "I'll be on a retreat for 5 days next Wednesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"retreat\")) (NextDOW (Wednesday)) (toDays 5)))))"
  },
  {
    "original_sentence": "actually make it 6 days",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 6)))))"
  },
  {
    "original_sentence": "Yup.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to add a family reunion with Molly October 27 for 2 days.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Molly\"))))))) (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"family reunion\")) (MD 27L (October)) (toDays 2))))))"
  },
  {
    "original_sentence": "Do I have anything else on my calendar for this weekend besides the movie date?",
    "parse": "(let (x0 (ThisWeekend)) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (negate (?~= (Event.subject (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"movie date\")) x0)))))))) x0)))) 0L)))"
  },
  {
    "original_sentence": "Do I have anything else scheduled besides Work and Hustle?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (negate (?~= \"Work and Hustle\")))))) 0L))"
  },
  {
    "original_sentence": "What does not match Make Turkey Sandwich on my schedule?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (negate (?~= \"Make Turkey Sandwich\")))))"
  },
  {
    "original_sentence": "Whats the weather like today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "So no chance of rain?",
    "parse": "(Yield (not (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint)))))))"
  },
  {
    "original_sentence": "What is the evening weather going to be like?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTimeConstraint (Night) (Today))))"
  },
  {
    "original_sentence": "Ok thank you so much!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is my second event on Tuesday?",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) 2L))"
  },
  {
    "original_sentence": "What is my second event next month?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))) 2L))"
  },
  {
    "original_sentence": "Where is my 2nd event on Friday taking place?",
    "parse": "(Yield (Event.location (FindNumNextEvent (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) 2L)))"
  },
  {
    "original_sentence": "What events do I have with Abby this week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))) (ThisWeek))))"
  },
  {
    "original_sentence": "put the dinner with jenny at 8.00 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (NextTime (NumberPM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jenny\")))))))))))"
  },
  {
    "original_sentence": "No make dinner 2 hours long.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "That is perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Ok Make It",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "hi, i have a meeting this evening after work",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"work\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventOnDateAfterTime (DateTime.date (Event.start x0)) (^(Event) EmptyStructConstraint) (DateTime.time (Event.end x0)))))))"
  },
  {
    "original_sentence": "I like the second one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thank you very much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "make a apportionment for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "The bottom one works best",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Create a meeting with sally",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sally\"))))))))))"
  },
  {
    "original_sentence": "No, I want it to start at 11 am.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "They are both the same.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "The bottom one is fine",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can we extend it to 12:30PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (HourMinutePm 12L 30L)))))))"
  },
  {
    "original_sentence": "My family and I will be going out to eat next Tuesday. Delete the event to \"cook dinner for the family\"",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"cook dinner for the family\")) (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "Mhm, that's what I want cancelled.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "One moment. I'm trying to figure out what I want to do next.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Can you tell me if I have anything on my calendar for next Tuesday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "My schedule looks great. Thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Clear out any events I might have after 5pm tonight.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "What events do I have tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What time is my monthly budget meeting?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"monthly budget meeting\")))))))"
  },
  {
    "original_sentence": "create frisbee night on monday at 3",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"frisbee night\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "add this to my calendar",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What have I got in 6 hours from now?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 6))) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "IT'S FINE",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you book my spa appointment after my dentist appointment?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"spa appointment\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\"))))))))))))"
  },
  {
    "original_sentence": "Do I have something between 4 and 5 pm tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (Tomorrow) (^(Event) EmptyStructConstraint) (NumberPM 4L) (NumberPM 5L))))) 0L))"
  },
  {
    "original_sentence": "What events do I have tonight?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Night))))"
  },
  {
    "original_sentence": "Can you tell me what's on the plan tomorrow morning?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Morning))))"
  },
  {
    "original_sentence": "That is great. Do I have anything for this weekend",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "do i have plans between 3 and 5",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRangeTime (^(Event) EmptyStructConstraint) (TimeToTime (NumberPM 3L) (NumberPM 5L)))))) 0L))"
  },
  {
    "original_sentence": "Have Chris and Amy been added to the department meeting on Tuesday?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"department meeting\"))))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chris\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\")))))))))))"
  },
  {
    "original_sentence": "That looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "How long is the sales meeting on Thursday?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.subject_? (?~= \"sales meeting\"))))))))"
  },
  {
    "original_sentence": "Please move that to 5 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add softball to my calendar on Friday from 6:00 PM to 8:00 PM.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 6L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"softball\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 8L)))))))))"
  },
  {
    "original_sentence": "Cancel anything else that day.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Thank you. Please place \"go to the gym\" in its place.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceOther))"
  },
  {
    "original_sentence": "Will I be meeting with Patrick and Pete anytime next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Patrick\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Pete\"))))) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "What do I have on Wednesday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "I meant Tuesday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Hi",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "I would like to know how the weather is in Marion, IN 46952?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"46952\"))) (?= (Now))))"
  },
  {
    "original_sentence": "Is it going to snow?",
    "parse": "(Yield (WillSnow (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Will it rain?",
    "parse": "(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Thank you so much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to see what I'm doing Thursday afternoon.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)) (Afternoon))))"
  },
  {
    "original_sentence": "move this to friday afternoon",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Friday)))))))"
  },
  {
    "original_sentence": "Cancel the appointment.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Create an appointment on Friday at 4:00 PM through 4:30 PM.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 4L 30L)))))))))"
  },
  {
    "original_sentence": "Add lunch with Dad on saturday",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I have a meeting with my lawyer on Tuesday for 2 hours starting at 8:30 am.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "How many meetings do I have on my calendar that are longer than 25 minutes between this Friday and next Saturday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.duration_? (?> (toMinutes 25))) (EventDuringRange (^(Event) EmptyStructConstraint) (DateAndConstraint (NextDOW (Friday)) (DowOfWeekNew (Saturday) (NextWeekList)))))))"
  },
  {
    "original_sentence": "What's next after that?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Alter my Dinner location from The BBQ Joint to Rick's.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Dinner\")) (Event.location_? (?= (LocationKeyphrase.apply \"The BBQ Joint\")))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Rick's\"))))))"
  },
  {
    "original_sentence": "I need you to change my dinner to the chop house from The BBQ Joint, please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.location_? (?= (LocationKeyphrase.apply \"The BBQ Joint\")))))))) (Event.location_? (?= (LocationKeyphrase.apply \"chop house\"))))))"
  },
  {
    "original_sentence": "Change \"Drinks\" from the Bar to the Chop House",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Drinks\")) (Event.location_? (?= (LocationKeyphrase.apply \"the Bar\")))))))) (Event.location_? (?= (LocationKeyphrase.apply \"the Chop House\"))))))"
  },
  {
    "original_sentence": "Hi! Please add Painting with a Twist Night out next Thursday at 6PM. Attending will be Jessica, Amy, and Jill J.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Painting with a Twist Night out\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 6L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jessica\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jill J.\"))))))))))))"
  },
  {
    "original_sentence": "Can you add another meeting with Abby, Jake, and Kim",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))))))"
  },
  {
    "original_sentence": "I will be meeting with Jill, Jessica and Kim tomorrow at 4 pm for 2 hours",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L)))) (Event.duration_? (?= (toHours 2)))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jill\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jessica\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))))))"
  },
  {
    "original_sentence": "Please find out when the movie the favorite is playing at kickingbird cinema in Edmond",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Schedule a movie for 10am on saturday morning for r4 hours",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"movie\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 10L))))) (Event.duration_? (?= (toHours 4)))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you see if I have anything scheduled in the evening on Friday or Saturday?",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "Make me an all weekend event for WOW TIME",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"WOW TIME\")) (ThisWeekend)))))"
  },
  {
    "original_sentence": "That is perfection in it's finest form",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "AFTER 3 DAYS LATER",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (DateTime.date (Event.start x0)) (toDays 3)))))))))"
  },
  {
    "original_sentence": "yes, please",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make an event for management meeting for 13th to 16th",
    "parse": "(let (x0 (nextDayOfMonth (Today) 13L)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"management meeting\")) (DateAndConstraint x0 (nextDayOfMonth x0 16L)))))))"
  },
  {
    "original_sentence": "Hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "I want to check the weather for Boston for Friday.",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Boston\"))) (DateTime.date_? (?= (NextDOW (Friday))))))"
  },
  {
    "original_sentence": "great. please create an event for friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "no, the time isn't correct",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "create an event to start at 7pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "call the event basketball game",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"basketball game\")))))"
  },
  {
    "original_sentence": "change the time to 7pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "the first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "good bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make an event to go shopping on Sunday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go shopping\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))))))"
  },
  {
    "original_sentence": "I need to make a dinner event this evening with clients",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Can you look up the name Darian",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Darian\")))))))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have any running events this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"running\")) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Actually I meant Walking",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"Walking\")))))"
  },
  {
    "original_sentence": "I need to delete all events on January 2nd.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "What do I have scheduled on the next day?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "CREATE A MEETING WITH THE TOURS COMPANY THIS SUNDAY AT RADISON BLU",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"MEETING WITH THE TOURS COMPANY\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))) (Event.location_? (?= (LocationKeyphrase.apply \"RADISON BLU\")))))))"
  },
  {
    "original_sentence": "YES",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What do I have after that?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)))))"
  },
  {
    "original_sentence": "Okay, please also mark down that I need to check in at the DoubleTree in Vacaville, CA at 8 pm on the 26th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"check in at the DoubleTree\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 26L) (NumberPM 8L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Vacacille, Ca\")))))))"
  },
  {
    "original_sentence": "Yes that looks correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add 49ers football game tomorrow at 5:20 pm to my calendar.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"49ers football game\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 5L 20L))))))))"
  },
  {
    "original_sentence": "Perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to update the time on that to 6 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "Let's change that to a Dallas Cowboys Game!",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.subject_? (?= \"Dallas Cowboys Game\")))))"
  },
  {
    "original_sentence": "Yes, and change the time to end at 9:30p",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (HourMinutePm 9L 30L)))))))"
  },
  {
    "original_sentence": "Start A Victory Party Right after for the next 8 hours!",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Victory Party\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.duration_? (?= (toHours 8)))))))"
  },
  {
    "original_sentence": "I need to cancel the victory party",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "I need to cancel the victory party",
    "parse": "(RepeatAgent)"
  },
  {
    "original_sentence": "i have to go grocery shopping tomorrow afternoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go grocery shopping\")) (Event.start_? (DateTimeConstraint (Afternoon) (Tomorrow)))))))"
  },
  {
    "original_sentence": "second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "i also need to return clothes today afternoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"return clothes\")) (Event.start_? (DateTimeConstraint (Afternoon) (Today)))))))"
  },
  {
    "original_sentence": "let's do first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "please also add workout session Saturday later in the moring",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"workout session\")) (Event.start_? (DateTimeConstraint (LateMorning) (NextDOW (Saturday))))))))"
  },
  {
    "original_sentence": "let's do second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Add a hair appointment to my schedule for tomorrow from 1-3pm and cancel my meetings scheduled for that time. Please reschedule the meetings I have tomorrow afternoon for Wednesday morning in the conference room from 9-11am.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "On Friday, add a meeting at Brick's with Tim and Betty at 2 pm for 2 hours, and also invite Mandy to my meeting on Friday with Rich and Steve.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Cancel all Monday events. I will be out of town",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "What events do I have tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Cancel the later event tomorrow.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindLastEvent (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "actually don't cancel it. Just change it to be an hour later.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (do (DoNotConfirm) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply :duration (toHours 1))))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "schedule vacation all next week",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "schedule vacation monday thru friday next week",
    "parse": "(let (x0 (DowOfWeekNew (Monday) (NextWeekList))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"vacation\")) (DateAndConstraint x0 (nextDayOfWeek x0 (Friday))))))))"
  },
  {
    "original_sentence": "can you make that monday, TUesday, Wednesday, Thursday and Friday?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Show me as working elsewhere for the rest of the afternoon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.time_? (Afternoon))) (Event.showAs_? (?= (ShowAsStatus.WorkingElsewhere)))))))"
  },
  {
    "original_sentence": "what's on my calendar for the rest of the day",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventForRestOfToday (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "wow i am really excitment.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Change the end time of my event watch all 22 marvel movies to March 21 at 7PM",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"watch all 22 marvel movies\")))))) (Event.end_? (?= (DateAtTimeWithDefaults (MD 21L (March)) (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "Make a appointment to tomorrow 5Am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 5L)))))))"
  },
  {
    "original_sentence": "It looks good, but I'd like to move the appointment to after lunch.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Lunch)))))))"
  },
  {
    "original_sentence": "second one please",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you make it an hour and fifteen minutes long?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (addDurations (toHours 1) (toMinutes 15)))))))"
  },
  {
    "original_sentence": "Delete the Appointment and make it for after lunch at 1:30 PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Appointment\")))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 1L 30L)))))))"
  },
  {
    "original_sentence": "Tomorrow I plan on taking the day off. Please update all events to the following day.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Move all my events two days forward",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "delete my events",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Can you schedule \"Day off\" for all day on Friday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"Day off\")) (NextDOW (Friday))))))"
  },
  {
    "original_sentence": "update my nex month events",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Please put running on the calendar for saturday at 6am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"running\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 6L))))))))"
  },
  {
    "original_sentence": "Schedule coffee with Jeri at the Starbucks on Melrose at 7 AM on Saturday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"coffee\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 7L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Starbucks on Melrose\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeri\")))))))))))"
  },
  {
    "original_sentence": "What time is my meeting for tomorrow?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"meeting\"))))))))"
  },
  {
    "original_sentence": "what time does it go to?",
    "parse": "(Yield (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "hhi",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Add a followup one week after my secret meeting",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"followup\")) (Event.start_? (?= (adjustByPeriodDuration (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"secret meeting\")))))) (PeriodDuration.apply (toWeeks 1)))))))))"
  },
  {
    "original_sentence": "Actually, let's make it end at 12.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "That looks fantastic",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When is the meeting with Pod, Jane, and Kent?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Pod\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kent\"))))))))))"
  },
  {
    "original_sentence": "Can you schedule a Pre Game session with Pod, Jane, and Kent?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Pre Game session\")) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Pod\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kent\"))))))))))))"
  },
  {
    "original_sentence": "The second one is good for me.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Okay",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please add jousting practice with Arya, Brienne, and Jamie.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"jousting practice\")) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Arya\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brienne\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamie\"))))))))))))"
  },
  {
    "original_sentence": "Whats the temperature outside",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))"
  },
  {
    "original_sentence": "Ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "ANy chance of rain",
    "parse": "(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Is Lampost in Reno Family Friendly?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Lampost in Reno\"))))))"
  },
  {
    "original_sentence": "Is Coconut Bowl in Sparks family friendly?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Coconut Bowl in Sparks\"))))))"
  },
  {
    "original_sentence": "I want to know if Coconut Bowl is a place that is family friendly.",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Coconut Bowl\"))))))"
  },
  {
    "original_sentence": "Hi there! Can you please search for all events I have for this coming Monday the 11th of February?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 11L (February)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you cancel that lunch for me.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Tell me what's on my calendar on Thursday.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Tomorrows news?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "What events do I have friday",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "The 2nd one is perfect",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you make an appointment today?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Today)))))))"
  },
  {
    "original_sentence": "I guess the later one would work",
    "parse": "(Yield (Execute (ChooseCreateEvent (Latest) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "INVITE FELISIA FOR THE SWIMMING CONTEST",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"SWIMMING CONTEST\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"FELISIA\"))))))))))"
  },
  {
    "original_sentence": "Change the time to 10am",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "Make an event for tuesday at 5pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "Change the time to 6pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When is my next meeting",
    "parse": "(Yield (Event.start (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))"
  },
  {
    "original_sentence": "Can you add james and his manager to that?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"james\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))))))))"
  },
  {
    "original_sentence": "Yes, perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "OK, great!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "cancel the business meeting",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"business meeting\")))))))))"
  },
  {
    "original_sentence": "what's going on friday morning?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) (Morning))))"
  },
  {
    "original_sentence": "Schedule see Dr. Daws on Friday at 7 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 7L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dr. Daws\")))))))))))"
  },
  {
    "original_sentence": "Yeah, that's great and can you also tell me when my next appointment with Mike is?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mike\")))) 1L))))"
  },
  {
    "original_sentence": "ok great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "great also make my calendar say out of office from 7:30 to 9:30 on the 22nd",
    "parse": "(let (x0 (DateAtTimeWithDefaults (nextDayOfMonth (Today) 22L) (HourMinuteAm 7L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinuteAm 9L 30L))))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))))))))"
  },
  {
    "original_sentence": "It's fine, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "That';ll be all for now",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please add dental cleaning Monday at 10 AM to my calendar.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dental cleaning\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "looks pretty well",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "that's good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "when is my next dental appointment?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"dental appointment\")) 1L)))"
  },
  {
    "original_sentence": "ok super good work",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "The dance recital is Mia is now December 28.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dance recital\")) (Event.start_? (DateTime.date_? (?= (MD 28L (December)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mia\")))))))))))"
  },
  {
    "original_sentence": "The second one please",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make an Event with Abby on June 5th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (MD 5L (June))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "The morning option please.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (Morning))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I want to move my hair appointment to June 29th.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"hair appointment\")))))) (Event.start_? (DateTime.date_? (?= (MD 29L (June))))))))"
  },
  {
    "original_sentence": "Do I have anything planned for next Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Great, thanks, but can you just make if for an hour instead?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Yes, perfect, now can you tell me if I have anything scheduled for the next day, on Saturday?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (FindEventWrapperWithDefaults (EventOnDate (adjustByPeriod (DateTime.date (Event.start (^(Dynamic) item x0))) (toDays 1)) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Make an event with Jeane at Conference 5 at 5 pm tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L)))) (Event.location_? (?= (LocationKeyphrase.apply \"Conference 5\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeane\")))))))))))"
  },
  {
    "original_sentence": "Yep, that's good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Dinner with the boss and his family at Ruth's Chris tonight at 10:00pm.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Dinner will take longer than 30 minutes, how about from 10 to midnight.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Dinner\")))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (Midnight))))))))"
  },
  {
    "original_sentence": "Change it to start at 9 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 9L)))))))"
  },
  {
    "original_sentence": "It should start at 8 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "Set event get ready for dinner with boss at 7 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"get ready for dinner\")) (Event.start_? (?= (NextTime (NumberPM 7L))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "What's my schedule like tomorrow morning?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Morning))))"
  },
  {
    "original_sentence": "Can you schedule lunch with Shirley at 3 pm that day.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 3L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Shirley\")))))))))))"
  },
  {
    "original_sentence": "Forget it, actually.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Hello! I need to reschedule my appointment for Friday for next month in the afternoon and move the soccer game to the following Friday at 3 pm",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Can you tell me when my last planning session was?",
    "parse": "(Yield (Event.start (FindLastEvent (EventBeforeDateTime (Now) (Event.subject_? (?~= \"planning session\"))))))"
  },
  {
    "original_sentence": "Perfect. What is first on my calendar on Friday?",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) 1L))"
  },
  {
    "original_sentence": "When is my next lunch with kids?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Schedule for warp core maintenance on March 5 at 8:15 am, it'll take about 8 hours.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"warp core maintenance\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 5L (March)) (HourMinuteAm 8L 15L))))) (Event.duration_? (?= (toHours 8)))))))"
  },
  {
    "original_sentence": "Actually we need to get that done in only 4 hours.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 4))))))"
  },
  {
    "original_sentence": "Book a taxi to pick me up at the San Antonio Airport today at noon",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "create taxi pick up at 12 in san antonio",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"taxi pick up\")) (Event.start_? (?= (NextTime (NumberPM 12L))))) (Event.location_? (?= (LocationKeyphrase.apply \"san antonio\")))))))"
  },
  {
    "original_sentence": "Change the time to 1pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "it's good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "make me a dinner that ends at 7",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.end_? (DateTime.time_? (?= (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Schedule a meeting with the SMU Team ending at 4 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"meeting with the SMU team\")) (Event.end_? (DateTime.time_? (?= (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "can you schedule a work out ending at 5:30",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"work out\")) (Event.end_? (?= (NextTime (HourMinutePm 5L 30L))))))))"
  },
  {
    "original_sentence": "do I have any events ongoing currently?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (Now) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "oh man, I'm missing this for work? do I have any other meetings today aside from this?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "hmmmmmmmmmmmmmmmmmmmmmm I think i'll be heading out for today. thank you chat bot",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to schedule 3 appointments for next week, one in the civic center at 3pm on Tuesday, another at my hairdresser at 11am on Thursday, and the last one at Bob's Autos for 4pm on Friday. Please cancel my lunch with Diane Monday.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Delete the second one of those and replace it with a new apointment at the civic center with the same timeframes",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Can you schedule a meeting with Abby for wednesday at 10 am to last through the end of the day?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (EndOfWorkDay))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))))))))"
  },
  {
    "original_sentence": "That will do. Please set me a new event on friday at end of work day.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (EndOfWorkDay))))))))"
  },
  {
    "original_sentence": "thats good. Now make me an event from 3 pm to the end of the work day on monday",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 3L))) (do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (EndOfWorkDay))))))))))"
  },
  {
    "original_sentence": "Remind me to watch Live PD on Wednesday at 8 pm",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Create an event called Live PD that starts on Wednesday at 8 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Live PD\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "Make it an hour",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Let'",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "when can I see Larry again?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Larry\"))))))))))"
  },
  {
    "original_sentence": "Schedule movie night with friends this evening.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I want to add \"walk in the park\" to the calendar with the wife at East Park at 4:45.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "What's on the calendar for this weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "Who did I meet with last Tuesday?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Tuesday)) (^(Event) EmptyStructConstraint)))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "And who did I meet with last friday?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Friday)) (^(Event) EmptyStructConstraint)))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "And last Monday?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (previousDayOfWeek (Today) (Monday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Where is that meeting?",
    "parse": "(Yield (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Is Bill going?",
    "parse": "(Yield (allows (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bill\"))) (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Is Emmy invited?",
    "parse": "(Yield (allows (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emmy\"))) (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Feburary 17th busy all day",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (^(Event) EmptyStructConstraint) (MD 17L (February))))))"
  },
  {
    "original_sentence": "When is my meeting with Jim?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))))))))"
  },
  {
    "original_sentence": "Please change the starting time to 1:45 PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 1L 45L)))))))"
  },
  {
    "original_sentence": "Perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "That works just perfect",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have anything with Mark on Thursday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))))))) 0L))"
  },
  {
    "original_sentence": "How many people are just maybe for the dinner Tuesday?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"dinner\"))))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Is anyone possibly attending the Driving?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Driving\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Who is perhaps accepted for the Podcast Recording?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Podcast Recording\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "time?",
    "parse": "(Yield (Now))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "OK",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "i dont want any help right now. please contact me later",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Annabelle's birthday got changed to Sunday",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Annabelle's birthday\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Sunday)))))))))"
  },
  {
    "original_sentence": "yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule going to the doctor this week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"going to the doctor\")) (Event.start_? (DateTime.date_? (ThisWeek)))))))"
  },
  {
    "original_sentence": "Oops, never mind, I want to cancel the request.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Schedule a meeting on Thursday at 8:30 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinuteAm 8L 30L)))))))"
  },
  {
    "original_sentence": "cancel that. i need a meeting on friday instead",
    "parse": "(do (DoNotConfirm) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "Neither work. I need to cancel these.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Will I be busy between 3 pm and 5 pm Wednesday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint) (NumberPM 3L) (NumberPM 5L))))"
  },
  {
    "original_sentence": "What are the dates of my meetings this month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"meetings\")) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today)))))))"
  },
  {
    "original_sentence": "Why not there should be some?",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have anything scheduled this month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today))))))) 0L))"
  },
  {
    "original_sentence": "Hello there. I need help updating an event for tomorrow. I think it is called accounting errors meeting.",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"accounting errors meeting\")))))))"
  },
  {
    "original_sentence": "Can you move that to 1 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Set up a tennis match with Jimmy for tomorrow at 10.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"tennis match\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 10L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jimmy\")))))))))))"
  },
  {
    "original_sentence": "That's fine, what else do I have going on that morning?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction)) x1 (^(Dynamic) item x0)) (do (Yield x0) (Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (DateTime.date (Event.start x1)) (Event.id_? (negate (?= (Event.id x1))))) (Morning))))))"
  },
  {
    "original_sentence": "I have a study group on Sunday at 9 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"study group\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "That is it. What else is planned for that morning?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction)) x1 (^(Dynamic) item x0)) (do (Yield x0) (Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id x1)))) (EventOnDateWithTimeRange (EventOnDate (DateTime.date (Event.start x1)) (^(Event) EmptyStructConstraint)) (Morning)))))))"
  },
  {
    "original_sentence": "cancel the study session",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"study session\")))))))))"
  },
  {
    "original_sentence": "Yes, please ancel this.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "who me",
    "parse": "(Yield (CurrentUser))"
  },
  {
    "original_sentence": "Is my doctor's appointment at 3 or 4 on Wednesday?",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "Find events named Doctor's Appointment",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Doctor's Appointment\"))))"
  },
  {
    "original_sentence": "Show me the some another timing to the doctor's appointment",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "tomorrow any appointment to me.\\",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "if any help to agent to me.",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "I can't keep track of anything anymore. What's today's date?",
    "parse": "(Yield (Today))"
  },
  {
    "original_sentence": "Push my appointment with Ryan to sometime in November.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ryan\")))))))) (Event.start_? (DateTime.date_? (FullMonthofMonth (November)))))))"
  },
  {
    "original_sentence": "Please move those to next month",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth)))))))"
  },
  {
    "original_sentence": "Change the hang and chill to the last week of November.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.date_? (NumberWeekFromEndOfMonth 1L (November)))))))"
  },
  {
    "original_sentence": "Thanks a lot",
    "parse": "(Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Change my birthday lunch to sometime next weekend.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"birthday lunch\")))))) (Event.start_? (DateTime.date_? (NextWeekend))))))"
  },
  {
    "original_sentence": "hi, update the meeting this afternoon",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Please find all meetings that include Joshua Murphy this month",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joshua Murphy\")))) (FullMonthofMonth (Date.month (Today))))))"
  },
  {
    "original_sentence": "Please move the first one to next Thursday at 11:00 am instead of 9:00 am.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "Eating Toast with Noami, Austin, Chelsea and Craig",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Eating Toast\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Noami\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Austin\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chelsea\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Craig\"))))))))))))"
  },
  {
    "original_sentence": "I want you to add John, Steve, Anne and Greg.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steve\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Anne\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Greg\")))))))))))"
  },
  {
    "original_sentence": "It will only last 15 minutes, and should be on Friday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Friday))))) (Event.duration_? (?= (toMinutes 15)))))))"
  },
  {
    "original_sentence": "The 2nd one works.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "How long is the gala dinner?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"gala dinner\"))))"
  },
  {
    "original_sentence": "What do I have scheduled for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What is event B?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"B\"))))"
  },
  {
    "original_sentence": "Are there any events on December 25?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 25L (December)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Cancel all appointments with Barack Obama",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Cancel my next appointment with Barack Obama",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\")))) 1L)))))"
  },
  {
    "original_sentence": "OK, do I have any appointments with Jeong-Ho Kim?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeong-Ho Kim\"))))))"
  },
  {
    "original_sentence": "OK, Thank-you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What events do I have tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can \"A 1\" be at 11 am instead?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"A 1\")))))) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "Yes this looks much better",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you very much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule event A 2 for later in the day.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"A 2\")) (Event.start_? (DateTimeConstraint (Late) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "what's the cost of a ticket to the space needle in Seattle?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"space needle in Seattle\"))))))"
  },
  {
    "original_sentence": "what's the cost of Dining at the P.F. Changs in Bellvue?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"P.F. Chang's in Bellevue\"))))))"
  },
  {
    "original_sentence": "How much is sushi kashiba in seattle",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"sushi kashiba in seattle\"))))))"
  },
  {
    "original_sentence": "Make a 2 day volleyball tournament this weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"volleyball tournament\")) (ThisWeekend)))))"
  },
  {
    "original_sentence": "Nevermind",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "I have an all day Manchester Orchestra show on December 14th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"Manchester Orchestra show\")) (MD 14L (December))))))"
  },
  {
    "original_sentence": "Perfect, thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "The tournament will be held all day on the 3rd.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"tournament\")) (nextDayOfMonth (Today) 3L)))))"
  },
  {
    "original_sentence": "Schedule drinks with myself, Friday night at 5:15PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"drinks with myself\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 5L 15L))))))))"
  },
  {
    "original_sentence": "I meant drinks with myself and my imaginary friend, frank!",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"drinks with myself and my imaginary friend, frank!\")))))"
  },
  {
    "original_sentence": "Great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "This will last for an hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "yeah",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "OK!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you put going to the fair on Saturday from 1 pm to 6 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"going to the fair\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 6L)))))))))"
  },
  {
    "original_sentence": "Actually, can you update that to 4 PM?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Schedule a meeting called Updates at 4 pm on Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Updates\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Make that 4 to 5",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Put dinner with Cameron on my schedule for tomorrow at 8pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cameron\")))))))))))"
  },
  {
    "original_sentence": "Looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make an entry for meeting with Janet at 9 on Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janet\")))))))))))"
  },
  {
    "original_sentence": "Excellent.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "You know what, add Brad to that meeting, too.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brad\"))))))))))"
  },
  {
    "original_sentence": "done",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "I need a Zoo Field Trip scheduled for August 8th at 10 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Zoo Field Trip\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 8L (August)) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Yes. Also, add the location Milwaukee County Zoo.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Milwaukee County Zoo\"))))))"
  },
  {
    "original_sentence": "Good. Now make this a monthly event",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks. Add lunch with the kids right after",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Cancel the department meeting we had scheduled for this afternoon please.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"department meeting\"))) (Afternoon)))))))))"
  },
  {
    "original_sentence": "No cancel the one on Friday instead.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Friday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "please make meet with my team",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"meet with my team\")) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "make that 9-10:30",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))))))"
  },
  {
    "original_sentence": "Let me look at my schedule 1st.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Let's put the second option on the schedule.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Hey there. What is my first thing on the sched next week?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)) 1L))"
  },
  {
    "original_sentence": "What event do I have at 9 pm Tuesday?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 9L)) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Delete my nine a.m. meeting on Wednesday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 9L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "What's the number for Carl's in Valdosta?",
    "parse": "(Yield (Place.phoneNumber (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Carl's in Valdosta\"))))))"
  },
  {
    "original_sentence": "What is the number for Shirokiya in Hawaii?",
    "parse": "(Yield (Place.phoneNumber (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Shirokiya in Hawaii\"))))))"
  },
  {
    "original_sentence": "What exactly is the phone number for Bamonte's in Brooklyn?",
    "parse": "(Yield (Place.phoneNumber (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Bamonte's in Brooklyn\"))))))"
  },
  {
    "original_sentence": "What do I have going on on Tuesday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "make party next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"party\")) (Event.start_? (DateTime.date_? (NextWeekList)))))))"
  },
  {
    "original_sentence": "the second one works",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you also delete my meeting with Wendy on Wednesday the 27th please?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 27L) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wendy\"))))))))))))"
  },
  {
    "original_sentence": "iam party set alaram",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Set meeting with wendy to be for two hours",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"wendy\")))))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Is the emergency editor's meeting organized by my manager?",
    "parse": "(Yield (== (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"emergency editor's meeting\")))))) (FindManager (toRecipient (CurrentUser)))))"
  },
  {
    "original_sentence": "Did my boss organize the Guinness Tasting?",
    "parse": "(Yield (== (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Guinness Tasting\")))))) (FindManager (toRecipient (CurrentUser)))))"
  },
  {
    "original_sentence": "Does Papa John's have take out?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Papa John's\"))))))"
  },
  {
    "original_sentence": "Do they have takeout at Papa John's in London?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Papa John's in London\"))))))"
  },
  {
    "original_sentence": "Does Thai Delicacy in Truckee have takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Thai Delicacy in Truckee\"))))))"
  },
  {
    "original_sentence": "Can you schedule my an event around 9 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (AroundDateTime (NextTime (NumberPM 9L)))))))"
  },
  {
    "original_sentence": "Make it for tomorrow around noon",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (Tomorrow) (Noon)))))))"
  },
  {
    "original_sentence": "Can you change my hockey practice to start around 6 am instead",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"hockey practice\")))))) (Event.start_? (DateTime.time_? (TimeAround (NumberAM 6L)))))))"
  },
  {
    "original_sentence": "create a timer please to morrow at 4",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Make an event for monday at 5",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "Needs to know about any apointments tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Cancel Coffee Date Thursday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.subject_? (?~= \"Coffee Date\"))))))))))"
  },
  {
    "original_sentence": "When is my last meeting on Wednesday?",
    "parse": "(Yield (Event.start (FindLastEvent (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Move my last meeting Pow Session to 3:00 pm on Wednesday.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Pow Session\")))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Yes perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "After my last Pow Session on Wednesday, schedule a nap.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"nap\")) (Event.start_? (?= (Event.end (FindLastEvent (EventOnDate (NextDOW (Wednesday)) (Event.subject_? (?~= \"Pow Session\")))))))))))"
  },
  {
    "original_sentence": "Make it start at 3:45 so I have time to get home.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 45L)))))))"
  },
  {
    "original_sentence": "How many times have I scheduled a reservation at The Bookstore?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "When do i have to be at the doctor's office tomorrow?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.location_? (?= (LocationKeyphrase.apply \"doctor's office\")))))))))"
  },
  {
    "original_sentence": "Great, thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you tell me what events I have this Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you add Brian and Dave to this event?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brian\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dave\")))))))))))"
  },
  {
    "original_sentence": "Hello there! I would like to create an event for my calender",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can it be later in the afternoon?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (LateAfternoon))))))"
  },
  {
    "original_sentence": "Can I schedule an event at night time",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.time_? (Night))))))"
  },
  {
    "original_sentence": "That works thank you",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Okay, now; let me see all of my events coming up",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Can we update my appointment to be at 4:00 pm until 7:00 pm?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Yeah",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you delete appointment",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes please",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Lastly, could you schedule a concert from 7pm to 10pm tomorrow?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"concert\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 10L)))))))))"
  },
  {
    "original_sentence": "Yes, perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you very much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "That was all, thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Does Cantina Mamma Lucia in Hanover, MD have takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Cantina Lucia in Hanover, MD\"))))))"
  },
  {
    "original_sentence": "does the Denny's in Winnemucca have take out?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Denny's in Winnemucca\"))))))"
  },
  {
    "original_sentence": "Is the new Candy's Inn in Santa Lucia offering takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Candy's Inn in Santa Lucia\"))))))"
  },
  {
    "original_sentence": "Does Frenchette in New York have takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Frenchette in New York\"))))))"
  },
  {
    "original_sentence": "Does Joe's Pizza in New York City have takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Joe's Pizza in New York City\"))))))"
  },
  {
    "original_sentence": "Do I have a meeting in 2020?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullYearofYear (Year.apply 2020L)))))) 0L))"
  },
  {
    "original_sentence": "What events do I have in 2020?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullYearofYear (Year.apply 2020L)))))) 0L))"
  },
  {
    "original_sentence": "What events happened last year?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullYearofYear (LastYear)))))"
  },
  {
    "original_sentence": "i need to a meeting event in 2025",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (FullYearofYear (Year.apply 2025L)))))))"
  },
  {
    "original_sentence": "Tell some event dates.",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "OK, add coffee with my sister to January 11th at 9 am",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Remind me the day before.",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Please schedule a reminder for my 5 pm conference call tomorrow afternoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"conference call\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "can you add the call to my calendar?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"call\")))))"
  },
  {
    "original_sentence": "the call is at 5 pm tomorrow",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "do i have any upcoming events this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "cancel that event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Tomorrow I will be with Abby in Seattle",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.location_? (?= (LocationKeyphrase.apply \"Seattle\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "The first please",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you retry that",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "Can You Please Retry Again",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "Ya know, I've heard 3rd times a charm. Try that again",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "Make me a doctor appointment for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor appointment\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "Yes the first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "change that please",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "fix the second one",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Reschedule my eye appointment for tomorrow",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"eye appointment\")))))) (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Find for me the meeting I have scheduled with Jon and Sammi",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jon\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sammi\")))))))))"
  },
  {
    "original_sentence": "yeah!thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "change meeting with Jon and Sammi to Thursday",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jon\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sammi\"))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Thursday)))))))))"
  },
  {
    "original_sentence": "Can you make that 45 minutes long?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toMinutes 45))))))"
  },
  {
    "original_sentence": "Change the end time to 10:45 PM.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (HourMinutePm 10L 45L)))))))"
  },
  {
    "original_sentence": "want to setup a meeting tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Schedule a new meeting with myself, Don, and Mark for Thursday morning",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Thursday)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Don\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\"))))))))))))"
  },
  {
    "original_sentence": "Change the ship's name to Excalibur",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule 1 hour for Pilates on Sunday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Pilates\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Rudder?",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule Climbing Mt Rainier for Saturday at 10 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Climbing Mt Rainier\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Delete all my meetings today after 5 pm",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Schedule relax from 5 pm to midnight.",
    "parse": "(let (x0 (NextTime (NumberPM 5L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"relax\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (Midnight)))))))))"
  },
  {
    "original_sentence": "Schedule golf for Sunday at 9:00 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"golf\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "Add call with Bob to my calendar for tomorrow morning at 9",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"call\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))))))))"
  },
  {
    "original_sentence": "yea",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "what do I have today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What about tomorrow?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "ok what about Friday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Friday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Join the D&D Night please.",
    "parse": "(Yield (joinEventCommand (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"D&D Night\"))))))))"
  },
  {
    "original_sentence": "Show me as out of office all next week.",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "get rid of golf tournament",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"gold tournament\")))))))))"
  },
  {
    "original_sentence": "Is there anything labeled golf?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"golf\"))))) 0L))"
  },
  {
    "original_sentence": "put coffee date with loyal",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"coffee date\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"loyal\")))))))))))"
  },
  {
    "original_sentence": "gimme 3 seconds and 4 miliseconds",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Is there anything later in the week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (LateDateRange (ThisWeek)))))) 0L))"
  },
  {
    "original_sentence": "I want the first time for the event please",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "yes, this is perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What time is my event Thursday morning",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)) (Morning)))))))"
  },
  {
    "original_sentence": "Book a meeting at 3am tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 3L)))))))"
  },
  {
    "original_sentence": "Yes but change it to 4 am",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 4L)))))))"
  },
  {
    "original_sentence": "please add movies with friends on Friday at 9pm",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I need to change an appointment",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "I need to make an appointment",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "yes, april 29 , 10 am",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (?= (DateAtTimeWithDefaults (MD 29L (April)) (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "do you send reminders",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I want to set up a new calendar event for Friday at 11 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "Looks good, now schedule another appointment for the same time Friday after next.",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfWeek (NextDOW (Friday)) (Friday)) (DateTime.time (Event.end (^(Dynamic) item x0)))))))))))"
  },
  {
    "original_sentence": "Yes, but let's put a schedule for 4PM for another appointment",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "That was perfect! Please schedule NSYNC concert on the 8th at 5:30 pm too.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"NSYNC concert\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 8L) (HourMinutePm 5L 30L)))))))))"
  },
  {
    "original_sentence": "The concert looks great but it should run until 11p",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 11L)))))))"
  },
  {
    "original_sentence": "Please delete my dinner with family on Saturday the 9th.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Add dinner with the husband Saturday the 9th at 7:30 through 9",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "What events do I have for next Monday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "OK THANK FOR INFORMATION",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "welcome emily",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"welcome emily\")))))"
  },
  {
    "original_sentence": "What do I have scheduled for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "please cancel this event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "yeah please go ahead",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "find me an event scheduled Friday 3:00pm",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Am I going to have a staff meeting next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"staff meeting\")) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Ok - well get the staff meeting scheduled for Friday at 3PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"staff meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Great! Can you put a meeting after the staff one.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "I'm looking for a day that I am free for lunch from 12 to 2 PM.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Hi may i get the tourist agent in the city of Columbus?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "can you give information about the tourist place in columbus?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "ya its fine please give information the weather of columbus.",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"columbus\"))) (?= (Now))))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Anything on my schedule today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Create the lunch meeting for Friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "wait a minute",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "please conform the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "yes do the lunch at 1.30 pm",
    "parse": "(Yield (Execute (ConfirmCreateAndReturnAction (EventAtTime (Event.subject_? (?= \"lunch\")) (HourMinutePm 1L 30L)))))"
  },
  {
    "original_sentence": "Please add the note to pick up Jason's mail before dinner on Tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pick up Jason's mail before dinner\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))))))"
  },
  {
    "original_sentence": "No, delete the both schedule. set it for Wednesday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday))))))))"
  },
  {
    "original_sentence": "yeah!looks good.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "It's good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need a late morning coffee run today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"coffee run\")) (Event.start_? (DateTimeConstraint (LateMorning) (Today)))))))"
  },
  {
    "original_sentence": "When can I find time to meet Robert for lunch?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Robert\")))))))))))"
  },
  {
    "original_sentence": "second one work well for me fix it",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Find 30 minutes tomorrow to meet with Matt and his boss.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Matt\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.duration_? (?= (toMinutes 30)))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "The second one is best.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Find 45 minutes on Monday for a Brainstorming Ideas Meeting with Susan and her supervisor.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Susan\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Brainstorming Ideas Meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))) (Event.duration_? (?= (toMinutes 45)))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "What's on my calendar for this weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "Put lunch with the fam on Saturday from noon to 2 pm at The Cheesecake Factory.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Change it to start 30 min earlier.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (PeriodDurationBeforeDateTime (Event.start x0) (PeriodDuration.apply :duration (toMinutes 30)))))))))"
  },
  {
    "original_sentence": "can you tell me if monday afternoon is clear?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)) (Afternoon))))"
  },
  {
    "original_sentence": "I have a dinner I have at 6 pm to 7:30 pm I need to schedule.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 6L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 7L 30L)))))))))"
  },
  {
    "original_sentence": "Do I have anything scheduled tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "schedule me some time at the gym from 9 to 10 am",
    "parse": "(let (x0 (NextTime (NumberAM 9L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 10L))))) (Event.location_? (?= (LocationKeyphrase.apply \"gym\"))))))))"
  },
  {
    "original_sentence": "Delete all events after tomorrow at 5 PM.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I need to set up the meetings for this week",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "the first meeting need to be tomorrow",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) 1L))"
  },
  {
    "original_sentence": "okay, add a meeting at 230PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberPM 230L)))))))"
  },
  {
    "original_sentence": "add a meeting tomorrow at 230PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 230L)))))))"
  },
  {
    "original_sentence": "add a meeting sync tomorrow at 230PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"meeting sync\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 230L))))))))"
  },
  {
    "original_sentence": "add a meeting sync tomorrow at 230PM on the calendar",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"meeting sync\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 230L))))))))"
  },
  {
    "original_sentence": "add a workers sync to the calendar tomorrow at 230pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"workers sync\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 230L))))))))"
  },
  {
    "original_sentence": "what is on the calendar tomorrow at 230pm",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 2L 30L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "add an appoint tomorrow at 2:30PM titled workers sync",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"workers sync\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 2L 30L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "now add Barack Obama to it",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\"))))))))))"
  },
  {
    "original_sentence": "hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "what is the weather in brooklyn ny",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"brooklyn ny\"))) (?= (Now))))"
  },
  {
    "original_sentence": "cool thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what is the chat id",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Do I have anything planned for Brunch or Lunch Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (orConstraint (?~= \"Brunch\") (?= \"Lunch\"))))))) 0L))"
  },
  {
    "original_sentence": "Can you change the duration of Brunch to 2 hours, and move it back an hour?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Brunch\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply :duration (toHours 1))))) (Event.duration_? (?= (toHours 2))))))))"
  },
  {
    "original_sentence": "Ahh, I'm sorry, can you also extend it by an half an hour and move it to the day before, Thursday, instead?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (DateTime.date_? (?= (previousDayOfWeek (DateTime.date (Event.start x0)) (Thursday))))) (Event.duration_? (?= (addDurations (Event.duration x0) (toHours 0.5)))))))))"
  },
  {
    "original_sentence": "What time is my brunch now?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"brunch\")))))))"
  },
  {
    "original_sentence": "Thanks for clarifying.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a meeting with John today at 2:00 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))))"
  },
  {
    "original_sentence": "My date tonight should be moved to 7pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"date\"))) (Night)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "Perfect!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule an appointment with Dr. Smith tomorrow at 4.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dr. Smith\")))))))))))"
  },
  {
    "original_sentence": "Can we update my Stellaris Game that so that it ends at 6 PM",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Stellaris Game\")))))) (Event.end_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "What's on my calendar next week that is longer than 45 minutes where I'm working elsewhere",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (& (Event.duration_? (?> (toMinutes 45))) (Event.showAs_? (?= (ShowAsStatus.WorkingElsewhere)))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))"
  },
  {
    "original_sentence": "Can you add an event called lunch with mom that day at 10 am that lasts for an hour at her favorite restaurant and I need to be shown as out of the office",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Do I have anything on my calendar next week that is longer than an hour that is marked as tentative",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (& (Event.duration_? (?> (toHours 1))) (Event.showAs_? (?= (ShowAsStatus.Tentative)))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))) 0L))"
  },
  {
    "original_sentence": "I have a party I am going to attend at 7 pm to 9 pm next Saturday.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"party\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 9L)))))))))"
  },
  {
    "original_sentence": "Put that I went to the design meeting last week?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"design meeting\")) (Event.start_? (DateTime.date_? (LastWeekNew)))))))"
  },
  {
    "original_sentence": "Add the Budget Meeting I went to on November 29th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Budget Meeting\")) (Event.start_? (DateTime.date_? (?= (MD 29L (November)))))))))"
  },
  {
    "original_sentence": "also i had a thanksgiving dinner this past thanksgiving add that to my calender",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"thanksgiving dinner\")) (Event.start_? (DateTime.date_? (?= (previousHoliday (Today) (Holiday.Thanksgiving)))))))))"
  },
  {
    "original_sentence": "i had dinner last week?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTime.date_? (LastWeekNew)))))))"
  },
  {
    "original_sentence": "The first one please.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Do I have anything scheduled today and tomorrow set a dentist appointment at 9 am I have work starting at 10 am and there is a meeting at 3 pm about safety.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "create Trump conference on tuesday at 7",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Trump conference\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Can you set the location to the Dallas Convention Center?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Dallas Convention Center\"))))))"
  },
  {
    "original_sentence": "Good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "what will the weather be?",
    "parse": "(Yield (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "ok done",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have any dinner dates this weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"dinner dates\")) (ThisWeekend))))) 0L))"
  },
  {
    "original_sentence": "add Rob to this dinner date",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rob\"))))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok... thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you set up a meeting with Dave for 9 on wednesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dave\")))))))))))"
  },
  {
    "original_sentence": "hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "how is the weather today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "is it going to rain tomorrow?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "is it going to rain next wednesday?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextDOW (Wednesday)))))))"
  },
  {
    "original_sentence": "when will it snow?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Delete the appointment with my company tomorrow at 2pm.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)) (Event.subject_? (?~= \"appointment with my company\"))))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "fine",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make a new meeting with Rob and Randy to discuss the new tax reform policy at 8 am until 9 am.",
    "parse": "(let (x0 (NextTime (NumberAM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"discuss the new tax reform policy\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 9L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rob\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Randy\")))))))))))))"
  },
  {
    "original_sentence": "That looks perfect. Thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great! Thanks!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Also update my Meeting with Alice and Alexa tomorrow from 4:30 pm to 5:30 pm instead.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 4L 30L)) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alice\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alexa\")))))))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 5L 30L)))))))"
  },
  {
    "original_sentence": "Robot, find out if Sanctuary in Iowa City has the full bar",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Sanctuary in Iowa City\"))))))"
  },
  {
    "original_sentence": "Does Moody's in Waltham have a full bar?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Moody's in Waltham\"))))))"
  },
  {
    "original_sentence": "Does Applebee's in Plattsburgh have a bar?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Applebee's in Plattsburgh\"))))))"
  },
  {
    "original_sentence": "Can you schedule an appointment for the dentist at 10 am on Wednesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"appointment for the dentist\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "It will go until 11:00.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "Yeah, do I have anything scheduled for the night of 2 days after Valentine's day?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (adjustByPeriod (NextHolidayFromToday (Holiday.ValentinesDay)) (toDays 2)) (^(Event) EmptyStructConstraint)) (Night))))"
  },
  {
    "original_sentence": "OK great. That night add the SMU vs. Eastern Carolina basketball game. My son wants to go. It's supposed to start at 7 pm and last for 3 hours, Mark it as busy, would ya please?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"SMU vs. Eastern Carolina basketball game\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 7L))))) (Event.duration_? (?= (toHours 3)))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))"
  },
  {
    "original_sentence": "When does that end?",
    "parse": "(Yield (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Delete Tuesday's meeting",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "No, just change the start time to 4.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Yes, that looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change the name to Book Signing",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"Book Signing\")))))"
  },
  {
    "original_sentence": "Yes, but i'd like to change the end time to 5:00 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "What time is my appointment with the dentist tomorrow?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"dentist\"))))))))"
  },
  {
    "original_sentence": "Where is my appointment at?",
    "parse": "(Yield (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "What will the weather be like tomorrow in San Jose?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"San Jose\"))) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "Can you schedule me for a run tomorrow at 9am in San Jose?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"run\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L))))) (Event.location_? (?= (LocationKeyphrase.apply \"San Jose\")))))))"
  },
  {
    "original_sentence": "I'll be running at the Japanese Friendship Garden there.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Japanese Friendship Garden\"))))))"
  },
  {
    "original_sentence": "Please change the event to 8:30 for an hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (HourMinuteAm 8L 30L)))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Please add to the calendar clown party planning cake tasting with Kristen Clifford on Tuesday at 3:00 pm for 1 hour.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"clown party planning cake tasting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 3L))))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kristen Clifford\")))))))))))"
  },
  {
    "original_sentence": "yea it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Also add Barack Obama to the clown party planning cake tasting",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"clown party planning cake tasting\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\"))))))))))"
  },
  {
    "original_sentence": "It looks perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you very much.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "nope",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a meeting Monday morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Monday)))))))"
  },
  {
    "original_sentence": "no can you schedule anything else",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Delete my Dance Recital after my last Sales Pitch on Thursday.",
    "parse": "(let (x0 (Event.end (FindLastEvent (EventOnDate (NextDOW (Thursday)) (Event.subject_? (?~= \"Sales Pitch\")))))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (Event.subject_? (?~= \"Dance Recital\")) (DateTime.time x0))))))))))"
  },
  {
    "original_sentence": "Yes, that is the one.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Remind me what events I have after my last baseball practice this week.",
    "parse": "(let (x0 (Event.end (FindLastEvent (EventDuringRange (Event.subject_? (?~= \"baseball practice\")) (ThisWeek))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)))))"
  },
  {
    "original_sentence": "When is my lunch with Fiona Mason?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fiona Mason\"))))))))))"
  },
  {
    "original_sentence": "Can you save a meeting with Damon Ellery Wenesday at 10 am?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 10L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon Ellery\")))))))))))"
  },
  {
    "original_sentence": "Yes, Wed 10 am",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTimeFromDowConstraint (?= (Wednesday)) (NumberAM 10L))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "no, label it",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "how do i mark who the meeting is with",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "why?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "the appointment is at 10",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "attendees?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "please cancel the appointment wed 10 am",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 10L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "yes please",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "cancel it please",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Remind me when is the Final fantasy orchestra is again?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Final fantasy orchestra\")))))))"
  },
  {
    "original_sentence": "Can you add after party from 10 pm to 1 am that day",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"after party\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 1L)))))))))"
  },
  {
    "original_sentence": "It sure does!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete Sharon's birthday party.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Sharon's birthday party\")))))))))"
  },
  {
    "original_sentence": "Yes, please cancel Sharon's birthday part on Sunday March 10th at 10 am.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "what is my second event on sunday?",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)) 2L))"
  },
  {
    "original_sentence": "Ok what is my second event next week.",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)) 2L))"
  },
  {
    "original_sentence": "Is there a second event in May?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (May))) 2L))"
  },
  {
    "original_sentence": "Am I free for a spa trip on Friday?",
    "parse": "(Yield (IsFree (RecipientAvailability (& (& (Event.subject_? (?= \"spa trip\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
  },
  {
    "original_sentence": "I'm going to need to go with the 1 one",
    "parse": "(Yield (CreateCommitEventWrapper (Execute (refer (& (^(CreateCommitEvent) roleConstraint (numberToIndexPath 1L)) (extensionConstraint (^(CreateCommitEvent) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Yes that's great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When am I available on March 18th?",
    "parse": "(Yield (IsFree (RecipientAvailability (& (Event.start_? (DateTime.date_? (?= (MD 18L (March))))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
  },
  {
    "original_sentence": "let's go with the 10 am",
    "parse": "(Yield (CreateCommitEventWrapper (Execute (refer (extensionConstraint (CreateCommitEvent.data_? (EventSpec.start_? (DateTime.time_? (?= (NumberAM 10L))))))))))"
  },
  {
    "original_sentence": "Great, please add it to my calendar.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Agent, am I available on April 28th?",
    "parse": "(Yield (IsFree (RecipientAvailability (& (Event.start_? (DateTime.date_? (?= (MD 28L (April))))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
  },
  {
    "original_sentence": "yes make it the 1 pm",
    "parse": "(Yield (CreateCommitEventWrapper (Execute (refer (extensionConstraint (CreateCommitEvent.data_? (EventSpec.start_? (DateTime.time_? (?= (NumberPM 1L))))))))))"
  },
  {
    "original_sentence": "Hey, where am I having dinner tonight?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"dinner\"))) (Night)))))))"
  },
  {
    "original_sentence": "Do they have outdoor seating?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.OutdoorDining) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "If I have a large group, will they be accommodating?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Does Cheeseburger in Paradise have a full bar?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Cheeseburger in Paradise\"))))))"
  },
  {
    "original_sentence": "Can you provide any information about the ambiance like if it's casual?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "whom I?",
    "parse": "(Yield (CurrentUser))"
  },
  {
    "original_sentence": "I would like you to set up an appointment with Jerri Skinner for next Tuesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jerri Skinner\")))))))))))"
  },
  {
    "original_sentence": "The meeting is for Tuesday.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I would like to have lunch with Karl Boon this Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karl Boon\")))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you move my appointment tomorrow to Monday?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Monday)))))))))"
  },
  {
    "original_sentence": "Actually, I meant the haircut",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (Event.subject_? (?~= \"haircut\")))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I want to change the Car Wash on Tuesday to be next Saturday",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"Car Wash\"))))))) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))))))"
  },
  {
    "original_sentence": "Whoops, I meant the one on June 20",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (EventOnDate (ClosestMonthDayToDate (Day.apply 20L) (June) (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Perfect, that looks good. now update the football game to be called soccer game",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"football game\")))))) (Event.subject_? (?= \"soccer game\"))))))"
  },
  {
    "original_sentence": "actually i meant baseball game",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (Event.subject_? (?~= \"baseball game\")))))"
  },
  {
    "original_sentence": "Hi! What events are on my schedule for December 25th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 25L (December)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Change the third event to 8 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 3L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "Can i delete the party hard event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"party hard\")))))))))"
  },
  {
    "original_sentence": "I think I need to delete the event Open Champagne",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Open Champagne\")))))))))"
  },
  {
    "original_sentence": "Yes I need to cancel.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add an event for Thursday to Friday of this week, and label it retirement party.",
    "parse": "(let (x0 (DowOfWeekNew (Thursday) (ThisWeek))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"retirement party\")) (DateAndConstraint x0 (nextDayOfWeek x0 (Friday))))))))"
  },
  {
    "original_sentence": "Perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create a work conference in Tampa from Monday through Saturday next week.",
    "parse": "(let (x0 (DowOfWeekNew (Monday) (NextWeekList))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \"Tampa\"))) (EventAllDayForDateRange (Event.subject_? (?= \"work conference\")) (DateAndConstraint x0 (nextDayOfWeek x0 (Saturday)))))))))"
  },
  {
    "original_sentence": "Pretty much, yeah.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create event for my meeting next week from Monday to Wednesday.",
    "parse": "(let (x0 (DowOfWeekNew (Monday) (NextWeekList))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (DateAndConstraint x0 (nextDayOfWeek x0 (Wednesday))))))))"
  },
  {
    "original_sentence": "Can you tell me who has declined the meeting for today?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Who is going to be at the meeting today?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Has anyone not gotten back to me about my invite for dinner tonight?",
    "parse": "(Yield (> (size (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"dinner\"))) (Night)))))) (ResponseStatusType.None))) 0L))"
  },
  {
    "original_sentence": "Will I ever see Abby, Jake, and Jesse this month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\"))))) (FullMonthofMonth (Date.month (Today))))))) 0L))"
  },
  {
    "original_sentence": "add an event for next Thursday for Abby, Jake and Jesse at 5:00 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 5L)))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\"))))))))))))"
  },
  {
    "original_sentence": "yes, thank you!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "And schedule a evening meal with Lucy, Kristen and Amanda this weekend.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"meal\")) (Event.start_? (DateTime.date_? (ThisWeekend)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lucy\")))))) (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kristen\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amanda\")))))))))))))"
  },
  {
    "original_sentence": "The 17th, please",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.day_? (?= (Day.apply 17L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Hi",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Can i book hotel",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Is my FRIDAY MORNING OPEN?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Friday)))))))"
  },
  {
    "original_sentence": "What on my schedule for Saturday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Schedule Extra work friday from noon to 6 please.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (Noon))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Extra work\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 6L)))))))))"
  },
  {
    "original_sentence": "Yeap.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you also add Ryan's Soccer Practice at 7:00 pm on Friday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Ryan's Soccer Practice\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "It's good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "make an appointment with nolen",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"nolen\"))))))))))"
  },
  {
    "original_sentence": "The first one is great",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make a appointment for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Make a appointment tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Create a meeting in the afternoon on Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Monday)))))))"
  },
  {
    "original_sentence": "Do I have a conference call coming up?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"conference call\"))))) 0L))"
  },
  {
    "original_sentence": "Okay, how about any board meetings?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"board meetings\")))))"
  },
  {
    "original_sentence": "Do I have any meetings tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Do i have any meetings tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Great, thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Where does sam live?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is Sam's home office address?",
    "parse": "(Yield (Person.officeLocation (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\"))))))))"
  },
  {
    "original_sentence": "What is Sam's phone number so I can call them?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\"))))))))"
  },
  {
    "original_sentence": "What is his email.",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Add a staff lunch tomorrow, at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"staff lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))))))"
  },
  {
    "original_sentence": "Yes, please forward this to Sam and Dale.",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (ForwardEventWrapper (^(Dynamic) item x0) (append (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\")))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dale\"))))))))))"
  },
  {
    "original_sentence": "Add another staff lunch for next Thursday please.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"staff lunch\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday)))))))))"
  },
  {
    "original_sentence": "Looks good.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "what is the weather going to be tomorrow in chicago",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"chicago\"))) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "What events do I have scheduled for this weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "thanks, can you make a lunch appointment on Sat at 12?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "That'll work.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok thank you so much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Get a room in city center tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.location_? (& (?= (LocationKeyphrase.apply \"city center\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "The later one and add Mark.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Get that 2nd one then",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Book it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "okey thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you remove the meeting with Franks? He cancelled.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Franks\")))))))))))"
  },
  {
    "original_sentence": "create saturday 5th to be dentist appointment",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 5L))))))))"
  },
  {
    "original_sentence": "5th of saturday",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTimeFromDowConstraint (?= (Saturday)) (NumberPM 5L))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "no thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "create meeting for work on thursday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"meeting for work\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday)))))))))"
  },
  {
    "original_sentence": "at 3",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make me an Event tomorrow at 6 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "Oops I need you to make that PM instead.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (ConvertTimeToPM (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))))))))))))"
  },
  {
    "original_sentence": "Perfect and can you make a meeting with Kim at 8 please.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberAM 8L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))))))"
  },
  {
    "original_sentence": "Whoops, make that in the PM, i forgot to specify",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (ConvertTimeToPM (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))))))))))))"
  },
  {
    "original_sentence": "Can you schedule me an event on Sunday at 8",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "How about pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (ConvertTimeToPM (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))))))))))))"
  },
  {
    "original_sentence": "I need a meeting tomorrow at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Do you remember where my concert tonight is",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"concert\"))) (Night)))))))"
  },
  {
    "original_sentence": "I need to pick up a TV/blueray combo player at the store so schedule that for 2 hours before the concert.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"pick up a TV/blueray combo player\")) (Event.start_? (?= (PeriodDurationBeforeDateTime (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"concert\")))))) (PeriodDuration.apply :duration (toHours 2)))))) (Event.location_? (?= (LocationKeyphrase.apply \"the store\")))))))"
  },
  {
    "original_sentence": "cancel the events on today",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "create meeting on monday at 3",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Yes. Also list the location as Minneola Grill.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Minneola Grill\"))))))"
  },
  {
    "original_sentence": "Look well",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "mark on the calendar meeting with Brad on Tuesday at 4",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brad\")))))))))))"
  },
  {
    "original_sentence": "it's amazing",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "It's look well",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you make a new event on Monday at 3pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make an appointment with the physician",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "yes",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to meet with Peter, Derek and Park today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Today)))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Peter\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Derek\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Park\"))))))))))))"
  },
  {
    "original_sentence": "The latter one is good.",
    "parse": "(Yield (Execute (ChooseCreateEvent (Latest) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Take Derek Chan off that meeting, and add Bruce Banner instead.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Derek Chan\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bruce Banner\")))))))))))"
  },
  {
    "original_sentence": "When is my next dentist?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"dentist\")) 1L)))"
  },
  {
    "original_sentence": "And when do I have practice next?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"practice\")) 1L)))"
  },
  {
    "original_sentence": "Great thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Join my next meeting",
    "parse": "(Yield (joinEventCommand (Event.id (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L))))"
  },
  {
    "original_sentence": "Yes i Need your help",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Schedule a meeting with Lori and Tony today after 1pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (OnDateAfterTime (Today) (NumberPM 1L))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lori\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tony\"))))))))))))"
  },
  {
    "original_sentence": "What is Tony's email?",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tony\"))))))))"
  },
  {
    "original_sentence": "The second one works best for me.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Yea it looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you extend this by half an hour?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toHours 0.5))))))))"
  },
  {
    "original_sentence": "wait a second borther",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "yes, that works",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What day is my \"Doctor's Appointment\" next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Doctor's Appointment\")) (NextWeekList))))"
  },
  {
    "original_sentence": "Can you add a doctor appointment at noon tomorrow?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))))))"
  },
  {
    "original_sentence": "Can you make a dentist appointment at 2 pm on Saturday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Create event called \"Go to grocery store\" tonight at 7:00pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Go to grocery store\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Add an event called \"Mom's Party\" on Friday at 8 pm to 9 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Mom's Party\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 9L)))))))))"
  },
  {
    "original_sentence": "Add to my calendar that I'll be in a meeting with Jeff all day tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeff\"))))))) (Tomorrow)))))"
  },
  {
    "original_sentence": "Make a appointment for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "select first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need that appointment for August 24th to last all day instead.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 24L (August)) (^(Event) EmptyStructConstraint)))))) (Event.isAllDay_? (?= true)))))"
  },
  {
    "original_sentence": "put appointment change time 11am",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "I want you to change my Summer Fun event in the summer to be all day",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Summer Fun\")) (SeasonSummer)))))) (Event.isAllDay_? (?= true)))))"
  },
  {
    "original_sentence": "Sexcellent",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What is Shangri La China Bistro in Modesto rated?",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Shangri La China Bistro in Modesto\"))))))"
  },
  {
    "original_sentence": "What's the rating for Golden Flower in Reno",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Golden Flower in Reno\"))))))"
  },
  {
    "original_sentence": "So what about Breakthrough Reno in Reno?",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Breakthrough Reno in Reno\"))))))"
  },
  {
    "original_sentence": "I need a new meeting on thursday with charles",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"charles\"))))))))))"
  },
  {
    "original_sentence": "Make it with Sharon instead",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sharon\"))))))"
  },
  {
    "original_sentence": "lets go with the first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "hi id like to book 2 hours for a house cleaning tomorrow, maybe late morning",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"house cleaning\")) (Event.start_? (DateTimeConstraint (LateMorning) (Tomorrow)))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "first one would be prefectr",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "how about a dr appt for next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dr appt\")) (Event.start_? (DateTime.date_? (NextWeekList)))))))"
  },
  {
    "original_sentence": "second one works best",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "get rid of soccer event on Sunday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"soccer\"))))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Search today",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Do I have anything scheduled for today? Is it completely free?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Do I have any events in the fall?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (SeasonFall))))) 0L))"
  },
  {
    "original_sentence": "Make it 2 hours long",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Yes, and forward it to Abby",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (ForwardEventWrapper (^(Dynamic) item x0) (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))))))"
  },
  {
    "original_sentence": "who hasn't respond to the survey",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"survey\")))))) (ResponseStatusType.None)))"
  },
  {
    "original_sentence": "Who else hasn't responded to the wedding invitations?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"wedding\")))))) (ResponseStatusType.None)))"
  },
  {
    "original_sentence": "Who hasn't responded to the sit-down dinner reception?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"sit-down dinner reception\")))))) (ResponseStatusType.None)))"
  },
  {
    "original_sentence": "Do I have a meeting with Scot Hanson today at 5 pm?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 5L)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scot Hanson\")))))))) 0L))"
  },
  {
    "original_sentence": "When is Jennifer Watts and her team next available?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Add Elli Parker and her team to it.",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Who is on Jennifer Watts team again?",
    "parse": "(Yield (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer Watts\")))))))"
  },
  {
    "original_sentence": "Schedule lunch with Jennifer Watts and her team for tomorrow at noon.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer Watts\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindTeamOf x0)))))))))"
  },
  {
    "original_sentence": "Let's make it last an hour.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "What's the temperature in Seattle this weekend?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Seattle\"))) (DateTime.date_? (ThisWeekend)))))"
  },
  {
    "original_sentence": "Will it be rainy?",
    "parse": "(Yield (IsRainy (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Then what's the rainfall in Seattle tomorrow specifically?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Sum) (rainPrecipIntensity) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Seattle\"))) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "Okay perfect, add a waterfront date tomorrow between 11 am and 3 pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"waterfront date\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L)))))))))"
  },
  {
    "original_sentence": "Find out who Josephine's boss is.",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Josephine\")))))))"
  },
  {
    "original_sentence": "What was Dan's last meeting?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "Can you schedule a meeting with Dan on my next open slot?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan\"))))))))))"
  },
  {
    "original_sentence": "What is my longest meeting on Wednesday?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "When is my next meeting with Dan Schoffel?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Schoffel\")))) 1L)))"
  },
  {
    "original_sentence": "office meeting friday afternoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"office meeting\")) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "first one is perfect",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Schedule me for a wax at 3pm tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"wax\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Yes, thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you also schedule me for a date with Danny at 4:50pm tomorrow?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 4L 50L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Danny\")))))))))))"
  },
  {
    "original_sentence": "Schedule a blind date for tomorrow at 4:50pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"blind date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 4L 50L))))))))"
  },
  {
    "original_sentence": "Yes, but the end time should be 6pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Delete my meeting from this morning",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Morning)))))))))"
  },
  {
    "original_sentence": "Wait a minute.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Yes, please delete that one.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please create an event on Saturday with Kelly. We want to ride our scooters off the jetty.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"ride our scooters off the jetty\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kelly\")))))))))))"
  },
  {
    "original_sentence": "Hold on a minute.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "The 2nd one works best",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Yes. When is my next flight?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"flight\")) 1L))))"
  },
  {
    "original_sentence": "Create a Flight two weeks from now.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Flight\")) (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply (toWeeks 2)))))))))"
  },
  {
    "original_sentence": "Remind me to workout after work today.",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "ok set alaram",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "can you set meeting with Candy Wednesday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Candy\")))))))))))"
  },
  {
    "original_sentence": "yes 10 am is good and make it last until 11 am",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.end_? (DateTime.time_? (?= (DateTime.time (TimeAfterDateTime (Event.end x0) (NumberAM 11L)))))))))))"
  },
  {
    "original_sentence": "do I have a meeting today",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "do i have any free time next week?",
    "parse": "(Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true))"
  },
  {
    "original_sentence": "Hi can you tell me what's going on this Saturday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Saturday I am going to be doing Yoga from 8 to 11 am.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Yoga\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 11L)))))))))"
  },
  {
    "original_sentence": "Can you put smoothies with the girls 30 minutes after that?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"smoothies with the girls\")) (Event.start_? (?= (adjustByPeriodDuration (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply :duration (toMinutes 30)))))))))"
  },
  {
    "original_sentence": "Please cancel yoga Saturday.",
    "parse": "(singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"yoga\"))))))"
  },
  {
    "original_sentence": "Make a meeting on February 5th called Work Update at 1 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Work Update\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 5L (February)) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "Add go grocery shopping for party on Sunday morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go grocery shopping for party\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Sunday))))))))"
  },
  {
    "original_sentence": "something later please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "2nd one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What is the average meal price at Shoney's?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Shoney's\"))))))"
  },
  {
    "original_sentence": "Where is dinner tonight?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"dinner\"))) (Night)))))))"
  },
  {
    "original_sentence": "Do they offer takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "What's their number?",
    "parse": "(Yield (Place.phoneNumber (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "do they have waiters/",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Move the luncheon with Jennie's family on Sunday to 11:30 am to 1:30 pm.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "yes is that like it",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Thanks. Do I have a doctor's appointment next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctor's appointment\")) (NextWeekList))))"
  },
  {
    "original_sentence": "Schedule a doctor's appointment for Tuesday at 4:00 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "i need help with my personal calander",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "do i have any calander events",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))) 0L))"
  },
  {
    "original_sentence": "i should create one",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you schedule a 2 hour Shopping Session at Guitar Center tomorrow?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Shopping Session\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.duration_? (?= (toHours 2)))) (Event.location_? (?= (LocationKeyphrase.apply \"Guitar Center\")))))))"
  },
  {
    "original_sentence": "Why not Obama-Palin 2020",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Where are you",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "La la la",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have any meetings this week with Pam Smith?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Pam Smith\")))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))) 0L))"
  },
  {
    "original_sentence": "create event with friends tomorrow",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "The second one please.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I would like a refund on my recent purchase",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Ok, set a dinner date for tomorrow at 5 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Can you find when I meet with Jeff about the railway changes?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"railway changes\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeff\"))))))))))"
  },
  {
    "original_sentence": "make the arrangement to meet Mr. John on 21st may",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (MD 21L (May))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mr. John\")))))))))))"
  },
  {
    "original_sentence": "The 1PM looks great",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Also add Megan to my meeting with Mr. John on Tuesday at 1:00 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mr. John\")))) (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 1L)) (^(Event) EmptyStructConstraint))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Megan\"))))))))))"
  },
  {
    "original_sentence": "that's good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Could you add Megan to my meeting Tuesday please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Megan\"))))))))))"
  },
  {
    "original_sentence": "Whats on the docket for today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What is the other event on my calendar?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Schedule my eye exam 2 hours before gym on Friday evening.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (Event.subject_? (?= \"gym\"))) (Night))))"
  },
  {
    "original_sentence": "I'd like to know if I have any gym time schedule this week.",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"gym\")) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "How many gym events do I have on my calendar?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"gym\"))))))"
  },
  {
    "original_sentence": "yeah",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "definitely sure.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "yeah help with my calendar.",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "yeah that is correct.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "it is enought.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what is my first event tomorrw?",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) 1L))"
  },
  {
    "original_sentence": "Sorry, i meant my second event?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(Number) AlwaysTrueConstraint)) (intension 2))))"
  },
  {
    "original_sentence": "What about my third event?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(Number) AlwaysTrueConstraint)) (intension 3))))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Delete all events scheduled for December 27.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Set my status to out of office on December 27.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (MD 27L (December))))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
  },
  {
    "original_sentence": "the one at 10 am",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "does monga cafe in bellevue have waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"monga cafe in bellevue\"))))))"
  },
  {
    "original_sentence": "Does M3 in Reno have waiter service? Asking for a friend",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"M3 in Reno\"))))))"
  },
  {
    "original_sentence": "does zulu's board game cafe have waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"zulu's board game cafe\"))))))"
  },
  {
    "original_sentence": "Hi",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Is it going to snow in ashville NC this weekend?",
    "parse": "(Yield (WillSnow (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"ashville NC\"))) (DateTime.date_? (ThisWeekend)))))"
  },
  {
    "original_sentence": "What is the temp in Ashville tonight?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Ashville\"))) (DateTimeConstraint (Night) (Today)))))"
  },
  {
    "original_sentence": "Who are all in my address book to the next meet.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Can you make a new event for Friday at 6pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "Yes it looks very good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "put appointment on 7.00PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "have this ending at 8",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "Do I have anything scheduled tomorrow afternoon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"
  },
  {
    "original_sentence": "Schedule a meeting at 4 about finance.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"finance\")) (Event.start_? (?= (NextTime (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Yes, but make it 45 minutes.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toMinutes 45))))))"
  },
  {
    "original_sentence": "Create employee training meeting for Monday through Thursday all day.",
    "parse": "(let (x0 (NextDOW (Monday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"employee training meeting\")) (DateAndConstraint x0 (nextDayOfWeek x0 (Thursday))))))))"
  },
  {
    "original_sentence": "Do I have any meetings scheduled this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything after 11AM on Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (NextDOW (Friday)) (^(Event) EmptyStructConstraint) (NumberAM 11L))))) 0L))"
  },
  {
    "original_sentence": "Create a new meeting after that for lunch at the pub",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch at the pub\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "I need to add lunch from 1:00 pm to 1:30 est tomorrow.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Delete the entry for lunch that's at 6 a.m.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch\")) (Event.start_? (DateTime.time_? (?= (NumberAM 6L))))))))))))"
  },
  {
    "original_sentence": "WHEN IS MY APPOINTMENT WITH MY DAD",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "okay fine",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "nope thanks for your response",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "when can fix a meeting with my staff",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasPeople (FindReports (toRecipient (CurrentUser))))))))"
  },
  {
    "original_sentence": "Create a Staff Meeting at 3pm tomorrow at the Reunion Tower.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Staff Meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Reunion Tower\")))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Will it rain at all at the Reunion Tower?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Reunion Tower\"))) (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "What will the high be at the Reunion Tower?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Reunion Tower\"))) (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "what will the weather be like today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "will it be windy today?",
    "parse": "(Yield (IsWindy (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "what will the weather be like tomorrow?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "was it sunny yesterday?",
    "parse": "(Yield (IsSunny (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Yesterday))))))"
  },
  {
    "original_sentence": "will it be humid tomorrow?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (humidity) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "is the humidity for tomorrow above average?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "What do I do on Monday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What's the weather like?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (?= (Now))))"
  },
  {
    "original_sentence": "really?",
    "parse": "(Yield (IsWindy (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "top wind speed ever recorded?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "top wind speed you have access to?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (windSpeed) (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))"
  },
  {
    "original_sentence": "let me know who all has not accepted the Brothers BBQ feast yet",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Brothers BBQ feast\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Who has not declined the Sith Playtime",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Sith Playtime\")))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "who has not possibly responded to happy hour",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"happy hour\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Please add a financial meeting with Jamie at 3pm tuesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"financial meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 3L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamie\")))))))))))"
  },
  {
    "original_sentence": "Please set up a meeting with Janice next Thursday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice\")))))))))))"
  },
  {
    "original_sentence": "No",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you make it noon?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (Noon)))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cancel my meeting for Monday morning and also make a doctors appointment for Tuesday at 2pm.",
    "parse": "(do (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)) (Morning))))))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctors appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 2L)))))))))"
  },
  {
    "original_sentence": "put the pitch meeting with andria at today 8.00 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"pitch meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"andria\")))))))))))"
  },
  {
    "original_sentence": "Yes, but make it 60 minutes",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toMinutes 60))))))"
  },
  {
    "original_sentence": "Actually make it 7 minutes",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toMinutes 7))))))"
  },
  {
    "original_sentence": "make it earlier please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "how about earlier",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "What is the weather today",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "What will be the weather tomorrow",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "How much rain will we get today?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Sum) (rainPrecipIntensity) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "Will I need sunscreen today?",
    "parse": "(Yield (IsHighUV (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "Will I need a jacket today?",
    "parse": "(Yield (NeedsJacket (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "When is sunset/",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunsetTime) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Make event called \"go out with friends\" on Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go out with friends\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))))))"
  },
  {
    "original_sentence": "cancel the doctors appointment",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctors appointment\")))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule doctors appointment for Tuesday at 4:00 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctors appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "That's great. Schedule a reminder for me at 11 am.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceReminder))"
  },
  {
    "original_sentence": "add this ending at 5",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "i wanna meet with alexa at today 4 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"alexa\")))))))))))"
  },
  {
    "original_sentence": "Perfect for me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add a coffee date with mom sometime before 2 pm Thursday.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "ok make a coffee meeting with mom before 2pm thursday",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Add a coffee date with Alexa before 2 pm on Thursday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"coffee date\")) (Event.start_? (OnDateBeforeTime (NextDOW (Thursday)) (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alexa\")))))))))))"
  },
  {
    "original_sentence": "Make it 12-1 please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "Cancel dentist appointment tomorrow.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"dentist appointment\"))))))))))"
  },
  {
    "original_sentence": "Yes cancel the dentist appointment on Tuesday at 10:00 am.",
    "parse": "(Yield (Execute (ConfirmDeleteAndReturnAction (& (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (DateTime.time_? (?= (NumberAM 10L))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday)))))))))"
  },
  {
    "original_sentence": "Thanks. Please add a dental appointment for Thursday at 11 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dental appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "cancel the dentist appointment on Tuesday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dentist appointment\")) (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "That is fine, schedule a doctors appointment for Jennie on Thursday at 10:30 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctors appointment for Jennie\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinuteAm 10L 30L))))))))"
  },
  {
    "original_sentence": "Can you Accept my event at Johnny's Ristorante tomorrow at 6 pm",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L)) (Event.location_? (?= (LocationKeyphrase.apply \"Johnny's Ristorante\"))))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Actually can you decline it",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(ResponseStatusType) AlwaysTrueConstraint)) (intension (ResponseStatusType.Declined)))))"
  },
  {
    "original_sentence": "Thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Accept my breakfast invitation, but don't notify about my acceptance.",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"breakfast\"))))) :response (ResponseStatusType.Accepted) :sendResponse (RespondShouldSend.apply false)))"
  },
  {
    "original_sentence": "Will you call Jack please?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jack\"))))))))"
  },
  {
    "original_sentence": "Please call Jess Gentert now",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jess Gentert\"))))))))"
  },
  {
    "original_sentence": "Please call Marta Stewart",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marta Stewart\"))))))))"
  },
  {
    "original_sentence": "I was wondering if you would mind call Sally Lightfoot?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sally Lightfoot\"))))))))"
  },
  {
    "original_sentence": "Can you call Derek Diggson?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Derek Diggson\"))))))))"
  },
  {
    "original_sentence": "Do I have a baseball game scheduled for Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"baseball game\")))))) 0L))"
  },
  {
    "original_sentence": "Never mind, I don't want that anymore.",
    "parse": "(Yield (EventAttendance :event (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "No that's wrong",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Okay, can you just tell me when my son's next practice is this week?",
    "parse": "(Yield (Event.start (FindNumNextEvent (EventDuringRange (Event.subject_? (?~= \"practice\")) (ThisWeek)) 1L)))"
  },
  {
    "original_sentence": "No, have the practice end at 5:30 PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"practice\")))))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 5L 30L)))))))"
  },
  {
    "original_sentence": "Make a 4 day event called \"Binge video games\" starting tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"Binge video games\")) (Tomorrow) (toDays 4)))))"
  },
  {
    "original_sentence": "That's great thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "And an all day event called workout on the 25th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"workout\")) (nextDayOfMonth (Today) 25L)))))"
  },
  {
    "original_sentence": "a brush",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "That looked good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hello, I would like to cancel my next event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))))"
  },
  {
    "original_sentence": "Actually, no.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "actually yeah let's delete it",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "No, let's not.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Schedule a Book Club Meeting tomorrow at 2 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Book Club Meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Can you find the website to stash invest for me?",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"stash invest\"))))))"
  },
  {
    "original_sentence": "What's the URL for Walk-On's in Mobile?",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Walk-On's in Mobile\"))))))"
  },
  {
    "original_sentence": "Can I have the website for Sanctuary in Iowa City?",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Sanctuary in Iowa City\"))))))"
  },
  {
    "original_sentence": "Add a meeting at starbucks on woodmen at 4pm tuesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 4L)))) (Event.location_? (?= (LocationKeyphrase.apply \"starbucks on woodmen\")))))))"
  },
  {
    "original_sentence": "That works.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What's the weather going to be like for that?",
    "parse": "(Yield (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Is there any snow or rain in the forecast?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))) (do (Yield (WillSnow x0)) (Yield (WillRain x0))))"
  },
  {
    "original_sentence": "Thanks. Create another meeting for next thursday called Wedding Planning at the 1st methodist church",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Wedding Planning\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday)))))) (Event.location_? (?= (LocationKeyphrase.apply \"1st methodist church\")))))))"
  },
  {
    "original_sentence": "Please shift my meeting with Clark to December 12th.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Clark\")))))))) (Event.start_? (DateTime.date_? (?= (MD 12L (December))))))))"
  },
  {
    "original_sentence": "Reschedule my town hall meeting for December 24th please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"town hall meeting\")))))) (Event.start_? (DateTime.date_? (?= (MD 24L (December))))))))"
  },
  {
    "original_sentence": "That will work.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have something scheduled for Tuesday the 24th besides that?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 24L) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Move my event on december 18 to december 29",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 18L (December)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.date_? (?= (MD 29L (December))))))))"
  },
  {
    "original_sentence": "Delete all events scheduled on January 2nd",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "okay thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What time is my meeting this afternoon?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Afternoon)))))))"
  },
  {
    "original_sentence": "Delete all events scheduled on January 3rd then.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Reschedule events on January 5th to the next day.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Please schedule a meeting with Karla on Saturday at 10:00 a.m.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 10L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karla\")))))))))))"
  },
  {
    "original_sentence": "What location do we have down for that meeting?",
    "parse": "(Yield (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "put the location of that meeting as Vine Street office",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Vine Street office\"))))))"
  },
  {
    "original_sentence": "Do I have any other meetings at the vine Street office this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventDuringRange (Event.location_? (?= (LocationKeyphrase.apply \"vine Street office\"))) (ThisWeek)))))) 0L))"
  },
  {
    "original_sentence": "Thank you, add lunch with Karla to Saturday's schedule at noon at the Vine Street Grill on Vine Street.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (Noon))))) (Event.location_? (?= (LocationKeyphrase.apply \"Vine Street Grill on Vine Street\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karla\")))))))))))"
  },
  {
    "original_sentence": "Put bike with Alice on my calendar Sat at 9 M",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"bike\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 9L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alice\")))))))))))"
  },
  {
    "original_sentence": "Yeah it's good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make it 3 hours instead",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 3))))))"
  },
  {
    "original_sentence": "I changed my mind, cancel the bike ride.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"bike ride\")))))))))"
  },
  {
    "original_sentence": "cancel the bike event on april 6",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 6L (April)) (Event.subject_? (?~= \"bike\"))))))))))"
  },
  {
    "original_sentence": "Hi, can you tell me when my next meeting with Ross and Julia is scheduled?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ross\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Julia\"))))) 1L)))"
  },
  {
    "original_sentence": "add 30 minutes to that",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (addDurations (Event.duration (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (toMinutes 30)))))))"
  },
  {
    "original_sentence": "Yes that looks perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank You.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "thanks for ur help",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add dinner with mike and his boss tomorrow",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"mike\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "IS THERE ANY OTHER APPOINTMENTS TOMORROW FOR ME AND MIKE",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mike\")))) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "Change the time to 1pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "The 2nd one works well",
    "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "The first one works well",
    "parse": "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "hi",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Yes. Could you please set a reminder to take the kids to the Discovery Center in Binghamton on Saturday after lunch?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"take the kids to the Discovery Center in Binghamton\")) (Event.start_? (OnDateAfterTime (NextDOW (Saturday)) (Lunch)))))))"
  },
  {
    "original_sentence": "Make a training with Abby, Jake, and Watts in Bellevue tomorrow at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"training\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Watts\"))))))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add a meeting with Ron, Janice, and Allen tomorrow at 6 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L)))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ron\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Allen\"))))))))))))"
  },
  {
    "original_sentence": "It's look good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "It's a great job. Very well",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you add a staff meeting to the calendar during the 2nd week of March?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"staff meeting\")) (Event.start_? (DateTime.date_? (NumberWeekOfMonth 2L (March))))))))"
  },
  {
    "original_sentence": "Let's go with the first one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please schedule a meeting with Barack on March 22 at 3pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 22L (March)) (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack\")))))))))))"
  },
  {
    "original_sentence": "yes thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make an appointment with principal on tommorrow",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Schedule dropping son off at grandmas on at 7 pm for out vacation.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dropping son off\")) (Event.start_? (?= (NextTime (NumberPM 7L))))) (Event.location_? (?= (LocationKeyphrase.apply \"grandmas\")))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add girls' night out with Lesley for 30 minutes after the drop off.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"girls' night out\")) (Event.start_? (?= (adjustByPeriodDuration (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"drop off\")))))) (PeriodDuration.apply :duration (toMinutes 30)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lesley\")))))))))))"
  },
  {
    "original_sentence": "Add meeting at work on the 17th at 9 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 17L) (NumberAM 9L)))) (Event.location_? (?= (LocationKeyphrase.apply \"work\")))))))"
  },
  {
    "original_sentence": "I need a meeting with Elli tomorrow at 11 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 11L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\")))))))))))"
  },
  {
    "original_sentence": "I meant AM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (ConvertTimeToAM (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))))))))))))"
  },
  {
    "original_sentence": "Make me a meeting next Tuesday at 10 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "I need that in the PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (ConvertTimeToPM (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))))))))))))"
  },
  {
    "original_sentence": "thats good, then I will be having Dinner tomorrow at 8 am",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L)))))))))"
  },
  {
    "original_sentence": "Hold up it's suppose to be PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (ConvertTimeToPM (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))))))))))))"
  },
  {
    "original_sentence": "Do I have free time on Sunday?",
    "parse": "(Yield (IsFree (RecipientAvailability (& (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday))))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
  },
  {
    "original_sentence": "What about next Tuesday?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))))))"
  },
  {
    "original_sentence": "Alright cool. Now, tell me if im available in the first week of next month",
    "parse": "(Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (NumberWeekOfMonth 1L (NextMonth)))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true))"
  },
  {
    "original_sentence": "What about next Thursday?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday))))))))"
  },
  {
    "original_sentence": "Update meeting on tuesday to 11AM",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "Neither does really",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you try for 5pm?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "No, sorry, I need it to go til 6 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "Change the date to Saturday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday))))))))"
  },
  {
    "original_sentence": "What up coming events do i have today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventForRestOfToday (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "I need you to put shop for Sams gift on tomorrow the 15th at 1pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"shop for Sams gift\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 15L) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule Sams Birthday party on Friday at 7 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Sams Birthday party\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "yup",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you please change the time on Sams Birthday party to 7:00 to 9:00pm please?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Sams Birthday party\"))))) x1 (DateAtTimeWithDefaults (DateTime.date (Event.start x0)) (NumberPM 7L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (NumberPM 9L)))))))))"
  },
  {
    "original_sentence": "mhm",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule get cake for Sam 5 hours before his birthday party.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"get cake for Sam\")) (Event.start_? (?= (PeriodDurationBeforeDateTime (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"birthday party\")))))) (PeriodDuration.apply :duration (toHours 5)))))))))"
  },
  {
    "original_sentence": "My wife and I are going camping next weekend.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "please wait",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "make an event for tomorrow at 3",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "wait for some time",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "I want to book that appointment we were talking about.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "put appointment my college mate",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Make an appointment with Collin",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Collin\"))))))))))"
  },
  {
    "original_sentence": "Is tim availible then too?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"tim\"))))))))))"
  },
  {
    "original_sentence": "what are my appointments for thr weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "Can you schedule Lunch with Laura on Saturday at 3:30 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (HourMinutePm 3L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Laura\")))))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "awesome, can you add Bill to that too?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bill\"))))))))))"
  },
  {
    "original_sentence": "i agree ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "There's going to be a brunch buffet for the team at Joule on Sunday starting at 10:45 am for probably...1.5 hours",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"brunch buffet for the team\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (HourMinuteAm 10L 45L))))) (Event.duration_? (?= (toHours 1.5)))) (Event.location_? (?= (LocationKeyphrase.apply \"Joule\")))))))"
  },
  {
    "original_sentence": "I'm mistaken, can you move that to Monday next week? It's a work thing so it can't be on a weekend",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (DowOfWeekNew (Monday) (NextWeekList))))))))"
  },
  {
    "original_sentence": "What time is my lunch break at El Toro Bravo?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch break\")) (Event.location_? (?= (LocationKeyphrase.apply \"El Toro Bravo\")))))))))"
  },
  {
    "original_sentence": "Do I have anything else there?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))) 0L))"
  },
  {
    "original_sentence": "where do i Start New Job",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Start New Job\")))))))"
  },
  {
    "original_sentence": "Is there anything else happening in Seattle?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Seattle\"))))))) 0L))"
  },
  {
    "original_sentence": "Where is the event Begin Training located?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Training\")))))))"
  },
  {
    "original_sentence": "do i have anything else there?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id x0)))) (Event.location_? (?= (Event.location x0))))))) 0L)))"
  },
  {
    "original_sentence": "Create \"Lunch with Dad\" at noon tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Lunch with Dad\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))))))"
  },
  {
    "original_sentence": "Also put on for 11AM - \"Call Dad\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Call Dad\")) (Event.start_? (?= (NextTime (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "ty",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What does my schedule look like on May5th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 5L (May)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What time is the: lunch date with my sister?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch date with my sister\")))))))"
  },
  {
    "original_sentence": "can you change that to 1pm?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "You got it right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "OK UPDATE MY EVENT",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "once again check the event schedule",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Hey there. Can you find all the meetings I have scheduled for this coming Wednesday, February 6th please?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 6L (February)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Book lunch with Fran for 1330 Saturday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (HourMinutePm 1L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fran\")))))))))))"
  },
  {
    "original_sentence": "Who organized the golfing tournament??",
    "parse": "(Yield (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"golfing tournament\")))))))"
  },
  {
    "original_sentence": "What's amy's number?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"amy\"))))))))"
  },
  {
    "original_sentence": "What is her email address as well?",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Do you also have Amy's home address?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "Can you find my mother's phone number?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "What is Brenda Smith's phone number?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brenda Smith\"))))))))"
  },
  {
    "original_sentence": "can you tell the meeting place and time",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (do (Yield (Event.location x0)) (Yield (Event.start x0))))"
  },
  {
    "original_sentence": "Thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "this look right",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to schedule a two hour meeting with Annie and Gwen today at 2 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 2L)))) (Event.duration_? (?= (toHours 2)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Annie\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Gwen\"))))))))))))"
  },
  {
    "original_sentence": "Yes, but please also add Joseph to that meeting.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joseph\"))))))))))"
  },
  {
    "original_sentence": "hey, can i book a hotel room for two?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Can you create a new event for my trip to Boston on the 13th of next month?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"trip to Boston\")) (Event.start_? (DateTime.date_? (?= (MD 13L (NextMonth)))))) (Event.location_? (?= (LocationKeyphrase.apply \"Boston\")))))))"
  },
  {
    "original_sentence": "What was my response to tomorrow's finance meeting?",
    "parse": "(Yield (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"finance meeting\")) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "No worries. Who am I?",
    "parse": "(Yield (CurrentUser))"
  },
  {
    "original_sentence": "What's my boss's name and contact info?",
    "parse": "(Yield (PersonFromRecipient (FindManager (toRecipient (CurrentUser)))))"
  },
  {
    "original_sentence": "easy",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When is my meeting with Dan?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan\")))))))))"
  },
  {
    "original_sentence": "what about tomorrow on my calander?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Cancel it",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "cancel the event",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please add my meeting with the wedding planner tomorrow at noon.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "add Tom Jones at noon as the Wedding Planner.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Put Marathon on Saturday at 7 am until 10.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Marathon\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 10L)))))))))"
  },
  {
    "original_sentence": "Make that to 11 am.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "gooood",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "next week contest cancel",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"contest\")) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))))))))"
  },
  {
    "original_sentence": "Yea physics cancel",
    "parse": "(Yield (Execute (ConfirmDeleteAndReturnAction (Event.subject_? (?~= \"physics\")))))"
  },
  {
    "original_sentence": "at 12 is lunch",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (NextTime (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "thanks, create my events",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hair appointment Thursday morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Hair appointment\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Thursday))))))))"
  },
  {
    "original_sentence": "How crowded is the restaurant on the weekends?",
    "parse": "(FencePlaces)"
  },
  {
    "original_sentence": "What restaurant is my next work lunch at?",
    "parse": "(Yield (Event.location (FindNumNextEvent (Event.subject_? (?~= \"work lunch\")) 1L)))"
  },
  {
    "original_sentence": "Is it a casual place or do I have to dress up?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Can I bring my toddler to this restaurant?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Do I have to serve myself?",
    "parse": "(Yield (not (PlaceHasFeature (PlaceFeature.WaiterService) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "What time do I have lunch on Monday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"lunch\"))))))))"
  },
  {
    "original_sentence": "Is Georgina going to be there?",
    "parse": "(Yield (allows (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Georgina\"))) (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Set up hike up the mountain for next Sunday at 1.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"hike up the mountain\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "I know",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule Make a Blanket for Sunday at 10 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Make a Blanket\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "roses are various shades not just red",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "huh?",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Begin travel time at the end of the day for two hours.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"travel time\")) (Event.start_? (DateTime.time_? (?= (EndOfWorkDay))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "Can you schedule a ,meeting for me at the end of the day on March 19th?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (MD 19L (March)) (EndOfWorkDay)))))))"
  },
  {
    "original_sentence": "I want it from 4 pm to the end of the work day",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))) (Event.end_? (DateTime.time_? (?= (EndOfWorkDay))))))))"
  },
  {
    "original_sentence": "cancel my trip to California on February 21, 2019",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MDY 21L (February) (Year.apply 2019L)) (Event.subject_? (?~= \"trip to California\"))))))))))"
  },
  {
    "original_sentence": "Yes. There was not enough water in California",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Also cancel my trip to Utah, I didn't go to it either on Feb 27, 2019.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MDY 27L (February) (Year.apply 2019L)) (Event.subject_? (?~= \"trip to Utah\"))))))))))"
  },
  {
    "original_sentence": "That's the one.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Remove my dance lesson last week",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"dance lesson\")) (LastWeekNew)))))))))"
  },
  {
    "original_sentence": "Delete the flight to Oregon that was last week, too.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"flight to Oregon\")) (LastWeekNew)))))))))"
  },
  {
    "original_sentence": "I need to schedule a lunch with Michael on Thursday at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (Noon))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Michael\")))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Also can you extend lunch with Michael on Thursday at 12:00 by 45 minutes?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 12L)) (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Michael\")))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toMinutes 45))))))))"
  },
  {
    "original_sentence": "Looks great schedule that",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have an event with Jill tonight?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jill\"))))) (Night))))) 0L))"
  },
  {
    "original_sentence": "Am I meeting Mark for football tomorrow night?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (& (Event.subject_? (?~= \"football\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))))) (Night))))) 0L))"
  },
  {
    "original_sentence": "Am I feeding the birds on January 1st?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 1L (January)) (Event.subject_? (?~= \"feeding the birds\")))))) 0L))"
  },
  {
    "original_sentence": "Will there be a meeting tomorrow with Bob?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything this weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))) 0L))"
  },
  {
    "original_sentence": "Can you add the marketing meeting to my calendar on Monday at 2 pm lasting for 2 hours in conference room A",
    "parse": "(FenceConferenceRoom)"
  },
  {
    "original_sentence": "Yes it does",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to change my meeting this Thursday",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Schedule a meeting for thursay please",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"meeting for thursay\")))))"
  },
  {
    "original_sentence": "first one looks great thanks for your help",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "what do I have on friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Make a new meeting for friday morning",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Friday)))))))"
  },
  {
    "original_sentence": "Add dinner with my mom at 4pm next friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner with my mom\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Can that be changed to be from 4 pm to 6 pm.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) x1 (DateAtTimeWithDefaults (DateTime.date (Event.start x0)) (NumberPM 4L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (NumberPM 6L)))))))))"
  },
  {
    "original_sentence": "Thanks, schedule a team meeting from 2 PM to 4 PM.",
    "parse": "(let (x0 (NextTime (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L)))))))))"
  },
  {
    "original_sentence": "Thanks, do I have anything scheduled for Saturday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please call Mary Smith",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary Smith\"))))))))"
  },
  {
    "original_sentence": "Call Donald Trump please",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Donald Trump\"))))))))"
  },
  {
    "original_sentence": "Can you call Tom Cruise for me?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom Cruise\"))))))))"
  },
  {
    "original_sentence": "Place a call with Victor",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Victor\"))))))))"
  },
  {
    "original_sentence": "Call that entertainment reporter Bob Zemuda, I've got a scoop for him.",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob Zemuda\"))))))))"
  },
  {
    "original_sentence": "Put on my calendar that I will be in Scotland from Sunday at 9 am to Friday at 8 pm",
    "parse": "(let (x0 (NextDOW (Sunday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults x0 (NumberAM 9L)))) (Event.end_? (?= (DateAtTimeWithDefaults (nextDayOfWeek x0 (Friday)) (NumberPM 8L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Scotland\"))))))))"
  },
  {
    "original_sentence": "Yes, thank you!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I have to clean my house from Friday at 8 am until Sunday at 8 am.",
    "parse": "(let (x0 (NextDOW (Friday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"clean my house\")) (Event.start_? (?= (DateAtTimeWithDefaults x0 (NumberAM 8L))))) (Event.end_? (?= (DateAtTimeWithDefaults (nextDayOfWeek x0 (Sunday)) (NumberAM 8L)))))))))"
  },
  {
    "original_sentence": "Looks good. That will be all.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "clean my house starting tomorrow until sunday",
    "parse": "(let (x0 (Tomorrow)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"clean my house\")) (DateAndConstraint x0 (nextDayOfWeek x0 (Sunday))))))))"
  },
  {
    "original_sentence": "What year is the Musical chairs event?",
    "parse": "(Yield (Date.year (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Musical chairs\")))))))))"
  },
  {
    "original_sentence": "Put down a birthday party on 3/22 of the same year",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"birthday party\")) (Event.start_? (DateTime.date_? (?= (MDY 22L (toMonth 3L) (Date.year (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))))))"
  },
  {
    "original_sentence": "The first one will fit nicely.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What year was Timmy's retirement party?",
    "parse": "(Yield (Date.year (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Timmy's retirement party\")))))))))"
  },
  {
    "original_sentence": "Schedule a nap after my last meeting tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"nap\")) (Event.start_? (?= (Event.end (FindLastEvent (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "yes right,but can you change the time",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "No it didn;t",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Delete my Trip to the Mall after my last Board Meeting on Tuesday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Trip to the Mall\")) (Event.start_? (?> (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"Board Meeting\")))))))))))))))))"
  },
  {
    "original_sentence": "Cool! WHat time does my day end on Sunday?",
    "parse": "(Yield (Event.end (FindLastEvent (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "ask all the staff members to come to starbucks for lunch",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \"starbucks\"))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Create a Starbucks for lunch and invite all the staff members",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Starbucks for lunch\")) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "I need a Coffee Date to be on the calendar for 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Coffee Date\")) (Event.start_? (?= (NextTime (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change the ending time of Coffee Date to 4:30 PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Coffee Date\")))))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 4L 30L)))))))"
  },
  {
    "original_sentence": "Create meeting for today at noon and make my ShowAs status Busy",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (Noon)))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))"
  },
  {
    "original_sentence": "I would like to set a lunch appointment at 1 am after that.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberAM 1L))))))))"
  },
  {
    "original_sentence": "The rest of the week make sure I don't have anything scheduled at 7 pm for any of the week.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Drinking coffee with boss at 5 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Drinking coffee\")) (Event.start_? (?= (NextTime (NumberPM 5L))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Ok, thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please, schedule a meeting with Mr. Smith at the Walmart office building on Salem Raod.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \"Walmart office building on Salem Raod\"))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Smith\")))))))))))"
  },
  {
    "original_sentence": "i want to create a event",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "create meeting on 6:00 pm by today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "create lunch by next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (NextWeekList)))))))"
  },
  {
    "original_sentence": "yeah",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "show the event by tommorow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "create event by next month first week friday at 2:00 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (DowOfWeekNew (Friday) (NumberWeekOfMonth 1L (NextMonth))) (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "show my events",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "show lunch details",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\"))))))"
  },
  {
    "original_sentence": "create lunch by today on 8:00 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "cancel my lunch by today",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"lunch\"))))))))))"
  },
  {
    "original_sentence": "cancel my lunch",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))))))"
  },
  {
    "original_sentence": "show my all events",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "create event by today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Today)))))))"
  },
  {
    "original_sentence": "at 1:00 PM",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "show dinner time",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\")))))))"
  },
  {
    "original_sentence": "create dinner by next friday at 9:00 PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 9L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "make the dinner timing as 10:00 PM",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 10L)))))))"
  },
  {
    "original_sentence": "cancel my appointment",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "cancel the appointment at 1:00 PM",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (^(Event) EmptyStructConstraint) (NumberPM 1L)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "show my dinner",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\"))))))"
  },
  {
    "original_sentence": "change dinner by 10:30 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\")))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 10L 30L)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need you to schedule my meeting with Cecelia at 10 AM on April 15th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 15L (April)) (NumberAM 10L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cecelia\")))))))))))"
  },
  {
    "original_sentence": "The meeting will end by 11 AM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "I need to meet with Cornelio and Karl sometime this week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (ThisWeek))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cornelio\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karl\"))))))))))))"
  },
  {
    "original_sentence": "Thursday works",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "remind me to call Barack by 5 pm today",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "have my whole team meet me tonight",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Night) (Today))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Set my status as out of office for the next hour.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (Now))) (Event.duration_? (?= (toHours 1)))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
  },
  {
    "original_sentence": "Change the Team Meeting to be all day Thursday",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Team Meeting\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Thursday)))))))"
  },
  {
    "original_sentence": "Yes, the team meeting is all day.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create follow-up \"team meeting\" the following week at the same day and time.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (?= (adjustByPeriodDuration (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply (toWeeks 1)))))))))"
  },
  {
    "original_sentence": "make the meeting all day on the 19th.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (ClosestDay (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Day.apply 19L))))))"
  },
  {
    "original_sentence": "Yes, but now change it to the 20th.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDay (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Day.apply 20L))))))))"
  },
  {
    "original_sentence": "What's my next meeting?",
    "parse": "(Yield (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L))"
  },
  {
    "original_sentence": "This needs tot be on Saturday instead",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Saturday)))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make it end at 7pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "good thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you let me know who has not accepted my One Man Show",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"One Man Show\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "and How about showing me all the people who have not declined my lunch tomorrow?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"lunch\"))))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "who has not possibly accepted movie marathon",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"movie marathon\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "hi. i need help managing my calendar.",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "I need help with budgeting my time between work and home.",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "ok. please help me.",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "i don't need help with questions about the weather.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "thank you. good bye.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Hey, go ahead and add my morning meeting with Barack Obama",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Morning) (Today))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\")))))))))))"
  },
  {
    "original_sentence": "Yea, add the 10:30am one",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (HourMinuteAm 10L 30L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Also cancel my meeting with Karl Boon for this week",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karl Boon\")))) (ThisWeek)))))))))"
  },
  {
    "original_sentence": "Excellent",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "ask Damon Ellery if dinner is still on for later this week",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "alrighty then...",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Hey",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Change the meeting date with John on Apr 6.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"meeting\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))) (Event.start_? (DateTime.date_? (?= (MD 6L (April))))))))"
  },
  {
    "original_sentence": "Check how many meetings in this week?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"meetings\")) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))))"
  },
  {
    "original_sentence": "What about today weather in CA",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"CA\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Time to show these noobs who is the boss. Put Epic Fortnite Sesh on the calendar for tomorrow night from 10 pm to 4 am.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Epic Fortnite Sesh\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 4L)))))))))"
  },
  {
    "original_sentence": "Add Mom's Basement as the location.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Mom's Basement\"))))))"
  },
  {
    "original_sentence": "make an event for 17 tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMilitary 17L)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "delete event that starts tomorrow at 17",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMilitary 17L)))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "If I add a meeting at 9 pm today, please add a follow up meeting for next week at the same time.",
    "parse": "(FenceConditional)"
  },
  {
    "original_sentence": "Thanks, what is my first scheduled event on Wednesday the 13th?",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (nextDayOfMonth (Today) 13L) (^(Event) EmptyStructConstraint)) 1L))"
  },
  {
    "original_sentence": "Who's team is Elli Parker on?",
    "parse": "(Yield (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli Parker\")))))))"
  },
  {
    "original_sentence": "Who's on Jesse's team?",
    "parse": "(Yield (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\")))))))"
  },
  {
    "original_sentence": "Schedule a Zoo Event with Jesse Rosenfeld and his team.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse Rosenfeld\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Zoo Event\")) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindTeamOf x0)))))))))"
  },
  {
    "original_sentence": "Let's do the one on the 10th",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks. Then put a dinner next month with Jesse Rosenfeld and his team.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse Rosenfeld\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindTeamOf x0)))))))))"
  },
  {
    "original_sentence": "Delete everything I have tomorrow. Start the day at 8am at the office with a meeting with Eric for 45 minutes, followed by reviewing the surveys for 20 minutes and show me as busy for 30 minutes at noon.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "yes!please to check the meeting schedules",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Schedule a meeting with Georgia next Tuesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Georgia\")))))))))))"
  },
  {
    "original_sentence": "ok second one is good",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Cancel my meeting with Matt",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Matt\")))))))))))"
  },
  {
    "original_sentence": "No, I'll keep it for now.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Cancel my lunch meeting for tomorrow and remind me to inform my staff in the morning.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "delete tomorrows business meet",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"business meet\"))))))))))"
  },
  {
    "original_sentence": "Actually I meant \"Business meat\"",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"Business meat\")))))"
  },
  {
    "original_sentence": "Yes that looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok! any event with ben on my calander?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"ben\"))))))"
  },
  {
    "original_sentence": "yep",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I have to take the dog to the groomer at 8 am tomorrow and then a meeting at work at 10 am",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Oh, go ahead and put take the dog to the groomer at 8 am tomorrow then.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"take the dog to the groomer\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "The meeting at 10 was pushed forward an hour, so let's fix that on my end.",
    "parse": "(let (x0 (NextTime (NumberAM 10L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime x0 (^(Event) EmptyStructConstraint)))))) (Event.start_? (?= (adjustByPeriodDuration x0 (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "not sure yet actually",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "yes, that will work",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need lunch next week with Tommy.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (NextWeekList)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tommy\")))))))))))"
  },
  {
    "original_sentence": "Hold that thought",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "I have to go, I'll do this later.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have any hockey events this weekend",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"hockey\")) (ThisWeekend))))) 0L))"
  },
  {
    "original_sentence": "okay thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have any lunch meetings scheduled?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch meeting\"))))))"
  },
  {
    "original_sentence": "Something came up with my boss, change the lunch meeting to 2:30 to 3:00.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (HourMinutePm 2L 30L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "please extend half an hour",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (addDurations (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint)))) (toHours 0.5)))))))"
  },
  {
    "original_sentence": "Set up a monthly appointment with Sarah every Wednesday from 1 pm to 2 pm.",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "Ortho appointment friday morning",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Ortho appointment\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "The 1st one, Ortho Friday at 10:00 AM works but make it a hour.",
    "parse": "(Yield (Execute (ReviseConstraint (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Make an Ortho appointment on Friday from 10 to 11",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Ortho appointment\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 11L)))))))))"
  },
  {
    "original_sentence": "that look 100% correct",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you see if I have any doctor appointments this week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctor appointments\")) (ThisWeek))))"
  },
  {
    "original_sentence": "Remind me when Valentine's Day is this year",
    "parse": "(Yield (HolidayYear (Holiday.ValentinesDay) (Date.year (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "What day is Labor Day this year?",
    "parse": "(Yield (HolidayYear (Holiday.LaborDay) (Date.year (Today))))"
  },
  {
    "original_sentence": "What day was Labor Day last year?",
    "parse": "(Yield (HolidayYear (Holiday.LaborDay) (LastYear)))"
  },
  {
    "original_sentence": "How about when is Boxing Day?",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "What date was Thanksgiving in 1990?",
    "parse": "(Yield (HolidayYear (Holiday.Thanksgiving) (Year.apply 1990L)))"
  },
  {
    "original_sentence": "what is my next all day event?",
    "parse": "(Yield (FindNumNextEvent (Event.isAllDay_? (?= true)) 1L))"
  },
  {
    "original_sentence": "And what am I doing after my all day test?",
    "parse": "(let (x0 (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"test\")) (Event.isAllDay_? (?= true)))))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)))))"
  },
  {
    "original_sentence": "Can you cancel that please?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes, that's it, thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to find time for an all-day trip next month.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth)))) (Event.isAllDay_? (?= true))))))"
  },
  {
    "original_sentence": "Can you find the next time I have coffee?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"coffee\")) 1L)))"
  },
  {
    "original_sentence": "oh ok!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "No, that should be it, thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "did i decline the movies",
    "parse": "(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"movies\"))))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Did I decline Abby's invite to go skating?",
    "parse": "(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Skating\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Am I supposed to be in a meeting tomorrow morning?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Morning))))) 0L))"
  },
  {
    "original_sentence": "Update the afternoon conference tomorrow",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "it's ok no problem try after the request",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What time is the conference tomorrow",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"conference\"))))))))"
  },
  {
    "original_sentence": "when i have conference tomorrow?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"conference\"))))))))"
  },
  {
    "original_sentence": "yes conform thanks for your information",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I am visiting my mother in Tulsa from November 23rd to the 25th.",
    "parse": "(let (x0 (MD 23L (November))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \"Tulsa\"))) (EventAllDayForDateRange (Event.subject_? (?= \"visiting my mother\")) (DateAndConstraint x0 (nextDayOfMonth x0 25L))))))))"
  },
  {
    "original_sentence": "Perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Actually update and add a extra day to visiting my mother starting November 23.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 23L (November)) (Event.subject_? (?~= \"visiting my mother\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.end_? (DateTime.date_? (?= (adjustByPeriod (DateTime.date (Event.start x0)) (toDays 1)))))))))"
  },
  {
    "original_sentence": "Yes, this is it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Appointment was very late",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "How cold it is in Columbia South Carolina?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Columbia South Carolina\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "Is it suppose to rain tomorrow?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "What is the temperature in Manning, South Carolina?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Manning, South Carolina\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "What is the lowest temperature tomorrow in Summerton,South Carolina?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Summerton\"))) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "Is there a chance of rain in Columbia,South Carolina?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Columbia,South Carolina\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "Who hot is it in Sumter, SC?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Sumter, SC\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "How hot is it now>",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Tomoya",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tomoya\")))))))"
  },
  {
    "original_sentence": "Nagisa",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nagisa\")))))))"
  },
  {
    "original_sentence": "Fuko",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fuko\")))))))"
  },
  {
    "original_sentence": "Ushio",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ushio\")))))))"
  },
  {
    "original_sentence": "I would like to set an party event for this Wednesday at 8pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"party\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "cancel the meeting with my mom",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Yes. Schedule breakfast with mom for Sunday instead.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "The 2nd one, Meeting with Mom on Sunday at 1:00 pm will work but can you make it 1 and a half hours?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Make an event for 3 pm with Jake",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))))))))))"
  },
  {
    "original_sentence": "Who even is Jake?",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))))))"
  },
  {
    "original_sentence": "Yea it looks right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Put a new meeting with Abby for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "Give me a few minutes to think about my actions",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "the 2nd one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "what my early appointment this week ?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (EarlyDateRange (ThisWeek))) 1L))"
  },
  {
    "original_sentence": "What do I have early next month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (EarlyDateRange (FullMonthofMonth (NextMonth))))))"
  },
  {
    "original_sentence": "Do I have any party's early next month",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"party's\")) (EarlyDateRange (FullMonthofMonth (NextMonth))))))) 0L))"
  },
  {
    "original_sentence": "Please schedule a dentist appointment for Friday at 9 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "Change the duration to one hour, and set the location to 555 Main Street, Jacksboro, TN.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.duration_? (?= (toHours 1))) (Event.location_? (?= (LocationKeyphrase.apply \"555 Main Street, Jacksboro, TN\")))))))"
  },
  {
    "original_sentence": "How many events are occurring?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Set another dance practice for the same time the next week.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dance practice\")) (Event.start_? (?= (adjustByPeriodDuration (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply (toWeeks 1)))))))))"
  },
  {
    "original_sentence": "I have to work from 5 till 9pm on the 16th so put that on the schedule.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (nextDayOfMonth (Today) 16L) (NumberPM 5L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"work\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 9L)))))))))"
  },
  {
    "original_sentence": "Will you be able to delete the date I setup with my girlfriend?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "OK, set a one hour business lunch with Jim on Tuesday at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"business lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (Noon))))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))))))))))"
  },
  {
    "original_sentence": "Put me down for lunch from noon until the end of the day today",
    "parse": "(let (x0 (Today)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults x0 (Noon))))) (Event.end_? (DateTime.date_? (?= (adjustByPeriod x0 (toDays 1))))))))))"
  },
  {
    "original_sentence": "Thank you. Can you please add \"Date Night\" to Friday's calendar, from 3PM to the end of the work day?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L))) (do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Date Night\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (EndOfWorkDay))))))))))"
  },
  {
    "original_sentence": "This looks perfect. Can you also add Watch The Office from 8 am until the end of the day tomorrow?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L))) (do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Watch The Office\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (EndOfWorkDay))))))))))"
  },
  {
    "original_sentence": "Do I have anything between Soccer practice and my movie date?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBetweenEvents (^(Event) EmptyStructConstraint) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Soccer practice\"))))) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"movie date\"))))))))) 0L))"
  },
  {
    "original_sentence": "Schedule a board meeting between lunch and my nap on Tuesday.",
    "parse": "(let (x0 (NextDOW (Tuesday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"board meeting\")) (Event.start_? (DateTimeAndConstraintBetweenEvents (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate x0 (Event.subject_? (?~= \"lunch\")))))) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate x0 (Event.subject_? (?~= \"nap\")))))))))))))"
  },
  {
    "original_sentence": "Do I have anything between my take a shower event and movie date?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBetweenEvents (^(Event) EmptyStructConstraint) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"take a shower\"))))) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"movie date\"))))))))) 0L))"
  },
  {
    "original_sentence": "Can you make a budget meeting between my breakfast and lunch tomorrow?",
    "parse": "(let (x0 (Tomorrow) x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate x0 (Event.subject_? (?~= \"breakfast\")))))) x2 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate x0 (Event.subject_? (?~= \"lunch\"))))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"budget meeting\")) (Event.start_? (DateTimeAndConstraintBetweenEvents x1 x2))) (Event.end_? (DateTimeAndConstraintBetweenEvents x1 x2)))))))"
  },
  {
    "original_sentence": "The first please.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "what's the weather outside?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (?= (Now))))"
  },
  {
    "original_sentence": "philly",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"philly\")))))))"
  },
  {
    "original_sentence": "I meant philadelphia",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"philadelphia\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "what's the weather in philadelphia",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"philadelphia\"))) (?= (Now))))"
  },
  {
    "original_sentence": "what's the weather going to be tomorrow",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "What about in philadelphia?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"philadelphia\")))))))"
  },
  {
    "original_sentence": "how is a tornado formed",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "are there any hurricanes right now",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "what's the weather next tuesday",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextDOW (Tuesday))))))"
  },
  {
    "original_sentence": "philadelphia pa",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"philadelphia pa\")))))))"
  },
  {
    "original_sentence": "what's the weather next tuesday in philadelphia",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"philadelphia\"))) (DateTime.date_? (?= (NextDOW (Tuesday))))))"
  },
  {
    "original_sentence": "will it rain anytime over the next week",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "what's the weather in los angeles",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"los angeles\"))) (?= (Now))))"
  },
  {
    "original_sentence": "how about san diego",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"san diego\")))))))"
  },
  {
    "original_sentence": "what about the forecast for tomorrow",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "7 day forecast",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (NextPeriod (toDays 7)))))"
  },
  {
    "original_sentence": "What about in Boise",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"Boise\")))))))"
  },
  {
    "original_sentence": "remember my location",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "what is the 7 day forecast for boise",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"boise\"))) (DateTime.date_? (NextPeriod (toDays 7)))))"
  },
  {
    "original_sentence": "Tell me the time now",
    "parse": "(Yield (Now))"
  },
  {
    "original_sentence": "Do I have dinner tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"dinner\")))))) 0L))"
  },
  {
    "original_sentence": "Will I have a hair appointment this upcoming week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"hair appointment\")) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything planned after that appointment?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))) 0L)))"
  },
  {
    "original_sentence": "What about on friday?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)))))"
  },
  {
    "original_sentence": "I need to delete the book club meeting this evening at 6pm.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 6L)) (Event.subject_? (?~= \"book club meeting\"))))))))))"
  },
  {
    "original_sentence": "add a vet appointment on the 24th at 4pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"vet appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 24L) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "great, now can you tell me when my meeting ith Sam is next week?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\")))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))))))"
  },
  {
    "original_sentence": "Can you find any events with Sam in it?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\"))))))"
  },
  {
    "original_sentence": "Schedule an appointment with Sam for next Wednesday at 1:00pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 1L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\")))))))))))"
  },
  {
    "original_sentence": "Cancel the rest of my meetings for the week.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "my meetings at 5pm",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 5L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "OK ENJOY THIS PARTY.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "cancel take over the universe meeting",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"take over the universe meeting\")))))))))"
  },
  {
    "original_sentence": "this meetting helps me to the growth communication skills",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Hi, I need to put a meeting on the schedule with Debo and Jeff for 11 am on Thursday the 14th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 14L) (NumberAM 11L)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Debo\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeff\"))))))))))))"
  },
  {
    "original_sentence": "Fantastic!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What number is there to contact PC Gamerz in Hawaii?",
    "parse": "(Yield (Place.phoneNumber (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"PC Gamerz in Hawaii\"))))))"
  },
  {
    "original_sentence": "what is the number for the Wilbur May Museum in Reno?",
    "parse": "(Yield (Place.phoneNumber (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Wilbur May Museum in Reno\"))))))"
  },
  {
    "original_sentence": "Can you track down the phone number for Geralds Bar in Flint?",
    "parse": "(Yield (Place.phoneNumber (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Geralds Bar in Flint\"))))))"
  },
  {
    "original_sentence": "Can you tell me when System of a Down is coming to LA?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Can you add \"Concert\" next Saturday from 10pm to midnight?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Concert\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (Midnight)))))))))"
  },
  {
    "original_sentence": "What do I have to do next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "Is there a board meeting next month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"board meeting\")) (FullMonthofMonth (NextMonth)))))) 0L))"
  },
  {
    "original_sentence": "Can you check to see if I have a dentist appointment tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"dentist appointment\")))))"
  },
  {
    "original_sentence": "Do I have meetings this afternoon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"
  },
  {
    "original_sentence": "Add one with Mike at 2 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mike\")))))))))))"
  },
  {
    "original_sentence": "Delete my doctor's appointment on January 27",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 27L (January)) (Event.subject_? (?~= \"doctor's appointment\"))))))))))"
  },
  {
    "original_sentence": "When do I have a meeting with Peter?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Peter\"))))))))"
  },
  {
    "original_sentence": "Can you make an event called dog park that start on Saturday at 1 pm and I will be there for about 1.5 hours",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dog park\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 1L))))) (Event.duration_? (?= (toHours 1.5)))))))"
  },
  {
    "original_sentence": "Yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "whens my next review board meeting?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"review board meeting\")) 1L)))"
  },
  {
    "original_sentence": "And when is my next crash the wedding party?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"crash the wedding party\")) 1L)))"
  },
  {
    "original_sentence": "Can you update crash the wedding party and more to last only 2 hours?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"crash the wedding party and more\")))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Looks correct",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "do I have anything on my calendar for washing all of my cars?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"washing all of my cars\"))))) 0L))"
  },
  {
    "original_sentence": "Create dentist appointment for the day after tomorrow at 4 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (adjustByPeriod (Tomorrow) (toDays 1)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "I need an appointment at 4pm with the dentist 2 days from now.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Set up meeting with Rene for Tuesday at 5.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 5L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rene\")))))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "CANCEL THE EVENTS TODAY",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "CANCEL EVENTS FROM 9.00 AM TO 10.00 am",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "ok thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Remove my event to shop for cars.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"shop for cars\")))))))))"
  },
  {
    "original_sentence": "Take that off my schedule..",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Catch you later!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what about the rest of day on my calendar?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventForRestOfToday (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "can you set diner at 5pm with sue",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"diner\")) (Event.start_? (?= (NextTime (NumberPM 5L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"sue\")))))))))))"
  },
  {
    "original_sentence": "YES LOOK LIKE GOOD",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok set alaram iam function",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Does Blue C Sushi in Bellevue have waiter service",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Blue C Sushi in Bellevue\"))))))"
  },
  {
    "original_sentence": "Does M3 in Reno have waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"M3 in Reno\"))))))"
  },
  {
    "original_sentence": "Okay, that's great! Does Sushi Ota in San Diego have waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Sushi Ota in San Diego\"))))))"
  },
  {
    "original_sentence": "Schedule my photo shoot for next Tuesday at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"photo shoot\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "The photographer said I should expect to be there for at least 3 hours.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 3))))))"
  },
  {
    "original_sentence": "Looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you add \"Get a Hair cut\" at 4:45 the day before my photo shoot?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Get a Hair cut\")) (Event.start_? (?= (DateAtTimeWithDefaults (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"photo shoot\"))))))) (HourMinutePm 4L 45L))))))))"
  },
  {
    "original_sentence": "Change the title to Salon.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"Salon\")))))"
  },
  {
    "original_sentence": "Can you change my dentist appointment the day after?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (DateTime.date (Event.start x0)) (toDays 1)))))))))"
  },
  {
    "original_sentence": "schedule a meeting with amma at 6 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 6L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"amma\")))))))))))"
  },
  {
    "original_sentence": "actually it should be in 1 hour from now",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 1))))))))"
  },
  {
    "original_sentence": "Looks good, but make it only last an hour.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "that's it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "IT'S GOOD",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Where is the meeting at brunch time tomorrow taking place?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (Brunch)) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Hmm ok. Could you make me an event at brunch tomorrow in Seattle?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Brunch)))) (Event.location_? (?= (LocationKeyphrase.apply \"Seattle\")))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "so can you tell me if this Friday if I have anything at brunch.",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (Brunch)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "no thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "How's the weather?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (?= (Now))))"
  },
  {
    "original_sentence": "When will it rain?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Hello. What time is my hair appointment this month?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"hair appointment\")) (FullMonthofMonth (Date.month (Today)))))))))"
  },
  {
    "original_sentence": "How about the event named \"doctor appointment\"?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"doctor appointment\")))))"
  },
  {
    "original_sentence": "And my nail appointment?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"nail appointment\")))))"
  },
  {
    "original_sentence": "What about my eyebrow wax appointment?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"eyebrow wax appointment\")))))"
  },
  {
    "original_sentence": "Do I have any upcoming hair appointments on my calender?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"hair appointments\"))))) 0L))"
  },
  {
    "original_sentence": "Am I having dinner with my parents this weekend?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Are John, Dallas, and I having dinner tomorrow night?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dallas\"))))))) (Night))))) 0L))"
  },
  {
    "original_sentence": "Do I have any events on June 4th?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 4L (June)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "How about the next day?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Can you send an invitation to Tom?",
    "parse": "(Yield (ForwardEventWrapper (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\"))))))))"
  },
  {
    "original_sentence": "meeting with john tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"john\")))))))))))"
  },
  {
    "original_sentence": "No, I'll need it even later",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "2:30 pm ok.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (HourMinutePm 2L 30L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "possibly the second.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "iam work on tomorrow update my events",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "please change Saturday appointment time",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "set lunch meeting tomorrow at 11",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "Lunch will probably be 2 hours",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Lunch\")))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Thanks, add a two hour meeting with Jeri to start at 1:30 PM tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 1L 30L)))) (Event.duration_? (?= (toHours 2)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeri\")))))))))))"
  },
  {
    "original_sentence": "Delete any meeting I have scheduled for tomorrow.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "When is my last meeting tomorrow?",
    "parse": "(Yield (Event.start (FindLastEvent (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Do I have any meetings scheduled anytime after Wednesday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (DateTime.date_? (?> (NextDOW (Wednesday)))))))) 0L))"
  },
  {
    "original_sentence": "What about the day before?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (PeriodBeforeDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Can you schedule a Yoga Session after my last event tomorrow?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Yoga Session\")) (Event.start_? (?= (Event.end (FindLastEvent (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "That looks great to me",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Is it going to snow at my Fiesta on Saturday?",
    "parse": "(Yield (WillSnow (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"Fiesta\")))))))))"
  },
  {
    "original_sentence": "Will it be windy at taco tuesday?",
    "parse": "(Yield (IsWindy (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"taco tuesday\"))))))))"
  },
  {
    "original_sentence": "Will it rain on the school trip?",
    "parse": "(Yield (WillRain (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"school trip\"))))))))"
  },
  {
    "original_sentence": "create meeting with coworkers on monday at 7",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 7L)))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "I need to have a PowerPoint Skype Session with Taylor, Anne, and Lucy tomorrow at 12 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"PowerPoint Skype Session\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 12L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Taylor\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Anne\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lucy\"))))))))))))"
  },
  {
    "original_sentence": "Also, please add Brian to this as well.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brian\"))))))))))"
  },
  {
    "original_sentence": "Perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When is Boating on the Lake happening with Will, Sam, and John?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Boating on the Lake\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Will\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))))"
  },
  {
    "original_sentence": "Make event for picnic on Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"picnic\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))))))"
  },
  {
    "original_sentence": "Hello. I'm wondering what is the average temperature in Minneapolis in June?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "It's alright. What is the hottest place on earth?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "What is the difference in celcius and Fahrenheit?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Sure. Can you tell me how rain is formed?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "What's the last thing on my calendar this month?",
    "parse": "(Yield (FindLastEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today))))))"
  },
  {
    "original_sentence": "may i help you",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "What do I have scheduled for tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Add a two hour meeting with Tom to my calendar tomorrow at 9 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L)))) (Event.duration_? (?= (toHours 2)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))))))))"
  },
  {
    "original_sentence": "Looks correct",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, add lunch with Anne tomorrow at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Anne\")))))))))))"
  },
  {
    "original_sentence": "Looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make a meeting with my manager",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))))))"
  },
  {
    "original_sentence": "Let's put the first option on the calendar.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What do I have next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "Do that again.",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "Schedule a meeting with Abby Monday at 3 pm/",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "Set up a call with Lisa between my coffee run and call with the Boss",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"coffee run\"))))) x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"call with the Boss\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"call with Lisa\")) (Event.start_? (DateTimeAndConstraintBetweenEvents x0 x1))) (Event.end_? (DateTimeAndConstraintBetweenEvents x0 x1)))))))"
  },
  {
    "original_sentence": "Yeah either is fine, pick at your leisure!",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you put a nap in between dinner and my movie date with Sue tomorrow?",
    "parse": "(let (x0 (Tomorrow) x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate x0 (Event.subject_? (?~= \"dinner\")))))) x2 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate x0 (& (Event.subject_? (?~= \"movie date\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sue\")))))))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"nap\")) (Event.start_? (DateTimeAndConstraintBetweenEvents x1 x2))) (Event.end_? (DateTimeAndConstraintBetweenEvents x1 x2)))))))"
  },
  {
    "original_sentence": "The earlier one works.",
    "parse": "(Yield (Execute (ChooseCreateEvent (Earliest) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Is there anything on my schedule after my presentation but before drinks with Abby?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBetweenEvents (^(Event) EmptyStructConstraint) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"presentation\"))))) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"drinks with Abby\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))) 0L))"
  },
  {
    "original_sentence": "Create event for December 17 at 5:00pm and change status to out of office",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 17L (December)) (NumberPM 5L)))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
  },
  {
    "original_sentence": "Thanks, can you do that on Wednesday the 18th too?",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "No",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Could you delete my bowling event with Jean, Jesse, and Jennifer tomorrow?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"bowling\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jean\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer\")))))))))))))"
  },
  {
    "original_sentence": "Yes, please remove that from my calendar.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you. Also, please cancel my appointment with Uziah, Urie, and Mooch which was scheduled for 6 pm today.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 6L)) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Uziah\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Urie\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mooch\")))))))))))))"
  },
  {
    "original_sentence": "Also make me an event with Abby, Jake, and Kim",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))))))"
  },
  {
    "original_sentence": "Accept my invitation for lunch, say \"I'm buying\"",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I'm buying\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\"))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "THANKS THAT IS OK",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Could you please accept the hot dog eating contest? Say that I can't wait to win!",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I can't wait to win!\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"hot dog eating contest\"))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Yes, perfect, thanks!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Now that you have confirmed that, can you go ahead and accept that invite to brunch from Kim?",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"brunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Put a meeting with Simon on my schedule for tomorrow at 1pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (?= (NumberPM 1L)) (Tomorrow))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Simon\")))))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you add a meeting with Tom after that one.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))))))))"
  },
  {
    "original_sentence": "Let's make a 3PM instead of a 1:30PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Yeah, 3PM works perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "nothanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you set a reminder for my Dad's birthday on the first of January?",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Will you add kids party to my calendar for 4/11/2019 at 5pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"kids party\")) (Event.start_? (?= (DateAtTimeWithDefaults (MDY 11L (toMonth 4L) (Year.apply 2019L)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you change the kids party to end at 7pm?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"kids party\")))))) (Event.end_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "do I have any events for april 19?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 19L (April)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "no",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "create doctors appointment for baby monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctors appointment for baby\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))))))"
  },
  {
    "original_sentence": "Let's do 1:00",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Add Mike to this appointment",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mike\"))))))))))"
  },
  {
    "original_sentence": "when is my next meeting with john",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"john\")))) 1L)))"
  },
  {
    "original_sentence": "please add melanie to this meeting",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"melanie\"))))))))))"
  },
  {
    "original_sentence": "When do I have the Interviews with the press on the calendar?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Ugh. And how long is it?",
    "parse": "(Yield (Event.duration (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "I'm not sure what sadomasochist set that up, but let's change it around. I want it on the 10th from noon to 3 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (ClosestDay (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Day.apply 10L)) (Noon))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L)))))))))"
  },
  {
    "original_sentence": "hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "what is the weather in zipcode 40353",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"40353\"))) (?= (Now))))"
  },
  {
    "original_sentence": "thats not right",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Does Chipotle in Carson City have takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Chipotle in Carson City\"))))))"
  },
  {
    "original_sentence": "does J T Basque Bar & Dining Room in Minden have takeout",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"J T Basque Bar & Dining Room in Minden\"))))))"
  },
  {
    "original_sentence": "does Lili's in Reno have takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Lili's in Reno\"))))))"
  },
  {
    "original_sentence": "Fill afternoon for kids",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"kids\")) (Event.start_? (DateTimeConstraint (Afternoon) (Today)))))))"
  },
  {
    "original_sentence": "one works fine",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Parent Teacher Conference 17th 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Parent Teacher Conference\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 17L) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Yes. Add Bran's coffee shop.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Bran's coffee shop\"))))))"
  },
  {
    "original_sentence": "Make it 45 minutes",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toMinutes 45))))))"
  },
  {
    "original_sentence": "How long is father daughter softball?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"father daughter softball\")))))))"
  },
  {
    "original_sentence": "What about father son and wife softball?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"father son and wife softball\")))))"
  },
  {
    "original_sentence": "Okay, what about the volleyball - softball team meeting next Monday?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"volleyball - softball team meeting\")))))"
  },
  {
    "original_sentence": "add an event called \"Team bonding and Team Pondering\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"Team bonding and Team Pondering\")))))"
  },
  {
    "original_sentence": "Let's do the first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "St. Patrick's Day... is it next week?",
    "parse": "(Yield (allows (NextWeekList) (NextHolidayFromToday (Holiday.StPatricksDay))))"
  },
  {
    "original_sentence": "is Easter next month",
    "parse": "(Yield (allows (FullMonthofMonth (NextMonth)) (NextHolidayFromToday (Holiday.Easter))))"
  },
  {
    "original_sentence": "is Flag Day in the summer",
    "parse": "(Yield (allows (SeasonSummer) (NextHolidayFromToday (Holiday.FlagDay))))"
  },
  {
    "original_sentence": "Hello! Can you tell me if I have a meeting on Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "put meeting with shaksi and losliya",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"shaksi\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"losliya\")))))))))))"
  },
  {
    "original_sentence": "The second option works. How is Shaksi's manager?",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Shaksi\"))))))))"
  },
  {
    "original_sentence": "Can you add Dan to the meeting?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan\"))))))))))"
  },
  {
    "original_sentence": "Yes. Can you forward the invites?",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule brunch on Sunday at 11:00 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"brunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "Make it an hour and a half please.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours (+ 1 0.5)))))))"
  },
  {
    "original_sentence": "Hi, please change today's 3:00 meeting to 3:30",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 3L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))))))"
  },
  {
    "original_sentence": "who are all in that meeting. please list out.",
    "parse": "(Yield (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Are there any attendees in today's meeting?",
    "parse": "(Yield (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "add the location as new jersy",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"new jersy\"))))))"
  },
  {
    "original_sentence": "Make it 15 minutes",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toMinutes 15))))))"
  },
  {
    "original_sentence": "Does the Waverly in Brooklyn offer takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"the Waverly in Brooklyn\"))))))"
  },
  {
    "original_sentence": "Can I order takeout from Shilawon in hawaii",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Shilawon in hawaii\"))))))"
  },
  {
    "original_sentence": "does Stonehouse Cafe in Reno have take out",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Stonehouse Cafe in Reno\"))))))"
  },
  {
    "original_sentence": "Delete all calendar entries for July 13",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Howdy, howdy, I need to find out what I've got scheduled for this coming Saturday the 2nd of March.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 2L (March)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Okay, add a concert on March 2nd",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"concert\")) (Event.start_? (DateTime.date_? (?= (MD 2L (March)))))))))"
  },
  {
    "original_sentence": "Yes, create event for March 2nd at 10:00am",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTimeConstraint (?= (NumberAM 10L)) (MD 2L (March)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please show me as busy until 11AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.end_? (?= (NextTime (NumberAM 11L)))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))"
  },
  {
    "original_sentence": "I need to add thursday afternoon's team meeting to my calendar.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Thursday))))))))"
  },
  {
    "original_sentence": "Yes, the first one works.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Wonderful. Much thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "the stakeholder meeting on the 2nd needs to be in the am",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 2L) (Event.subject_? (?~= \"stakeholder meeting\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (ConvertTimeToAM (DateTime.time (Event.start x0))))))))))"
  },
  {
    "original_sentence": "Update my Point Shaving to be in the PM",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?= \"Point Shaving\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (ConvertTimeToPM (DateTime.time (Event.start x0))))))))))"
  },
  {
    "original_sentence": "Make my Toy Store event is supposed to be in the AM",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?= \"Toy Store\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (ConvertTimeToAM (DateTime.time (Event.start x0))))))))))"
  },
  {
    "original_sentence": "I need my Basketball Tournament to be on PM",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?= \"Basketball Tournament\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (ConvertTimeToPM (DateTime.time (Event.start x0))))))))))"
  },
  {
    "original_sentence": "I need to add a hair appointment in August 3rd of the same year as the doctor",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"hair appointment\")) (Event.start_? (DateTime.date_? (?= (MDY 3L (August) (Date.year (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor\"))))))))))))))))"
  },
  {
    "original_sentence": "Lets do the one at 1.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Add a nail appointment on August 1st of the same year as my dentist appointment",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"nail appointment\")) (Event.start_? (DateTime.date_? (?= (MDY 1L (August) (Date.year (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\"))))))))))))))))"
  },
  {
    "original_sentence": "The second option would work well.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What year was my last general checkup?",
    "parse": "(Yield (Date.year (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (Event.subject_? (?~= \"general checkup\"))))))))))"
  },
  {
    "original_sentence": "I need to delete my coffee break.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"coffee break\")))))))))"
  },
  {
    "original_sentence": "The coffee break has been changed to 10 AM for half an hour on this floor.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"coffee break\")))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.duration_? (?= (toHours 0.5)))))))"
  },
  {
    "original_sentence": "It's at starbucks",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.location_? (?= (LocationKeyphrase.apply \"starbucks\"))))))"
  },
  {
    "original_sentence": "it should also be on halloween",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.date_? (?= (NextHolidayFromToday (Holiday.Halloween))))))))"
  },
  {
    "original_sentence": "no change to panera",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.location_? (?= (LocationKeyphrase.apply \"panera\"))))))"
  },
  {
    "original_sentence": "Set the end to 4pm, por favor",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Block off two hours on Friday at 6:00 pm for Yoga.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Yoga\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 6L))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "Yes, that's right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "yeah that's good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "YES",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Create event for Billian tonigh at 7pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Billian\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "actuall later",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Yeah, I think the 9:30 time works best.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (HourMinutePm 9L 30L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Great.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "That'll be it for now. Thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What day is my dentist appointment this week?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"dentist appointment\")) (ThisWeek)))))))"
  },
  {
    "original_sentence": "Actually I meant the one last week",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (LastWeekNew)))))"
  },
  {
    "original_sentence": "Ok, what about Dan?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan\"))))))))"
  },
  {
    "original_sentence": "Make an event for Monday at 2pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Remove Kim from Monday's meeting and add Crim and Elli.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)))))) (Event.attendees_? (& (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Crim\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\")))))))))))"
  },
  {
    "original_sentence": "Ok it must be on Tuesday then",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Tuesday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Great, those are the correct attendees now.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "great now please help me update something else",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Can you delete the Zelda Yo event for me",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Zelda Yo\")))))))))"
  },
  {
    "original_sentence": "Yes please cancel that",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cancel the soccer practice on Saturday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"soccer practice\"))))))))))"
  },
  {
    "original_sentence": "Yes it is.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "good!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "make a appointment tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "I need to cancel this appointment now that I am out of town.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "what is the weather today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "houston",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"houston\")))))))"
  },
  {
    "original_sentence": "any chance of rain?",
    "parse": "(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "it hasn't rained yet",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "will it rain tomorrow?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "ok thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "where is the id",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "make an appointment for an oil change for me",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"oil change\")))))"
  },
  {
    "original_sentence": "monday works great",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "call jessica to make a hair appointment for me",
    "parse": "(do (Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jessica\")))))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"hair appointment\"))))))"
  },
  {
    "original_sentence": "lets do tuesday",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "can you call a plumber for the 3rd floor bathroom",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "set an alarm for 6 am",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "what is my schedule for june 17?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 17L (June)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "after the oil change lets put time down for a nail appointment",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"nail appointment\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"oil change\"))))))))))))"
  },
  {
    "original_sentence": "looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "do i have anything scheduled for june 19th yet",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 19L (June)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "let save time on tuesday from 4pm to 6pm for a dinner reservation",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner reservation\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 6L)))))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "lets change it to wednesday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Wednesday))))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Show me as \"out of office\" from now until 8am tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (Now))) (Event.end_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L))))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
  },
  {
    "original_sentence": "That's right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "set a reminder for the football game at 7 tonight.",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Please schedule a meeting with the pope tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"pope\")))))))))))"
  },
  {
    "original_sentence": "The 2nd one works great",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "no thanks im ok for now",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Cancel meeting for Friday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "No, cancel the meeting for the Friday AFTER that.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (nextDayOfWeek (Execute (refer (& (^(Date) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Friday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "no, that's not what I wanted to cancel.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Cancel the appointment on Friday May 10, anyhow I guess.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 10L (May)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Nevermind, just move it to Monday",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Schedule a team meeting on Wednesday at 7:30 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (HourMinuteAm 7L 30L))))))))"
  },
  {
    "original_sentence": "I just remembered I am going to have to move that team meeting to later in the day.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "That is great with me",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Sorry, actually I prefer the 10am option for the team meeting.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"team meeting\")))))) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "Perfect. Thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "please cancel my valley ball match",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"valley ball\")))))))))"
  },
  {
    "original_sentence": "Don't cancel, just add Jane",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\"))))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make an event for monday at 4pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Yes this looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have any events this upcoming Wednesday at 9 am?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 9L)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "I need to delete my appointments on Thursday and Friday of next week.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Okay, and put down that there is a concert on Saturday at 5 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"concert\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Can you add a group meeting at 2 pm that lasts 1 hour?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"group meeting\")) (Event.start_? (?= (NextTime (NumberPM 2L))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "I need a room set up for the annual sales party and invite Sarah and Doug",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"annual sales party\")) (Event.location_? (roomRequest))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Doug\"))))))))))))"
  },
  {
    "original_sentence": "Get City Center conference room",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.location_? (& (?= (LocationKeyphrase.apply \"City Center\")) (roomRequest))))))"
  },
  {
    "original_sentence": "Looks great",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I will be in seattle and need a room tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.location_? (& (?= (LocationKeyphrase.apply \"seattle\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "Please schedule the 2nd one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Accept the meeting request for Monday and say that I only have 30 minutes",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I only have 30 minutes\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Yes, thank you! Accept my Spanish Lesson and tell my teacher that I've already finished my homework.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I've already finished my homework\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Spanish Lesson\"))))) :response (ResponseStatusType.Accepted))))"
  },
  {
    "original_sentence": "ok yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks so much! Accept my invitation to go joy riding with Bill next week and tell him that he's going to love my new car.",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"he's going to love my new car\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"joy riding\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bill\"))))) (NextWeekList))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Meet with Alex at today 5 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 5L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex\")))))))))))"
  },
  {
    "original_sentence": "yeah it looks perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great, where are we having dinner?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\")))))))"
  },
  {
    "original_sentence": "Do they have a bar?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Do they have happy hour here?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.HappyHour) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "HI",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "can schedule a meeting with Jerri on Monday Evening.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Evening) (NextDOW (Monday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jerri\")))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Is there an event with Sarah, Tom and Luke?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Luke\")))))))) 0L))"
  },
  {
    "original_sentence": "Can you add a new event after that with them called \"coffee\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"coffee\")) (Event.attendees_? (?= (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "The one on the 5th works",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 5L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks, now please create an event called \"film screening\" with Mickey, Minnie, and Donald on Saturday night",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"film screening\")) (Event.start_? (DateTimeConstraint (Night) (NextDOW (Saturday))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mickey\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Minnie\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Donald\"))))))))))))"
  },
  {
    "original_sentence": "Please add Sarah to the film screening.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\"))))))))))"
  },
  {
    "original_sentence": "Tell me who hasn't accepted the invite to the bball game",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"bball game\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Who has not declined the Forest Tour",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Forest Tour\")))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Who hasnt tentatively accepted the event tomorrow?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Do I have any meeting's on Wednesday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Move the second event to November 29th.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.date_? (?= (MD 29L (November))))))))"
  },
  {
    "original_sentence": "That is right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What is going on Sunday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What do I have planned next Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "I want to delete my lunch meeting for today and schedule it for tomorrow.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"lunch meeting\"))))))) (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Delete the lunch meeting I had scheduled for earlier today.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (EventOnDate (Today) (Event.subject_? (?~= \"lunch\")))))))))))"
  },
  {
    "original_sentence": "Yes please cancel this lunch meeting.",
    "parse": "(Yield (Execute (ConfirmDeleteAndReturnAction (Event.subject_? (?~= \"lunch meeting\")))))"
  },
  {
    "original_sentence": "Cancel the lunch on July 16.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 16L (July)) (Event.subject_? (?~= \"lunch\"))))))))))"
  },
  {
    "original_sentence": "yes and move it at 2pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Ok. What is on my calendar this afternoon?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Afternoon))))"
  },
  {
    "original_sentence": "Fine, good, can you put down that I need to go the Amtrak to pick up Peter on Monday, March 4th at 1pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go the Amtrak to pick up Peter\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 4L (March)) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, do I have anything else scheduled on Monday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "What is my other meeting after meet Jim?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date (Event.end x0)) (^(Event) EmptyStructConstraint) (DateTime.time (Event.end x0))))))"
  },
  {
    "original_sentence": "3-5PM I'm gonna meet with Jim tomorrow",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\"))))))))))))"
  },
  {
    "original_sentence": "it's good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need an intake interview before Thursday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"intake interview\")) (Event.start_? (DateTime.date_? (?< (NextDOW (Thursday)))))))))"
  },
  {
    "original_sentence": "It`s good and right.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Decline the wedding invitation and say weddings are not fun",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"wedding\"))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Yes, that's good, and also decline the bachelorette party saying it's too late at night for me.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"it's too late at night for me.\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"bachelorette party\"))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "Yes, good. Decline the meeting of old friends.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"it's too late at night for me.\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"meeting of old friends\"))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "I would like you to create an event from 3:30 to 4:30 pm next Tuesday titled Meeting with Client.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Anything scheduled after that that day?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date (Event.end x0)) (^(Event) EmptyStructConstraint) (DateTime.time (Event.end x0))))))"
  },
  {
    "original_sentence": "Schedule dinner with my wife on this day at 6 pm",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Thanks, add a two hour meeting with Fred to tomorrow's calendar starting at 2 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)))) (Event.duration_? (?= (toHours 2)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fred\")))))))))))"
  },
  {
    "original_sentence": "God saved me, now I will have my calendar",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you add my nail appointment tomorrow at noon? It's for 45 minutes",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"nail appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))) (Event.duration_? (?= (toMinutes 45)))))))"
  },
  {
    "original_sentence": "Yea, that's correct",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can I move my appointment tomorrow to earlier in the day?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (OnDateBeforeTime (DateTime.date (Event.start x0)) (DateTime.time (Event.start x0))))))))"
  },
  {
    "original_sentence": "Actually a time prior to that would be good.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "The 2nd one",
    "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Is there anything later than 6 pm?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (^(Event) EmptyStructConstraint) (NextTime (NumberPM 6L)))))) 0L))"
  },
  {
    "original_sentence": "Add to calendar clerk celebration party on Monday from 1:00 to 2:00 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"clerk celebration party\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 2L)))))))))"
  },
  {
    "original_sentence": "give me a minute",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "No, it needs to have Melissa and Deb attending.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Melissa\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Deb\")))))))))))"
  },
  {
    "original_sentence": "give me a second to check they can still make it actually.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Okay go ahead and book it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Second thought, make it two hours.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "what's the temperature today?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "Im in Bermuda.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(LocationKeyphrase) AlwaysTrueConstraint)) (intension (LocationKeyphrase.apply \"Bermuda\")))))"
  },
  {
    "original_sentence": "Set a meeting with Jay and Neil at 4 in Bellevue",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (NextTime (NumberPM 4L)))) (Event.location_? (?= (LocationKeyphrase.apply \"Bellevue\")))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jay\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Neil\"))))))))))))"
  },
  {
    "original_sentence": "yeah! looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When is there a conference room available at NERD early next week?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (EarlyDateRange (NextWeekList)))) (Event.location_? (& (?= (LocationKeyphrase.apply \"NERD\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "second one please",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need a room for that meeting",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (roomRequest)))))"
  },
  {
    "original_sentence": "Do I have anything after my doctor's appointment tomorrow?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor's appointment\")))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date (Event.start x0)) (^(Event) EmptyStructConstraint) (DateTime.time (Event.end x0)))))) 0L)))"
  },
  {
    "original_sentence": "Cancel that one.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Can you tell me where and when my appointment with Batman will be?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Batman\")))))))) (do (Yield (Event.location x0)) (Yield (Event.start x0))))"
  },
  {
    "original_sentence": "I have a meeting at a convention at 5 so schedule meeting at 5 pm at convention.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 5L)))) (Event.location_? (?= (LocationKeyphrase.apply \"convention\")))))))"
  },
  {
    "original_sentence": "Please show my status as busy from 1pm to 3pm today.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Today) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L))))) (Event.showAs_? (?= (ShowAsStatus.Busy))))))))"
  },
  {
    "original_sentence": "When am I supposed to pick up John today?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"pick up John\"))))))))"
  },
  {
    "original_sentence": "Thanks, what events do I have scheduled tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you schedule John's Soccer Practice for Saturday at 12:30 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"John's Soccer Practice\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (HourMinutePm 12L 30L))))))))"
  },
  {
    "original_sentence": "yes that looks just perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I am needing a Bellevue conference room for Sunday at 2 pm for 2 hours.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Bellevue\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 2L))))) (Event.duration_? (?= (toHours 2)))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Bellevue\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "Yeah, good job.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need a meeting room with Chris and his team tomorrow morning",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chris\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTimeConstraint (Morning) (Tomorrow))) (Event.location_? (roomRequest))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindTeamOf x0)))))))))"
  },
  {
    "original_sentence": "the first one is top tier",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need a room for tomorrow in Seattle",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Seattle\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "cancel the calender events on tomorrow",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "please make meeting with my doctor on tomorrow morning",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Can you make an event for Friday at 5pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "Change the time to 6pm actually",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "extend it til 7 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "Hello. I need to add an event to my calendar.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you add an event titled \"Doctor\" for March 31st at 10am?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Doctor\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 31L (March)) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Can you make the duration from 10am to 12pm?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "confirm",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you change the duration of my event \"doctor\"",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Can I update my event at 10am on March 31st?",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "What day is my \"Doctor\" event",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Doctor\")))))))"
  },
  {
    "original_sentence": "Do I have any plans for March 31st?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 31L (March)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Can I add an event for March 31st",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (MD 31L (March))))))))"
  },
  {
    "original_sentence": "yes. The 10am appointment",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can I change the name of my event on March 31st",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Yes",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can I remove my event on March 31st",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 31L (March)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "did you set the project for last week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"project\")) (LastWeekNew))))"
  },
  {
    "original_sentence": "Ok add a doctors appointment for 2 weeks from today at 1",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctors appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (adjustByPeriod (Today) (toWeeks 2)) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "It should be 2 hours",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Set a time for me to go hiking with my friends within 30 days.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Get me room in Bellevue",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.location_? (& (?= (LocationKeyphrase.apply \"Bellevue\")) (roomRequest))))))"
  },
  {
    "original_sentence": "Yes, book the first option on my calendar.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need to book a room in Cambridge for next month.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth)))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Cambridge\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "The second one will do. Also, book a room at NERD for a staff meeting on Fri at 9:45 am. It should last an hour and a half.",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"staff meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteAm 9L 45L))))) (Event.duration_? (?= (toHours (+ 1 0.5))))) (Event.location_? (& (?= (LocationKeyphrase.apply \"NERD\")) (roomRequest))))))))"
  },
  {
    "original_sentence": "Ok, that's great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please make schedule with tomorrow with Williams",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Williams\")))))))))))"
  },
  {
    "original_sentence": "Update the meeting to take place at Starbucks.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Starbucks\"))))))"
  },
  {
    "original_sentence": "Can you tell me the address please.",
    "parse": "(Yield (PlaceDescribableLocation (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "ok!thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Put on schedule a brunch with the sales team at Denny's on Monday at 11:00 am.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "When is Thanksgiving this year?",
    "parse": "(Yield (HolidayYear (Holiday.Thanksgiving) (Date.year (Today))))"
  },
  {
    "original_sentence": "And when is Black Friday?",
    "parse": "(Yield (NextHolidayFromToday (Holiday.BlackFriday)))"
  },
  {
    "original_sentence": "add black friday shopping",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"black friday shopping\")))))"
  },
  {
    "original_sentence": "And when is the next birthday on my calendar?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"birthday\")) 1L)))"
  },
  {
    "original_sentence": "When is Flag Day?",
    "parse": "(Yield (NextHolidayFromToday (Holiday.FlagDay)))"
  },
  {
    "original_sentence": "Make an event for Monday at 2pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Yes change the title to lunch date",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"lunch date\")))))"
  },
  {
    "original_sentence": "Please invite my manager.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))))))"
  },
  {
    "original_sentence": "who am i again?",
    "parse": "(Yield (CurrentUser))"
  },
  {
    "original_sentence": "What is my manager's name?",
    "parse": "(Yield (FindManager (toRecipient (CurrentUser))))"
  },
  {
    "original_sentence": "Do I have anything scheduled at Zilker Park this month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.location_? (?= (LocationKeyphrase.apply \"Zilker Park\"))) (FullMonthofMonth (Date.month (Today))))))) 0L))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please add a lunch with the family on Friday at 12:30 p.m., in the closest Outaback in Conyers.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I would also like to add an event from 3:00 PM to 6:00 PM on that same day, at the Toyota Stadium nearby.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 6L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Toyota Stadium\"))))))))"
  },
  {
    "original_sentence": "Make an appointment with Jim at Maddison's.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \"Maddison's\"))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))))))))))"
  },
  {
    "original_sentence": "Can you tell me if Bob is attending the meeting at 1pm?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 1L)) (^(Event) EmptyStructConstraint))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "He'll have to review later I guess. Schedule a meeting with Bob in April on the 1st.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (MD 1L (April))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))))))))"
  },
  {
    "original_sentence": "Yes. The second one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Good at stop by store for pet food tonight at 6 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"stop by store for pet food\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "great thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What was the date of my appointment with Jane?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\"))))))))"
  },
  {
    "original_sentence": "change that to Saturday at the same time",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Saturday))))))))"
  },
  {
    "original_sentence": "I have to call my mother earlier than her bedtime but later than 2pm, put that on my calendar",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Set up appointment with mother later than 2pm",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "What events do I have with Patti this month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Patti\")))) (FullMonthofMonth (Date.month (Today))))))"
  },
  {
    "original_sentence": "cancel second one",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "yes!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What is the weather like right now?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (?= (Now))))"
  },
  {
    "original_sentence": "seattle washington",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"seattle washington\")))))))"
  },
  {
    "original_sentence": "what will the weather be like tomorrow?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "When will it snow in Seattle washington",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "When will it stop raining in seattle?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Will it be rainy in Seattle on Halloween?",
    "parse": "(Yield (IsRainy (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Seattle\"))) (DateTime.date_? (?= (NextHolidayFromToday (Holiday.Halloween)))))))"
  },
  {
    "original_sentence": "Bummer",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Which restaurant is my dinner date for tonight going to be at?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"dinner date\"))) (Night)))))))"
  },
  {
    "original_sentence": "thanks for your information",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have dinner tomorrow anywhere?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"dinner\")))))) 0L))"
  },
  {
    "original_sentence": "Does MOD Pizza have a happy hour at any point?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.HappyHour) (singleton (PlaceSearchResponse.results (FindPlaceAtHere (LocationKeyphrase.apply \"MOD Pizza\") (AtPlace (Here)))))))"
  },
  {
    "original_sentence": "What time does MOD Pizza have reservations for tomorrow for 4 people?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Hi, What's the temp. in Dallas?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Dallas\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "How about Anchorage?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"Anchorage\")))))))"
  },
  {
    "original_sentence": "Really? That seems a little warm for Alaska. Are you sure?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Alaska\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "How about Russia?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"Russia\")))))))"
  },
  {
    "original_sentence": "Hmmmm, I think your forecasts are wrong. What's the temp. in Dallas?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Dallas\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "Okay, thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Hi. Do I have any events with attendees in the next couple of days? Thanks!",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (negate (^((List Attendee)) AlwaysFalseConstraint))) (NextPeriod (toDays (longToNum (Acouple)))))))"
  },
  {
    "original_sentence": "Great thanks. What do I have planned with attendees for next weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (negate (^((List Attendee)) AlwaysFalseConstraint))) (NextWeekend))))"
  },
  {
    "original_sentence": "Thanks. Do I have any events with people scheduled in March 2020?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (negate (^((List Attendee)) AlwaysFalseConstraint))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (March))))))) 0L))"
  },
  {
    "original_sentence": "GO TO MY ADDRESS BOOK AND DELETE UNWANTED CONTACTS",
    "parse": "(FenceSwitchTabs)"
  },
  {
    "original_sentence": "create football game on monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"football game\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))))))"
  },
  {
    "original_sentence": "The 1 pm option is right. It is taking place at State Farm Stadium.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "select the second one starting at 1.00 pm",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "add the location Lambeau Field.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Lambeau Field\"))))))"
  },
  {
    "original_sentence": "Put my dentist appointment on Friday at 2 pm. It should be an hour long.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "This looks correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When does it start?",
    "parse": "(Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "I'm sorry. What was it that you just said?",
    "parse": "(RepeatAgent)"
  },
  {
    "original_sentence": "Thank you for your help.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "fix appointment with devid",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"devid\"))))))))))"
  },
  {
    "original_sentence": "The 2nd one works great",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you tell Devid that I will not be able to make it?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "That's okay. What time do you think I should leave the house?",
    "parse": "(FenceNavigation)"
  },
  {
    "original_sentence": "What events do i have on Friday",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "When is my next piano lesson?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"piano lesson\")) 1L)))"
  },
  {
    "original_sentence": "Do I have any other piano lessons scheduled?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.subject_? (?~= \"piano lessons\")))))) 0L))"
  },
  {
    "original_sentence": "Schedule another piano lesson for the 2nd at 11:30 am for an hour.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"piano lesson\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 2L) (HourMinuteAm 11L 30L))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Looks great!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Show me all the piano lessons on my schedule.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "remove my all tomorrow events",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "make an event for 3 pm tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "I am not sure yet.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Yes that sounds good to me thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, that looks great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Update the name from appointment to doctor John foot doctor.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"doctor John foot doctor\")))))"
  },
  {
    "original_sentence": "Wait what is the weather that day?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (WeatherQueryApi (AtPlace (FindPlace (Event.location x0))) (?= (Event.start x0)))))"
  },
  {
    "original_sentence": "What is the predicted forcast on Oct 2?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (MD 2L (October))))))"
  },
  {
    "original_sentence": "Can you search for any events that happened last Monday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Monday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What about for this week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
  },
  {
    "original_sentence": "Did I have any events last Tuesday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Tuesday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What do I have scheduled for Saturday evening?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)) (Night))))"
  },
  {
    "original_sentence": "Sunday I need lunch on the calendar at 11 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "make me an event at 3 pm with Abby",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "hold on a sec",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "please make a meet with my close friends",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "make me an event at 3 pm with Abby",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "create a separate meeting with Tom and Tony on the same day",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"separate meeting\")) (Event.start_? (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tony\"))))))))))))"
  },
  {
    "original_sentence": "What is Tony's email?",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tony\"))))))))"
  },
  {
    "original_sentence": "What dinner meetings do I have this week? What about next week?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "When is my next dinner meeting?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"dinner meeting\")) 1L)))"
  },
  {
    "original_sentence": "When's the following dinner meeting?",
    "parse": "(Yield (Event.start (FindNumNextEvent (EventAfterDateTime (Event.subject_? (?~= \"dinner meeting\")) (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) 1L)))"
  },
  {
    "original_sentence": "Alright are there any other meetings in the evening today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Evening)))))"
  },
  {
    "original_sentence": "What events do I have with Alicia this month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alicia\")))) (FullMonthofMonth (Date.month (Today))))))"
  },
  {
    "original_sentence": "I wish I could buy a party",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When is my meeting with Sylvia?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sylvia\")))))))))"
  },
  {
    "original_sentence": "How long is it?",
    "parse": "(Yield (Event.duration (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "How long is the budget meeting on Friday?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"budget meeting\"))))))))"
  },
  {
    "original_sentence": "And the planning meeting on Tuesday?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Tuesday)) (Event.subject_? (?~= \"planning meeting\"))))))"
  },
  {
    "original_sentence": "Is there anything with Jon that day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jon\")))))))) 0L))"
  },
  {
    "original_sentence": "I will be having a party on Friday, but make it later than lunch time",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"party\")) (Event.start_? (OnDateAfterTime (NextDOW (Friday)) (Lunch)))))))"
  },
  {
    "original_sentence": "The second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Cool, cancel anything later than that on that day",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Actually I need the party changed to earlier.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"party\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?< (DateTime.time (Event.start x0)))))))))"
  },
  {
    "original_sentence": "The 10am one",
    "parse": "(Yield (Execute (ChooseUpdateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Hi, I would like to know if Panda Express in Carson City is family friendly or not.",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Panda Express in Carson City\"))))))"
  },
  {
    "original_sentence": "is Boston Market in Reno family friendly",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Boston Market in Reno\"))))))"
  },
  {
    "original_sentence": "Is Tokyo Stop Teriyaki in Bellevue family friendly?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Tokyo Stop Teriyaki in Bellevue\"))))))"
  },
  {
    "original_sentence": "Schedule a meeting with Brian",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brian\"))))))))))"
  },
  {
    "original_sentence": "The second one works, but have it ending at 11",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "delete grocery shopping after my last appointment Monday",
    "parse": "(let (x0 (Event.end (FindLastEvent (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (Event.subject_? (?~= \"grocery shopping\")) (DateTime.time x0))))))))))"
  },
  {
    "original_sentence": "Is there another event after grocery shopping?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (^(Event) EmptyStructConstraint) (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"grocery shopping\")))))))))) 0L))"
  },
  {
    "original_sentence": "please change the shopping time at 5pm",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "What time is my meeting with my boss on Thursday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))))"
  },
  {
    "original_sentence": "Great. Schedule a doctor's appointment with my cardiologist at noon Thursday.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Tell if am I free on February the 3rd?",
    "parse": "(Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (?= (MD 3L (February))))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true))"
  },
  {
    "original_sentence": "What do I have on the schedule on February 4th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 4L (February)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Add an appointment to my calendar for that day at 10am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "Can you search for finance committee meetings?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?= \"finance committee meetings\"))))"
  },
  {
    "original_sentence": "Can you schedule a meeting with the press on Wednesday at 9 am?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"meeting with the press\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "Create a meeting with Ticku on Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ticku\")))))))))))"
  },
  {
    "original_sentence": "The bottom one please",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "great. Do I have anything with Randy this wseek?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Randy\")))) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "great, can you change the time to 1pm?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "No, I want it to end at 2:15.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (HourMinutePm 2L 15L)))))))"
  },
  {
    "original_sentence": "Cancel all events next week , I will be out of town",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "4PM is when I'm going out to Denny's",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 4L)))) (Event.location_? (?= (LocationKeyphrase.apply \"Denny's\")))))))"
  },
  {
    "original_sentence": "5PM is a much better start time than 4.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "nice",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "well",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "ok",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "what is my next meeting in this week",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
  },
  {
    "original_sentence": "Delete it",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "yes it is",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have any other computer related events?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.subject_? (?~= \"computer\")))))) 0L))"
  },
  {
    "original_sentence": "create work lunch at 12 on friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"work lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "could you make it an hour long?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "I've changed my mind. Delete the event.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok fine thanks for deleting the event",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have a morning meeting tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Morning))))) 0L))"
  },
  {
    "original_sentence": "I need to go fishing on Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go fishing\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "The second one works.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What meetings do I have scheduled with Ray this month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ray\")))) (FullMonthofMonth (Date.month (Today))))))"
  },
  {
    "original_sentence": "ok! thank you for your information",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what about next month",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))))))"
  },
  {
    "original_sentence": "Hi! I need to schedule a surgery that should end at 11:00am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"surgery\")) (Event.end_? (DateTime.time_? (?= (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "The first one please. Can you make an event called Eat Popcorn ending at 8 pm.",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Eat Popcorn\")) (Event.end_? (DateTime.time_? (?= (NumberPM 8L)))))))))"
  },
  {
    "original_sentence": "The second one is fine. Now plan my dinner meeting with Jack for tomorrow that ends at 8 pm",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner meeting\")) (Event.end_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jack\"))))))))))))"
  },
  {
    "original_sentence": "Delete my event tomorrow at 2300",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinuteMilitary 23L 0L)))))))))))"
  },
  {
    "original_sentence": "What about on the 19th?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDay (Execute (refer (& (^(Date) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Day.apply 19L)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Hell yeah!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "My meeting starts at 12.2pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (HourMinutePm 12L 2L)))))))"
  },
  {
    "original_sentence": "Sorry I meant 20 after noon",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (TimeAfterDateTime (NextTime (Noon)) (HourMinuteMilitary 20L 0L)))))))"
  },
  {
    "original_sentence": "Actually, can you make it start at 21:00 hours and go to 22:00 hours?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (HourMinuteMilitary 21L 0L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteMilitary 22L 0L))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Yes much better",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "put a reminder onf my calendar",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Set up a meeting on May 15th at 10pm with Barack Obama",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 15L (May)) (NumberPM 10L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\")))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Remove calendar event on May 15th",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 15L (May)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "search for all events on May 20th",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 20L (May)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "add go to movies 10pm may 20th 2055",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go to movies\")) (Event.start_? (?= (DateAtTimeWithDefaults (MDY 20L (May) (Year.apply 2055L)) (NumberPM 10L))))))))"
  },
  {
    "original_sentence": "Ok I am done",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need you to create a meeting for myself, Joey, and Diane.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joey\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Diane\")))))))))))"
  },
  {
    "original_sentence": "yes ok",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok make metting",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"metting\")))))"
  },
  {
    "original_sentence": "Keep the march 21st meeting",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 21L (March))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Meeting with Jonah sometime before 6 today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (?< (NumberPM 6L)) (Today))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jonah\")))))))))))"
  },
  {
    "original_sentence": "Make it between 4 and 6",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "looks right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule 2 hour window for meeting with Greg",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.duration_? (?= (toHours 2))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Greg\")))))))))))"
  },
  {
    "original_sentence": "the 2nd one works.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Schedule brunch tomorrow morning with Amy.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"brunch\")) (Event.start_? (DateTimeConstraint (Morning) (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\")))))))))))"
  },
  {
    "original_sentence": "The second one, but change the duration to one hour",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Mark a 1PM with Jim and put a note on it about firing.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Could you find my next planned event with Abby Gonano?",
    "parse": "(Yield (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby Gonano\")))) 1L))"
  },
  {
    "original_sentence": "Can you include Jennifer Watts in that meeting",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer Watts\"))))))))))"
  },
  {
    "original_sentence": "That is perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great i need to update something else now",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "What do I got with any of my team?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasPeopleAnyOf (FindTeamOf (toRecipient (CurrentUser)))))))"
  },
  {
    "original_sentence": "I have a lunch planned with my sister Jane next weekend.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (NextWeekend)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\")))))))))))"
  },
  {
    "original_sentence": "Are there any times open that isn't on the weekend?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "i really don't want it to be on the weekend",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Ok, great schedule it for Monday.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I'm seeing Justin in California this weekend.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (ThisWeekend))) (Event.location_? (?= (LocationKeyphrase.apply \"California\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Justin\")))))))))))"
  },
  {
    "original_sentence": "wait change that to not be on the weekend",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (negate (ThisWeekend)))))))"
  },
  {
    "original_sentence": "Add a 30 minute meeting at 3 pm this afternoon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L)))) (Event.duration_? (?= (toMinutes 30)))))))"
  },
  {
    "original_sentence": "IS IT",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Let's change the start time to 2.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "no change the end time to 3:15",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (HourMinutePm 3L 15L)))))))"
  },
  {
    "original_sentence": "make it last and hour and 15 minutes",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (addDurations (toHours 1) (toMinutes 15)))))))"
  },
  {
    "original_sentence": "Schedule visit Savannah, GA on Thursday at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"visit Savannah, GA\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (Noon))))))))"
  },
  {
    "original_sentence": "How will the weather be in Savannah on that day?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Savannah\"))) (DateTime.date_? (?= (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "Can you schedule a visit to the American Prohibition Museum for noon?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"visit\")) (Event.start_? (?= (NextTime (Noon))))) (Event.location_? (?= (LocationKeyphrase.apply \"American Prohibition Museum\")))))))"
  },
  {
    "original_sentence": "Looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What will the weather be like there",
    "parse": "(Yield (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "How many singing events do I have with James next week?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"singing\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\"))))) (NextWeekList))))))"
  },
  {
    "original_sentence": "Any with Jennifer?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer\"))))))"
  },
  {
    "original_sentence": "Are there any next week?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))"
  },
  {
    "original_sentence": "And any the week after that?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (WeekOfDateNew (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toWeeks 1)))))))"
  },
  {
    "original_sentence": "What meetings did I have yesterday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Yesterday) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "am i going to the doctor tomorrow at ten am or eleven",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "how a nice day",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "good night",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "bye bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "We need at least 4 confirmed for dinner friday night at Catch. Do we have 4 confirmed?",
    "parse": "(Yield (== (size (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \"Catch\"))) (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"dinner\"))) (Night))))))) (ResponseStatusType.Accepted))) 4L))"
  },
  {
    "original_sentence": "Great, thanks! How many people accepted my Lawyers' Society Dinner on next Thursday?",
    "parse": "(Yield (size (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.subject_? (?~= \"Lawyers' Society Dinner\"))))))) (ResponseStatusType.Accepted))))"
  },
  {
    "original_sentence": "Who accepted the winter dinner?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"winter dinner\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Can you tell me what day Thanksgiving is next year?",
    "parse": "(Yield (HolidayYear (Holiday.Thanksgiving) (NextYear)))"
  },
  {
    "original_sentence": "create a dentist appointment on January 22 of next year",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (MDY 22L (January) (NextYear))))))))"
  },
  {
    "original_sentence": "Let's do the first.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "check my meet with carol on tomorrow.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"carol\")))))))"
  },
  {
    "original_sentence": "ok extend the end time to 4.00 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "It's look good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need a consultation with Johnathan Barber for tomorrow at 4.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"consultation\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Johnathan Barber\")))))))))))"
  },
  {
    "original_sentence": "its a barber consultation!",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"barber consultation\")))))"
  },
  {
    "original_sentence": "Looks good. Make sure Jimmy will be there as well.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jimmy\"))))))))))"
  },
  {
    "original_sentence": "Yes. But delete Johnathan",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Johnathan\")))))))))))"
  },
  {
    "original_sentence": "Yes. Is there anything I have on the calendar with Shayla?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Shayla\")))))))"
  },
  {
    "original_sentence": "Can you inform me if Canlis in Seattle offers waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Canlis in Seattle\"))))))"
  },
  {
    "original_sentence": "Does Carmine's in Bellevue have waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Carmine's in Bellevue\"))))))"
  },
  {
    "original_sentence": "Great! That looks like a good restaurant. Does Element 47 in Aspen have waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Element 47 in Aspen\"))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Find all marketing meetings",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"marketing\"))))"
  },
  {
    "original_sentence": "List all meetings on Friday",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"meetings\")))))"
  },
  {
    "original_sentence": "Delete that one.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Can you create a breakfast meeting for 8am on August 23rd?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"breakfast meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 23L (August)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Ah, actually, can we cancel that?",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Cancel breakfast meeting.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"breakfast meeting\")))))))))"
  },
  {
    "original_sentence": "good thats how it should be",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to know if I have any lunch meetings",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\"))))"
  },
  {
    "original_sentence": "Schedule a lunch with Karina between the group breakfast and marketing meeting.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"group breakfast\"))))) x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"marketing meeting\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTimeAndConstraintBetweenEvents x0 x1))) (Event.end_? (DateTimeAndConstraintBetweenEvents x0 x1))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karina\"))))))))))))"
  },
  {
    "original_sentence": "I like the 2nd one please.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Great. Now let's schedule dinner tonight with Michael and Dave",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTimeConstraint (Night) (Today)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Michael\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dave\"))))))))))))"
  },
  {
    "original_sentence": "Dinner at 8:00 PM is perfect.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What's the name of the meeting on friday at 5?",
    "parse": "(Yield (Event.subject (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 5L)) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Hello, I'm trying to find the date for an event",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "What do I have on my calendar after 12 pm tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (Tomorrow) (^(Event) EmptyStructConstraint) (NumberPM 12L))))"
  },
  {
    "original_sentence": "Add brewskis with my buds at 2pm tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"brewskis with my buds\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Please find for me when the taekwondo tournament practice session begins.",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"taekwondo tournament practice session\")))))))"
  },
  {
    "original_sentence": "Can you move it to tomorrow?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Perfect. When is the Karate Kid movie party?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Karate Kid movie party\"))))))))"
  },
  {
    "original_sentence": "Great thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add another karate event on thursday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"karate event\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday)))))))))"
  },
  {
    "original_sentence": "Can you find my next appointment with Jim?",
    "parse": "(Yield (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))) 1L))"
  },
  {
    "original_sentence": "Schedule an appointment with Jim at 10:30 am today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (HourMinuteAm 10L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))))))))))"
  },
  {
    "original_sentence": "Set an appointment with my personal trainer at the gym on Forest Ave.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "What's next?",
    "parse": "(Yield (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L))"
  },
  {
    "original_sentence": "Do I have have anything next weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekend))))) 0L))"
  },
  {
    "original_sentence": "OK, join my next meeting.",
    "parse": "(Yield (joinEventCommand (Event.id (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L))))"
  },
  {
    "original_sentence": "Thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you tell me when my hair appointment is scheduled for?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"hair appointment\")))))))"
  },
  {
    "original_sentence": "Hi remind me of Jan's Birthday on Friday",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Put Jan's Birthday for Friday night",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Jan's Birthday\")) (Event.start_? (DateTimeConstraint (Night) (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "I'll take the top one.",
    "parse": "(Yield (Execute (ChooseCreateEvent (TopResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "looks great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Tomorrow morning is new tooothbrush time",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"new tooothbrush time\")) (Event.start_? (DateTimeConstraint (Morning) (Tomorrow)))))))"
  },
  {
    "original_sentence": "The upper one",
    "parse": "(Yield (Execute (ChooseCreateEvent (TopResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Delete my lunch at the Reunion Tower please.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch\")) (Event.location_? (?= (LocationKeyphrase.apply \"Reunion Tower\")))))))))))"
  },
  {
    "original_sentence": "Yes. Then add lunch with mom at Bakers Bar and Grill for the same time.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceAttendee))"
  },
  {
    "original_sentence": "Ok, add dinner with Mother Mine at Bakers Bar and Grill",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.location_? (?= (LocationKeyphrase.apply \"Bakers Bar and Grill\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mother Mine\")))))))))))"
  },
  {
    "original_sentence": "The 2nd one works great",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "invite my dad to the dinner",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Do I have a meeting with Abby next week",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Am I hosting brunch next weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"hosting brunch\")) (NextWeekend))))) 0L))"
  },
  {
    "original_sentence": "Do I have dinner plans with Jerome this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"dinner plans\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jerome\"))))) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything tomorrow at noon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (Noon)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Don't I have something before noon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateBeforeTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint) (Noon))))) 0L))"
  },
  {
    "original_sentence": "Hello, can you tell me when my meeting with John Larson is?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John Larson\")))))))))"
  },
  {
    "original_sentence": "Invite Jean too",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jean\"))))))))))"
  },
  {
    "original_sentence": "Yep, This one looks so good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you also schedule a meeting with Jaycen at 11:30 AM on the 19th?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 19L) (HourMinuteAm 11L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jaycen\")))))))))))"
  },
  {
    "original_sentence": "great thansk",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need a lunch meeting this Wednesday at 12PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "Yes this is correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make it last 60 minutes.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toMinutes 60))))))"
  },
  {
    "original_sentence": "Yes perfect!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great, also note that I ate Lunch with Ray last Tuesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Lunch\")) (Event.start_? (DateTime.date_? (?= (previousDayOfWeek (Today) (Tuesday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ray\")))))))))))"
  },
  {
    "original_sentence": "When is my third golf trip this year?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (Event.subject_? (?~= \"golf trip\")) (FullYearofYear (Date.year (Today)))) 3L))"
  },
  {
    "original_sentence": "when is my 3rd trip to the beach?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"trip to the beach\")) 3L)))"
  },
  {
    "original_sentence": "Please set up a lunch with the purchasing team Friday at 1PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch with the purchasing team\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "No that isn't going to work anymore I need it to be for Sunday in the afternoon.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Sunday)))))))"
  },
  {
    "original_sentence": "No, I'd like it to last 1 and a half hours.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours (+ 1 0.5)))))))"
  },
  {
    "original_sentence": "No, they canceled on me.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Let's schedule a sales team lunch",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"sales team lunch\")))))"
  },
  {
    "original_sentence": "Can I get a breakdown of my statement?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "I want to make a call to andy tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"call to andy\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "Let me check something real quick",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Lets go with the earlier one.",
    "parse": "(Yield (Execute (ChooseCreateEvent (Earliest) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "wait a second",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "make an event with Abby",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))))))"
  },
  {
    "original_sentence": "where is Abby located",
    "parse": "(Yield (Person.officeLocation (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))))"
  },
  {
    "original_sentence": "the first one please",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "When is the next meeting with Sam",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\")))) 1L)))"
  },
  {
    "original_sentence": "I wanna have a picnic at the Gorge park tomorrow at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"picnic\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Gorge park\")))))))"
  },
  {
    "original_sentence": "Yes schedule that",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "This is OK, Thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Yeah, actually, how hot is it supposed for that event on that day?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Oh, okay, do you know if it'll be cloudy?",
    "parse": "(Yield (IsCloudy (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "create football game on monday at 5",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"football game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "make it 5 - 8 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "Perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I'm gonna be at a hockey game on the 8th, from 5 to 8PM.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (nextDayOfMonth (Today) 8L) (NumberPM 5L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"hockey game\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 8L)))))))))"
  },
  {
    "original_sentence": "Yes that is it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "i need to speak with Scot Hanson and Barack Obama on Monday at 10am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"speak\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scot Hanson\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\"))))))))))))"
  },
  {
    "original_sentence": "actually, Barack Obama cannot be there",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\")))))))))))"
  },
  {
    "original_sentence": "can i setup to speak with only Scot Hanson?",
    "parse": "(Yield (allows (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scot Hanson\"))) (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "i need to speak with Scot Hanson and Barack Obama on Monday at 10am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"speak\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scot Hanson\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\"))))))))))))"
  },
  {
    "original_sentence": "can we remove Barack Obama from the appointment?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\")))))))))))"
  },
  {
    "original_sentence": "i need to speak with Scot Hanson on Monday at 10am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"speak\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scot Hanson\")))))))))))"
  },
  {
    "original_sentence": "yes, you got it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "will do",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "How many meetings are scheduled out of the office?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
  },
  {
    "original_sentence": "How about as working elsewhere?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.showAs_? (?= (ShowAsStatus.WorkingElsewhere))))))"
  },
  {
    "original_sentence": "How long is the 2nd Working Elsewhere event?",
    "parse": "(Yield (Event.duration (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Does Shae's Tavern in Reno have a dress code",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Shae's Tavern in Reno\"))))))"
  },
  {
    "original_sentence": "Is Wild River Grille in Reno casual?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Wild River Grille in Reno\"))))))"
  },
  {
    "original_sentence": "Does KitzMo Sushi in Reno allow casual dress?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"KitzMo Sushi in Reno\"))))))"
  },
  {
    "original_sentence": "I'd like to add a Work retreat for Dec 2 and should last 3 days.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"Work retreat\")) (MD 2L (December)) (toDays 3)))))"
  },
  {
    "original_sentence": "That is great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Put training in from the 17th until the 21st.",
    "parse": "(let (x0 (nextDayOfMonth (Today) 17L)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"training\")) (DateAndConstraint x0 (nextDayOfMonth x0 21L)))))))"
  },
  {
    "original_sentence": "Yeah it is.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make some Training from the 18 to the 28",
    "parse": "(let (x0 (nextDayOfMonth (Today) 18L)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Training\")) (Event.start_? (DateTime.date_? (?= x0)))) (Event.end_? (DateTime.date_? (?= (nextDayOfMonth x0 28L)))))))))"
  },
  {
    "original_sentence": "Schedule drop off gifts after Shopping and before I go to Lisa's house for tacos.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Shopping\"))))) x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"go to Lisa's house for tacos\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"drop off gifts\")) (Event.start_? (DateTimeAndConstraintBetweenEvents x0 x1))) (Event.end_? (DateTimeAndConstraintBetweenEvents x0 x1)))))))"
  },
  {
    "original_sentence": "4pm please.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to add lunch after that",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Yes. I'm calling Jan between my hair appointment and the party tonight.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"hair appointment\"))))) x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"party\"))) (Night)))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"calling Jan\")) (Event.start_? (DateTimeAndConstraintBetweenEvents x0 x1))) (Event.end_? (DateTimeAndConstraintBetweenEvents x0 x1)))))))"
  },
  {
    "original_sentence": "schedule a meeting with John Joseph and send an invitation to him",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Why is my meeting with Harold Smith not on the calendar?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "When do I meet with Harold Smith",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harold Smith\")))))))))"
  },
  {
    "original_sentence": "ANd my meeting with Alex?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex\"))))))"
  },
  {
    "original_sentence": "What about the next one?",
    "parse": "(Yield (FindNumNextEvent (EventAfterDateTime (^(Event) EmptyStructConstraint) (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) 1L))"
  },
  {
    "original_sentence": "do I have anything with Beth?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Beth\"))))))) 0L))"
  },
  {
    "original_sentence": "next meeting is where",
    "parse": "(Yield (Event.location (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))"
  },
  {
    "original_sentence": "Okay, can you tell me the address?",
    "parse": "(Yield (PlaceDescribableLocation (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Thank you, please make this meeting last 1 hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Yes, looks right .",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I want to get lunch after that. Is there a diner nearby?",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"diner near me\")))"
  },
  {
    "original_sentence": "I'm going to the basketball game with Oda on Sunday at 6 pm for 4 hours.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"basketball game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 6L))))) (Event.duration_? (?= (toHours 4)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Oda\")))))))))))"
  },
  {
    "original_sentence": "That's fine.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "i want to meet robert's parents on monday",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "put meeting with robells",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"robells\"))))))))))"
  },
  {
    "original_sentence": "wait a minute",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Let's go with 10 am please",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Lemme check something before I confirm",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "when do I meet with Damon Straeter alone ?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.isOneOnOne_? (?= true)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon Straeter\"))))))))))"
  },
  {
    "original_sentence": "make an event for 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Perf!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Did you book the hotel for the weekend?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Do I have anything on my calendar for next year?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullYearofYear (NextYear)))))) 0L))"
  },
  {
    "original_sentence": "Awesome. Now I need to make a dentist appointment during 2099",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (DateTime.date_? (FullYearofYear (Year.apply 2099L))))))))"
  },
  {
    "original_sentence": "The second one does. Let me go ahead and schedule a physical for next year too.",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"physical\")) (Event.start_? (DateTime.date_? (FullYearofYear (NextYear)))))))))"
  },
  {
    "original_sentence": "Hey! What time is my hair appointment tomorrow?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"hair appointment\"))))))))"
  },
  {
    "original_sentence": "Make that start at 1.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "In May at 5 pm on the 14th, make a dinner date with Chris.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner date\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 14L (May)) (NumberPM 5L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chris\")))))))))))"
  },
  {
    "original_sentence": "Can you make for an hour and a half instead and also please add, \"Shop for Chris' Present\" to May 7th from 3 to 5pm as well?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "if you have a car i have go to in home",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Can you set up a time for me to pick up my car from the repair shop so that I can go home on time?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"pick up my car from the repair shop\")))))"
  },
  {
    "original_sentence": "Please schedule a lunch at the Original Malt shop two days from now at 12pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (adjustByPeriod (Today) (toDays 2)) (NumberPM 12L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Original Malt shop\")))))))"
  },
  {
    "original_sentence": "put lunch on jul 29",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (MD 29L (July))))))))"
  },
  {
    "original_sentence": "Change location to Panera Bread",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Panera Bread\"))))))"
  },
  {
    "original_sentence": "Look well",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thanks alot",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to schedule a 1 on 1 with Cindy on Friday at 11:30 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteAm 11L 30L)))) (Event.isOneOnOne_? (?= true))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cindy\")))))))))))"
  },
  {
    "original_sentence": "Extend it until 1PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Schedule that",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Let's change the end time to 2.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "NICE",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What does my calendar say for Thursday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What events do I have planned for tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Okay, where is that located?",
    "parse": "(Yield (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Thanks, what's the other Event",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Great, what time does it start?",
    "parse": "(Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Where is it located again?",
    "parse": "(Yield (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "yeah, cancel my swimming practice in tomorrow",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"swimming practice\"))))))))))"
  },
  {
    "original_sentence": "after 1 week",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toWeeks 1))))))))"
  },
  {
    "original_sentence": "What events do I have tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "It is okay. Tell me the location of the swimming practice for next week.",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"swimming practice\")) (NextWeekList)))))))"
  },
  {
    "original_sentence": "Do you know if anyone did not respond to that?",
    "parse": "(Yield (> (size (AttendeesWithResponse (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (ResponseStatusType.None))) 0L))"
  },
  {
    "original_sentence": "I am having lunch with Allen's manager at 12 tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 12L))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Allen\"))))))))))))"
  },
  {
    "original_sentence": "Sure",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule lunchmeeting with Davis' manager at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunchmeeting\")) (Event.start_? (?= (NextTime (Noon))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Davis\"))))))))))))"
  },
  {
    "original_sentence": "Looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I believe it does",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you add Allen and Davis to this lunch?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Allen\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Davis\")))))))))))"
  },
  {
    "original_sentence": "That's great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have anything around 6 tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRangeDateTime (^(Event) EmptyStructConstraint) (AroundDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L))))))) 0L))"
  },
  {
    "original_sentence": "create a birthday party on friday around 6PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"birthday party\")) (Event.start_? (DateTimeConstraint (TimeAround (NumberPM 6L)) (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "Actually make it around 4 pm please.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (TimeAround (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "can you please tell today commitement",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "how about tomorrow?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Change my dentist appointment to Tuesday. Never mind change it to Monday.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Monday)))))))))"
  },
  {
    "original_sentence": "Update my 10 AM tomorrow to be in the PM",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberAM 10L)) (^(Event) EmptyStructConstraint)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (ConvertTimeToPM (DateTime.time (Event.start x0))))))))))"
  },
  {
    "original_sentence": "Better",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Okay, Thank you. Oh and change my volley ball game to pm",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"volley ball game\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (ConvertTimeToPM (DateTime.time (Event.start x0))))))))))"
  },
  {
    "original_sentence": "Yes thank you. Now move my doctors appointment tomorrow to AM",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"doctors appointment\"))))))) (do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (ConvertTimeToAM (DateTime.time (Event.start x0)))))))))))"
  },
  {
    "original_sentence": "Perfect youre amazing. Change the meeting with Kim this weekend from pm to AM.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))))) (do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (ConvertTimeToAM (DateTime.time (Event.start x0)))))))))))"
  },
  {
    "original_sentence": "Ask Homie to come tomorrow",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "can you put a meet with Homie on tomorrow ?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Homie\")))))))))))"
  },
  {
    "original_sentence": "select first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok.. select this one.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Did you hear from Homie? He was supposed to call to confirm.",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "can i get dai;y weather",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "weather for 48118",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"48118\"))) (?= (Now))))"
  },
  {
    "original_sentence": "tomorrow",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(Date) roleConstraint (Path.apply \"time\")) (extensionConstraint (^(Date) EmptyStructConstraint))) (intension (Tomorrow)))))"
  },
  {
    "original_sentence": "next week",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Date)) roleConstraint (Path.apply \"time\")) (intension (NextWeekList)))))"
  },
  {
    "original_sentence": "when will it snow",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "when will it rain",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you cancel date night for me and my wife this week?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Can you cancel date night appointment with Erica last week?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"date night\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Erica\"))))) (LastWeekNew)))))))))"
  },
  {
    "original_sentence": "Yes please cancel this.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Also delete our anniversary dinner from April.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"anniversary dinner\")) (FullMonthofMonth (April))))))))))"
  },
  {
    "original_sentence": "Cancel dinner with Erica yesterday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Yesterday) (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Erica\")))))))))))))"
  },
  {
    "original_sentence": "create meeting for tuesday at 8",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "yes add it in chicago",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"chicago\"))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Yes I Need your Help",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "schedule a finance meeting at 2pm tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"finance meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Im going to the mall later",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"going to the mall\")) (Event.start_? (DateTimeConstraint (Late) (Today)))))))"
  },
  {
    "original_sentence": "Hold on for a sec",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "No, it's going to be much later than that.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?< (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "I am not sure yet.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "go ahead and do the 2nd one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Remove Monday's appointment with Jane from my calendar.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\"))))))))))))"
  },
  {
    "original_sentence": "When is my dinner with Mickey, Duck, Goofy, and Mouse.",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mickey\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Duck\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Goofy\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mouse\")))))))))))"
  },
  {
    "original_sentence": "Change that to 7 pm please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "That will work.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When am I going on a race with Jake Cobb, Matt, Nate, and Victor?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"going on a race\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake Cobb\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Matt\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nate\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Victor\")))))))))))"
  },
  {
    "original_sentence": "Schedule a dance party with Ron, Randy, Rachel, and Janice Friday at 4.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dance party\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 4L))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ron\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Randy\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rachel\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice\"))))))))))))"
  },
  {
    "original_sentence": "I need to know who is on Jake Cobbs team.",
    "parse": "(Yield (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake Cobbs\")))))))"
  },
  {
    "original_sentence": "Who is on Kim Possible's team",
    "parse": "(Yield (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim Possible\")))))))"
  },
  {
    "original_sentence": "Who is the supervisor of Kim's team?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))"
  },
  {
    "original_sentence": "please wait",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "it's fine",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Hello, I would like to reschedule my dentist appointment tomorrow.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"dentist appointment\"))))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "What can you do for me",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "What is my schedule for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you schedule a dentist appointment for next week?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (DateTime.date_? (NextWeekList)))))))"
  },
  {
    "original_sentence": "Make it Apr 22 at 7:00",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (DateAtTimeWithDefaults (MD 22L (April)) (NumberAM 7L)))))))"
  },
  {
    "original_sentence": "Can you remove the appointment this Wednesday for me",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Hi",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Sure what is my schedule looking like today",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "what do i have on monday",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "can we add something to my schedule",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "make a schedule tomorrow for 10:00 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 10L)))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "make a schedule tomorrow for 10:00pm to 11:53 pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 11L 53L)))))))))"
  },
  {
    "original_sentence": "yes thats good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "what is my schedule like",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "???",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "cancel schedule",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "update schedule for tomorrow",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "create task for 10:00 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberPM 10L)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "when do i have appointment",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "cancel appointment",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "what is my schedule like",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "What events do I have after 14:00 tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (Tomorrow) (^(Event) EmptyStructConstraint) (HourMilitary 14L))))"
  },
  {
    "original_sentence": "Awesome. I need to add an event just before that second event, called \"Prepare for Saturday\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Prepare for Saturday\")) (Event.end_? (?= (Event.start (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint))))))))))))"
  },
  {
    "original_sentence": "Yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Remind me to go to the grocery store at 7pm tonight.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go to the grocery store\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "When was the last time I had a doctor appointment?",
    "parse": "(Yield (FindLastEvent (EventBeforeDateTime (Now) (Event.subject_? (?~= \"doctor appointment\")))))"
  },
  {
    "original_sentence": "Can you schedule a doctor appointment on March 13th at 8 am?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 13L (March)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Make a breakfast appointment with my boss next Thursday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"breakfast appointment\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday)))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "may i help you",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "When is my next meeting with Mathews",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mathews\")))) 1L)))"
  },
  {
    "original_sentence": "can you move it to 5pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "yes and make it last one hour",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Please update my meeting with Mathews from 5 to 6 PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mathews\")))) (NumberPM 5L)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "Hello. Can you let me the weather for Friday please.",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextDOW (Friday))))))"
  },
  {
    "original_sentence": "Ok, will it rain on Wednesday for Halloween?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextDOW (Wednesday)))))))"
  },
  {
    "original_sentence": "Can you add a meeting event for tomorrow at 3pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "cool,3.00 pm okay",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can I have an hour long appointment today please?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Today)))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "yes 1 pm is great",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Could we please put bob in after the appointment on the 19th at 1?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (nextDayOfMonth (Today) 19L) (NumberPM 1L)) (^(Event) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bob\")))))))))))"
  },
  {
    "original_sentence": "Today's meeting change will be after noon",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?> (Noon)))))))"
  },
  {
    "original_sentence": "first one is perfect",
    "parse": "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Let's book the same hotel room we always get for the upcoming Dec 13 - Dec 19 meetings.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Book a work trip from December 13-December 19",
    "parse": "(let (x0 (MD 13L (December))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"work trip\")) (Event.start_? (DateTime.date_? (?= x0)))) (Event.end_? (DateTime.date_? (?= (nextMonthDay x0 (December) 19L)))))))))"
  },
  {
    "original_sentence": "It should start at 9:30 am.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 9L 30L)))))))"
  },
  {
    "original_sentence": "Am I scheduled to go bungee jumping this weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"bungee jumping\")) (ThisWeekend))))) 0L))"
  },
  {
    "original_sentence": "I meant Binge Eating",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"Binge Eating\")))))"
  },
  {
    "original_sentence": "okay",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to set up a haircut for Wednesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"haircut\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday)))))))))"
  },
  {
    "original_sentence": "The earliest one works great for me.",
    "parse": "(Yield (Execute (ChooseCreateEvent (Earliest) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "what do i have between breakfast and lunch?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRangeTime (^(Event) EmptyStructConstraint) (TimeToTime (Breakfast) (Lunch)))))"
  },
  {
    "original_sentence": "What do I have from noon to five in the afternoon on October 25?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (MD 25L (October)) (^(Event) EmptyStructConstraint) (Noon) (NumberPM 5L))))"
  },
  {
    "original_sentence": "make that 2:00-2:30 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 2L 30L))))))))"
  },
  {
    "original_sentence": "What am I doing Tuesday morning, again?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) (Morning))))"
  },
  {
    "original_sentence": "Do I have anything scheduled during the afternoon on Tuesday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"
  },
  {
    "original_sentence": "computer, show my me schedule",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Make me something to do tonight",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Night) (Today))))))"
  },
  {
    "original_sentence": "Do you have anything a bit later than that?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Those look good but I prefer later in the day.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "first",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I want that to be later",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Please search to see how many appointments I have this week.",
    "parse": "(FenceAggregation)"
  },
  {
    "original_sentence": "create the new schedule for meeting with parker",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"parker\"))))))))))"
  },
  {
    "original_sentence": "It needs to be in the afternoon.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (Afternoon))))))"
  },
  {
    "original_sentence": "yes, the first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can I change it to March 23rd?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (MD 23L (March))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "goodbye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What did I RSVP to Dab on em?",
    "parse": "(Yield (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Dab on em\")))))))"
  },
  {
    "original_sentence": "What am I doing at the gallery this weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.location_? (?= (LocationKeyphrase.apply \"the gallery\"))) (ThisWeekend))))"
  },
  {
    "original_sentence": "ok thats fine",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What about the week after?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (WeekOfDateNew (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toWeeks 1)))))))"
  },
  {
    "original_sentence": "Anything with Harvey?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harvey\"))))))) 0L))"
  },
  {
    "original_sentence": "Cancel that appointment with Harvey. He's dead to me.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harvey\")))))))))))"
  },
  {
    "original_sentence": "Did I have a budget meeting last year?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"budget meeting\")) (FullYearofYear (LastYear)))))) 0L))"
  },
  {
    "original_sentence": "Did I have an audit meeting last year?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"audit meeting\")) (FullYearofYear (LastYear)))))) 0L))"
  },
  {
    "original_sentence": "I need you to set up an appointment with Cher this Sunday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher\")))))))))))"
  },
  {
    "original_sentence": "No",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you change it to 12pm?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "I would like to set up an appointment with Cher this Sunday.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "No",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you set up the meeting with Cher for 11AM?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberAM 11L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher\")))))))))))"
  },
  {
    "original_sentence": "where i was in last Sunday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Sunday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "oh ok ok, you know everything about me",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What's on my schedule today. Put a lunch with family tomorrow at noon.",
    "parse": "(do (Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint)))) (FenceAttendee))"
  },
  {
    "original_sentence": "Also add a dermatologist appointment next Wednesday at 2:30 to 3:30 pm, and then a meeting with John at 4:30 to 5:30 pm of the same day.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "The meeting with John is for an hour Friday I have a lunch with a friend at 12 pm and on Saturday I have house work from 1 to 3 pm.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "How's my \"Make the Ball Fall\" response?",
    "parse": "(Yield (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Make the Ball Fall\")))))))"
  },
  {
    "original_sentence": "What am I up to tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Push the fourth event to the next day.",
    "parse": "(let (x0 (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 4L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (DateTime.date (Event.start x0)) (toDays 1)))))))))"
  },
  {
    "original_sentence": "Looks good to me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change the third item to end at 6 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 3L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Event.end_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "Yes, that works.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Who declined my pot luck dinner for the weekend?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"pot luck dinner\")) (ThisWeekend)))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Has anyone decline for Happy Hour?",
    "parse": "(Yield (> (size (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Happy Hour\")))))) (ResponseStatusType.Declined))) 0L))"
  },
  {
    "original_sentence": "Has anyone not accepted my invite for Happy Hour?",
    "parse": "(Yield (> (size (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Happy Hour\")))))) (ResponseStatusType.Accepted))) 0L))"
  },
  {
    "original_sentence": "Doug is no longer coming to the staff meeting, Joan will be there instead.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"staff meeting\")))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Doug\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joan\")))))))))))"
  },
  {
    "original_sentence": "that's great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great. We have a kickball game tonight that Emily won't be there, Darren is going to come in her place.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"kickball game\"))) (Night)))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Darren\")))))))))))"
  },
  {
    "original_sentence": "yes!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Darren can't make it to the kickball game anymore. Can you replace him with Kevin?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"kickball game\")))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Darren\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kevin\")))))))))))"
  },
  {
    "original_sentence": "What is bill's phone number?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bill\"))))))"
  },
  {
    "original_sentence": "Thanks. Does he have a home address listed?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is bills email address?",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bill\"))))))))"
  },
  {
    "original_sentence": "Do you have a different email address? The one that you gave me did not work.",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "I need to set up a meeting with Tom and his supervisor for Monday after 1 pm.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (OnDateAfterTime (NextDOW (Monday)) (NumberPM 1L))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "The second works.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Does Dan have a supervisor as well?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan\")))))))"
  },
  {
    "original_sentence": "Cancel this meeting then",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "cancel this meeting at once",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create an event for dinner with Mary on Tuesday at 7pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 7L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\")))))))))))"
  },
  {
    "original_sentence": "7-8PM is better",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "I like it, but the end time is 8:30",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (HourMinutePm 8L 30L)))))))"
  },
  {
    "original_sentence": "The end time is now 9 instead.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 9L)))))))"
  },
  {
    "original_sentence": "I'd like it to only be an hour",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Dinner is now 5PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "The meeting in the Stratos Building should start at 3:30 PM and end at 5:45 PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (?= (LocationKeyphrase.apply \"Stratos Building\"))))))) (& (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 5L 45L))))))))"
  },
  {
    "original_sentence": "I think it will actually end at 7pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "no, end it at 6:30 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (HourMinutePm 6L 30L)))))))"
  },
  {
    "original_sentence": "yes that is it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cancel my group discussion with Carly next week.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"group discussion\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carly\"))))) (NextWeekList)))))))))"
  },
  {
    "original_sentence": "Sorry I meant with Katie.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Katie\"))))))))))"
  },
  {
    "original_sentence": "How many events do I have this week?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))))"
  },
  {
    "original_sentence": "How many of these appointments do I have this month?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today))))))))"
  },
  {
    "original_sentence": "Yes! I would like help searching for an event!",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "When is my meeting with Maria next week?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Maria\")))) (NextWeekList)))))))"
  },
  {
    "original_sentence": "i need to know what i have in June 2020",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.start_? (DateTime.date_? (FullMonthofMonth (June) (Year.apply 2020L))))))"
  },
  {
    "original_sentence": "Perfect, can you see if I have anything in July 2021?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (July) (Year.apply 2021L)))))"
  },
  {
    "original_sentence": "Perfect. Please add a haircut appointment for 3/2020.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"haircut appointment\")) (Event.start_? (DateTime.date_? (FullMonthofMonth (toMonth 3L) (Year.apply 2020L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "i need to an event Feb 2023",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (FullMonthofMonth (February) (Year.apply 2023L)))))))"
  },
  {
    "original_sentence": "What do I have scheduled for today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Add a meeting with Laura at 2 pm for one hour",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (NextTime (NumberPM 2L)))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Laura\")))))))))))"
  },
  {
    "original_sentence": "I have scheduled for today",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "When is the baseball game starting?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"baseball game\")))))))"
  },
  {
    "original_sentence": "It's going to be at Levi's Stadium.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Levi's Stadium\"))))))"
  },
  {
    "original_sentence": "Yep, looks good. Set a reminder Wednesday at 7 to get my game clothes in the wash.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceReminder))"
  },
  {
    "original_sentence": "Great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to schedule a meeting on March 8th called Interview.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Interview\")) (Event.start_? (DateTime.date_? (?= (MD 8L (March)))))))))"
  },
  {
    "original_sentence": "What will the weather be like today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "When will it rain?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Will it rain tomorrow?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "What is the weather for Tuesday?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextDOW (Tuesday))))))"
  },
  {
    "original_sentence": "Is there snow in the forecast?",
    "parse": "(Yield (WillSnow (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "How much rain will be on October 29?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Sum) (rainPrecipIntensity) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (MD 29L (October)))))))"
  },
  {
    "original_sentence": "What is the weather for Friday?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextDOW (Friday))))))"
  },
  {
    "original_sentence": "What is the weather in Florida?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Florida\"))) (?= (Now))))"
  },
  {
    "original_sentence": "Put dinner with Simon on my schedule for tomorrow at 6pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Simon\")))))))))))"
  },
  {
    "original_sentence": "Look Good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have anything this evening?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Evening))))) 0L))"
  },
  {
    "original_sentence": "What is it?",
    "parse": "(RepeatAgent)"
  },
  {
    "original_sentence": "when is my birthday",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"birthday\")))))))"
  },
  {
    "original_sentence": "Thank you for reminding me. What's the weather that day?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Oh, I'll be celebrating it at the Spaghetti Factory in downtown Sacramento, California.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Spaghetti Factory in downtown Sacramento, California\"))))))"
  },
  {
    "original_sentence": "what time is her birthday",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"birthday\")))))))"
  },
  {
    "original_sentence": "ok fix that party",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I am going to be cleaning out the garage on Saturday from 10 to 5 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"clean out the garage\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "Actually, make that end at 4 pm instead. It shouldn't take that long I think.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Looks good, thanks!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What",
    "parse": "(RepeatAgent)"
  },
  {
    "original_sentence": "Do I have any meetings with Gordon today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Gordon\")))))))) 0L))"
  },
  {
    "original_sentence": "change the time into 10.00 pm to 10.30pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 10L)))))))"
  },
  {
    "original_sentence": "that looks perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can we look at all my event's",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Do I have any events next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Can you help me update my dentist appointment?",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "What is the weather?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (?= (Now))))"
  },
  {
    "original_sentence": "What is the weather in Toronto Canada?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Toronto Canada\"))) (?= (Now))))"
  },
  {
    "original_sentence": "How do clouds form?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to add Friday morning's breakfast added to my calendar",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"breakfast\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "Yup, the first one works. x)",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you tell me how long that will be for?",
    "parse": "(Yield (Event.duration (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Good.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to find out who Emily is reporting to",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\")))))))"
  },
  {
    "original_sentence": "put meeting with rashii",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"rashii\"))))))))))"
  },
  {
    "original_sentence": "Who is Rashii 's supervisor?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rashii\")))))))"
  },
  {
    "original_sentence": "Am I meeting with Norris this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Norris\")))) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Tell me who is the manager of Norris.",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Norris\")))))))"
  },
  {
    "original_sentence": "Decline Dinner on Feb 29 and say I have to work late, can't make it",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I have to work late, can't make it\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 29L (February)) (Event.subject_? (?~= \"Dinner\")))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Decline my Dog walk and say My legs are sore from working out last night",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"My legs are sore from working out last night\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Dog walk\"))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Yes, that's okay. Decline my Football Game and say that I am going to be playing soccer that day instead.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I am going to be playing soccer that day instead\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Football Game\"))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "Find my meeting time today.",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Update Netflix to Wednesday at 10 pm.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Netflix\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Wednesday)) (NumberPM 10L))))))))"
  },
  {
    "original_sentence": "No, just cancel",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Cancel Netflix completely",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Netflix\")))))))))"
  },
  {
    "original_sentence": "yup cancel that",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete the meeting I had scheduled with Thomas on Friday from 10 to 11 am",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (NextDOW (Friday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Thomas\")))) (NumberAM 10L) (NumberAM 11L)))))))))"
  },
  {
    "original_sentence": "YES, PLEASE DELETE IT AND I HAVE OTHER JOBS TO DO",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule a concert on Friday at 5:30 pm with Alex, Jake, and Max.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"concert\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 5L 30L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Max\"))))))))))))"
  },
  {
    "original_sentence": "let the event end by 7.00 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "yes, it is what i am looking for",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What day of the week is Halloween next year?",
    "parse": "(Yield (Date.dayOfWeek (HolidayYear (Holiday.Halloween) (NextYear))))"
  },
  {
    "original_sentence": "what day in 4th of July next year",
    "parse": "(Yield (MDY 4L (July) (NextYear)))"
  },
  {
    "original_sentence": "Add move to Radiator Springs to my calendar for June 5th next year",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"move to Radiator Springs\")) (Event.start_? (DateTime.date_? (?= (MDY 5L (June) (NextYear)))))))))"
  },
  {
    "original_sentence": "I'll go with 2.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "When is easter in 00",
    "parse": "(Yield (HolidayYear (Holiday.Easter) (Year.apply 0L)))"
  },
  {
    "original_sentence": "Please make me an event in 2199",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (FullYearofYear (Year.apply 2199L)))))))"
  },
  {
    "original_sentence": "Eithers good. What events do i have in 2022?",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullYearofYear (Year.apply 2022L))))))"
  },
  {
    "original_sentence": "Instruct me on building a rocket to the moon.",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Can you tell me how hot it will be in Ocala Florida on the 24th?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Ocala Florida\"))) (DateTime.date_? (?= (nextDayOfMonth (Today) 24L))))))"
  },
  {
    "original_sentence": "How hot is it in Atlanta, GA on Sept 2?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Atlanta, GA\"))) (DateTime.date_? (?= (MD 2L (September)))))))"
  },
  {
    "original_sentence": "Is it going to be that hot in Savannah too?",
    "parse": "(Yield (IsHot (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Savannah\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "What about the following weekend?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint DateTime)) roleConstraint (Path.apply \"time\")) (intension (DateTime.date_? (NextWeekend))))))"
  },
  {
    "original_sentence": "Delete the coffee meeting with John, Peter, and Steve",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"coffee meeting\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Peter\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steve\")))))))))))))"
  },
  {
    "original_sentence": "Is there any other meetings that match?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))) 0L))"
  },
  {
    "original_sentence": "please change meeting time are date.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Can you create a new meeting with bill smith, bill james, and bill thomas and call it bill convention?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"bill convention\")) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bill smith\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bill james\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bill thomas\"))))))))))))"
  },
  {
    "original_sentence": "looks good",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please delete the meeting with Andy and his supervisor on Monday",
    "parse": "(let (x0 (PersonName.apply \"Andy\")) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))) (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Remove Andy. I still want to see his supervisor.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListExcludesRecipient (RecipientWithNameLike (?= (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint))))) (PersonName.apply \"Andy\")))))))"
  },
  {
    "original_sentence": "OK",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When am I seeing the boss of Casandra?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Casandra\")))))))))))))"
  },
  {
    "original_sentence": "what are the events tomorrow 10:30pm",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 10L 30L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What's on my calendar tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What day is my \"Doctor's Appointment\" next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Doctor's Appointment\")) (NextWeekList))))"
  },
  {
    "original_sentence": "Can you add a doctor appointment at noon tomorrow?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))))))"
  },
  {
    "original_sentence": "When is the next meet with Mary?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\")))) 1L)))"
  },
  {
    "original_sentence": "When is my next appointment with Joe?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joe\")))) 1L)))"
  },
  {
    "original_sentence": "The next time I am seeing Karina is when?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karina\")))) 1L)))"
  },
  {
    "original_sentence": "When do Bryce and I next have a scheduled meeting?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bryce\")))) 1L)))"
  },
  {
    "original_sentence": "When do I get to see Amanda next?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amanda\")))) 1L)))"
  },
  {
    "original_sentence": "Current location",
    "parse": "(Yield (Here))"
  },
  {
    "original_sentence": "So what do I have before Game night today?",
    "parse": "(let (x0 (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"Game night\")))))))) (Yield (FindEventWrapperWithDefaults (EventOnDateBeforeTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)))))"
  },
  {
    "original_sentence": "Have I had a team meeting today before now?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateBeforeTime (Today) (Event.subject_? (?~= \"team meeting\")) (DateTime.time (Now)))))) 0L))"
  },
  {
    "original_sentence": "Did I have anything earlier today called Lunch Meeting?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateBeforeTime (Today) (Event.subject_? (?~= \"Lunch Meeting\")) (DateTime.time (Now)))))) 0L))"
  },
  {
    "original_sentence": "Hey there AI",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "What is the weather today in Honolulu",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Honolulu\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "What is the weather today in Anchorage",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Anchorage\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "can you get me weather come the weekend in maine",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"maine\"))) (DateTime.date_? (ThisWeekend))))"
  },
  {
    "original_sentence": "you rock",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "create staff meeting on monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"staff meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))))))"
  },
  {
    "original_sentence": "the second one looks the best at 1:00",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "When is the staff meeting",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"staff meeting\")))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Change the staff meeting to the following week at the same time.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"staff meeting\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply (toWeeks 1)))))))))"
  },
  {
    "original_sentence": "Mark me for busy all day Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.showAs_? (?= (ShowAsStatus.Busy))) (NextDOW (Monday))))))"
  },
  {
    "original_sentence": "Will it snow in Denver next Monday?",
    "parse": "(Yield (WillSnow (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Denver\"))) (DateTime.date_? (?= (NextDOW (Monday)))))))"
  },
  {
    "original_sentence": "Hello, Can help me with changing the colors of my calendar lists?",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Do I have any other tasks for the day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))) 0L))"
  },
  {
    "original_sentence": "Tell me my schedule for the week at a convention at 12 on saturday and Sunday I have a family brunch at 10 am.",
    "parse": "(do (Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 12L)) (Event.subject_? (?~= \"convention\"))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"family brunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 10L)))))))))"
  },
  {
    "original_sentence": "What do I have planned next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "Schedule an event for 12:30 pm tomorrow to make my medicine, and then every four hours after that.",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "Do I have any events for tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "I need to change Dinner with mom to end at 9PM",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Dinner with mom\")))))) (Event.end_? (DateTime.time_? (?= (NumberPM 9L)))))))"
  },
  {
    "original_sentence": "Yes this looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Dad is coming too.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Make and event for tomorrow at 5pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "Hi. I need to check the departure time for the next flight I have scheduled.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Make a appointment for office 5.00 PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"appointment for office\")) (Event.start_? (?= (NextTime (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "The second option works best.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "great confirmed",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Yeah it's ok.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to put a vet appointment down for Friday at 5 pm at Rose Vet Clinic. It will be about an hour.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"vet appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 5L))))) (Event.duration_? (?= (toHours 1)))) (Event.location_? (?= (LocationKeyphrase.apply \"Rose Vet Clinic\")))))))"
  },
  {
    "original_sentence": "It does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I'd like to put down my reservation at the Omni Hotel on Tuesday at 3 pm to Weds at 11 am.",
    "parse": "(let (x0 (NextDOW (Tuesday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"reservation\")) (Event.start_? (?= (DateAtTimeWithDefaults x0 (NumberPM 3L))))) (Event.end_? (?= (DateAtTimeWithDefaults (nextDayOfWeek x0 (Wednesday)) (NumberAM 11L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Omni Hotel\"))))))))"
  },
  {
    "original_sentence": "looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "what is the next event on my calendar",
    "parse": "(Yield (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L))"
  },
  {
    "original_sentence": "What's after that?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)))))"
  },
  {
    "original_sentence": "Anything scheduled for the week after?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (WeekOfDateNew (DateTime.date (adjustByPeriodDuration (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply (toWeeks 1))))))))))"
  },
  {
    "original_sentence": "Ok can I check the rest of the month for appointments?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today))))))"
  },
  {
    "original_sentence": "When does the appointment get over?",
    "parse": "(Yield (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Hi. Show calendar events for this month",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today))))))"
  },
  {
    "original_sentence": "create a meeting with jay at 5 pm thursday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 5L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jay\")))))))))))"
  },
  {
    "original_sentence": "Yes, that looks perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "5 pm is great, thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what events are this weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "Hi, Is there any rain in the Minneapolis area tonight?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Minneapolis area\"))) (DateTimeConstraint (Night) (Today)))))"
  },
  {
    "original_sentence": "How about during the day tomorrow?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint DateTime)) roleConstraint (Path.apply \"time\")) (intension (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Any precipitation tomorrow?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (rainPrecipProbability) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "Cloudy but no rain in the forecast for Minneapolis?",
    "parse": "(Yield (IsCloudy (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "OKay thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Goodbye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you call Sam Ian?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam Ian\"))))))))"
  },
  {
    "original_sentence": "Please call Tracey",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tracey\"))))))))"
  },
  {
    "original_sentence": "Call dentist",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Better call Dr. Saul.",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dr. Saul\"))))))))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you tell me when Veteran's Day is this year",
    "parse": "(Yield (HolidayYear (Holiday.VeteransDay) (Date.year (Today))))"
  },
  {
    "original_sentence": "What day will Ramadan start in 2021?",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "what date is labours day next year?",
    "parse": "(Yield (HolidayYear (Holiday.LaborDay) (NextYear)))"
  },
  {
    "original_sentence": "Can you check when New Years is?",
    "parse": "(Yield (NextHolidayFromToday (Holiday.NewYearsDay)))"
  },
  {
    "original_sentence": "what events do I have tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Delete my event on monday at 2 pm with Cora.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cora\"))))))))))))"
  },
  {
    "original_sentence": "Ding dong fling flong",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Whoever is spamming these is going to get blocked and lose their account",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "find cora's account detail from my address book",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"cora\")))))))"
  },
  {
    "original_sentence": "How about Cora's phone number?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cora\"))))))))"
  },
  {
    "original_sentence": "Hi, I'm trying to figure out how to work my personal calander",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Hmmm can you help me manage my calander?",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "How can I remove a calendar event?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "I would like to create a calendar event for Saturday April 6th at 2pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (MD 6L (April)) (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Yes, I would like the appointment to last until 6pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "Good, can I rename the appointment Unicorn Dance Party",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"Unicorn Dance Party\")))))"
  },
  {
    "original_sentence": "yuhh",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What appointments do I have on Saturday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Thank you, you've been very helpful",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "MEet with Smith and Weeson at 4.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 4L)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Smith\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Weeson\"))))))))))))"
  },
  {
    "original_sentence": "Yes that's fine, also what do I have on the schedule tomorrow morning, specifically late morning?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (LateMorning)))))"
  },
  {
    "original_sentence": "Can you cancel that Appointment?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "yes cancel that appointment",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "ikr",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Set up 1 pm Lunch with Tyler on Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tyler\")))))))))))"
  },
  {
    "original_sentence": "Ain't no thang",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add Marion to Lunch",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Lunch\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marion\"))))))))))"
  },
  {
    "original_sentence": "Schedule Play Tennis with Mario tomorrow at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Play Tennis\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mario\")))))))))))"
  },
  {
    "original_sentence": "When's my consumer meeting?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"consumer meeting\")))))))"
  },
  {
    "original_sentence": "Create a consumer meeting speech prep on Feb 18, at 4:00 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"consumer meeting speech prep\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 18L (February)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Put me down for a nap the same year as that on the 19th of February",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"nap\")) (Event.start_? (DateTime.date_? (?= (MDY 19L (February) (Date.year (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))))))"
  },
  {
    "original_sentence": "What's the weather going to be like in Edison NJ tomorrow",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Edison NJ\"))) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "What will the weather be in Allentown PA tomorrow",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Allentown PA\"))) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "How much rain is expected in Allentown PA tomorrow",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Allentown PA\"))) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "How many inches of rain are expected in Allentown tomorrow",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Sum) (rainPrecipIntensity) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Allentown\"))) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "Postpone my managerial meeting with Sara, Ned, and Lisa by a week.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"managerial meeting\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sara\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ned\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lisa\")))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (DateTime.date (Event.start x0)) (toWeeks 1)))))))))"
  },
  {
    "original_sentence": "I want it to start at 10 AM at the same location.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "Let's make it 45 minutes just to be safe.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toMinutes 45))))))"
  },
  {
    "original_sentence": "Yes, can you also schedule a notification reminder?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceReminder))"
  },
  {
    "original_sentence": "yes this looks good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Set it to 11:45 pm instead",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 11L 45L)))))))"
  },
  {
    "original_sentence": "grocery shopping 4 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"grocery shopping\")) (Event.start_? (?= (NextTime (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Dinner with Marie at 5:30 pm at El nibble Nook",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Dinner\")) (Event.start_? (?= (NextTime (HourMinutePm 5L 30L))))) (Event.location_? (?= (LocationKeyphrase.apply \"El nibble Nook\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marie\")))))))))))"
  },
  {
    "original_sentence": "After dinner at 7 pm schedule rest.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"rest\")) (Event.start_? (?= (DateAtTimeWithDefaults (DateTime.date (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\"))))))) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "when I'm i meeting Duke?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Duke\")))))))))"
  },
  {
    "original_sentence": "And with Ken?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ken\"))))))"
  },
  {
    "original_sentence": "change the time for meeting with ken at 12.30 pm - 1.00 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"ken\")))))))) (& (Event.start_? (DateTime.time_? (?= (HourMinutePm 12L 30L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "change the time for meeting with ken at 1.00 pm - 2.00 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (& (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "That's fine.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I went tokyo drifting yesterday at 3 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"tokyo drifting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Yesterday) (NumberAM 3L))))))))"
  },
  {
    "original_sentence": "Yeah yeah yeah",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have any other races coming up this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventDuringRange (Event.subject_? (?~= \"races\")) (ThisWeek)))))) 0L))"
  },
  {
    "original_sentence": "I saw Kim for lunch last Friday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (previousDayOfWeek (Today) (Friday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))))))"
  },
  {
    "original_sentence": "The first option.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Schedule dinner and drinks with Amy on Friday at 6:30 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner and drinks\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 6L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\")))))))))))"
  },
  {
    "original_sentence": "Yes. Amy and I are having a fight so uniinvite Amy.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\")))))))))))"
  },
  {
    "original_sentence": "The second works. Please also uninvite Amy from Painting with a Twist on Sunday morning.",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"Painting with a Twist\"))) (Morning)))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\"))))))))))))"
  },
  {
    "original_sentence": "Yeah, can you add dave to that ?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"dave\"))))))))))"
  },
  {
    "original_sentence": "Take me off the invited list for Painting with a Twist.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Please set up Dr.'s appoint for next week.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dr.'s appoint\")) (Event.start_? (DateTime.date_? (NextWeekList)))))))"
  },
  {
    "original_sentence": "No, I need it to start in the afternoon.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (Afternoon))))))"
  },
  {
    "original_sentence": "thanks 12 PM start for me",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "hey, schedule a lunch meeting with Andrew",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch meeting\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Andrew\")))))))))))"
  },
  {
    "original_sentence": "The bottom one",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "schedule a review meeting with Jon, Sally, and Curt Monday for 30 minutes at 9 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"review meeting\")) (Event.start_? (?= (NextTime (NumberAM 9L))))) (Event.duration_? (?= (toMinutes 30)))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jon\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sally\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Curt\"))))))))))))"
  },
  {
    "original_sentence": "Yes this looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hey is it going to rain this weekend in San Diego?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"San Diego\"))) (DateTime.date_? (ThisWeekend)))))"
  },
  {
    "original_sentence": "That stinks, maybe I should change my plans. Will it rain in Las Vegas this weekend?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Las Vegas\"))) (DateTime.date_? (ThisWeekend)))))"
  },
  {
    "original_sentence": "Does it ever rain in Las Vegas.",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "What is the forecast for this week in Las Vegas?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Las Vegas\"))) (DateTime.date_? (ThisWeek))))"
  },
  {
    "original_sentence": "Do I have anything to do tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Delete last Thursday's meeting",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Thursday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "change the appointment to 1",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Can you tell me how many times I've seen John in march?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))) (FullMonthofMonth (March))))))) 0L))"
  },
  {
    "original_sentence": "Do I have any events at 3pm today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 3L)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Delete it please",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Delete everything I have for this week.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "What is on my calendar for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Change my family dinner to 5:00 pm for 1 hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"family dinner\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "I would like to know when my third event in march starts",
    "parse": "(Yield (Event.start (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (March))) 3L)))"
  },
  {
    "original_sentence": "What is the location of my third event in March?",
    "parse": "(Yield (Event.location (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (March))) 3L)))"
  },
  {
    "original_sentence": "Okay, what is the third event that I have scheduled in March?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (March))) 3L))"
  },
  {
    "original_sentence": "Has Lucy said whether she'll be available for an appointment on Wednesday?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lucy\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Sounds good. Is Anthony coming to the meeting tomorrow night?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Night))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Anthony\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Thanks. Is Donna coming to trivia night Friday night?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"trivia night\"))) (Night))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Donna\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Good. Is Tom coming over for cookies next Thursday?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.subject_? (?~= \"cookies\")))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "is elli comin to tthe yoga session",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"yoga session\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"elli\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Thanks. Is Kim coming to the yoga session the following week?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"yoga\")) (WeekOfDateNew (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 7))))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "what time is my next meeting?",
    "parse": "(Yield (Event.start (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))"
  },
  {
    "original_sentence": "what about my next appointment?",
    "parse": "(Yield (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L))"
  },
  {
    "original_sentence": "OK, and when is my next doctor's visit?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"doctor's visit\")) 1L)))"
  },
  {
    "original_sentence": "Do I have another of those this year?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullYearofYear (Date.year (Today)))))))) 0L))"
  },
  {
    "original_sentence": "make an appointment with my dad",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "schedule an appointment with Cameron and Frank Monday to discuss new product rollouts",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"discuss new product rollouts\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cameron\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Frank\"))))))))))))"
  },
  {
    "original_sentence": "The last one.",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I would prefer the meeting starts at 12:00 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "Looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When are Erin, Karen, Aaron and Kathryn coming over for drinks?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"drinks\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Erin\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Aaron\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kathryn\")))))))))))"
  },
  {
    "original_sentence": "Hillary, Bill, Barack and Donald will attend the event.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Hillary\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bill\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Donald\")))))))))))"
  },
  {
    "original_sentence": "That's perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add meeting for work after drinks for two hours.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"meeting for work\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"drinks\"))))))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "Make sure to take fred and andy off of the meeting today.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"fred\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"andy\"))))))))))))"
  },
  {
    "original_sentence": "The review is clear.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Remove Tommy, Clair, and Ben from the Top Gear competition.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Top Gear competition\")))))) (Event.attendees_? (& (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tommy\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Clair\")))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ben\"))))))))))))"
  },
  {
    "original_sentence": "Yes, this is it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Clair cant come to the butternut squash picking, but fred can!",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"butternut squash picking\")))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Clair\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"fred\")))))))))))"
  },
  {
    "original_sentence": "What do I have down for Tuesday after 8 pm?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint) (NumberPM 8L))))"
  },
  {
    "original_sentence": "Hi I need help with my calendar",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "who am i having lunch with next week",
    "parse": "(Yield (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"lunch\")) (NextWeekList)))))))"
  },
  {
    "original_sentence": "who am i meeting with next week",
    "parse": "(Yield (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))))"
  },
  {
    "original_sentence": "can you schedule a lunch for me next wednesday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday)))))))))"
  },
  {
    "original_sentence": "1 pm works",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "can you make it an hour and a half?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours (+ 1 0.5)))))))"
  },
  {
    "original_sentence": "yes, thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "can you schedule a call with barack obama for thursday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"call\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"barack obama\")))))))))))"
  },
  {
    "original_sentence": "i don't know, can you check barack obama's calendar?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "ok, thursday 1pm works",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTimeFromDowConstraint (?= (Thursday)) (NumberPM 1L))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "when am i supposed to call barack obama next week?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"call barack obama\")) (NextWeekList)))))))"
  },
  {
    "original_sentence": "Can you schedule a meeting before 4 pm today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (OnDateBeforeTime (Today) (NumberPM 4L))))))"
  },
  {
    "original_sentence": "The first one please",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need a conference call between 3 and 5 pm Friday",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"conference call\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "Yes that looks fine",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Looks great, but update to 2:30 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 2L 30L)))))))"
  },
  {
    "original_sentence": "Do I have a call scheduled tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"call\")))))) 0L))"
  },
  {
    "original_sentence": "Do I have something with Jake in Seattle tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (& (Event.location_? (?= (LocationKeyphrase.apply \"Seattle\"))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))))) 0L))"
  },
  {
    "original_sentence": "Do I have any events with Kim in November?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))) (FullMonthofMonth (November)))))) 0L))"
  },
  {
    "original_sentence": "Did Kim attend last week's staff meeting?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"staff meeting\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))) (LastWeekNew))))) 0L))"
  },
  {
    "original_sentence": "Do I have other events with Kim?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))) 0L))"
  },
  {
    "original_sentence": "Get a meeting with Abby in one of the rooms in the NERD",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (& (?= (LocationKeyphrase.apply \"NERD\")) (roomRequest))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "Book the event for the 21st.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (ClosestDay (Today) (Day.apply 21L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need a meeting with my team tomorrow in Bellevue with a room",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Bellevue\")) (roomRequest)))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "That one is looking pretty hot",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can I get a room in Berkeley December 5th to discuss gifts for employees",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"discuss gifts for employees\")) (Event.start_? (DateTime.date_? (?= (MD 5L (December)))))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Berkeley\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "change the location of the Big Super Duper Lunch to the convention hall",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Big Super Duper Lunch\")))))) (Event.location_? (?= (LocationKeyphrase.apply \"convention hall\"))))))"
  },
  {
    "original_sentence": "Actually change it to the Great Hall.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.location_? (?= (LocationKeyphrase.apply \"Great Hall\"))))))"
  },
  {
    "original_sentence": "yeah!looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make a small and crammed dinner going to be at?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"small and crammed dinner\")) (Event.start_? (?= (NextTime (Dinner))))))))"
  },
  {
    "original_sentence": "Yeah that looks pretty good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Where am I going for Dinner tonight?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"Dinner\"))) (Night)))))))"
  },
  {
    "original_sentence": "Anyone else coming?",
    "parse": "(Yield (> (size (AttendeesWithResponse (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (ResponseStatusType.Accepted))) 0L))"
  },
  {
    "original_sentence": "Where is dinner being held?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\")))))))"
  },
  {
    "original_sentence": "Change it to start at 9 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 9L)))))))"
  },
  {
    "original_sentence": "Perfecto, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "schedule my doctor's appointment for Tuesday at 10 am and cancel the teleconference on Wednesday at 3 pm.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "all good, thanks for everything, I hope you continue like this",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you schedule an appointment for dinner with Bailey and Jenna for Tuesday sometime between 5 and 8 depending on their schedule?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 5L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 8L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bailey\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jenna\")))))))))))))"
  },
  {
    "original_sentence": "schedule an appointment for dinner with Bailey and Jenna for Tuesday at 5:30 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (HourMinutePm 5L 30L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bailey\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jenna\"))))))))))))"
  },
  {
    "original_sentence": "righto",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Find me 3 hours for time with my mom",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Find me 3 hours on Sunday for a long talk with Sarah.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"long talk\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))) (Event.duration_? (?= (toHours 3)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\")))))))))))"
  },
  {
    "original_sentence": "The 2nd one works well",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thank you very much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Find an hour tomorrow evening to plan a dog walk.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dog walk\")) (Event.start_? (DateTimeConstraint (Evening) (Tomorrow)))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "I need to schedule a meeting with Emily Braun on Friday 15th, March 2019 at 10:00 a.m. on my office.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (MDY 15L (March) (Year.apply 2019L)) (NumberAM 10L)))) (Event.location_? (?= (LocationKeyphrase.apply \"my office\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily Braun\")))))))))))"
  },
  {
    "original_sentence": "Please make it till 11:30 a.m.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 11L 30L)))))))"
  },
  {
    "original_sentence": "It's ok. Thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Will it rain in 2 days?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (adjustByPeriod (Today) (toDays 2)))))))"
  },
  {
    "original_sentence": "I need a spot in City Center Monday night",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Night) (NextDOW (Monday)))) (Event.location_? (?= (LocationKeyphrase.apply \"City Center\")))))))"
  },
  {
    "original_sentence": "Do I have anything scheduled for next Tuesday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Will I be going to the mall on Wednesday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (Event.subject_? (?~= \"mall\")))))) 0L))"
  },
  {
    "original_sentence": "Will John be attending that meeting with me?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Can you invite John?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))))"
  },
  {
    "original_sentence": "Can you set a meeting with Mary on Friday at 11?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 11L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\")))))))))))"
  },
  {
    "original_sentence": "Yeah that will do for now.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When is make a doctor appointment",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor appointment\")))))))"
  },
  {
    "original_sentence": "ok for that meeting",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule Physical Therapy for Thursday at 11:30 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Physical Therapy\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinuteAm 11L 30L))))))))"
  },
  {
    "original_sentence": "Please switch the date of my meeting with Alison to next Tuesday instead",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alison\")))))))) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))))))"
  },
  {
    "original_sentence": "well. remind me by the day before the meeting",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceReminder))"
  },
  {
    "original_sentence": "Add John to my meeting with Alison.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alison\")))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))))"
  },
  {
    "original_sentence": "Yes schedule that please",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you tell me the weather in Los Angeles CA on Monday?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Los Angeles CA\"))) (DateTime.date_? (?= (NextDOW (Monday))))))"
  },
  {
    "original_sentence": "Delete the meeting schedule with Lucy",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lucy\")))))))))))"
  },
  {
    "original_sentence": "yes cancel please",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "the meeting schedule with Lucy",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lucy\"))))))))"
  },
  {
    "original_sentence": "Schedule a meeting with Pam, Carlos, and Bart on the 14th at 3 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 14L) (NumberPM 3L)))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Pam\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carlos\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bart\"))))))))))))"
  },
  {
    "original_sentence": "Good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete my all day event on Saturday, please.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.isAllDay_? (?= true))))))))))"
  },
  {
    "original_sentence": "put appointment my lover meet",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"my lover meet\")))))"
  },
  {
    "original_sentence": "Make it all day Wednesday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Wednesday))))))"
  },
  {
    "original_sentence": "Great. Please add family reunion for September 1st all day.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"family reunion\")) (MD 1L (September)))))))"
  },
  {
    "original_sentence": "Yes, add that.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What am I up to tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Please change my second event to 7:00AM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberAM 7L)))))))"
  },
  {
    "original_sentence": "That is much better, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have anything planned for next Monday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Extend the last one so that it lasts an hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath (BottomResult))) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "I need to draft a proposal at 4 pm today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"draft a proposal\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Yeah",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you extend it to 5 pm?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "can you tell me where andrea and i are going for a walk tomorrow?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (& (Event.subject_? (?~= \"walk\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"andrea\")))))))))))"
  },
  {
    "original_sentence": "I need the street address.",
    "parse": "(Yield (PlaceDescribableLocation (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Looks good, thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Defer my meeting with JoAnn today by 3 hours.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"JoAnn\"))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply :duration (toHours 3)))))))))"
  },
  {
    "original_sentence": "Yes but make the meeting last for one hour",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "it's ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When is my meeting with Angela?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Angela\")))))))))"
  },
  {
    "original_sentence": "can you tell about my appointment",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Do I have an appointments this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"appointments\")) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Schedule a dinner on Saturday at 7 pm and The Meal and Deal.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 7L))))) (Event.location_? (?= (LocationKeyphrase.apply \"The Meal and Deal\")))))))"
  },
  {
    "original_sentence": "It should be 1.5 hours.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours (+ 2 0.5)))))))"
  },
  {
    "original_sentence": "Oh yeah that's great thank you much",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "what's on my calendar at today 8 pm",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 8L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "ok nevermind. Lets keep that",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you show me all the Parent Teacher Conferences I have scheduled for the next three months?",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "Is there a parent teacher conference scheduled?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"parent teacher conference\"))))) 0L))"
  },
  {
    "original_sentence": "ok schedule breakfast at 10:40 am then",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventOnDateTime (NextTime (HourMinuteAm 10L 40L)) (Event.subject_? (?= \"breakfast\"))))))"
  },
  {
    "original_sentence": "Do I have anything scheduled for today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Ok then add a group lunch for tomorrow at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"group lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make the group lunch last for 1 hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"group lunch\")))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "yeah",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "please cancel my 8am meeting tomorrow",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "change the time to 9pm please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 9L)))))))"
  },
  {
    "original_sentence": "lets go with the first one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have any budget meetings scheduled next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"budget meetings\")) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Invite Harry and Maggie to that, please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harry\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Maggie\")))))))))))"
  },
  {
    "original_sentence": "That does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add a one hour meeting with Marina to my calendar tomorrow at 1 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L)))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marina\")))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Put Meeting with Paul right after the meeting with marina",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marina\")))))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paul\")))))))))))"
  },
  {
    "original_sentence": "Meeting with Paul will be at 2PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paul\")))))))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you tell me the weather at the park next Saturday and schedule a dinner Friday at 7pm.",
    "parse": "(do (Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"the park\"))) (DateTime.date_? (?= (NextDOW (Saturday)))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 7L)))))))))"
  },
  {
    "original_sentence": "Could you cancel group meeting tomorrow with Pete, Alonso, Marcus, and Aaron?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alonso\")))))) (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Pete\")))))) (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Pete\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Pete\")))))))))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When am I going hiking with James, Jared, Dan Marton, and Aaron?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"going hiking\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\"))) (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jared\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Marton\"))))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Aaron\"))))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Tell me what time the dog park event with Kay, Jay, Ray, and May is.",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dog park\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kay\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jay\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ray\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"May\")))))))))))"
  },
  {
    "original_sentence": "I want to book a 1-hour dinner outing with the parents on Monday evening.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I'd like to book a meeting with ann on the 5th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 5L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"ann\")))))))))))"
  },
  {
    "original_sentence": "Book the earlier one for me please.",
    "parse": "(Yield (Execute (ChooseCreateEvent (Earliest) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Book the first one please.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Yes that is correct.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have any calendar events for tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Please add a Volunteer Orientation at the San Francisco Botanical Garden for 10:30 AM on Tuesday. It will last an hour and a half.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Volunteer Orientation\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (HourMinuteAm 10L 30L))))) (Event.duration_? (?= (toHours (+ 1 0.5))))) (Event.location_? (?= (LocationKeyphrase.apply \"San Francisco Botanical Garden\")))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you add that I will need an hour of travel time to reach the volunteer orientation?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"volunteer orientation\")))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "No",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you add that I need to leave for the Volunteer Orientation an hour before it begins?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"leave for the Volunteer Orientation\")) (Event.start_? (?= (PeriodDurationBeforeDateTime (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "Can you make this from 9:30-10:30 as it will take me an hour to travel?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Ok.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please put that I need to leave for the volunteer orientation at 9:30 exactly, not 9:30 to 10:00.",
    "parse": "(let (x0 (NextTime (HourMinutePm 9L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"leave for the volunteer orientation\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 10L)))))))))"
  },
  {
    "original_sentence": "It is the same.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Ok.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What events do I have scheduled for Tuesday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you move both of these to Thursday?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "This is good.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to schedule time to go over paper work from 3 pm to 4 pm.",
    "parse": "(let (x0 (NextTime (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"go over paper work\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L)))))))))"
  },
  {
    "original_sentence": "Tomorrow at 8 schedule turn in paperwork.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"turn in paperwork\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Make that 8 PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "Can you create another appointment for next thursday around noon to have lunch with my wife?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Hi",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Find me good location for the spring season",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "What about California state climate?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"California state climate\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "it will be fine",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you put that I saw Jojo Siwa last Monday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (previousDayOfWeek (Today) (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jojo Siwa\")))))))))))"
  },
  {
    "original_sentence": "I want this to take up all of Monday August 19th.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (MD 19L (August))))))"
  },
  {
    "original_sentence": "I need to add that I had lunch with mom on the 20th.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Please add, lunch with Ailee Carns on the 20th of last month.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (previousMonthDay (Today) (Date.month (PeriodBeforeDate (Today) (toMonths 1))) 20L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ailee Carns\")))))))))))"
  },
  {
    "original_sentence": "select first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Move the meeting with Sarah and her manager to Friday instead of Wednesday.",
    "parse": "(let (x0 (PersonName.apply \"Sarah\") x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x1) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x1)) (Friday)))))))))"
  },
  {
    "original_sentence": "oh!ok!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Thanks, when is my next meeting with Sarah's manager?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\")))))))) 1L)))"
  },
  {
    "original_sentence": "ok thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "no, thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is the first thing I have going Friday?",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) 1L))"
  },
  {
    "original_sentence": "Great, what's the last thing happening on Friday?",
    "parse": "(Yield (FindLastEvent (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "How cold is it outside in Chicago",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Chicago\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "Do i need to wear a coat",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Will it rain today?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "I'm in Chicago",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"Chicago\")))))))"
  },
  {
    "original_sentence": "Will it rain in Chicago today?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Chicago\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "What time will it get dark in Chicago",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Will it be sunny during the day in Chicag",
    "parse": "(Yield (IsSunny (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Chicag\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "when is the next dinner date with alice?",
    "parse": "(Yield (Event.start (FindNumNextEvent (& (Event.subject_? (?~= \"dinner date\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"alice\"))))) 1L)))"
  },
  {
    "original_sentence": "Change the dinner timing to 8 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "yeah!thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "yeah!thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Delete the meeting I had scheduled with Thomas on Friday from 10 to 11 am",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (NextDOW (Friday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Thomas\")))) (NumberAM 10L) (NumberAM 11L)))))))))"
  },
  {
    "original_sentence": "change baby shower from Saturday to Sunday at 2 pm",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"baby shower\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Sunday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Make it be 1 hour.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "I want the baby shower to be 1 hour long.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Push the start time to 11 AM.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "Baby shower should begin at 11 AM.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "Give me the rating for Adanbertos in Folsom please",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Adanbertos in Folsom\"))))))"
  },
  {
    "original_sentence": "What's the rating on Thai 101 in Reno",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Thai 101 in Reno\"))))))"
  },
  {
    "original_sentence": "What is the rating of Pizza and Kabob in Folsom?",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Pizza and Kabob in Folsom\"))))))"
  },
  {
    "original_sentence": "Do I have any Events scheduled with Kyle within the next month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kyle\")))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))))))) 0L))"
  },
  {
    "original_sentence": "Whats the other event?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Cancel my meeting with Mark.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))))))))))"
  },
  {
    "original_sentence": "sang",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have a dinner party this weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner party\")) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend)))))"
  },
  {
    "original_sentence": "Find for",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is happening Monday morning at 8 am?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 8L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Hello. How is the weather in Berin today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Berin\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "How is the weather in Denver today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Denver\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "Will it snow in Colorado soon?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Will it snow in Colorado this week?",
    "parse": "(Yield (WillSnow (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Colorado\"))) (DateTime.date_? (ThisWeek)))))"
  },
  {
    "original_sentence": "What is the record temperatures in Chicago for 10/29/18?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "What is the chance of rain in Chicago tomorrow?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (rainPrecipProbability) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Chicago\"))) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "How hot is it in Brazil today?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Brazil\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "How hot is it in Brazil in Fahrenheit?",
    "parse": "(Yield (inFahrenheit (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Brazil\"))) (?= (Now))))))"
  },
  {
    "original_sentence": "How cold is Canada?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Canada\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "In Fahrenheit?",
    "parse": "(Yield (inFahrenheit (Execute (refer (extensionConstraint (^(Temperature) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Will it be sunny tomorrow in Kansas?",
    "parse": "(Yield (IsSunny (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Kansas\"))) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "Delete event \"my doctor's appointment\" next week",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"my doctor's appointment\")) (NextWeekList)))))))))"
  },
  {
    "original_sentence": "Set a new doctor's appointment for this Friday at 3 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"new doctor's appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Is there anything I have scheduled on Saturday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Ok. Schedule zoo with the kids at 10am.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Please create meeting on 1/1/19 from 1pm to 3pm",
    "parse": "(let (x0 (MDY 1L (toMonth 1L) (Year.apply 2019L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults x0 (NumberPM 1L)))) (Event.end_? (?= (DateAtTimeWithDefaults x0 (NumberPM 3L)))))))))"
  },
  {
    "original_sentence": "Can you add Lunch to January 2nd at 12 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 2L (January)) (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "Also add dinner for 7pm that day.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Can you tell me if I have anything planned for today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Agent do I have any birthday parties I went to last April?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"birthday parties\")) (FullMonthofPreviousMonth (April)))))) 0L))"
  },
  {
    "original_sentence": "Okay if I don't have a birthday party in April then did i have one in June?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"birthday party\")) (FullMonthofPreviousMonth (June)))))) 0L))"
  },
  {
    "original_sentence": "That was a fun party! Did I attend any weddings last January?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"wedding\")) (FullMonthofPreviousMonth (January)))))) 0L))"
  },
  {
    "original_sentence": "Work doesn't end until 4 tomorrow.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule Breakfast with Tom at 8 am tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Breakfast\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))))))))"
  },
  {
    "original_sentence": "Bop bop dippity",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "cancel the dinner with ben",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"ben\"))))))))))))"
  },
  {
    "original_sentence": "They watch the vultures on Tuesday.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to bake something at 9",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"bake something\")) (Event.start_? (?= (NextTime (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "Make it 9 pm not 9 am.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 9L)))))))"
  },
  {
    "original_sentence": "Looks good to me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Awesome",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you add eat something after bake something?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"eat something\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"bake something\"))))))))))))"
  },
  {
    "original_sentence": "I want to schedule Tea Party on July 29th at 3 pm. It will be with Alice, Jefferson, and Rook.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Tea Party\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 29L (July)) (NumberPM 3L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alice\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jefferson\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rook\"))))))))))))"
  },
  {
    "original_sentence": "Remove the event Tea Party with Damon, Alice and Jefferson",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Tea Party\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alice\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jefferson\")))))))))))))"
  },
  {
    "original_sentence": "When is the Tea Party?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Tea Party\")))))))"
  },
  {
    "original_sentence": "Invite Emma, Henry, and Peter.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emma\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Henry\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Peter\")))))))))))"
  },
  {
    "original_sentence": "Please change the end time to 6:00 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "Search for the date I am doing exams",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"exams\")))))))"
  },
  {
    "original_sentence": "create meeting with john on April 5",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (MD 5L (April))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"john\")))))))))))"
  },
  {
    "original_sentence": "the second one is good",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "OKAY.. FINE",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "cancel meeting with John",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))))"
  },
  {
    "original_sentence": "book 45 minutes book reading time tonight",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"book reading time\")) (Event.start_? (DateTimeConstraint (Night) (Today)))) (Event.duration_? (?= (toMinutes 45)))))))"
  },
  {
    "original_sentence": "Book the 8PM one please",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Add a 15 minute reminder to my dentist appointment today.",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Schedule a dentist appointment today for 3:00 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Make this appointment an hour long.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Change the date to Tuesday April 30th.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (MD 30L (April))))))))"
  },
  {
    "original_sentence": "Change the name to Root Canal",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"Root Canal\")))))"
  },
  {
    "original_sentence": "When is next week's one-on-one meeting with Barney?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (& (Event.isOneOnOne_? (?= true)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barney\"))))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))))))"
  },
  {
    "original_sentence": "is Barney's supervisor invited?",
    "parse": "(Yield (allows (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))) (Execute (refer (extensionConstraint (^((List Attendee)) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Can you invite him?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When do me and Frank meet next?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Frank\")))) 1L)))"
  },
  {
    "original_sentence": "Move my last event Friday afternoon to Monday morning at 7AM.",
    "parse": "(let (x0 (FindLastEvent (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) (Afternoon)))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Monday)) (NumberAM 7L))))))))"
  },
  {
    "original_sentence": "Move appoinment to a new day",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Please move my event to the last day of the week.",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "Please reschedule my appointment on Friday to the last day of next week.",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "Please reschedule my appointment on Friday to be after the the last event next week.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (?= (Event.end (FindLastEvent (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))))))"
  },
  {
    "original_sentence": "set up a meeting with both of David Crim's reports today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Today)))) (Event.attendees_? (AttendeeListHasPeople (FindReports (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David Crim\"))))))))))))"
  },
  {
    "original_sentence": "Delete all events for the weekend",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Actually, put walk in the park back on.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Schedule a meeting for next monday 3-5 with Brendon",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brendon\"))))))))))))"
  },
  {
    "original_sentence": "That looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete my meeting with Clendon Brendon today from 3:00",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 3L)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Clendon Brendon\"))))))))))))"
  },
  {
    "original_sentence": "Yes, please cancel that event.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make a meeting with Bob, Tom, and Tim regarding the forecast for third quarter and have it be on Monday at 8 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"regarding the forecast for third quarter\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 8L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\"))))))))))))"
  },
  {
    "original_sentence": "Change my office floor from 3 to 7.",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Hi can you create a meeting tomorrow on office floor 7 at 2pm thanks!",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.location_? (?= (LocationKeyphrase.apply \"office floor 7\")))))))"
  },
  {
    "original_sentence": "put meet with my family doctor",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"meet with my family doctor\")))))"
  },
  {
    "original_sentence": "The second one is fine. Add that I asked about my rash on my last meet with my family doctor a few months ago.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "My Dinner Date last Thursday was with Abigail, not Anna.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Thursday)) (Event.subject_? (?~= \"Dinner Date\"))))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abigail\")))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Anna\"))))))))))))"
  },
  {
    "original_sentence": "whats on my calendar tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "whatnext",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "could you please make a schedule for party on weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"party\")) (Event.start_? (DateTime.date_? (ThisWeekend)))))))"
  },
  {
    "original_sentence": "Yes, one of those will work",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need appointment for braces Wednesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"appointment for braces\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday)))))))))"
  },
  {
    "original_sentence": "I think 10 would be best",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "next party join with my friend",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "My meeting with Ben is on the 28th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 28L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ben\")))))))))))"
  },
  {
    "original_sentence": "When is my net staff meeting scheduled for?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"net staff meeting\")))))))"
  },
  {
    "original_sentence": "what about the strategy meeting?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"strategy meeting\")))))"
  },
  {
    "original_sentence": "good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Will do",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "when is the next peer review meeting?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"peer review meeting\")) 1L)))"
  },
  {
    "original_sentence": "What is the phone number for Benu in San Francisco?",
    "parse": "(Yield (Place.phoneNumber (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Benu in San Francisco\"))))))"
  },
  {
    "original_sentence": "what is the number for the Kabuki Spa in San Francisco?",
    "parse": "(Yield (Place.phoneNumber (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Kabuki Spa\"))))))"
  },
  {
    "original_sentence": "How about the phone number for Tonga Room in San Francisco?",
    "parse": "(Yield (Place.phoneNumber (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Tonga Room in San Francisco\"))))))"
  },
  {
    "original_sentence": "Walk with Janice tomorrow before lunch time.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Walk\")) (Event.start_? (OnDateBeforeTime (Tomorrow) (Lunch)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice\")))))))))))"
  },
  {
    "original_sentence": "Schedule it for 10:00 AM to 10:30 AM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))))))"
  },
  {
    "original_sentence": "tomorrow around breakfast time, im meeting with dave in bellevue",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTimeConstraint (?= (Breakfast)) (Tomorrow))) (Event.location_? (?= (LocationKeyphrase.apply \"bellevue\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"dave\")))))))))))"
  },
  {
    "original_sentence": "When is my next doctor's appointment?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"doctor's appointment\")) 1L)))"
  },
  {
    "original_sentence": "Okay, now can you add a meeting with Dennis and Craig for half an hour at 3 pm as well?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (NextTime (NumberPM 3L)))) (Event.duration_? (?= (toHours 0.5)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dennis\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Craig\"))))))))))))"
  },
  {
    "original_sentence": "Yes can you add Mike to the meeting?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mike\"))))))))))"
  },
  {
    "original_sentence": "looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "i want ta help?",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "I need to set a reminder that I have a dinner at 7 pm on Thursday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Can you change that to 8 pm please?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))) (intension (NumberPM 8L)))))"
  },
  {
    "original_sentence": "List my reports.",
    "parse": "(Yield (FindReports (toRecipient (CurrentUser))))"
  },
  {
    "original_sentence": "Set up a meeting with my reports.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasPeople (FindReports (toRecipient (CurrentUser))))))))"
  },
  {
    "original_sentence": "the first one looking good fix it",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Perfect thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Who are my reports",
    "parse": "(Yield (FindReports (toRecipient (CurrentUser))))"
  },
  {
    "original_sentence": "I need to delete an upcoming event.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))))"
  },
  {
    "original_sentence": "I need help managing my calendar",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "How many meetings do I have this week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"meetings\")) (ThisWeek))))"
  },
  {
    "original_sentence": "Do you mean that I have no event on my calendar this week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
  },
  {
    "original_sentence": "Schedule a meeting in Regards to yesterdays system issue at 8 am tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"meeting in Regards to yesterdays system issue\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Wonderful schedule a lunch at Koala Jeds at 11 tomorrow asl well.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Koala Jeds\")))))))"
  },
  {
    "original_sentence": "create an event next summer called slip and slide",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"slip and slide\")) (Event.start_? (DateTime.date_? (SeasonSummer)))))))"
  },
  {
    "original_sentence": "Yeah one of those works",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Yes can you please set an event starting tomorrow at 3pm for my dentist appointment?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Please move the tooth removal to not be on days that fall on the weekend.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"tooth removal\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Move the thing on my schedule called Banjo Lessons to not occur on the weekend.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Banjo Lessons\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Move the bomb breakfast lunch to not be on the weekend.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"bomb breakfast lunch\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "I don't have to go to my meeting tomorrow so I want to delete the event.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "What do you show on my schedule for Thursday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Create a marketing meeting on Friday from 10:15 to 11:15. Set work status to Tentative.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteAm 10L 15L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"marketing meeting\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinuteAm 11L 15L))))) (Event.showAs_? (?= (ShowAsStatus.Tentative))))))))"
  },
  {
    "original_sentence": "Please create a picnic this sunday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"picnic\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))))))"
  },
  {
    "original_sentence": "I want it to last all dday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.isAllDay_? (?= true)))))"
  },
  {
    "original_sentence": "Yes this looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What days are the festival?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"festival\")))))))"
  },
  {
    "original_sentence": "ok,but change the date as aug 30",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (MD 30L (August))))))))"
  },
  {
    "original_sentence": "what is the temperature today",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "detroit michigan",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"detroit michigan\")))))))"
  },
  {
    "original_sentence": "What is the temperature today in detroit",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"detroit\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "will it rain in detroit today",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"detroit\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "will it rain on Tuesday in detroit",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"detroit\"))) (DateTime.date_? (?= (NextDOW (Tuesday)))))))"
  },
  {
    "original_sentence": "will it rain on halloween in detroit",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"detroit\"))) (DateTime.date_? (?= (NextHolidayFromToday (Holiday.Halloween)))))))"
  },
  {
    "original_sentence": "My team meeting on Monday needs to be moved. I'd like it to be on the following Monday.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"team meeting\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (nextDayOfWeek (DateTime.date (Event.start x0)) (Monday)))))))))"
  },
  {
    "original_sentence": "I booked Conference Room B for us for that.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Conference Room B\"))))))"
  },
  {
    "original_sentence": "I want that marked as working elsewhere.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.showAs_? (?= (ShowAsStatus.WorkingElsewhere))))))"
  },
  {
    "original_sentence": "Actually, scratch that status.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.showAs_? (^(ShowAsStatus) AlwaysFalseConstraint)))))"
  },
  {
    "original_sentence": "Set up 3 hours next Friday for a writing session at Capitol Records in LA at 10:30 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"writing session\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteAm 10L 30L))))) (Event.duration_? (?= (toHours 3)))) (Event.location_? (?= (LocationKeyphrase.apply \"Capitol Records in LA\")))))))"
  },
  {
    "original_sentence": "Please put lunch with friends after writing session.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Can you add another Lunch with Friends the Friday after that from 1 til 2:30?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Hello. Can you add a meeting with Ashworth and Obama for Tuesday at 1?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 1L)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ashworth\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Obama\"))))))))))))"
  },
  {
    "original_sentence": "Yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Set up a meeting with Mark Andrews tomorrow. Schedule it for a room at Cambridge.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Cambridge\")) (roomRequest)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark Andrews\")))))))))))"
  },
  {
    "original_sentence": "Try the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Great! I also need a room this weekend with Abby",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (ThisWeekend))) (Event.location_? (roomRequest))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "Top one please",
    "parse": "(Yield (Execute (ChooseCreateEvent (TopResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule attend book club meeting tomorrow from 11am to 2 pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"attend book club meeting\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 2L)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Take off any meeting I have scheduled for the rest of the day.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Delete my 2pm meeting.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 2L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "wait a minute.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "yes delete that meeting",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete the one after as well.",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))))))))"
  },
  {
    "original_sentence": "Let me think about it.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Yes, cancel that.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "add staff meeting to next Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"staff meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "what is my schedule in this week",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
  },
  {
    "original_sentence": "Put on calendar trip to state capitol for prom pics on Saturday at 4:00 pm for 2 hours.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"trip to state capitol for prom pics\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 4L))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "That looks great, but can you change the end time to 5:30 so we have time to make dinner?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (HourMinutePm 5L 30L)))))))"
  },
  {
    "original_sentence": "That is great!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Is there a chance of thunderstorms during the trip to state capitol for prom pics?",
    "parse": "(Yield (IsStormy (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"trip to state capitol for prom pics\"))))))))"
  },
  {
    "original_sentence": "I want to buy a big tv. Can you help me?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "When is my shopping event?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"shopping\")))))))"
  },
  {
    "original_sentence": "1 hour long please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "I want it to be on June 15th actually.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (MD 15L (June))))))))"
  },
  {
    "original_sentence": "ok,no probiem",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Hi, I need to add an appointment for 23 April to my calendar.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (MD 23L (April))))))))"
  },
  {
    "original_sentence": "Schedule the second one and add John",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))))"
  },
  {
    "original_sentence": "That looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you, and can you add a quick Noah's Bagels meeting with Jocelyn on the day after at 9:30 am for 20 minutes?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Noah's Bagels meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (HourMinuteAm 9L 30L))))) (Event.duration_? (?= (toMinutes 20)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jocelyn\")))))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "can you search for a gym appointment?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"gym appointment\"))))"
  },
  {
    "original_sentence": "Schedule Going to Gym on Wednesday from 2:00 pm to 2:15.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Going to Gym\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 2L 15L)))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "That should be at 2 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule me a meeting at 4 pm with Kim.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))))))"
  },
  {
    "original_sentence": "I meant with Elli.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\"))))))"
  },
  {
    "original_sentence": "No",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "I would like to schedule the Meeting with Elli Parker on Wednesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli Parker\")))))))))))"
  },
  {
    "original_sentence": "Can you update with Bruce attending the meeting and not Elli?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bruce\")))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\"))))))))))))"
  },
  {
    "original_sentence": "Delete the luncheon planned for next week.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"luncheon\")) (NextWeekList)))))))))"
  },
  {
    "original_sentence": "My cat is cute.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "add this ending at 2",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "sad cat",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Need the cat cute if you think so if she is or no she isn't",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "may i help you",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "When is my next meeting with jhon",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jhon\")))) 1L)))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "not for this time",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Move my Canoe trip some later than my Yoga session Saturday please.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"Yoga session\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Canoe trip\")))))) (Event.start_? (OnDateAfterTime (DateTime.date (Event.start x0)) (DateTime.time (Event.end x0))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make it a full hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Can we start it a little earlier?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "The later one works best. Thanks!",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "create baseball game on monday at 5",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"baseball game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Hi Emily",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Change the time to 6pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "This looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ns",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Move my finance meeting to Tuesday and invite Larry.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"finance meeting\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Tuesday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Larry\"))))))))))))"
  },
  {
    "original_sentence": "Yes but please add Julie too.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Julie\"))))))))))"
  },
  {
    "original_sentence": "Can you make it marked as busy?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.showAs_? (?= (ShowAsStatus.Busy))))))"
  },
  {
    "original_sentence": "looks good. Change the ending time of the event to 5 PM.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "Hello, what is the weather going to be tomorrow?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "When is it going to rain again?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Is it going to be windy soon?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "How windy will it be tomorrow?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (windSpeed) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "Will it be colder next week?",
    "parse": "(Yield (< (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (NextWeekList)))) (toFahrenheit 32)))"
  },
  {
    "original_sentence": "Will it be over 90 tomorrow?",
    "parse": "(Yield (> (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))) (toFahrenheit 90)))"
  },
  {
    "original_sentence": "When will it cool down?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "I am done",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "create an event for this weekend with Scot",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (ThisWeekend))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scot\")))))))))))"
  },
  {
    "original_sentence": "yes second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "yes please add one coffee in '23",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"one coffee\")) (Event.start_? (DateTime.date_? (FullYearofYear (toFourDigitYear 23L))))))))"
  },
  {
    "original_sentence": "thanks for coffee",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.subject_? (?~= \"coffee\")) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what's on my calendar in 2023?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (DateTime.date_? (FullYearofYear (Year.apply 2023L))))))))"
  },
  {
    "original_sentence": "Will I be meeting the president in 2023?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "When is the end of the world in 2023?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"end of the world\")) (EventDuringRange (^(Event) EmptyStructConstraint) (FullYearofYear (Year.apply 2023L)))))))))"
  },
  {
    "original_sentence": "Change my departure time to 8PM tomorrow night please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"departure time\")))))) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "hang on a minute.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Yeah, that's gonna be correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "schedule a staff meeting on Monday at 7am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"staff meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 7L))))))))"
  },
  {
    "original_sentence": "Yea the time is perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please delete my staff meeting on the 23rd.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 23L) (Event.subject_? (?~= \"staff meeting\"))))))))))"
  },
  {
    "original_sentence": "wait a minute",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "aorry i forgot where i'm going tomorrow night",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Night)))))))"
  },
  {
    "original_sentence": "Create an event for a business meeting with a client at the Sunday of the 7th week of the year.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Dinner meeting at Michelle's 7pm tonight.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Dinner meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 7L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Michelle's\")))))))"
  },
  {
    "original_sentence": "No, call it dinner at michelle's.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^((Constraint String)) roleConstraint (Path.apply \"subject\")) (extensionConstraint (alwaysTrueConstraintConstraint (^(String) AlwaysTrueConstraint)))) (intension (?= \"dinner at michelle's\")))))"
  },
  {
    "original_sentence": "No, start at 6.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))) (intension (NumberPM 6L)))))"
  },
  {
    "original_sentence": "It wont end until 8PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "Let's add Jon",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jon\"))))))))))"
  },
  {
    "original_sentence": "I need to add the fourth of july parade at Burgess Park to my calendar and tell me the expected weather that day",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Is Sarah's birthday party tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"Sarah's birthday party\")))))) 0L))"
  },
  {
    "original_sentence": "Do I have a Dinner Date this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Dinner Date\")) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "where is the dinner is located",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\")))))))"
  },
  {
    "original_sentence": "Is Joanna going to the dinner?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joanna\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Do I leave for vacation on Saturday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"vacation\")))))) 0L))"
  },
  {
    "original_sentence": "hi, set up a meeting at starbucks in hemet, ca at 10 am thursday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberAM 10L)))) (Event.location_? (?= (LocationKeyphrase.apply \"starbucks in hemet, ca\")))))))"
  },
  {
    "original_sentence": "Go ahead and extend that meeting by 45 minutes.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toMinutes 45))))))))"
  },
  {
    "original_sentence": "What will the weather be like in Hemet for my meeting?",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (?= (LocationKeyphrase.apply \"Hemet\"))))))))"
  },
  {
    "original_sentence": "Are there any type of road closures or detours on the way to Starbucks?",
    "parse": "(FenceNavigation)"
  },
  {
    "original_sentence": "What is on the schedule thursday at 1600?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinuteMilitary 16L 0L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Do I have anything today after 1530?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (Today) (^(Event) EmptyStructConstraint) (HourMinuteMilitary 15L 30L))))) 0L))"
  },
  {
    "original_sentence": "Can we do dinner with Sarah at 1400",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (NextTime (HourMinuteMilitary 14L 0L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\")))))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cool, now can you add homework at 2300",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"homework\")) (Event.start_? (?= (NextTime (HourMinuteMilitary 23L 0L))))))))"
  },
  {
    "original_sentence": "When is my next meeting with Colin?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Colin\")))) 1L)))"
  },
  {
    "original_sentence": "Cancel that meeting with Colin and any other events with Colin.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "What is the address for my doctor's appointment today?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Add coffee with Abby, Kim, and Jake at 4 tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"coffee\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add lunch with Abby, Kim, and JEsse",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"JEsse\"))))))))))))"
  },
  {
    "original_sentence": "Looks good",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "\"Thank you! Please remind me of this event an hour prior\"",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "I will go on a date at May",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"date\")) (Event.start_? (DateTime.date_? (FullMonthofMonth (May))))))))"
  },
  {
    "original_sentence": "The second one is fine.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I have a race all day Saturday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"race\")) (NextDOW (Saturday))))))"
  },
  {
    "original_sentence": "Please modify the title to Horse Race",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"Horse Race\")))))"
  },
  {
    "original_sentence": "That looks good .",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "meet bob for lunch today at noon. email fred about 3pm meeting and dinner reservations",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Schedule a meeting with bob between 1-5pm for 45 minutes on friday",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTimeAndConstraint x0 (TimeAfterDateTime x0 (NumberPM 5L)))) (Event.duration_? (?= (toMinutes 45)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bob\"))))))))))))"
  },
  {
    "original_sentence": "Can you move relaxation this weekend to Saturday",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"relaxation\")) (ThisWeekend)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Saturday)))))))))"
  },
  {
    "original_sentence": "Yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add hospital orientation Friday at 8 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"hospital orientation\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "It will go until 4 PM.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "great, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I have a meeting on Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))))))"
  },
  {
    "original_sentence": "The 2nd one works great",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you set a time to play basketball with Kyle, Darian and James next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"play basketball\")) (Event.start_? (DateTime.date_? (NextWeekList)))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kyle\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Darian\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\"))))))))))))"
  },
  {
    "original_sentence": "great, do the one on the 19th",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (ClosestDay (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Day.apply 19L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Let's see if we can get together with Abby, Jake, and Kim",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"get together\")) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))))))"
  },
  {
    "original_sentence": "SOME HELPS",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "I would like to set up a meeting with David Lax and his team for Wednesday at 3pm.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David Lax\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 3L)))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindTeamOf x0)))))))))"
  },
  {
    "original_sentence": "Schedule a breakfast meeting with Dan Marton and Jake on Thursday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"breakfast meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday)))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Marton\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))))))))"
  },
  {
    "original_sentence": "Add Dan Marton and his team.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Marton\")))))) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindTeamOf x0))))))))"
  },
  {
    "original_sentence": "Add Jennifer Watts to the meeting.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer Watts\"))))))))))"
  },
  {
    "original_sentence": "schedule it for 10 am please",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Book a lunch meeting with Thomas tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Thomas\")))))))))))"
  },
  {
    "original_sentence": "The second one will work better for me.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Great, can you also book a counseling session on Thursday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"counseling session\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday)))))))))"
  },
  {
    "original_sentence": "Book the first one please.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you change the duration to 45 minutes though?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toMinutes 45))))))"
  },
  {
    "original_sentence": "Good,",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hey, can you check what I did with Molly two weeks ago?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (PeriodBeforeDate (Today) (toWeeks 2)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Molly\")))))))"
  },
  {
    "original_sentence": "schedule my meeting on sep 15th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (MD 15L (September))))))))"
  },
  {
    "original_sentence": "Cancel that and remind me what's this weekend?",
    "parse": "(do (DoNotConfirm) (Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend)))))"
  },
  {
    "original_sentence": "What about next weekend?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekend)))))"
  },
  {
    "original_sentence": "And the 19th?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDay (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Day.apply 19L)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "How about September 20?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (MD 20L (September)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "I have a birthday party Sunday at 5 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"birthday party\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "No. It's gonna last way longer than 30 minutes.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Schedule a meeting with Doug for tomorrow at 6pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Doug\")))))))))))"
  },
  {
    "original_sentence": "good, but make it an hour",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "can you arrange with 7:30 PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinutePm 7L 30L)))))))"
  },
  {
    "original_sentence": "Do I have any meetings this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Please create a calendar event for me for tomorrow at 11am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "Yes, what else I need to do that morning.",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction)) x1 (^(Dynamic) item x0)) (do (Yield x0) (Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id x1)))) (EventOnDateWithTimeRange (EventOnDate (DateTime.date (Event.start x1)) (^(Event) EmptyStructConstraint)) (Morning)))))))"
  },
  {
    "original_sentence": "Schedule a soccer match for Thursday at 9 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"soccer match\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "change the soccer match time at 9.30 am - 10.00 am",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (HourMinuteAm 9L 30L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Looks great. Is there anything happening that morning?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (DateTime.date (Event.start (^(Dynamic) item (Execute (^(Dynamic) ConfirmAndReturnAction))))) (^(Event) EmptyStructConstraint)) (Morning))))"
  },
  {
    "original_sentence": "I need to create an event for this Friday at 7pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"event\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Make sure to block out 5 to 6 of that night for \"Getting Ready\"",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 5L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Getting Ready\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 6L)))))))))"
  },
  {
    "original_sentence": "Create a sales meeting with Abby Gonano",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"sales meeting\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby Gonano\")))))))))))"
  },
  {
    "original_sentence": "The first one. Do I have any meetings with Jennifer Watts this week?",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer Watts\")))) (ThisWeek))))) 0L)))"
  },
  {
    "original_sentence": "please change that for me to an hour earlier",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (PeriodDurationBeforeDateTime (Event.start x0) (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "looks ggreaty",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "put meeting with ugenda",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"ugenda\"))))))))))"
  },
  {
    "original_sentence": "Delete the fundraising gala from my calendar this Sunday night",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"fundraising gala\"))) (Night)))))))))"
  },
  {
    "original_sentence": "no search for the other event",
    "parse": "(do (DoNotConfirm) (Yield (FindEventWrapperWithDefaults (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "socks bang",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What time is practice tonight?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"practice\"))) (Night)))))))"
  },
  {
    "original_sentence": "Can you create a new event for practice tomorrow evening?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"practice\")) (Event.start_? (DateTimeConstraint (Evening) (Tomorrow)))))))"
  },
  {
    "original_sentence": "I'll take the bottom one",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Cancel my dentist appointment tomorrow afternoon",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (Event.subject_? (?~= \"dentist appointment\"))) (Afternoon)))))))))"
  },
  {
    "original_sentence": "Schedule a dentist appointment tomorrow afternoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (DateTimeConstraint (Afternoon) (Tomorrow)))))))"
  },
  {
    "original_sentence": "Can you book us in a conference room in Bellevue by Thursday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday))))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Bellevue\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "Looks great",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks. You can book a room with NERD also",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.location_? (& (?= (LocationKeyphrase.apply \"NERD\")) (roomRequest))))))"
  },
  {
    "original_sentence": "Yes the Tuesday one",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you book the Tuesday one for the afternoon?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Tuesday)))))))"
  },
  {
    "original_sentence": "show me the calendar baaaaby",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Put a lunch date on Saturday 1 pm with Grayson",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch date\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Grayson\")))))))))))"
  },
  {
    "original_sentence": "can you update with the location?",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "ok change the lunch date at jul 28, sunday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (MD 28L (July))))))))"
  },
  {
    "original_sentence": "Change lunch date to 2:00PM.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Yes that's the right one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What do I have going on on Saturday",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "I meant Sunday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Add a discussion on Monday with Carlos, Steve, Brian, and Joe for 10 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"discussion\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carlos\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steve\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brian\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joe\"))))))))))))"
  },
  {
    "original_sentence": "Just have it end at noon.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (Noon)))))))"
  },
  {
    "original_sentence": "What time is the debate with Pete, Corey, Bernie and Joe?",
    "parse": "(Yield (DateTime.time (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"debate\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Pete\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Corey\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bernie\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joe\"))))))))))))"
  },
  {
    "original_sentence": "Can you replace Corey with Colin?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Corey\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Colin\")))))))))))"
  },
  {
    "original_sentence": "Yes please update.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please put a lunch date with my wife at Black Shoe Restaurant on my calendar for tomorrow at 6pm. Thanks!",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I have plans for lunch tomorrow at 6 PM with Mary at the Black Shoe Restaurant",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L))))) (Event.location_? (?= (LocationKeyphrase.apply \"the Black Shoe Restaurant\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\")))))))))))"
  },
  {
    "original_sentence": "Yeah, that looks right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add workout at YMCA on monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"workout\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))) (Event.location_? (?= (LocationKeyphrase.apply \"YMCA\")))))))"
  },
  {
    "original_sentence": "Yes please change biking to Friday at Green Loop",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"biking\")))))) (& (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))) (Event.location_? (?= (LocationKeyphrase.apply \"Green Loop\"))))))))"
  },
  {
    "original_sentence": "make meeting with robbinson tomorrow morning",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Morning) (Tomorrow))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"robbinson\")))))))))))"
  },
  {
    "original_sentence": "No, I don't like the times.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Create a draft party after the NFL Draft",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"draft party\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"NFL Draft\"))))))))))))"
  },
  {
    "original_sentence": "Make draft party at 1.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"draft party\")) (Event.start_? (?= (NextTime (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "Change the date to 4/25",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (MD 25L (toMonth 4L))))))))"
  },
  {
    "original_sentence": "No make the start time 4PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "move event forward 2 hours",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply :duration (toHours 2)))))))))"
  },
  {
    "original_sentence": "change appointment at aug 10 saturday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.date_? (?= (MD 10L (August))))))))"
  },
  {
    "original_sentence": "it's in the office",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.location_? (?= (LocationKeyphrase.apply \"the office\"))))))"
  },
  {
    "original_sentence": "Cancel dinner next week.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"dinner\")) (NextWeekList)))))))))"
  },
  {
    "original_sentence": "Yes. Change to breakfast.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"breakfast\")))))"
  },
  {
    "original_sentence": "Cancel all my meeting for next week.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I need to reschedule my meeting with John to the 17th at 11:30 am.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 17L)) (HourMinuteAm 11L 30L))))))))"
  },
  {
    "original_sentence": "That looks great. Do I have any meetings with Anne this month?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Anne\")))) (FullMonthofMonth (Date.month (Today)))))))"
  },
  {
    "original_sentence": "make an event on Saturday from 10 am to noon",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (Noon)))))))))"
  },
  {
    "original_sentence": "Oops - please add subject as Basketball Game",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"Basketball Game\")))))"
  },
  {
    "original_sentence": "now change the duration to 3 hours please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 3))))))"
  },
  {
    "original_sentence": "Yes, can you delete my appointment on Wednesday, from 2-3pm?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 2L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "yes it is",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule a workshop meeting sometime after 2 today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"workshop meeting\")) (Event.start_? (DateTimeConstraint (?> (NumberPM 2L)) (Today)))))))"
  },
  {
    "original_sentence": "second one please",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you make a new meeting all morning tomorrow?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Morning) (Tomorrow))))))"
  },
  {
    "original_sentence": "Meeting with Andrew at the coffee on Friday at 8pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 8L)))) (Event.location_? (?= (LocationKeyphrase.apply \"coffee\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Andrew\")))))))))))"
  },
  {
    "original_sentence": "good morning",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Will be snowing tomorrow?",
    "parse": "(Yield (WillSnow (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "create basketball game on tuesday at the rec center",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"basketball game\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))) (Event.location_? (?= (LocationKeyphrase.apply \"the rec center\")))))))"
  },
  {
    "original_sentence": "make this end at 9",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "It should be one hour long actually",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Yes that's good. What's the forecast?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (WeatherForEvent (^(Dynamic) item x0)))))"
  },
  {
    "original_sentence": "good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what is my next event",
    "parse": "(Yield (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L))"
  },
  {
    "original_sentence": "Delete \"going to the gym\" today",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"going to the gym\")))))"
  },
  {
    "original_sentence": "Do I have any gym time scheduled this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"gym time\")) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Move my Friday meeting to monday at 8am",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Monday)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Sure. Invite Trump to come too.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Trump\"))))))))))"
  },
  {
    "original_sentence": "Are there any meetings scheduled tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Do I have any phone conference meetings this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"phone conference meetings\")) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Who's coming?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Do I have a lunch meeting that same day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Event.subject_? (?~= \"lunch meeting\")))))) 0L))"
  },
  {
    "original_sentence": "Do I have a meeting Monday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Put lunch on my calendar for 1 pm Friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "Yup.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Have it last 1 hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you invite the whole office?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Remove my Team Games Practice with Cora and her manager from my calendar.",
    "parse": "(let (x0 (PersonName.apply \"Cora\")) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Team Games Practice\")) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add to my calendar on July 28th at 2 pm Financial Reports with Trevor and his supervisor.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Trevor\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Financial Reports\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 28L (July)) (NumberPM 2L))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "Please remove Trevor's supervisor from the event.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListExcludesRecipient (?= (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Trevor\"))))))))))))"
  },
  {
    "original_sentence": "Pencil in meeting with regional manager for next Friday morning.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "put dinner meeting with uvella",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner meeting\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"uvella\")))))))))))"
  },
  {
    "original_sentence": "wait let me ask her about her schedule",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Ok, can we make it for 7:30 pm?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinutePm 7L 30L)))))))"
  },
  {
    "original_sentence": "Plan for Thursday Oct. 4 at 7:30 PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (DateAtTimeWithDefaults (MD 4L (October)) (HourMinutePm 7L 30L)))))))"
  },
  {
    "original_sentence": "When am I to meet Steve on Monday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steve\"))))))))))"
  },
  {
    "original_sentence": "No, I want it to start at 3 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Yes, and add that it is about a raise.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.subject_? (?= \"raise\")))))"
  },
  {
    "original_sentence": "great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make an event for Thursday at 2pm for lunch",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "That looks good!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "change the time to 3pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "not bad",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Actually move lunch on Thursday to 2 hours earlier.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.subject_? (?~= \"lunch\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (PeriodDurationBeforeDateTime (Event.start x0) (PeriodDuration.apply :duration (toHours 2)))))))))"
  },
  {
    "original_sentence": "Please schedule a meeting on Monday with Jeong to go over the quarterly reports",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"go over the quarterly reports\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeong\")))))))))))"
  },
  {
    "original_sentence": "Meeting with Jeong on monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeong\")))))))))))"
  },
  {
    "original_sentence": "monday meeting with jeong",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jeong\")))))))))))"
  },
  {
    "original_sentence": "lunch with kristen on april 10th at 1:30",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 10L (April)) (HourMinutePm 1L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"kristen\")))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "meeting wade and cher march 31st at 4:30",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 31L (March)) (HourMinutePm 4L 30L)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"wade\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"cher\"))))))))))))"
  },
  {
    "original_sentence": "Good!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cancel lunch with Kristen",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kristen\"))))))))))))"
  },
  {
    "original_sentence": "cancel lunch with kristen on april 10th",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 10L (April)) (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"kristen\")))))))))))))"
  },
  {
    "original_sentence": "search meetings march 31st",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 31L (March)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "search lunch april 10th",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 10L (April)) (Event.subject_? (?~= \"lunch\")))))"
  },
  {
    "original_sentence": "conference call with janice and scott april 2nd",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"conference call\")) (Event.start_? (DateTime.date_? (?= (MD 2L (April)))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"janice\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"scott\"))))))))))))"
  },
  {
    "original_sentence": "conference with janice and scot april 2nd",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (MD 2L (April))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"janice\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"scot\"))))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "update meeting with janice and scot change time to 2:00",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"janice\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"scot\"))))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "change meeting with janice and scot to 2:00",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"janice\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"scot\"))))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "What's my upcoming appointment today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Who was Eric's boss again?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Eric\")))))))"
  },
  {
    "original_sentence": "Please make that appointment for 8PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "Nope make it for 7pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "Wait a second while I think.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Yeah that looks right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, what time did it end again?",
    "parse": "(Yield (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Can you move it to friday?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)))))))))"
  },
  {
    "original_sentence": "make an appointment with emiley",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"emiley\"))))))))))"
  },
  {
    "original_sentence": "cancel in my lunch time",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch time\")))))))))"
  },
  {
    "original_sentence": "check it on tuesday",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "On Tuesday, put down lunch at 12.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "change the lunch time at 12.30 pm - 1.00 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (HourMinutePm 12L 30L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "Find an event called \"wedding\" and delete it.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"wedding\")))))))))"
  },
  {
    "original_sentence": "No, actually delete the engagement party instead.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"engagement party\")))))"
  },
  {
    "original_sentence": "Yes delete the wedding.",
    "parse": "(Yield (Execute (ConfirmDeleteAndReturnAction (Event.subject_? (?~= \"wedding\")))))"
  },
  {
    "original_sentence": "No, it is not. Delete the event just right before the Wedding.",
    "parse": "(let (x0 (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Wedding\"))))))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateBeforeTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))))))))"
  },
  {
    "original_sentence": "yes i want to cancel this apppointment",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hi, please set up a walk in the park for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"walk\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.location_? (?= (LocationKeyphrase.apply \"park\")))))))"
  },
  {
    "original_sentence": "YES, THE FIRST OPTION SUITS ME HELP ME FIX IT",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks for your work",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Change the location to Brick City Adventure Park.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Brick City Adventure Park\"))))))"
  },
  {
    "original_sentence": "Add concert this Saturday with Kelly, Michelle, Summer and Mariah.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"concert\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kelly\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Michelle\"))))))) (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Summer\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mariah\")))))))))))))"
  },
  {
    "original_sentence": "Replace Summer with Autumn.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Summer\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Autumn\")))))))))))"
  },
  {
    "original_sentence": "The afternoon one on Saturday looks good.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (& (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday)))) (DateTime.time_? (Afternoon)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks, do I have anything with Kim, Lilly and Tara coming up?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lilly\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tara\")))))))) 0L))"
  },
  {
    "original_sentence": "Could you move the time of my Training to be at 4 pm?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Training\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Actually, I meant the seminar.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (Event.subject_? (?~= \"seminar\")))))"
  },
  {
    "original_sentence": "Yessir, or ma'am, thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you move Dog watch from Tuesday to Sunday?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"Dog watch\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Sunday)))))))))"
  },
  {
    "original_sentence": "oops I meant cat watch",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (Event.subject_? (?~= \"cat watch\")))))"
  },
  {
    "original_sentence": "Yes thank you!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please make my bbq last 4 hours",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"bbq\")))))) (Event.duration_? (?= (toHours 4))))))"
  },
  {
    "original_sentence": "No wait I meant my lecture series",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.subject_? (?= \"lecture series\")))))"
  },
  {
    "original_sentence": "I need you to schedule a pulmonologist appointment with Dr. Smith next Friday around 2 PM and also I need an an appointment the next day to get my hair done at 3 PM.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I need both of those appointments to be at least an hour long.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Can you accept my meeting on Monday in the morning with Abby.",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))) (EventOnDateWithTimeRange (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)) (Morning)))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "THANKS OK",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "when i have appointment with mary today ?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"mary\"))))))))))"
  },
  {
    "original_sentence": "Ok thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "it's enough for me okay",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have a doctors appointment on Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"doctors appointment\")))))) 0L))"
  },
  {
    "original_sentence": "Can you see if I have something scheduled after that?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)))))"
  },
  {
    "original_sentence": "Do I have any meetings on Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Well do I have any the next day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Are there events on Saturday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Update my Put Put Tournament with Jesse, Jake and Kim to be on Friday",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Tournament\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)))))))))"
  },
  {
    "original_sentence": "I need an additional meeting with Kim, Jake, and Jesse",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"additional meeting\")) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\"))))))))))))"
  },
  {
    "original_sentence": "I need a Skee-Ball game with Abby, Jake, and Kim",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Skee-Ball game\")) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))))))"
  },
  {
    "original_sentence": "When is Easter Monday?",
    "parse": "(Yield (NextHolidayFromToday (Holiday.EasterMonday)))"
  },
  {
    "original_sentence": "What are my events for this weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "What about for Friday?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Friday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "What about for this coming Monday?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Where is the appointment located?",
    "parse": "(Yield (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "add location as Bellevue Square",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Bellevue Square\"))))))"
  },
  {
    "original_sentence": "On February 29th what is my third event listed",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (MD 29L (February)) (^(Event) EmptyStructConstraint)) 3L))"
  },
  {
    "original_sentence": "whats the name of my third event on Feb 29th",
    "parse": "(Yield (Event.subject (FindNumNextEvent (EventOnDate (nextMonthDay (Today) (February) 29L) (^(Event) EmptyStructConstraint)) 3L)))"
  },
  {
    "original_sentence": "Where is my third event on February 29th happening?",
    "parse": "(Yield (Event.location (FindNumNextEvent (EventOnDate (nextMonthDay (Today) (February) 29L) (^(Event) EmptyStructConstraint)) 3L)))"
  },
  {
    "original_sentence": "Can you schedule a date with Janice Kang next Friday at 2pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"date\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice Kang\")))))))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Change it to 3pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Cancel my doctor's appointment next Monday and reschedule it for next month on the 15th at 2pm and then schedule me to pick up Katie afterwards from 3-4pm",
    "parse": "(let (x0 (MD 15L (NextMonth)) x1 (DateAtTimeWithDefaults x0 (NumberPM 3L))) (do (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"doctor's appointment\"))))))) (Event.start_? (?= (DateAtTimeWithDefaults x0 (NumberPM 2L))))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"pick up Katie\")) (Event.start_? (?= x1))) (Event.end_? (?= (TimeAfterDateTime x1 (NumberPM 4L))))))))))"
  },
  {
    "original_sentence": "very good job I think all excellent",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I want to make a meeting on February 22nd in the Conference Center on main street at 1 pm followed by a dinner with Frank at 5 pm.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Can you change the location of my date to be in San Francisco?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"date\")))))) (Event.location_? (?= (LocationKeyphrase.apply \"San Francisco\"))))))"
  },
  {
    "original_sentence": "ok good work. Also what else do I have there?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction)) x1 (^(Dynamic) item x0)) (do (Yield x0) (Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id x1)))) (Event.location_? (?= (Event.location x1))))))))"
  },
  {
    "original_sentence": "Where is my Get Coffee event located?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Get Coffee\")))))))"
  },
  {
    "original_sentence": "Is there anything else happening at Central Perk?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Central Perk\"))))))) 0L))"
  },
  {
    "original_sentence": "When will the Birthday Party at Bounce A Palooza start?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Birthday Party\")) (Event.location_? (?= (LocationKeyphrase.apply \"Bounce A Palooza\")))))))))"
  },
  {
    "original_sentence": "Do i have anything else there?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id x0)))) (Event.location_? (?= (Event.location x0))))))) 0L)))"
  },
  {
    "original_sentence": "Can you please get rid of the meeting I have set with June on Saturday?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"June\")))) (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "Can you book my check-in with Liara's boss on Wednesday at 4pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Liara\"))))))))))))"
  },
  {
    "original_sentence": "change the meeting at 1pm today to noon",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 1L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (Noon)))))))"
  },
  {
    "original_sentence": "change the meeting time on sunday",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Make a new event on Monday at 2pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Can not Isla Bonita today?",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Nooooooooooooo",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Did I accept Abby's meeting invitation?",
    "parse": "(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Abby's meeting\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Did I accept the lunch with Abby?",
    "parse": "(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "How did I respond to the swim meet invitation?",
    "parse": "(Yield (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"swim meet\")))))))"
  },
  {
    "original_sentence": "Set up coffee with Kate for tomorrow at 3:15 PM at Starbucks.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"coffee\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 3L 15L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Starbucks\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kate\")))))))))))"
  },
  {
    "original_sentence": "Thanks, set up a dinner with my parents at Jax in Glendale Saturday night at 8 PM.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceAttendee))"
  },
  {
    "original_sentence": "Please put engagement party in the Fall",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"engagement party\")) (Event.start_? (DateTime.date_? (SeasonFall)))))))"
  },
  {
    "original_sentence": "Yes. Do I have any events this spring?",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (SeasonSpring)))))"
  },
  {
    "original_sentence": "Have this event go from 11:00 AM until 12:00 PM.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) x1 (DateAtTimeWithDefaults (DateTime.date (Event.start x0)) (NumberAM 11L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (NumberPM 12L)))))))))"
  },
  {
    "original_sentence": "that looks great to me",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make the Appointment on April 4 at 11:00 am 1.5 hours long.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (MD 4L (April)) (NumberAM 11L)) (^(Event) EmptyStructConstraint)))))) (Event.duration_? (?= (toHours 1.5))))))"
  },
  {
    "original_sentence": "Set Dr appointment for next Tuesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dr appointment\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))))))"
  },
  {
    "original_sentence": "It should be an hour long from 2 to 3",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (& (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 3L))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "No, it needs to be on tuesday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Tuesday))))))))"
  },
  {
    "original_sentence": "Almost, can you add Joe's office as the location?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Joe's office\"))))))"
  },
  {
    "original_sentence": "One more thing, add 15 minutes to the appointment.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (addDurations (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint)))) (toMinutes 15)))))))"
  },
  {
    "original_sentence": "Do I have anything on my calendar between April 15th and May 3rd that's longer than 30 minutes where my status is \"Out of Office\"?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (& (Event.duration_? (?> (toMinutes 30))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))) (EventDuringRange (^(Event) EmptyStructConstraint) (DateAndConstraint (MD 15L (April)) (MD 3L (May)))))))) 0L))"
  },
  {
    "original_sentence": "Strange time for a dinner date. Okay, how does that month look? What do I have scheduled that's more than 40 minutes?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.duration_? (?> (toMinutes 40))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "Make a meeting with Tony for Friday at 4:30 PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 4L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tony\")))))))))))"
  },
  {
    "original_sentence": "extend it to 5.30 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (HourMinutePm 5L 30L)))))))"
  },
  {
    "original_sentence": "looks perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "great thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have anything scheduled with Susan?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Susan\"))))))) 0L))"
  },
  {
    "original_sentence": "Does Saki in St. Martin have a full bar?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Saki in St. Martin\"))))))"
  },
  {
    "original_sentence": "does moody's in waltham have a bar?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"moody's in waltham\"))))))"
  },
  {
    "original_sentence": "Does Adanbertos in Folsom have a full bar?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Adanbertos in Folsom\"))))))"
  },
  {
    "original_sentence": "I need a meeting with Bubo on Thursday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bubo\")))))))))))"
  },
  {
    "original_sentence": "hold on a second",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Let's go with the one in the afternoon.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (Afternoon))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "wait a second",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Yep, that looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "change the time for meeting with bubo boggins at 1.30 pm - 2.00 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bubo boggins\")))))))) (& (Event.start_? (DateTime.time_? (?= (HourMinutePm 1L 30L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "not sure, hold on",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Yes, make it happen",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule a wrestling match with Brock tomorrow at 10 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"wresting match\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 10L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brock\")))))))))))"
  },
  {
    "original_sentence": "I meant basketball",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"basketball\")))))"
  },
  {
    "original_sentence": "Good. I meant for 10 PM.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 10L)))))))"
  },
  {
    "original_sentence": "What events do I have that are over an hour long on Saturday",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.duration_? (?> (toHours 1))) (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "I meant equal to or longer than one hour",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?>= (toHours 1))))))"
  },
  {
    "original_sentence": "When will the excecutive meeting be?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"excecutive meeting\")))))))"
  },
  {
    "original_sentence": "when i have meeting with jhon this week?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jhon\")))) (ThisWeek)))))))"
  },
  {
    "original_sentence": "Change \"Meeting with Jhon\" on Thursday to 6:17 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.subject_? (?~= \"Meeting with Jhon\"))))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 6L 17L)))))))"
  },
  {
    "original_sentence": "This looks great, can you add Randall to the meeting however",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Randall\"))))))))))"
  },
  {
    "original_sentence": "its ok no problem",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "shecule the timing on tomorrow meetng",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "The first one works well",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Find 7 minutes on Thursday to Wipe Down Desk.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Wipe Down Desk\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday)))))) (Event.duration_? (?= (toMinutes 7)))))))"
  },
  {
    "original_sentence": "The first one works well",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you find 7 minutes to add to the time?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toMinutes 7))))))))"
  },
  {
    "original_sentence": "What is on my schedule for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Where am I going hiking and who am I going with?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "What's on my plate for Tuesday afternoon?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) (Afternoon))))"
  },
  {
    "original_sentence": "Delete my first event.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 1L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you also show me what I have scheduled on the 7th of September?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 7L (September)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Reschedule my third appointment to be on the 9th, not the 7th.",
    "parse": "(let (x0 (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 3L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 9L)))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What time is drinks with Ivory on Saturday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ivory\")))) (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"drinks\")))))))))"
  },
  {
    "original_sentence": "Add Ariane to that.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ariane\"))))))))))"
  },
  {
    "original_sentence": "That's good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I would like to know if the cheesecake factory in charlotte has a full bar",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"cheesecake factory in charlotte\"))))))"
  },
  {
    "original_sentence": "Does Thai 101 in Reno have a bar?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Thai 101 in Reno\"))))))"
  },
  {
    "original_sentence": "Does Pizza and Kabob in Folsom have a full bar?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Pizza and Kabob in Folsom\"))))))"
  },
  {
    "original_sentence": "Hi! My name is Damon Streeter and I would like to cancel my dinner tomorrow evening with Jimmy, Sam, and Kurt",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jimmy\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kurt\"))))) (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (Event.subject_? (?~= \"dinner\"))) (Evening))))))))))"
  },
  {
    "original_sentence": "Create a team lunch with Jesse, Jennifer, Jake, Kim, Elli.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team lunch\")) (Event.attendees_? (& (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\"))))))))))))"
  },
  {
    "original_sentence": "Let's go with the 28th. On that note, I need to reschedule the meeting with Jesse, Kyle, and Robin which was scheduled for that day.",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.day_? (?= (Day.apply 28L))))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kyle\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Robin\"))))))))) (EventRescheduled (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "create basketball game on monday at 3",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"basketball game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "look well",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "appointment with jose at wednesday 2 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jose\")))))))))))"
  },
  {
    "original_sentence": "I'm hungry.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "create arm wrestling contest on saturday at 8",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"arm wrestling contest\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create an event celebrating @2020Resolutions at the office January 10th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"celebrating @2020Resolutions\")) (Event.start_? (DateTime.date_? (?= (MD 10L (January)))))) (Event.location_? (?= (LocationKeyphrase.apply \"the office\")))))))"
  },
  {
    "original_sentence": "No. Invite my team to a new event called #TeamMeetingEverybody",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"#TeamMeetingEverybody\")) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "change the time for teammeetingeverygody at 10.30 am - 11.00 am",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (HourMinuteAm 10L 30L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "what's coming up for me?",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Set a picnic to the Eiffel tower next week beginning Monday next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"picnic\")) (Event.start_? (DateTime.date_? (?= (DowOfWeekNew (Monday) (NextWeekList)))))) (Event.location_? (?= (LocationKeyphrase.apply \"the Eiffel tower\")))))))"
  },
  {
    "original_sentence": "The 1 pm works. What is the temperature going to be?",
    "parse": "(let (x0 (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint))))) (do (Yield x0) (Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherForEvent (^(Dynamic) item x0))))))"
  },
  {
    "original_sentence": "What time is my doctors appointment Friday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"doctors appointment\"))))))))"
  },
  {
    "original_sentence": "Set up a 1 hour Tour of the Golden Gate Bridge tomorrow at 1 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Tour of the Golden Gate Bridge\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Yes looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I would like to block off 3 hours tomorrow at 7:30 pm for a basketball game at the American Airlines Center.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"basketball game\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 7L 30L))))) (Event.duration_? (?= (toHours 3)))) (Event.location_? (?= (LocationKeyphrase.apply \"American Airlines Center\")))))))"
  },
  {
    "original_sentence": "At 6 pm I have a dinner before the game.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (NextTime (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "Set up hedge fund tactics tomorrow at 3.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"hedge fund tactics\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "ok sure i will let you know",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Create a new appointment for May 30 at 3 pm for a doctor's appointment.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 30L (May)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "I'm sorry, I need to have hit go from 3:00 to 4:30pm just to be safe please.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) x1 (DateAtTimeWithDefaults (DateTime.date (Event.start x0)) (NumberPM 3L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (HourMinutePm 4L 30L)))))))))"
  },
  {
    "original_sentence": "At 7 tonight schedule dinner with mom.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Please change the dinner with mom from 7 PM to 8 PM.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "it's all very covered thank you very much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a \"staff meeting\" with Moira",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"staff meeting\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Moira\")))))))))))"
  },
  {
    "original_sentence": "Take Moira off the meeting list and rename it \"Prep Meeting\".",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.subject_? (?= \"Prep Meeting\")) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Moira\"))))))))))))"
  },
  {
    "original_sentence": "fix the first one on calender",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Schedule comedy hour with Erin tonight at 7 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"comedy hour\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 7L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Erin\")))))))))))"
  },
  {
    "original_sentence": "Whoops, I meant to schedule laundry then, without Erin obviously",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.subject_? (?= \"laundry\")) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Erin\"))))))))))))"
  },
  {
    "original_sentence": "Why didn't Mom come to my birthday party?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "ok, which flight reservations are available next year to the Bahamas",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "What airlines fly to Bahamas?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "make a meeting with jack tomorrow morning 9.00 to 10.00 am",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 10L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jack\"))))))))))))"
  },
  {
    "original_sentence": "Will I have enough pens for tomorrow's craft session?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "cancel bae time we broke up :'(",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"bae time\")))))))))"
  },
  {
    "original_sentence": "omg she texted me back dont cancel!!!!!",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "What will the weather be like tomorrow evening for my dinner party?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner party\")))))))) (DateTimeConstraint (Evening) (Tomorrow))))"
  },
  {
    "original_sentence": "What is the weather supposed to be like during lunch tomorrow?",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"lunch\"))))))))"
  },
  {
    "original_sentence": "Will it rain for tuesdays luncheon?",
    "parse": "(Yield (WillRain (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"luncheon\")))))))))"
  },
  {
    "original_sentence": "Schedule a new event with Anderson Daws and his team",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Anderson Daws\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindTeamOf x0))))))))"
  },
  {
    "original_sentence": "Yes anytime that morning is fine, now find a time for Garth and his team.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Garth\")))))) (do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (Morning))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindTeamOf x0)))))))))"
  },
  {
    "original_sentence": "Let's put the first option on the books.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Perfect thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a budget meeting with John and his team on Tuesday afternoon.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"budget meeting\")) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Tuesday))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindTeamOf x0)))))))))"
  },
  {
    "original_sentence": "Who has not tenatively accepted the invite to the Baseball Game?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Baseball Game\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "who has not declined that",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Who has not Accepted the Dentist Appointment",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Dentist Appointment\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "WHO IS THE MANAGER OF LISA",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"LISA\")))))))"
  },
  {
    "original_sentence": "When is the next meeting with Dan?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan\")))) 1L)))"
  },
  {
    "original_sentence": "When am I meeting Harry Havil?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harry Havil\")))))))))"
  },
  {
    "original_sentence": "Who is Harry's main supervisor?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harry\")))))))"
  },
  {
    "original_sentence": "put meeting with trump",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"trump\"))))))))))"
  },
  {
    "original_sentence": "Show me my latest events for today",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "I'm eating dinner with family Saturday at 6.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "On sunday add 2 hours to clean closets at 2pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"clean closets\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 2L))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "Is there anything on my calendar for January 1?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 1L (January)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Set my status on January 1 to out of office.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (MD 1L (January)))))))"
  },
  {
    "original_sentence": "change my gym time from 10am to 3pm on monday the 7th of march",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberAM 10L)) (Event.subject_? (?~= \"gym time\"))))))) (Event.start_? (?= (DateAtTimeWithDefaults (MD 7L (March)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "That is correct, but the duration should be one hour.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Please let me know if any of my event run into February by showing a \"working elsewhere\" notification",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.showAs_? (?= (ShowAsStatus.WorkingElsewhere))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (February))))))"
  },
  {
    "original_sentence": "So what do I have this Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Okay what about the weekend?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend)))))"
  },
  {
    "original_sentence": "O could I join the Sales & Coffee Meeting.",
    "parse": "(Yield (joinEventCommand (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Sales & Coffee Meeting\"))))))))"
  },
  {
    "original_sentence": "Update the event that I have at 10 am",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "put dinner date with liola",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner date\")) (Event.attendees_? (AttendeeListHasRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"liola\")))))))))"
  },
  {
    "original_sentence": "Speckled Diaper Goose",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "It's a dinner date, come on friend. Set the time for 7 PM on Tuesday, sheesh.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "Donut sprinkles don't care",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "How long is the awards banquet next month?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"awards banquet\")) (FullMonthofMonth (NextMonth))))))))"
  },
  {
    "original_sentence": "What about my quota meeting for next month?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.subject_? (?~= \"quota meeting\")) (FullMonthofMonth (NextMonth))))))"
  },
  {
    "original_sentence": "And the basketball pick up game?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"basketball pick up game\")))))"
  },
  {
    "original_sentence": "What time does it start?",
    "parse": "(Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "How many events do I have with Karl this week?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karl\")))) (ThisWeek))))))"
  },
  {
    "original_sentence": "Did my boss organize the Performance?",
    "parse": "(Yield (== (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Performance\")))))) (FindManager (toRecipient (CurrentUser)))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "did my supervisor put together the event on may 21st?",
    "parse": "(Yield (== (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 21L (May)) (^(Event) EmptyStructConstraint)))))) (FindManager (toRecipient (CurrentUser)))))"
  },
  {
    "original_sentence": "Defer my breakfast with dad to next Monday.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "add breakfast with dad on Monday",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Do I have meetings with George?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"George\"))))))) 0L))"
  },
  {
    "original_sentence": "Okay, I see, can you please add a meeting with George for next Tuesday from 1 to 1:45 pm?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 1L 45L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"George\"))))))))))))"
  },
  {
    "original_sentence": "add some additional information about regarding of the meeting",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "The comiccon is from the 14th to the 17th",
    "parse": "(let (x0 (nextDayOfMonth (Today) 14L)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"comiccon\")) (DateAndConstraint x0 (nextDayOfMonth x0 17L)))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I will be in Kirkland tomorrow for 3 days",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.location_? (?= (LocationKeyphrase.apply \"Kirkland\"))) (Tomorrow) (toDays 3)))))"
  },
  {
    "original_sentence": "That works.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I'm going to be in Denver the first four days of next week, please mark this on. the calendar.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.location_? (?= (LocationKeyphrase.apply \"Denver\"))) (adjustByPeriod (Today) (toWeeks 1)) (toDays 4)))))"
  },
  {
    "original_sentence": "Can you set up a 1 on 1 with Barack Obama tomorrow?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.isOneOnOne_? (?= true))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\")))))))))))"
  },
  {
    "original_sentence": "Looks good. Thanks",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please cancel my upcoming meeting with Cecelia Waller",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cecelia Waller\")))))))))))"
  },
  {
    "original_sentence": "Cancel my meeting with Barack Obama",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\")))))))))))"
  },
  {
    "original_sentence": "Set up a team meeting at 12PM tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you extend the team meeting for 1 hr",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"team meeting\")))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "move my Monday 11 am to Monday 1 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 11L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "cancel my 9 pm",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 9L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "4PM today is quitting time.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"quitting time\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "You got it right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I am I have a soccer game I need to schedule from 5 to 6 pm next tuesday.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 5L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"soccer game\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 6L)))))))))"
  },
  {
    "original_sentence": "cancel the sports events on calender",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Cancel my all day field day event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"field day\")) (Event.isAllDay_? (?= true))))))))))"
  },
  {
    "original_sentence": "Can you reschedule if for all day the next week?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (DateTime.date_? (?= (adjustByPeriod (DateTime.date (Event.start x0)) (toWeeks 1))))) (Event.isAllDay_? (?= true)))))))"
  },
  {
    "original_sentence": "Yes. When is my next all day fishing trip?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (Event.start (FindNumNextEvent (& (Event.subject_? (?~= \"fishing trip\")) (Event.isAllDay_? (?= true))) 1L))))"
  },
  {
    "original_sentence": "Change it to be all day on the 30th.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (DateTime.date_? (?= (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 30L))))) (Event.isAllDay_? (?= true)))))))"
  },
  {
    "original_sentence": "Does Napa Sonoma in Reno have waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Napa Sonoma in Reno\"))))))"
  },
  {
    "original_sentence": "Does PHO 777 in Reno have waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"PHO 777 in Reno\"))))))"
  },
  {
    "original_sentence": "are there waiters at harvest beat in seattle?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"harvest beat in seattle\"))))))"
  },
  {
    "original_sentence": "Create an event with the name of \"Mark\" on Friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Mark\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "The 2nd one is good.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "make me an event called \"baby baby\" for June 6th please.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"baby baby\")) (Event.start_? (DateTime.date_? (?= (MD 6L (June)))))))))"
  },
  {
    "original_sentence": "yup!",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Update baby baby to December 26.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"baby baby\")))))) (Event.start_? (DateTime.date_? (?= (MD 26L (December))))))))"
  },
  {
    "original_sentence": "What do I have after work today?",
    "parse": "(let (x0 (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"work\")))))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)))))"
  },
  {
    "original_sentence": "Change the time on the second one to 7 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "That is correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you show me my scheduled appointments for the 25th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 25L) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you rename the first one Meet with Sales Committee?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 1L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Event.subject_? (?= \"Meet with Sales Committee\")))))"
  },
  {
    "original_sentence": "What's the second thing I have to do on Monday morning?",
    "parse": "(Yield (FindNumNextEvent (EventOnDateWithTimeRange (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)) (Morning)) 2L))"
  },
  {
    "original_sentence": "What is my second event in april?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (April))) 2L))"
  },
  {
    "original_sentence": "What is my second event in April of 2021?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (April) (Year.apply 2021L))) 2L))"
  },
  {
    "original_sentence": "Who am I meeting at 4 on the 28th?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (nextDayOfMonth (Today) 28L) (NumberPM 4L)) (^(Event) EmptyStructConstraint)))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "How long is the staff meeting tomorrow schedule for?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"staff meeting\"))))))))"
  },
  {
    "original_sentence": "How long is my meeting with Karen next week?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\")))) (NextWeekList)))))))"
  },
  {
    "original_sentence": "What about with Micah?",
    "parse": "(Yield (PersonWithNameLike (Execute (NewClobber (refer (^((Constraint Person)) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (^(Recipient) EmptyStructConstraint)))) (PersonName.apply \"Micah\")))"
  },
  {
    "original_sentence": "When do I have to go to the dentist?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist\")))))))"
  },
  {
    "original_sentence": "Next week I'll be working elsewhere for business but I doubt I'll get anything done, but still schedule a lunch meeting at 1 pm on I guess Tuesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (DowOfWeekNew (Tuesday) (NextWeekList)) (NumberPM 1L))))) (Event.showAs_? (?= (ShowAsStatus.WorkingElsewhere)))))))"
  },
  {
    "original_sentence": "There was a birthday party that I meant to put on the calendar but I'm not entirely sure I actually did. Find it for me.",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"birthday party\"))))"
  },
  {
    "original_sentence": "Oh okay. I guess I didn't put it on the calendar, so add Jim's birthday party on the 27th from 5 pm to 10 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (nextDayOfMonth (Today) 27L) (NumberPM 5L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Jim's birthday party\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 10L)))))))))"
  },
  {
    "original_sentence": "Mark me as unreachable and out of the office on May 3rd-5th for a Graduation Party.",
    "parse": "(let (x0 (MD 3L (May))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (& (Event.subject_? (?= \"Graduation Party\")) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))) (DateAndConstraint x0 (nextDayOfMonth x0 5L)))))))"
  },
  {
    "original_sentence": "Yes looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "That looks amazing! I also will be in COCAOS for 3 days starting the 17th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.location_? (?= (LocationKeyphrase.apply \"COCAOS\"))) (nextDayOfMonth (Today) 17L) (toDays 3)))))"
  },
  {
    "original_sentence": "make it for the 18th instead please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDay (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Day.apply 18L))))))))"
  },
  {
    "original_sentence": "It was a good deal.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is the forecast for next week in 48089",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"48089\"))) (DateTime.date_? (NextWeekList))))"
  },
  {
    "original_sentence": "Will it rain",
    "parse": "(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "What is the weather today in 48089",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"48089\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "When will the sunset?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunsetTime) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "Hello. Do I have anything to do today? Do I meet with John tomorrow morning?",
    "parse": "(do (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L)) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))) (Morning))))) 0L)))"
  },
  {
    "original_sentence": "Is there a Friday that I'm ever free in the evening?",
    "parse": "(FenceAggregation)"
  },
  {
    "original_sentence": "What time is the soccer game this weekend?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"soccer game\")) (ThisWeekend)))))))"
  },
  {
    "original_sentence": "What time does it get over with?",
    "parse": "(Yield (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Cancel the conference call on Thursday after lunch",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (NextDOW (Thursday)) (Event.subject_? (?~= \"conference call\")) (Lunch)))))))))"
  },
  {
    "original_sentence": "yes cancel this",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "good!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I also need to cancel my fundraising meeting?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"fundraising meeting\")))))))))"
  },
  {
    "original_sentence": "I meant fundraising festival.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"fundraising festival\")))))"
  },
  {
    "original_sentence": "When am I first meeting Linda",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Linda\")))) 1L)))"
  },
  {
    "original_sentence": "When is the next meeting with Charlie?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Charlie\")))) 1L)))"
  },
  {
    "original_sentence": "The next time I am meeting with Tommy is when?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tommy\")))) 1L)))"
  },
  {
    "original_sentence": "When am I meeting next with Tara?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tara\")))) 1L)))"
  },
  {
    "original_sentence": "When is the first appointment I have with Marty?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marty\")))) 1L)))"
  },
  {
    "original_sentence": "COULD YOU PLEASE SHOW ME THE TIMING FOR THE FRIDAY MEETINGS",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you make the second on an hour long?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "ok fix the second one and extend til 5.30 pm",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "change my 2:30 appointment to last one hour",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (HourMinutePm 2L 30L)) (^(Event) EmptyStructConstraint)))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Can you confirm this appointment?",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make an event at the convention this Friday at 8AM with Terry, Ray, and Lee.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTimeConstraint (?= (NumberAM 8L)) (NextDOW (Friday)))) (Event.location_? (?= (LocationKeyphrase.apply \"convention\")))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Terry\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ray\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lee\"))))))))))))"
  },
  {
    "original_sentence": "Yes, thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "The other person who will attend is John. Please update.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))))"
  },
  {
    "original_sentence": "change the time to 9am",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "change the meeting with terry time at 10.00 am - 10.30 am",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))))))"
  },
  {
    "original_sentence": "Please remove the event on Saturday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add Lunch with Mom on Saturday at 1:30 pm.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Add Lunch to my calendar on Saturday at 1:30 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (HourMinutePm 1L 30L))))))))"
  },
  {
    "original_sentence": "Has Rene spoken of tomorrow meeting?",
    "parse": "(Yield (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rene\"))))))))"
  },
  {
    "original_sentence": "Create another meeting with Rene tomorrow and send an invitation",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Cancel my meeting with Jim at 3PM and reschedule it to 5PM while changing the date to Friday, then make sure to remind me by sending an email to my work address.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "FIX BIRTHDAY EVENT TODAY",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"FIX BIRTHDAY\")) (Event.start_? (DateTime.date_? (?= (Today))))))))"
  },
  {
    "original_sentence": "FIX SECOND ONE",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "OK",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "THANK YOU",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need you to decline the invitation I got for wood chucking and send a message saying that I hate this sport.",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I hate this sport\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"wood chucking\"))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "That is okay. Also I will you decline fishing and say we will do a porker night to make up for it",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"we will do a poker night to make up for it\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"fishing\"))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "That's perfect. Decline my Recycling Committee Meeting and say that this is a useless meeting and I'm not going to attend.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"this is a useless meeting and I'm not going to attend\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Recycling Committee Meeting\"))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "Yes it is",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change my day off from Tuesday to Wednesday.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"day off\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Wednesday)))))))))"
  },
  {
    "original_sentence": "Yes. Do we have any other all day events",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (^(Dynamic) item x0))))) (Event.isAllDay_? (?= true)))))))"
  },
  {
    "original_sentence": "Okay. Schedule an event this week. Not sure what it will be called yet.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (ThisWeek))))))"
  },
  {
    "original_sentence": "Actually, let's make it last all day",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.isAllDay_? (?= true)))))"
  },
  {
    "original_sentence": "The second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Hi! I need to make a lunch appointment with Karl and Janice. Can you check to see what days are available?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karl\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice\"))))))))))))"
  },
  {
    "original_sentence": "I would like to add an event to my calendar. It is for lunch with Karl and Janice for this Friday at 12:30pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 12L 30L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karl\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice\"))))))))))))"
  },
  {
    "original_sentence": "I think I will need an hour and a half for lunch.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours (+ 1 0.5)))))))"
  },
  {
    "original_sentence": "Much better, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Oh, Janice is on vacation. I totally forgot. Remove her and add Kristen instead?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kristen\")))))))))))"
  },
  {
    "original_sentence": "Confirmed",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need a list of the members of my team.",
    "parse": "(Yield (FindTeamOf (toRecipient (CurrentUser))))"
  },
  {
    "original_sentence": "Alright establish a time to talk with my team this afternoon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Afternoon) (Today))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "2pm please. Can you tell me whos' on David Crim's team",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David Crim\"))))))))"
  },
  {
    "original_sentence": "Who is on Abby's team?",
    "parse": "(Yield (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))"
  },
  {
    "original_sentence": "My team needs an event",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser))))))))"
  },
  {
    "original_sentence": "Cancel my 2PM appointment and create a new one at 5PM",
    "parse": "(do (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 2L)) (^(Event) EmptyStructConstraint))))))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Do I have any appointments next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "hi, can you please help me book an appointment",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "I call my hair salon. I have an appointment at 10 am tomorrow please put it on my calendar.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "yeah",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "After the that appointment I an going to do some shopping to about noon.",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"do some shopping\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (Noon)))))))))"
  },
  {
    "original_sentence": "yup",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, add lunch with Jeri to tomorrow's calendar at 1 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeri\")))))))))))"
  },
  {
    "original_sentence": "Nah, actually I don't want it",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "what is my upcoming appointments?",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Can you tell me when my appointment with Batman will be?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Batman\")))))))))"
  },
  {
    "original_sentence": "Do I have any upcoming appointments with Batman?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Batman\"))))))) 0L))"
  },
  {
    "original_sentence": "Mark a week long retreat for the family in Disney from Oct 21 to Nov 1",
    "parse": "(let (x0 (MD 21L (October))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \"Disney\"))) (EventAllDayForDateRange (Event.subject_? (?= \"retreat for the family\")) (DateAndConstraint x0 (nextMonthDay x0 (November) 1L))))))))"
  },
  {
    "original_sentence": "it should be with elli and abby",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"elli\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"abby\")))))))))))"
  },
  {
    "original_sentence": "sounds good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Edit the location to the Spa",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Spa\"))))))"
  },
  {
    "original_sentence": "Good - But change the day to the 25th.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.date_? (?= (ClosestDay (Execute (refer (& (^(Date) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Day.apply 25L))))))))"
  },
  {
    "original_sentence": "That looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule a full day at the dentist on sunday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"dentist\")) (NextDOW (Sunday))))))"
  },
  {
    "original_sentence": "sunday is an all day holiday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"holiday\")) (NextDOW (Sunday))))))"
  },
  {
    "original_sentence": "Perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great, I appreciate it.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add celebrate birthday the whole day on the 4th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"birthday\")) (nextDayOfMonth (Today) 4L)))))"
  },
  {
    "original_sentence": "Can you update my Play Video Games event to not be on the weekend?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Play Video Games\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Move my VGHS Binge to sometime not on the weekend",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"VGHS Binge\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Yes, the 27th.",
    "parse": "(Yield (Execute (ChooseUpdateEventFromConstraint (Event.start_? (DateTime.date_? (Date.day_? (?= (Day.apply 27L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Right wit that time",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Now I need to schedule dinner for the weekend.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTime.date_? (ThisWeekend)))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "i will coming on that day",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need you to change my movie night to not be on a weekend.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"movie night\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Is a training scheduled for Friday with Joe?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joe\")))) (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"training\"))))))) 0L))"
  },
  {
    "original_sentence": "Is anyone accompany with Joe.",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "Do I have anything with abby?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"abby\"))))))) 0L))"
  },
  {
    "original_sentence": "Do you know if Abby is going to attend the staff meeting?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"staff meeting\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Am I meeting with HR today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"meeting with HR\")))))) 0L))"
  },
  {
    "original_sentence": "when is father's day",
    "parse": "(Yield (NextHolidayFromToday (Holiday.FathersDay)))"
  },
  {
    "original_sentence": "I'm going to Dinner with Bill, Janice and Fred are coming along.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dinner\")) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bill\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fred\"))))))))))))"
  },
  {
    "original_sentence": "Schedule the second option and invite Jeff, Carol and Lisa.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Janice will not be able to make it. She will be replaced by her supervisor, Anita.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Anita\")))))))))))"
  },
  {
    "original_sentence": "the first one is better",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need to change my appointments for next week.",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Can you tell me what I have going on on the 15th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 15L) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Do I have anything scheduled on the 16th?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 16L) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "What events do I have planned for the 17th of February?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 17L (February)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Plan a dinner date on the 17th from 5 to 8 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (nextDayOfMonth (Today) 17L) (NumberPM 5L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner date\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 8L)))))))))"
  },
  {
    "original_sentence": "Decline the Thursday meeting and let them know I'm flying out that day.",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I'm flying out that day.\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))) :response (ResponseStatusType.Declined) :sendResponse (RespondShouldSend.apply true)))"
  },
  {
    "original_sentence": "I also need to accept the budget meeting as well.",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"budget meeting\"))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Please decline my 3:30 on Tuesday",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Tuesday)) (HourMinutePm 3L 30L)) (^(Event) EmptyStructConstraint))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Show my status as busy all day Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.showAs_? (?= (ShowAsStatus.Busy))) (NextDOW (Friday))))))"
  },
  {
    "original_sentence": "What did I respond status of my meeting next week",
    "parse": "(Yield (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))))"
  },
  {
    "original_sentence": "Set up a meeting with Amy on Friday at 10:30 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteAm 10L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\")))))))))))"
  },
  {
    "original_sentence": "Make the location the Empire State Building",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Empire State Building\"))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "will it rain then?",
    "parse": "(Yield (WillRain (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "What do I have later this week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
  },
  {
    "original_sentence": "Okay, great now can you mark down, Exploratorium in San Francisco California at 11 am on the 4th please?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 4L) (NumberAM 11L)))) (Event.location_? (?= (LocationKeyphrase.apply \"Exploratorium in San Francisco California\")))))))"
  },
  {
    "original_sentence": "Am I going to any meetings next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Create a new breakfast event tomorrow with Bob and Glenn.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"breakfast\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Glenn\"))))))))))))"
  },
  {
    "original_sentence": "Remove Glenn and name it \"breakfast without bad people\".",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.subject_? (?= \"breakfast without bad people\")) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Glenn\"))))))))))))"
  },
  {
    "original_sentence": "The second one looks great.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Add a dinner date with Cody tomorrow night at 7 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 7L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cody\")))))))))))"
  },
  {
    "original_sentence": "Remove Cody now and change the event to drinks at the club.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (& (Event.subject_? (?= \"drinks\")) (Event.location_? (?= (LocationKeyphrase.apply \"club\")))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cody\"))))))))))))"
  },
  {
    "original_sentence": "Can I request that my company party event for this Wednesday for 5pm be deleted?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 5L)) (Event.subject_? (?~= \"company party\"))))))))))"
  },
  {
    "original_sentence": "What time is my meeting tomorrow?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "rehab appointment for arm on saturday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"rehab appointment for arm\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))))))"
  },
  {
    "original_sentence": "Can you put me down for Cigars with Matt on the 28th?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Cigars\")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 28L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Matt\")))))))))))"
  },
  {
    "original_sentence": "Please put the second option on the calendar.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "OK!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a meet and greet with Joe Friday morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"meet and greet\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Friday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joe\")))))))))))"
  },
  {
    "original_sentence": "Let's go with the first one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "where is alex surprise party?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"alex surprise party\")))))))"
  },
  {
    "original_sentence": "Okay cool, that's great.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When is my video game party?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"video game party\")))))))"
  },
  {
    "original_sentence": "I'm having the Smash Shots Tournament next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Smash Shots Tournament\")) (Event.start_? (DateTime.date_? (NextWeekList)))))))"
  },
  {
    "original_sentence": "Yeah I like the first one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Who made the meeting at Gasworks Park?",
    "parse": "(Yield (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (?= (LocationKeyphrase.apply \"Gasworks Park\"))))))))"
  },
  {
    "original_sentence": "Counselling with HR on the 5th at 1.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add Emma to Counselling with HR",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "it's ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please, add a visit to the Geogia Aquarium on Thursday at 4:00 p.m., Is it going to be sunny that day?",
    "parse": "(let (x0 (NextDOW (Thursday))) (do (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"visit to the Geogia Aquarium\")) (Event.start_? (?= (DateAtTimeWithDefaults x0 (NumberPM 4L)))))))) (Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= x0))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I want to know the weather at the Georgia Aquarium.",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Georgia Aquarium\"))) (?= (Now))))"
  },
  {
    "original_sentence": "I want to know the weather there during my appointment.",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (Execute (refer (^(LocationKeyphrase) roleConstraint (Path.apply \"place\")))))) (?= (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you cancel my date to the kids concert tomorrow?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"date to the kids concert\"))))))))))"
  },
  {
    "original_sentence": "What is on my calendar today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "So am I free this Firday?",
    "parse": "(Yield (IsFree (RecipientAvailability (& (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
  },
  {
    "original_sentence": "Sorry I meant the weekend?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (ThisWeekend))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (CreateCommitEventWrapper (Execute (refer (extensionConstraint (^(CreateCommitEvent) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Am I free next week?",
    "parse": "(Yield (IsFree (RecipientAvailability (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
  },
  {
    "original_sentence": "What about Saturday?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday))))))))"
  },
  {
    "original_sentence": "That is fine could you book that second one for me onto my calendar?",
    "parse": "(Yield (CreateCommitEventWrapper (Execute (refer (& (^(CreateCommitEvent) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(CreateCommitEvent) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Add Helen's Birthday on May 5th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Helen's Birthday\")) (Event.start_? (DateTime.date_? (?= (MD 5L (May)))))))))"
  },
  {
    "original_sentence": "Yes. The first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need you to search for a Saturday in June that I have open",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "What are my events for June?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (June)))))"
  },
  {
    "original_sentence": "Make an appointment with Steph on June 2nd",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (MD 2L (June))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steph\")))))))))))"
  },
  {
    "original_sentence": "First One",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Create a reminder to meet with Steph on June 2nd",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Add appointment with Steph at 1pm on June 2nd",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 2L (June)) (NumberPM 1L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steph\")))))))))))"
  },
  {
    "original_sentence": "Add meeting with Stephanie for June 2nd and 1pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 2L (June)) (NumberPM 1L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Stephanie\")))))))))))"
  },
  {
    "original_sentence": "Add Stephanie's Party on June 2nd",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Stephanie's Party\")) (Event.start_? (DateTime.date_? (?= (MD 2L (June)))))))))"
  },
  {
    "original_sentence": "The second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Change Stephanie's Party to 1:00 to 3pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Stephanie's Party\")))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "1pm to 3pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (& (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change Stephanie's Party to June 5th",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Stephanie's Party\")))))) (Event.start_? (DateTime.date_? (?= (MD 5L (June))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Remove Stephanie's Party",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Stephanie's Party\")))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When is Helen's Birthday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Helen's Birthday\")))))))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Put Cheesefest on my calendar on February 8th... I think it starts at 10am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Cheesefest\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 8L (February)) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Oh wait, it's actually on the 9th. Also, it should go from 11am to 4pm even though I don't think I'll stay the whole time.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (ClosestDay (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Day.apply 9L)) (NumberAM 11L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L)))))))))"
  },
  {
    "original_sentence": "Leave that time as free for now",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.showAs_? (?= (ShowAsStatus.Free))))))"
  },
  {
    "original_sentence": "Schedule a pitch brunch with the CEO tomorrow at 11:00 am at Denny's.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"pitch brunch with the CEO\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Denny's\")))))))"
  },
  {
    "original_sentence": "Where did I have brunch last week?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"brunch\")) (LastWeekNew)))))))"
  },
  {
    "original_sentence": "confirm the pitch brunch event",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "That looks right, thanks! I think we will go to Denny's.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Thanks, can you also do a salsa lesson with my wife on Thursday at 6:00 pm?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Can we change the pitch brunch to 12PM?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"pitch brunch\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "Yes but let's add Becky to the meeting.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Becky\"))))))))))"
  },
  {
    "original_sentence": "What will the weather be on Friday?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextDOW (Friday))))))"
  },
  {
    "original_sentence": "Can you tell me the time?",
    "parse": "(Yield (Now))"
  },
  {
    "original_sentence": "Create an event to meet with Joy's manager on Monday at 10:30 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (HourMinuteAm 10L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joy\"))))))))))))"
  },
  {
    "original_sentence": "Yes, that is the correct time to meet with Joy's manager Dan Schoffel.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule a meeting with John and his manager today at 3 pm.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L)))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "Thanks. Might want to make it an hour though, lots to review before he's fired.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Yeah that's good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What time is the carnival at central park in vienna this weekend?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"carnival\")) (Event.location_? (?= (LocationKeyphrase.apply \"central park in vienna\")))) (ThisWeekend)))))))"
  },
  {
    "original_sentence": "What time is it over?",
    "parse": "(Yield (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Schedule me from 12 to 4PM.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) x1 (DateAtTimeWithDefaults (DateTime.date (Event.start x0)) (NumberPM 12L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (NumberPM 4L)))))))))"
  },
  {
    "original_sentence": "Thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Put a note on that event to text Ryan",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Set Backgamon match at 5 on Sunday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Backgamon match\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Yes it does. What is on my calendar in the morning that day?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (DateTime.date (Event.start (^(Dynamic) item x0))) (^(Event) EmptyStructConstraint)) (Morning))))))"
  },
  {
    "original_sentence": "What is my third event for the month of February?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (February))) 3L))"
  },
  {
    "original_sentence": "what is my third event in March?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (March))) 3L))"
  },
  {
    "original_sentence": "What time is my 3rd Event tomorrow?",
    "parse": "(Yield (Event.start (FindNumNextEvent (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) 3L)))"
  },
  {
    "original_sentence": "Are there any scheduled meetings with Henry for either Wednesday or Thursday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Henry\")))) (DateAndConstraint (NextDOW (Wednesday)) (NextDOW (Thursday))))))) 0L))"
  },
  {
    "original_sentence": "ok ! Thank you emily",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What meetings are scheduled after those two?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date (Event.end x0)) (^(Event) EmptyStructConstraint) (DateTime.time (Event.end x0))))))"
  },
  {
    "original_sentence": "Will I be at a meeting with Rachel next Thursday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rachel\")))))))) 0L))"
  },
  {
    "original_sentence": "Do I have a dental appointment Monday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"dental appointment\")))))) 0L))"
  },
  {
    "original_sentence": "Make me a trip to the beach that starts tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"trip to the beach\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "Can you make it start at 12?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "Yes, could you also add Steve to the event?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steve\"))))))))))"
  },
  {
    "original_sentence": "That looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Is it going to be cold at the soccer game saturday?",
    "parse": "(Yield (IsCold (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"soccer game\")))))))))"
  },
  {
    "original_sentence": "Make an appointment with Abraham in Saturday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abraham\")))))))))))"
  },
  {
    "original_sentence": "the second one is good",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Schedule a lunch with Susan at 12PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (NextTime (NumberPM 12L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Susan\")))))))))))"
  },
  {
    "original_sentence": "yeah thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Okay, now one last meeting with Todd for 45 minutes on Friday after lunch at 3pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L)))) (Event.duration_? (?= (toMinutes 45)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Todd\")))))))))))"
  },
  {
    "original_sentence": "Delete the nail appointment.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"nail appointment\")))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "please set new event for party tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"party\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "Can you add Birthday Party to my calendar from 8 pm for about 5 hours",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Birthday Party\")) (Event.start_? (?= (NextTime (NumberPM 8L))))) (Event.duration_? (?= (toHours 5)))))))"
  },
  {
    "original_sentence": "Very good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Remove that event from my calendar",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "conference meeting on friday at 8am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"conference meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Show me as busy for 30 minutes after the conference.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"conference\")))))))) (Event.duration_? (?= (toMinutes 30)))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))"
  },
  {
    "original_sentence": "What do I have at 1300?",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "What about at 1400?",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "Fine. Just schedule a meeting for 13:30.",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "Is Shayla free tomorrow?",
    "parse": "(Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Shayla\")))))))) false))"
  },
  {
    "original_sentence": "I meant Friday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Friday))))))))"
  },
  {
    "original_sentence": "Am I free next week?",
    "parse": "(Yield (IsFree (RecipientAvailability (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
  },
  {
    "original_sentence": "I meant next month",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth)))))))"
  },
  {
    "original_sentence": "yes i am ready.",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "please make a pizza party on sunday at 11",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pizza party\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "ok thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "please make a pizza party on sunday 11:30",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pizza party\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (HourMinuteAm 11L 30L))))))))"
  },
  {
    "original_sentence": "Let me think about it.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "that works",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Update pizza party to make it 2 hours long on Sunday.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"pizza party\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Sunday))))) (Event.duration_? (?= (toHours 2))))))))"
  },
  {
    "original_sentence": "Tell me when I am meeting Amy.",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\")))))))))"
  },
  {
    "original_sentence": "Thanks, what is on my calendar on Friday morning?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) (Morning))))"
  },
  {
    "original_sentence": "Include Eric, Jeff, Amanda, Erica and remove Amy from the meeting.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Eric\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeff\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amanda\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Erica\")))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\"))))))))))))"
  },
  {
    "original_sentence": "Please cancel my camping trip with Frank this Friday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (& (Event.subject_? (?~= \"camping trip\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Frank\")))))))))))))"
  },
  {
    "original_sentence": "Nevermind. Cancel my demand.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "I want to cancel other events on that day.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "What other events do I have coming up?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "Please add an event name \"workout at the gym\" to my calendar.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"workout at the gym\")))))"
  },
  {
    "original_sentence": "Hi, what events do I have with Jerri Skinner next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jerri Skinner\")))) (NextWeekList))))"
  },
  {
    "original_sentence": "How about with Fiona Mason?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (DateTime.date (Event.start (Execute (refer (extensionConstraint (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fiona Mason\"))))))))) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Do I have a doctor's appointment?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor's appointment\"))))) 0L))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What's the first event I have scheduled next week?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)) 1L))"
  },
  {
    "original_sentence": "Ok. I am done",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "There is nothing else you can help me with",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is on my calendar for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Change my family dinner to 5:00 pm for 1 hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"family dinner\")))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Nice, now can you also schedule \"Drive to San Francisco\" for tomorrow at 5pm for two hours, and tell me what the weather will be like there?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "What's the average temperature outside?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Average) (temperature) (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))"
  },
  {
    "original_sentence": "What are the chances of rain today?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (rainPrecipProbability) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "What are the chances of rain tomorrow?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (rainPrecipProbability) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "What is the humidity level right now?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (humidity) (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))"
  },
  {
    "original_sentence": "How is the cloud coverage?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "How are the UV levels?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "When will the sun set?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunsetTime) (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))"
  },
  {
    "original_sentence": "What time does the moon rise?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunriseTime) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Create an event on today at 0900",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Today) (HourMinuteMilitary 9L 0L)))))))"
  },
  {
    "original_sentence": "Eh, how about tomorrow instead?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hi I'll create an event for my Dentist appointment tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dentist appointment\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "What time is my meeting with tim on thursday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"tim\"))))))))))"
  },
  {
    "original_sentence": "Change the meeting to be with Sarah",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\"))))))))))"
  },
  {
    "original_sentence": "Yes, Do I have any other meetings with Tim?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (^(Dynamic) item x0))))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\")))))))) 0L))))"
  },
  {
    "original_sentence": "Thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make sure Carolina comes to that meeting too",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carolina\"))))))))))"
  },
  {
    "original_sentence": "what are the events i have on this week",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
  },
  {
    "original_sentence": "ok fine",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "MArcy and I will be going shopping at 5.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"shopping\")) (Event.start_? (?= (NextTime (NumberPM 5L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"MArcy\")))))))))))"
  },
  {
    "original_sentence": "Make a appointment to tomorrow from 12:00 to 12:30",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 12L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 12L 30L)))))))))"
  },
  {
    "original_sentence": "That is great for the Appointment on Friday at 12:00 pm.",
    "parse": "(Yield (Execute (ConfirmCreateAndReturnAction (& (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday))))) (Event.start_? (DateTime.time_? (?= (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "Perfect.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Who was at the dinner with Tom two weeks ago?",
    "parse": "(Yield (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (PeriodBeforeDate (Today) (toWeeks 2)) (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))))))))"
  },
  {
    "original_sentence": "What movie did I see last Tuesday?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Was I able to make my dinner ?",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "What time was dinner yesterday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Yesterday) (Event.subject_? (?~= \"dinner\"))))))))"
  },
  {
    "original_sentence": "Did I have lunch yesterday too?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Yesterday) (Event.subject_? (?~= \"lunch\")))))) 0L))"
  },
  {
    "original_sentence": "Remove my 1-3pm doctor's appointment on Thursday",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 1L))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L)))))))))))))"
  },
  {
    "original_sentence": "Yeah is it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need a team meeting before Tuesday at 1 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (?< (NumberPM 1L)) (NextDOW (Tuesday)))))))"
  },
  {
    "original_sentence": "Second one please",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Call it Appointment TEAM MEETING.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"Appointment TEAM MEETING\")))))"
  },
  {
    "original_sentence": "whats my second event tomorrow?",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) 2L))"
  },
  {
    "original_sentence": "What is my second event tomorrow?",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) 2L))"
  },
  {
    "original_sentence": "Can you find me my second event in april?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (April))) 2L))"
  },
  {
    "original_sentence": "Search an event by the name 'visiting mom'",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"visiting mom\"))))"
  },
  {
    "original_sentence": "Search for an event called mom.",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"mom\"))))"
  },
  {
    "original_sentence": "set my status for out of office on January 1.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (MD 1L (January))))))"
  },
  {
    "original_sentence": "Did you call and cancel my meeting?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Do I have a meeting today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Is there a meeting at 1 PM tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "After?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(DateTime) EmptyStructConstraint))))) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))))"
  },
  {
    "original_sentence": "Anything in the afternoon tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"
  },
  {
    "original_sentence": "When's my next meeting without Simon attending?",
    "parse": "(Yield (FindNumNextEvent (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Simon\")))))))) 1L))"
  },
  {
    "original_sentence": "Which party coming up doesn't have Simon attending?",
    "parse": "(Yield (FindNumNextEvent (& (Event.subject_? (?~= \"party\")) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Simon\"))))))))) 1L))"
  },
  {
    "original_sentence": "Great thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "That's good. What is my next party without Jacob/",
    "parse": "(Yield (FindNumNextEvent (& (Event.subject_? (?~= \"party\")) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jacob\"))))))))) 1L))"
  },
  {
    "original_sentence": "Great. do i have any parties without Jacob?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"parties\")) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jacob\")))))))))))) 0L))"
  },
  {
    "original_sentence": "Remind me to visit Charlie, Penny, Tara, and Ben tomorrow after lunch.",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Create a 2 pm appointment with Charlie, Penny, Tara and Ben tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Charlie\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Penny\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tara\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ben\"))))))))))))"
  },
  {
    "original_sentence": "That looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Extend that by 15 minutes please.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toMinutes 15))))))))"
  },
  {
    "original_sentence": "That looks good to me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I lost Michele Obama's phone number. Can you find it for me?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Michele Obama\"))))))))"
  },
  {
    "original_sentence": "please give michele obama's home address",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "Can you search her office address then?",
    "parse": "(Yield (Person.officeLocation (PersonFromRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Can you find Michele's email address?",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Michele\"))))))))"
  },
  {
    "original_sentence": "Do you also have Barack's email?",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack\"))))))))"
  },
  {
    "original_sentence": "Does Napa in Reno have waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Napa in Reno\"))))))"
  },
  {
    "original_sentence": "Does M3 in Reno have waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"M3 in Reno\"))))))"
  },
  {
    "original_sentence": "does Mint Bar and Grill in Lewistown have waiter service",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Mint Bar and Grill in Lewistown\"))))))"
  },
  {
    "original_sentence": "Delete the meeting I have at 3",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 3L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Never mind, cancel that.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Thank you. I will keep you updated.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Put something on my schedule for tomorrow night.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Night) (Tomorrow))))))"
  },
  {
    "original_sentence": "Schedule the first option.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Actually... I don't really want to do anything, cancel that request.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Cancel salon appointment",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"salon appointment\")))))))))"
  },
  {
    "original_sentence": "I need to set a meeting at 11 am and tomorow a meeting at 2 pm, I have a lunch next Thrusday at 1 pm.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "yeah good thank you for doing this",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "The Thursday after the lunch you just added, add another lunch at the same time.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Thursday)) (DateTime.time (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))))"
  },
  {
    "original_sentence": "Put a IT meeting on my schedule for Monday at 3:15 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"IT meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (HourMinutePm 3L 15L))))))))"
  },
  {
    "original_sentence": "change the date to the 16",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDay (Execute (refer (& (^(Date) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Day.apply 16L))))))))"
  },
  {
    "original_sentence": "Is there anything earlier in the day?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "I guess 12:30",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (HourMinutePm 12L 30L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "change the time to start one hour later",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "See if I have any doctor appointments in January.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctor appointment\")) (FullMonthofMonth (January)))))"
  },
  {
    "original_sentence": "Okay! Do I have any appointments in February?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (February)))))"
  },
  {
    "original_sentence": "Delete the appointment for now.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Can you search for the last time I had a meeting with Frank?",
    "parse": "(Yield (Event.start (FindLastEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Frank\")))))))"
  },
  {
    "original_sentence": "nice",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Put Speak with Professor on my calendar for next Wednesday from 1 - 2.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Speak with Professor\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 2L)))))))))"
  },
  {
    "original_sentence": "Yes, this looks fine.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete my appointment with Tim on Tuesday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\"))))))))))))"
  },
  {
    "original_sentence": "Oops I meant Jim.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\"))))))"
  },
  {
    "original_sentence": "Schedule a one on one with Elli for Wed at 4'00 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 4L)))) (Event.isOneOnOne_? (?= true))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\")))))))))))"
  },
  {
    "original_sentence": "Let's go ahead and have it go until 5.15",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (HourMinutePm 5L 15L)))))))"
  },
  {
    "original_sentence": "Works for me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great, can you put a follow up on on Elli and Jake on next Wednesday at 7*25",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"follow up\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (HourMinutePm 7L 25L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))))))))"
  },
  {
    "original_sentence": "yah.. change the event time into 8_00 pm to 8.30 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 8L 30L))))))))"
  },
  {
    "original_sentence": "Schedule jeremys birthday in Palm springs for all of next weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (& (Event.subject_? (?= \"jeremys birthday\")) (Event.location_? (?= (LocationKeyphrase.apply \"Palm springs\")))) (NextWeekend)))))"
  },
  {
    "original_sentence": "I'm going to eat some cake tomorrow through monday",
    "parse": "(let (x0 (Tomorrow)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"eat some cake\")) (DateAndConstraint x0 (nextDayOfWeek x0 (Monday))))))))"
  },
  {
    "original_sentence": "Looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great. I'll be gone for 14 days starting tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (Tomorrow) (toDays 14)))))"
  },
  {
    "original_sentence": "looks fine",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create an event for wednesday morning at 7am that says, \"quit job\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"quit job\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 7L))))))))"
  },
  {
    "original_sentence": "Yup.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you schedule me as busy for the rest of today.",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "Do I have any meetings today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Pull up my event for tomorrow at 5 pm",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L)) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Ok, add dinner at 630 tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 6L 30L))))))))"
  },
  {
    "original_sentence": "Block out the half hour after my 2 PM meeting on Friday for commute.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"commute\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L)) (^(Event) EmptyStructConstraint))))))))) (Event.duration_? (?= (toHours 0.5)))))))"
  },
  {
    "original_sentence": "Is it raining?",
    "parse": "(Yield (IsRainy (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))"
  },
  {
    "original_sentence": "Is it cloudy?",
    "parse": "(Yield (IsCloudy (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "What will the weather be like tomorrow morning?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTimeConstraint (Morning) (Tomorrow))))"
  },
  {
    "original_sentence": "Will it raining all day tomorrow?",
    "parse": "(Yield (IsRainy (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "Will it be sunny on Sunday?",
    "parse": "(Yield (IsSunny (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextDOW (Sunday)))))))"
  },
  {
    "original_sentence": "Will it be cold Sunday?",
    "parse": "(Yield (IsCold (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextDOW (Sunday)))))))"
  },
  {
    "original_sentence": "call for me a meeting with the workers on Friday.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Schedule a Meeting with the Marketing Team on Friday.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Make an event later in the afternoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (LateAfternoon) (Today))))))"
  },
  {
    "original_sentence": "Please make it start at 3 instead",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Looks great thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please make the schedule with John today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Today)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))))"
  },
  {
    "original_sentence": "The first one works. Can you add that it is at Dell in Round Rock, TX and provide the address for me?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I choose the first one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "GOOD WORK",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add Orlando Convention Center as the location.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Orlando Convention Center\"))))))"
  },
  {
    "original_sentence": "Make an event called Jimmy's birthday party for tomorrow at 6pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Jimmy's birthday party\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "When is Sam's birthday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Sam's birthday\")))))))"
  },
  {
    "original_sentence": "What do I have scheduled after the birthday party?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"birthday party\")))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date (Event.end x0)) (^(Event) EmptyStructConstraint) (DateTime.time (Event.end x0))))))"
  },
  {
    "original_sentence": "Make an appointment tomorrow at 6 with Jane",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\")))))))))))"
  },
  {
    "original_sentence": "name it convention and remove jane",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.subject_? (?= \"convention\")) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jane\"))))))))))))"
  },
  {
    "original_sentence": "Looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add an event with Marvin Saturday night at 8 pm called comedy show.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"comedy show\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marvin\")))))))))))"
  },
  {
    "original_sentence": "Actually take Marvin off this event and rename it dinner show.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.subject_? (?= \"dinner show\")) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marvin\"))))))))))))"
  },
  {
    "original_sentence": "Let's join that now please.",
    "parse": "(Yield (joinEventCommand (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Delete all day at DMV next Tuesday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (& (Event.location_? (?= (LocationKeyphrase.apply \"DMV\"))) (Event.isAllDay_? (?= true)))))))))))"
  },
  {
    "original_sentence": "Make a appointment for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "I like the second one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "put appointment with my father",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "put appointment my best friend friday evg",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"appointment my best friend\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "What are my upcoming events where I am out of the office that last longer than 10 hours",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.duration_? (?> (toHours 10))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))))))"
  },
  {
    "original_sentence": "move my 10 am meeting today to 12",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberAM 10L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "make an event for monday at 3pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Yes, can you also put drive to Chuck's for 1 hour after that?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (^(Dynamic) item x0) (do (Yield x0) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"drive to Chuck's\")) (Event.start_? (?= (adjustByPeriodDuration (Event.end (^(Dynamic) item x0)) (PeriodDuration.apply :duration (toHours 1))))))))))))"
  },
  {
    "original_sentence": "yes this looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you actually push drive to Chucks back another hour?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"drive to Chucks\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "Did I accept the 49ER'S Tailgate this Saturday?",
    "parse": "(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"49ER'S Tailgate\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Did I say I declined that?",
    "parse": "(Yield (== (ResponseStatus.response (Event.responseStatus (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Did I decline Elli's birthday party?",
    "parse": "(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Elli's birthday party\"))))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "create baseball game on monday at 5",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"baseball game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "yes thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add team meeting on Thursday at 7:30 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinutePm 7L 30L))))))))"
  },
  {
    "original_sentence": "Yeah that looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make that go until 8:30",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 8L 30L)))))))"
  },
  {
    "original_sentence": "Cancel the meeting I have about sustainability this afternoon with Greta.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (& (Event.subject_? (?~= \"sustainability\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Greta\")))))) (Afternoon)))))))))"
  },
  {
    "original_sentence": "Actually, make it start at 3pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Yes please thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you add Karen please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\"))))))))))"
  },
  {
    "original_sentence": "Can you chnage the time to 4pm?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "When was my last marketing meeting",
    "parse": "(Yield (Event.start (FindLastEvent (EventBeforeDateTime (Now) (Event.subject_? (?~= \"marketing meeting\"))))))"
  },
  {
    "original_sentence": "When is my next marketing meeting",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"marketing meeting\")) 1L)))"
  },
  {
    "original_sentence": "When is my next Physical?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"Physical\")) 1L)))"
  },
  {
    "original_sentence": "And when was my last Physical?",
    "parse": "(Yield (Event.start (FindLastEvent (EventBeforeDateTime (Now) (Event.subject_? (?~= \"Physical\"))))))"
  },
  {
    "original_sentence": "What time is the movie with Gavin, Kelly, Beth, and Ryan?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"movie\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Gavin\"))) (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kelly\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Beth\"))))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ryan\")))))))))))"
  },
  {
    "original_sentence": "Have it start 2 hours earlier please.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (DateTime.time (PeriodDurationBeforeDateTime (Event.start x0) (PeriodDuration.apply :duration (toHours 2)))))))))))"
  },
  {
    "original_sentence": "Take out Gavin and add Goose instead.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Gavin\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Goose\")))))))))))"
  },
  {
    "original_sentence": "yes but also add Tom, Dave, Fred and Bob.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dave\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fred\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))))))))"
  },
  {
    "original_sentence": "Just make a Movie screening with Gavin, Goose, Fred, and Bob friday night",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Movie screening\")) (Event.start_? (DateTimeConstraint (Night) (NextDOW (Friday))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Gavin\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Goose\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fred\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\"))))))))))))"
  },
  {
    "original_sentence": "Who is this Kevin?",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kevin\")))))))"
  },
  {
    "original_sentence": "What is Kevin's number?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kevin\"))))))))"
  },
  {
    "original_sentence": "What is Kevin's email?",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kevin\"))))))))"
  },
  {
    "original_sentence": "Create an event for tomorrow at 1 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Yes, thank you for putting the appointment on my calendar.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change the start time to 2:30 PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 2L 30L)))))))"
  },
  {
    "original_sentence": "Look good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Actually, I need it to start at 2 sharp.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "si",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Si",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Book the last meeting room on the second floor tomorrow at noon for a sales meeting to discuss the upcoming quarter.",
    "parse": "(FenceConferenceRoom)"
  },
  {
    "original_sentence": "I'd like a meeting with Bob and Bran at 5 pm next Tuesday and make it last for 2 hours.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 5L)))) (Event.duration_? (?= (toHours 2)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bran\"))))))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Book a 2 hour trip to Cairo on the 15th of July at 6:35 AM with Alicia and Steven.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"trip to Cairo\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 15L (July)) (HourMinuteAm 6L 35L))))) (Event.duration_? (?= (toHours 2)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alicia\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steven\"))))))))))))"
  },
  {
    "original_sentence": "Yes, that looks perfect to me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "let's add coffee for Sunday at 5 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"coffee\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 5L))))))))"
  },
  {
    "original_sentence": "Invite Mark and make it at Dunkin Donuts.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.location_? (?= (LocationKeyphrase.apply \"Dunkin Donuts\"))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))))))))))"
  },
  {
    "original_sentence": "actually add Abby and switch to starbucks",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.location_? (?= (LocationKeyphrase.apply \"starbucks\"))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "Invite Joanne and change the place to iHop",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.location_? (?= (LocationKeyphrase.apply \"iHop\"))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joanne\")))))))))))"
  },
  {
    "original_sentence": "Yeah, looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "can you tell about my appointment",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Add Superior Trail hiking as an all day event on Saturday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"Superior Trail hiking\")) (NextDOW (Saturday))))))"
  },
  {
    "original_sentence": "This is right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make me an all day event for only saturday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (^(Event) EmptyStructConstraint) (NextDOW (Saturday))))))"
  },
  {
    "original_sentence": "Looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks for you help",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make a quick session with Jamie and his boss.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamie\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"quick session\")) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "The one on July 25.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 25L (July))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "OK, COLLECT INFORMATION ABOUT TOMORROWS SESSION",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"SESSION\")))))))"
  },
  {
    "original_sentence": "Well, create a session tomorrow with Damon and Dan to go over our portfolio.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"go over our portfolio\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan\"))))))))))))"
  },
  {
    "original_sentence": "The first one works great",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "How long is my meeting today scheduled for?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Change it to one hour please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Yes that's right. But make it Tuesday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Tuesday))))))))"
  },
  {
    "original_sentence": "perfect!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok! any event today on my calander",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "I need to put a dentist appointment on the calendar for 6 months from today at 12pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (adjustByPeriod (Today) (toMonths 6)) (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "That is going to be for an hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "12:00 to 12:30",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) x1 (DateAtTimeWithDefaults (DateTime.date (Event.start x0)) (NumberPM 12L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (HourMinutePm 12L 30L)))))))))"
  },
  {
    "original_sentence": "Update the time for an hour, from 12:00 to 1 PM.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) x1 (DateAtTimeWithDefaults (DateTime.date (Event.start x0)) (NumberPM 12L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (NumberPM 1L))))) (Event.duration_? (?= (toHours 1))))))))"
  },
  {
    "original_sentence": "Thanks, what is on my schedule tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Set up a visit to Six Flags Fiesta Texas for Saturday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))) (Event.location_? (?= (LocationKeyphrase.apply \"Six Flags Fiesta Texas\")))))))"
  },
  {
    "original_sentence": "The later. What will the weather be like?",
    "parse": "(Yield (Execute (ChooseCreateEvent (Latest) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Too bad",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make an event for Tuesdayat 3pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "The location should be Brooklyn Botanical Garden",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Brooklyn Botanical Garden\"))))))"
  },
  {
    "original_sentence": "Move my dinner date at McDonalds to the Jack-in-the-Box Drive-Through",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner date\")) (Event.location_? (?= (LocationKeyphrase.apply \"McDonalds\")))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Jack-in-the-Box Drive-Through\"))))))"
  },
  {
    "original_sentence": "I also need to move my lunch date from Starbucks to the Chop House.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch date\")) (Event.location_? (?= (LocationKeyphrase.apply \"Starbucks\")))))))) (Event.location_? (?= (LocationKeyphrase.apply \"the Chop House\"))))))"
  },
  {
    "original_sentence": "Can you change location of our softball game from Smith Field to Anderson Park?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"softball game\")) (Event.location_? (?= (LocationKeyphrase.apply \"Smith Field\")))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Anderson Park\"))))))"
  },
  {
    "original_sentence": "Please set up a meeting between the call this morning and the party tonight",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"call\"))) (Morning))))) x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"party\"))) (Night)))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeAndConstraintBetweenEvents x0 x1)) (Event.end_? (DateTimeAndConstraintBetweenEvents x0 x1)))))))"
  },
  {
    "original_sentence": "Either is fine.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Do I have anything between my Doctors appointment and my Grocery run?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBetweenEvents (^(Event) EmptyStructConstraint) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Doctors appointment\"))))) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Grocery run\"))))))))) 0L))"
  },
  {
    "original_sentence": "Okay, can you make a new event \"Afternoon Nap To Forget About Problems\" between \"Lunch break\" and \"Grocery run\"?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Lunch break\"))))) x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Grocery run\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Afternoon Nap To Forget About Problems\")) (Event.start_? (DateTimeAndConstraintBetweenEvents x0 x1))) (Event.end_? (DateTimeAndConstraintBetweenEvents x0 x1)))))))"
  },
  {
    "original_sentence": "The first one works",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I can't believe it's this hot out, what day is it?",
    "parse": "(Yield (Today))"
  },
  {
    "original_sentence": "Search all the travelling I have scheduled. Are any not work-related?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Traveling\"))))"
  },
  {
    "original_sentence": "Okay. Schedule travel meeting in Seattle from April 10th to 13th.",
    "parse": "(let (x0 (MD 10L (April))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"travel meeting\")) (Event.start_? (DateTime.date_? (?= x0)))) (Event.end_? (DateTime.date_? (?= (nextDayOfMonth x0 13L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Seattle\"))))))))"
  },
  {
    "original_sentence": "Hmm, well, I need to schedule a meeting for April 10th then, and please start it at 2pm until 5pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (MD 10L (April)) (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "Schedule a date between the dinner party and dance party",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"date\")) (Event.start_? (DateTimeAndConstraint (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner party\")))))) (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dance party\"))))))))))))"
  },
  {
    "original_sentence": "The first one is best thanks",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "do I have anything else scheduled Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "what is after the dinner part?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "I need to know what's the second invite in my schedule?",
    "parse": "(Yield (FindNumNextEvent (^(Event) EmptyStructConstraint) 2L))"
  },
  {
    "original_sentence": "what is the 2nd Event on my sched for saturday",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)) 2L))"
  },
  {
    "original_sentence": "What is my 2nd event today?",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (Today) (^(Event) EmptyStructConstraint)) 2L))"
  },
  {
    "original_sentence": "Please create a meeting at 10am tomorrow morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "yes right ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "That's not correct, please cancel it.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "please cancel it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cancel my meeting with Ruth, I dont like her",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ruth\")))))))))))"
  },
  {
    "original_sentence": "this is why sparta thinks that I am yes that it is no",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "FNVJSKCANFKS",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "girls are so catty dont you think",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "Delete all meetings this week. I am ill.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Please delete my meeting for later today.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventForRestOfToday (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Dont do that",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "I need to cancel a meeting later than that one",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (^(Event) EmptyStructConstraint) (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))))"
  },
  {
    "original_sentence": "yes!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "arrange a meeting with Mike and his manager for tomorrow",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mike\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "I like the 2nd one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I am going to be with Abby and her Skip tomorrow",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager (FindManager x0))))))))))"
  },
  {
    "original_sentence": "Second one please",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I have amanda and her boss coming in on Friday",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"amanda\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "When is my next day with nothing in my calendar?",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Can you schedule a dinner of sunday with mike?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"mike\")))))))))))"
  },
  {
    "original_sentence": "Oh no, I have plans on Sunday. Can we please make it not on a weekend?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "pick the 2nd. And make a backpacking trip for sunday",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"backpacking trip\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday))))))))))"
  },
  {
    "original_sentence": "The weekend will not work for me, change it please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "The first one works, also for next week make me an event next weekend",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (NextWeekend)))))))"
  },
  {
    "original_sentence": "Actually, have that not be on the weekend.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Schedule a personal training session around 10 AM tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"personal training session\")) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Yes this works. and then could you make something around 12 PM this Friday with Kim for Lunch?",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Lunch\")) (Event.start_? (DateTimeConstraint (TimeAround (NumberPM 12L)) (NextDOW (Friday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))))))"
  },
  {
    "original_sentence": "Can you update my Gambling Night to start around 9 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Gambling Night\")))))) (Event.start_? (DateTime.time_? (TimeAround (NumberPM 9L)))))))"
  },
  {
    "original_sentence": "Cancel the game friday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"game\"))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Also please decline the sales meeting from Kyle on Thursday.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Cancel any appointment I have this evening",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Evening)))))))))"
  },
  {
    "original_sentence": "Cancel it for me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Set a time for me to talk with Sara after what we discussed at the meeting.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"talk\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sara\")))))))))))"
  },
  {
    "original_sentence": "When is the meeting with Craig",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Craig\")))))))))"
  },
  {
    "original_sentence": "what about with Greg?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Greg\"))))))"
  },
  {
    "original_sentence": "Okay. How about the meeting with Susan?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Susan\"))))))"
  },
  {
    "original_sentence": "hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "please do",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "i would like to reschedule my lunch with barak",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"barak\"))))))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "what does my schedule look like next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "schedule a lunch with Barak and his wife for Tuesday at 1:00 pm please",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "barak obama",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "look up barak",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "co-worker sync",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "tuesday plans",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "wednesday schedule",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "what do i have planned with barak obama",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"barak obama\"))))))"
  },
  {
    "original_sentence": "what do i have planned with Barak Obama",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barak Obama\"))))))"
  },
  {
    "original_sentence": "what do i have planned with barack obama",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"barack obama\"))))))"
  },
  {
    "original_sentence": "what do i have planned with cher roydon?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"cher roydon\"))))))"
  },
  {
    "original_sentence": "do i have lunch available this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"lunch\")) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "do i have plans on friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "setup lunch with barack obama on friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"barack obama\")))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "chat ID",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "What is the phone number of Lil Jon's in Bellevue?",
    "parse": "(Yield (Place.phoneNumber (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Lil Jon's in Bellevue\"))))))"
  },
  {
    "original_sentence": "What is the phone number of intermedia in Bellevue?",
    "parse": "(Yield (Place.phoneNumber (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"intermedia in Bellevue\"))))))"
  },
  {
    "original_sentence": "what is the number for Fascinating Rhythm in Reno?",
    "parse": "(Yield (Place.phoneNumber (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Fascinating Rhythm in Reno\"))))))"
  },
  {
    "original_sentence": "Has Lisa responded to the meeting request I sent?",
    "parse": "(Yield (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lisa\"))))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lisa\"))))))))"
  },
  {
    "original_sentence": "Can you see if John has accepted it?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Is Robert invited to attend it?",
    "parse": "(Yield (allows (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Robert\"))) (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "okay thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Is Susan also invited?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Susan\"))))))"
  },
  {
    "original_sentence": "Hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Okay. I wanted to ask how the weather is like today",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "Alright thank you so much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Book a meeting today at 2pm with John.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))))"
  },
  {
    "original_sentence": "Create a one-hour event on Thursday starting at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (Noon)))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Call it \"Lunch\".",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"Lunch\")))))"
  },
  {
    "original_sentence": "Delete my 10 AM appointment",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberAM 10L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, now can you set up a meeting with Jenny's manager at 10 am?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberAM 10L)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jenny\"))))))))))))"
  },
  {
    "original_sentence": "Good, but make it an hour.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete my workout tomorrow",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"workout\"))))))))))"
  },
  {
    "original_sentence": "No please keep it for now.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you cancel my work presentation with Gary?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"work presentation\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Gary\"))))))))))))"
  },
  {
    "original_sentence": "No wait, leave it.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you delete my marathon event set for this Sunday at night?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"marathon\"))) (Night)))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you add a new meeting called \"Meet with Jim\" on Tuesday at 4pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Meet with Jim\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Actually can you change that meeting to 5:00 pm?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))) (intension (NumberPM 5L)))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "what is the weather going to be like tomorrow?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "What is the chance of rain in Norfolk, VA?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Norfolk, VA\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "What is the chance of rain tomorrow in Norfolk, VA?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (rainPrecipProbability) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Norfolk, VA\"))) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "What is the chance of rain tomorrow in Carrollton?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (rainPrecipProbability) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Carrollton\"))) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "Is it going to be cold on Halloween?",
    "parse": "(Yield (IsCold (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextHolidayFromToday (Holiday.Halloween)))))))"
  },
  {
    "original_sentence": "What is the high on Halloween?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextHolidayFromToday (Holiday.Halloween)))))))"
  },
  {
    "original_sentence": "Hi, can you please add a working lunch with Luke on Tuesday from 12:30 til 1:45 pm?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Tuesday)) (HourMinutePm 12L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"working lunch\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 1L 45L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Luke\"))))))))))))"
  },
  {
    "original_sentence": "That is correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "OK",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add Mary to that",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\"))))))))))"
  },
  {
    "original_sentence": "That looks correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Reschedule my orthodontist appointment from this Tuesday to next.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"orthodontist appointment\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply (toWeeks 1)))))))))"
  },
  {
    "original_sentence": "No, make it next Wednesday.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday))))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "This appointment will be at Dearborn and Division Streets",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Dearborn and Division Streets\"))))))"
  },
  {
    "original_sentence": "yes and can you add directions",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceNavigation))"
  },
  {
    "original_sentence": "Set up a meeting with Karl and Cher",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karl\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher\")))))))))))"
  },
  {
    "original_sentence": "second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "change date to may 9th",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 9L (May)) (Event.subject_? (?~= \"date\"))))))) (Event.start_? (DateTime.date_? (?= (MD 9L (May))))))))"
  },
  {
    "original_sentence": "update event",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "make may 9th meeting with Karl and Cher",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (MD 9L (May))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karl\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher\"))))))))))))"
  },
  {
    "original_sentence": "second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "show event",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "delete wed meeting",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "OK. bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Will you find time between 3 pm and 7 pm on Sunday for choir practice?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"choir practice\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 7L)))))))))"
  },
  {
    "original_sentence": "Change the time to 4pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "That is good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change the time to 5pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "That looks good!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create a tentative meeting for tomorrow morning from 8 to 9.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 9L))))) (Event.showAs_? (?= (ShowAsStatus.Tentative))))))))"
  },
  {
    "original_sentence": "Do I have anything scheduled this weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))) 0L))"
  },
  {
    "original_sentence": "Can you cancel my events on Saturday?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Make sure I don't have anything scheduled after that.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Put dinner with friends on New Years eve at 8pm.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "That should be scheduled for two hours.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "What are my upcoming events that are longer than 1 hour",
    "parse": "(FenceAggregation)"
  },
  {
    "original_sentence": "I need a meeting scheduled with my team",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser))))))))"
  },
  {
    "original_sentence": "wait a second",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "pls submit the confirmation",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "yes!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to talk to Mary for a meeting next week.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\")))))))))))"
  },
  {
    "original_sentence": "What is Mary's address?",
    "parse": "(Yield (Person.officeLocation (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\"))))))))"
  },
  {
    "original_sentence": "the 2nd one is the best",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What will the date be in a month?",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "Add shopping with mom to my calendar for next Saturday at 10 am",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Please put shopping with mom for three hours",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Also make an event for 4pm tomorrow to go to a baseball game.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go to a baseball game\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "create staff meeting on monday at 4",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"staff meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "it's good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add dinner with mom after my staff meeting.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Add dinner with Helen after my last staff meeting on Wednesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (Event.end (FindLastEvent (EventOnDate (NextDOW (Wednesday)) (Event.subject_? (?~= \"staff meeting\")))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Helen\")))))))))))"
  },
  {
    "original_sentence": "Perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What will the temperature be in Des Moine tomorrow?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Des Moine\"))) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "That is all for now.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "OK!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you make an appointment with my boss?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))))))"
  },
  {
    "original_sentence": "the second one will be best",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Great can I make this meeting last an hour longer",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (addDurations (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint)))) (toHours 1)))))))"
  },
  {
    "original_sentence": "Can you check to see if I have any events next month with Greg?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Greg\")))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))))))"
  },
  {
    "original_sentence": "move it to the next week on same day.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (DateTime.date_? (?= (adjustByPeriod (DateTime.date (Event.start x0)) (toWeeks 1))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "I need to create an appointment for tomorrow morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Morning) (Tomorrow))))))"
  },
  {
    "original_sentence": "Im going to need something later.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "A little later than that please.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "The second one works, thank you.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need a meeting with Brian tomorrow afternoon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Afternoon) (Tomorrow))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brian\")))))))))))"
  },
  {
    "original_sentence": "i need to move my 5pm meeting up to 3pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 5L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "It should be an hour long",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "cancel that appointment",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "No, don't cancel. Instead change the time to 10 AM",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add to my calendar that I have brunch with Zarnak on Sunday at 1:00PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"brunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Zarnak\")))))))))))"
  },
  {
    "original_sentence": "Change the time to 2pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Yes that looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks. And also follow it up with Yoga Session at 3 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Yoga Session\")) (Event.start_? (?= (TimeAfterDateTime (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Yes please make the yoga session for an hour.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "lunch with mom friday afternoon",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "LOOK IS CORRECT",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I will be meeting my coworkers at Dorsia tomorrow at 8.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L)))) (Event.location_? (?= (LocationKeyphrase.apply \"Dorsia\")))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Set up meeting with coworkers at 8.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberAM 8L)))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "What events do I have scheduled for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you find my doctors appointment for friday ?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"doctors appointment\")))))))"
  },
  {
    "original_sentence": "Move Doctor's Appointment to 2pm to 3pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Doctor's Appointment\")))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Let me think a minute..",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Can you make it later in the day please?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "first one looks good",
    "parse": "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you find my compliance event this week?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"compliance\")) (ThisWeek))))))"
  },
  {
    "original_sentence": "I meant my complaints event next month",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.subject_? (?~= \"complaints\")) (FullMonthofMonth (NextMonth))))))"
  },
  {
    "original_sentence": "Ok! Now tell me when is the D&D?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"D&D\")))))))"
  },
  {
    "original_sentence": "Im sorry I meant Warhammer 40K in August",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.subject_? (?~= \"Warhammer 40K\")) (FullMonthofMonth (August))))))"
  },
  {
    "original_sentence": "Find my Laying Down Tile event",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Laying Down Tile\"))))))"
  },
  {
    "original_sentence": "Sorry I meant the cabinet replacement with Elli in May.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (& (Event.subject_? (?~= \"cabinet replacement\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\"))))) (FullMonthofMonth (May))))))"
  },
  {
    "original_sentence": "Can you set up a lunch with Mark between the fishing trip and hunting trip?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"fishing trip\"))))) x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"hunting trip\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTimeAndConstraintBetweenEvents x0 x1))) (Event.end_? (DateTimeAndConstraintBetweenEvents x0 x1))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\"))))))))))))"
  },
  {
    "original_sentence": "Good",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Could you set up a coffee break between the Ski meeting and Lunch break.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Ski Meeting\"))))) x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Lunch break\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"coffee break\")) (Event.start_? (DateTimeAndConstraintBetweenEvents x0 x1))) (Event.end_? (DateTimeAndConstraintBetweenEvents x0 x1)))))))"
  },
  {
    "original_sentence": "Either of those.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Hey man, I need to call Colton. What's his number?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Colton\"))))))))"
  },
  {
    "original_sentence": "Okay. Tell me if he has an office and where it's located at?",
    "parse": "(Yield (Person.officeLocation (PersonFromRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Ok. Let me see what his email is",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "schedule a meeting tomorrow at noon to go over the june budget with purchasing",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go over the june budget\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))))))"
  },
  {
    "original_sentence": "I don't want anything to do with the budget meeting, but I have to - change it to later in the day.",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "Schedule it for the following day",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1))))))))"
  },
  {
    "original_sentence": "Yes looks great and fix it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add Mark and nina to it",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"nina\")))))))))))"
  },
  {
    "original_sentence": "Cancel all future meetings with Tom.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "What time is my meeting today?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "What time does it end?",
    "parse": "(Yield (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "I'll be there, thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you add Anise to the meeting?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Anise\"))))))))))"
  },
  {
    "original_sentence": "yes it looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have any meetings with Harry this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harry\")))) (EventDuringRange (^(Event) EmptyStructConstraint) (WeekOfDateNew (Today))))))) 0L))"
  },
  {
    "original_sentence": "What is the other event?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (?= (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "delete my 9am appointment for tomorrow",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What else do I have scheduled for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Do I have any events on wednesday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "What's my next appointment anywhere on my calendar?",
    "parse": "(Yield (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L))"
  },
  {
    "original_sentence": "Do I have anything going on Sunday between 4-6 pm?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)) (TimeToTime (NumberPM 4L) (NumberPM 6L)))))) 0L))"
  },
  {
    "original_sentence": "Ok move it to monday for the same time",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Monday)))))))))"
  },
  {
    "original_sentence": "confirmed looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "can you schedule \"organizing\" for Tuesday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"organizing\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))))))"
  },
  {
    "original_sentence": "The First one works great",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Schedule a meeting between 8 and 10am tomorrow",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeAndConstraint x0 (TimeAfterDateTime x0 (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Can you set alarm for meeting with Paige",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "add meeting with Wade on Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wade\")))))))))))"
  },
  {
    "original_sentence": "Meeting time is 11 AM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "great.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When does it say I'm going to that play?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"play\"))))))"
  },
  {
    "original_sentence": "create meeting on saturday in china",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))) (Event.location_? (?= (LocationKeyphrase.apply \"china\")))))))"
  },
  {
    "original_sentence": "The 2nd one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What will the weather be like in Beijing on Tuesday?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Beijing\"))) (DateTime.date_? (?= (NextDOW (Tuesday))))))"
  },
  {
    "original_sentence": "How warm will it be during the company outing Tuesday evening?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"company outing\"))) (Evening))))))))"
  },
  {
    "original_sentence": "How about Tokyo?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Tokyo\"))) (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "create dentist appointment tuesday at 2",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "ok fine thanks for set the schedule",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "that's good thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please recall me for that appointment.",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "ok fine no problem",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you schedule a meeting with Samantha on Saturday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Samantha\")))))))))))"
  },
  {
    "original_sentence": "make it for a day that is not on the weekend",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "let's do the first one and schedule a Power Yoga for Sunday",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Power Yoga\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday))))))))))"
  },
  {
    "original_sentence": "Hey that weekend will not work so change it.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Hello, I need help with my calendar doctor appointments, can you do that?",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "create a meeting for wednesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday))))))))"
  },
  {
    "original_sentence": "The earlier one",
    "parse": "(Yield (Execute (ChooseCreateEvent (Earliest) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What is the current weather in Lake Jackson, TX?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Lake Jackson, TX\"))) (?= (Now))))"
  },
  {
    "original_sentence": "What will the weather be tomorrow in Lake Jackson, TX?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Lake Jackson, TX\"))) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "IS it going to rain tonight in Lake Jackson, TX?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Lake Jackson, TX\"))) (DateTimeConstraint (Night) (Today)))))"
  },
  {
    "original_sentence": "Will it be windy tomorrow in Lake Jackson?",
    "parse": "(Yield (IsWindy (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Lake Jackson\"))) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "What is Saturdays forecast in Lake Jackson, TX?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Lake Jackson, TX\"))) (DateTime.date_? (?= (NextDOW (Saturday))))))"
  },
  {
    "original_sentence": "What is the title of the meeting I am in currently?",
    "parse": "(Yield (Event.subject (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (Now) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "What is the weather for tomorrow",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "Im in Orlando. Now, make sure the weather is clear for the Performance Review.",
    "parse": "(Yield (IsSunny (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Orlando\"))) (?= (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Performance Review\"))))))))))"
  },
  {
    "original_sentence": "Okay, now tell me what I have scheduled a month from right now",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (adjustByPeriodDuration (Now) (PeriodDuration.apply (toMonths 1))) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Please change it to Travel to Miami.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"Travel to Miami\")))))"
  },
  {
    "original_sentence": "Please add my eye appointment on Tuesday to my calendar for 2 p.m.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"eye appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "put lunch on the calendar that day at 1 pm and after the eye appointment I need to check my emails for work.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Do I have a meeting at Panara today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.location_? (?= (LocationKeyphrase.apply \"Panara\"))))))) 0L))"
  },
  {
    "original_sentence": "Can you schedule a meeting at Panara with Jim please?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \"Panara\"))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))))))))))"
  },
  {
    "original_sentence": "Could you also add lunch at 10:",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (NextTime (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "yes thats great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Could you show me what is scheduled this afternoon please",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Afternoon))))"
  },
  {
    "original_sentence": "I need to cancel my date Friday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"date\"))))))))))"
  },
  {
    "original_sentence": "Yes cancel",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Wait... is it too late to cancel that request?",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add a doctor's appointment on Monday at 8:00 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Actually I don't need to see the doctor. Cancel that.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Please set up a new event for me",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "No",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Change the time",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Please change the time to 3pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Please place a lunch date with my mother tomorrow for two hours at Beale Street.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Please enter a lunch date with my mother tomorrow at noon for two hours.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Please enter a lunch date entitled \"mom\" at noon tomorrow for two hours.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"mom\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "Okay. Thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is the weather in Richmond, VA tomorrow?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Richmond, VA\"))) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "What is the 7 day forecast for Richmond?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Richmond\"))) (DateTime.date_? (NextPeriod (toDays 7)))))"
  },
  {
    "original_sentence": "When is it going to rain again?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "What was the high today?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "Richmond, VA",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"Richmond, VA\")))))))"
  },
  {
    "original_sentence": "What was the high temperature in Richmond, VA today?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Richmond, VA\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "What was yesterday's weather in St. Clairsville, OH?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"St. Clairsville, OH\"))) (DateTime.date_? (?= (Yesterday)))))"
  },
  {
    "original_sentence": "What is the weather tomorrwo at Virginia Beach, VA?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Virginia Beach, VA\"))) (?= (Now))))"
  },
  {
    "original_sentence": "What is the weather tomorrow at Virginia Beach, VA?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Virginia Beach, VA\"))) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "When is the best time of the year to visit Mount Rushmore?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Mount Rushmore",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "I need an hour long appointment at 4 tomorrrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 4L)))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Name the appointment \"staff meeting\".",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"staff meeting\")))))"
  },
  {
    "original_sentence": "It's been pushed back to 3PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Looks great. Will Jimmy be in town this same evening?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FencePeopleQa))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Anyone tentative for bowling tomorrow night?",
    "parse": "(Yield (> (size (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (Event.subject_? (?~= \"bowling\"))) (Night)))))) (ResponseStatusType.TentativelyAccepted))) 0L))"
  },
  {
    "original_sentence": "yes",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Who has declined for bowling tomorrow night?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (Event.subject_? (?~= \"bowling\"))) (Night)))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "have there been any maybes for book club this weekend?",
    "parse": "(Yield (> (size (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"book club\")) (ThisWeekend)))))) (ResponseStatusType.TentativelyAccepted))) 0L))"
  },
  {
    "original_sentence": "Add coffee with Annie to my schedule on Friday at 8 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"coffee\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Annie\")))))))))))"
  },
  {
    "original_sentence": "Yes but also add Fannie",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fannie\"))))))))))"
  },
  {
    "original_sentence": "ok accept my request add fannie thank you",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "okay thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "make an appointment with John's boss at today 7 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 7L)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))))))"
  },
  {
    "original_sentence": "ok!make it with John's boss at today 7p.m.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 7L)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))))))"
  },
  {
    "original_sentence": "I need a 1-1 with John today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (?= (Today)))) (Event.isOneOnOne_? (?= true))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))))"
  },
  {
    "original_sentence": "cancell",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "OK",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what are my all day events?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.isAllDay_? (?= true))))"
  },
  {
    "original_sentence": "Can you add Scott, AJ, Pat, and Brian to that event?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scott\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"AJ\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Pat\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brian\")))))))))))"
  },
  {
    "original_sentence": "Sure, add that to my schedule.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Also add John to the event tommorrow.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))))"
  },
  {
    "original_sentence": "Can you cancel the event instead?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Hey lets make a meeting for next week with Jake and his manager with Elli and his manager.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (& (AttendeeListHasRecipient (FindManager x0)) (AttendeeListHasRecipient x1))) (AttendeeListHasRecipient (FindManager x1)))))))))"
  },
  {
    "original_sentence": "Great",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Set up a meeting with",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "yes",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "yes",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Confirm meeting with Jake and his manager with Elli and his manager.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1)))))))))"
  },
  {
    "original_sentence": "yes the first one. schedule a meeting with Jane, Joe, Josh and their boss for friday",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joe\")))))) (do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\")))))) (AttendeeListHasRecipient x0)) (AttendeeListHasRecipient (FindManager x0))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Josh\"))))))))))))))"
  },
  {
    "original_sentence": "I need to wake up at 10",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"wake up\")) (Event.start_? (?= (NextTime (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Can you set it for 30 minutes earlier and mark it on calendar",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (PeriodDurationBeforeDateTime (Execute (refer (& (^(DateTime) roleConstraint (Path.apply \"start\")) (extensionConstraint (DateTime.time_? (^(Time) EmptyStructConstraint)))))) (PeriodDuration.apply :duration (toMinutes 30))))))))"
  },
  {
    "original_sentence": "Do I have a nap planned later in the day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Event.subject_? (?~= \"nap\")) (Execute (refer (& (^(Time) roleConstraint (Path.apply \"end\")) (extensionConstraint (^(Time) EmptyStructConstraint))))))))) 0L))"
  },
  {
    "original_sentence": "Make it later",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "the first one was good",
    "parse": "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "sounds good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "did i have any staff meetings last November?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"staff meetings\")) (FullMonthofPreviousMonth (November)))))) 0L))"
  },
  {
    "original_sentence": "Thank you for telling me that. When did I have a dinner date last June?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"dinner date\")) (FullMonthofPreviousMonth (June))))))))"
  },
  {
    "original_sentence": "did i have anything else last june?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofPreviousMonth (June))))))) 0L))"
  },
  {
    "original_sentence": "Delete dance practice tomorrow night",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (Event.subject_? (?~= \"dance practice\"))) (Night)))))))))"
  },
  {
    "original_sentence": "What is happening at noon tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (Noon)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "okay any other event tomorrow on my calendar",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Thank you. Cancel that latter and keep the other one.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath (BottomResult))) (extensionConstraint (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Yeah. Cancel it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have anything next week",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Find Wild River Grille in Reno",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Wild River Grille in Reno\")))"
  },
  {
    "original_sentence": "Do they cater large party groups and have a large room for a large group of people?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Can you find the Twisted Fork in Reno?",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Twisted Fork in Reno\")))"
  },
  {
    "original_sentence": "Do they accept groups?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "what the weather in chicago",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"chicago\"))) (?= (Now))))"
  },
  {
    "original_sentence": "it going to raining that day",
    "parse": "(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "are any days that going to sunny out",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "what the weather in Alaska yesterday",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Alaska\"))) (DateTime.date_? (?= (Yesterday)))))"
  },
  {
    "original_sentence": "what is today forecast for Tokyo, Japan",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Tokyo, Japan\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "is there going to be any snow one of this day",
    "parse": "(Yield (WillSnow (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "is there any rain heading this way in tokyo",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Schedule a 3 hour afternoon hike.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"hike\")) (Event.start_? (DateTime.time_? (Afternoon)))) (Event.duration_? (?= (toHours 3)))))))"
  },
  {
    "original_sentence": "2nd one please.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "That evening, let's plan on a 2 hour dinner.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTimeConstraint (Evening) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint))))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "the 2nd one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you make a meeting for me tomorrow at 7 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "Plans changed , can you make it for 2 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "That's perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Is my meeting tomorrow organized by my manager?",
    "parse": "(Yield (== (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))) (FindManager (toRecipient (CurrentUser)))))"
  },
  {
    "original_sentence": "is the brainstorming session organized by my boss?",
    "parse": "(Yield (== (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"brainstorming session\")))))) (FindManager (toRecipient (CurrentUser)))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Please add dinner with Frank on Saturday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Frank\")))))))))))"
  },
  {
    "original_sentence": "make it an hour",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Is there anything later in the day?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "arange dinner on 1:00pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (NextTime (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "Add birthday dinner for mom, at Sam's on Thursday at 6 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"birthday dinner for mom\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 6L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Sam's\")))))))"
  },
  {
    "original_sentence": "On Friday, where do I need to go for my appointment?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "When is my appointment scheduled then if it isnt on Friday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "So I don't have anything on my schedule at all on Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Make an event for me for Thursday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday))))))))"
  },
  {
    "original_sentence": "Can you tell me the next event I have today?",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (Today) (^(Event) EmptyStructConstraint)) 1L))"
  },
  {
    "original_sentence": "Does Peking Chinese Buffet in Athens have takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Peking Chinese Buffet in Athens\"))))))"
  },
  {
    "original_sentence": "Can I buy takeout from Nelly's Tavern in London?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Nelly's Tavern in London\"))))))"
  },
  {
    "original_sentence": "does Queen Street Cafe & Grill in Hawaii do takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Queen Street Cafe & Grill\"))))))"
  },
  {
    "original_sentence": "does Montana Ale Works in Bozeman do takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Montana Ale Works in Bozeman\"))))))"
  },
  {
    "original_sentence": "Good morning",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "can you please tell me the weather forcast for today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "Is there any rain in the forcast for today?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "Will it be windy today?",
    "parse": "(Yield (IsWindy (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "Will there be any rain this week?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeek)))))"
  },
  {
    "original_sentence": "create magic camp on monday at 8",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"magic camp\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have any doctors appointments this week that are not in Kent?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"doctors appointments\")) (Event.location_? (negate (?= (LocationKeyphrase.apply \"Kent\"))))) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Can you show me my events planned for outside of Seattle?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \"Seattle\"))))))"
  },
  {
    "original_sentence": "Show me my events that aren't in Switzerland",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \"Switzerland\"))))))"
  },
  {
    "original_sentence": "Do I have a basketball practice scheduled for next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"basketball practice\")) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Do I have one for the following week?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (WeekOfDateNew (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toWeeks 1)))))))"
  },
  {
    "original_sentence": "Do I have any practices scheduled for the next month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"practices\")) (FullMonthofMonth (NextMonth)))))) 0L))"
  },
  {
    "original_sentence": "Am I going to a soccer game on Tuesday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"soccer game\")))))) 0L))"
  },
  {
    "original_sentence": "Is the team listed on my event?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Is my 4 pm meeting with John or Marty?",
    "parse": "(Yield (allows (orConstraint (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marty\")))) (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 4L)) (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Change Jennie's Ob Gyn appointment to 9 am to 10:00 am on Wednesday.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 9L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Jennie's Ob Gyn appointment\")))))) (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 10L)))))))))"
  },
  {
    "original_sentence": "Yeah that's fine.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Is Outback Steakhouse in Carson City a family friendly restaurant?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Outback Steakhouse in Carson City\"))))))"
  },
  {
    "original_sentence": "is Applebee's in Carson City family friendly?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Applebee's in Carson City\"))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Is The Shack in Carson City a good place for families?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"The Shack in Carson City\"))))))"
  },
  {
    "original_sentence": "Change my meeting",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Try to change my meeting.",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "put on \"appointment\" with manager tomorrow morning 9.00 to 9.00 am",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"appointment\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 9L))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))))))))"
  },
  {
    "original_sentence": "yes right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add Katie my manager to appointment",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Katie\"))))))))))"
  },
  {
    "original_sentence": "I want to update my Maintenance Project on Saturday.",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "I want to change the time of my Maintenance Project on Saturday",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Create Maintenance Project for Saturday at 1 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Maintenance Project\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "maybe?",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Change the time of Maintenance Project to start at 12:15 PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Maintenance Project\")))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 12L 15L)))))))"
  },
  {
    "original_sentence": "Does L'Etoile in Madison have a full bar",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"L'Etoile in Madison\"))))))"
  },
  {
    "original_sentence": "Does Taylor's in Loomis happen to have a bar?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Taylor's in Loomis\"))))))"
  },
  {
    "original_sentence": "does Middlesex Diner in Carlisle have a full bar?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Middlesex Diner in Carlisle\"))))))"
  },
  {
    "original_sentence": "Find Shae's Tavern in Reno",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Shae's Tavern in Reno\")))"
  },
  {
    "original_sentence": "meeting cancel today",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "meeting cancel today",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "yes cancel the appointment at noon",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (Noon)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Cancel my appointment at 12PM",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 12L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "i attend my meet on another day",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a spa meeting with Sara on Friday at 4:00 for 2 hours.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"spa meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 4L))))) (Event.duration_? (?= (toHours 2)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sara\")))))))))))"
  },
  {
    "original_sentence": "that look perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "add Amanda to spa meeting too",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"spa meeting\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amanda\"))))))))))"
  },
  {
    "original_sentence": "Looks good, thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Thank you. Can you check to see if I have anything with Mark this month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today)))))))"
  },
  {
    "original_sentence": "Search for any appointments I have on Tuesday and cancel them.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "WHERE IS MY NEXT MEETING",
    "parse": "(Yield (Event.location (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))"
  },
  {
    "original_sentence": "Who else is attending the meeting?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Add Mark to the event at Hell's Kitchen",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (?= (LocationKeyphrase.apply \"Hell's Kitchen\"))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\"))))))))))"
  },
  {
    "original_sentence": "Yes, but Dan Schoffel's on the council too, add him to this meeting.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Schoffel\"))))))))))"
  },
  {
    "original_sentence": "Let's confirm yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make my Auto Repair Appointment for tomorrow at 1 PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Auto Repair Appointment\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Make it end at 2:30 pm, just in case.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (HourMinutePm 2L 30L)))))))"
  },
  {
    "original_sentence": "Make an appointment to go to the Dry Cleaners at 11:15 am tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go to the Dry Cleaners\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinuteAm 11L 15L))))))))"
  },
  {
    "original_sentence": "Make the dry cleaners a lunch date with mom instead I can do both since they are close.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I'd like the change the time from 9-11",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "What is Patti's email address?",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Patti\"))))))))"
  },
  {
    "original_sentence": "Well",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you make an event for tomorrow at 4pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (?= (NumberPM 4L)) (Tomorrow))))))"
  },
  {
    "original_sentence": "Yes this looks much better",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What time is my meeting for tomorrow",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Put hiking on the calendar for this weekend.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"hiking\")) (Event.start_? (DateTime.date_? (ThisWeekend)))))))"
  },
  {
    "original_sentence": "Yes, option 2 looks good.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "create a timer",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "hi, i need help with my calendar",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "schedule a meeting with zach for tomorrow late morning",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (LateMorning) (Tomorrow))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"zach\")))))))))))"
  },
  {
    "original_sentence": "The lower one",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Great, thanks. I also need a meeting tomorrow with Franklin, in the afternoon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Afternoon) (Tomorrow))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Franklin\")))))))))))"
  },
  {
    "original_sentence": "Hi, can you update a dinner I have scheduled tomorrow at 5pm to 6pm instead?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L))))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Actually, change it back.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "What time is the sales meeting today?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"sales meeting\"))))))))"
  },
  {
    "original_sentence": "Can you cancel this event?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "That is correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "cancel the appointment that was after the sales meeting",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (^(Event) EmptyStructConstraint) (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"sales meeting\"))))))))))))))"
  },
  {
    "original_sentence": "Cancel all appointments after 11 on August 19",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Change my dentist appointment to Tuesday. Never mind change it to Monday.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Monday)))))))))"
  },
  {
    "original_sentence": "that is it thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Delete the dentist and replace with work instead.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist\")))))) (do (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"work\")) (Event.start_? (?= (Event.start x0)))) (Event.duration_? (?= (Event.duration x0))))))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id x0))))))"
  },
  {
    "original_sentence": "Extend work for four hours.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"work\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toHours 4))))))))"
  },
  {
    "original_sentence": "Reduce my work appointment by half and then increase it by 1.5 times",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "I want to know my events for this coming Monday.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Ok what's between 3 and 6pm tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (Tomorrow) (^(Event) EmptyStructConstraint) (NumberPM 3L) (NumberPM 6L))))"
  },
  {
    "original_sentence": "Thanks - How about between 7 and 10 pm on Friday?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDateFromTimeToTime (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Friday)) (^(Event) EmptyStructConstraint) (NumberPM 7L) (NumberPM 10L)))))"
  },
  {
    "original_sentence": "Create a meeting with Ashley and Johnson",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ashley\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Johnson\")))))))))))"
  },
  {
    "original_sentence": "Choose the first time",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Add a meeting with Jesse and his skip next week.",
    "parse": "(let (x0 (PersonName.apply \"Jesse\")) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))) (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))))))))))))"
  },
  {
    "original_sentence": "Looks great",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need to change the meeting I had scheduled with Elli and his skip to tomorrow afternoon sometime.",
    "parse": "(let (x0 (PersonName.apply \"Elli\")) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))))))))))) (Event.start_? (DateTimeConstraint (Afternoon) (Tomorrow)))))))"
  },
  {
    "original_sentence": "I need my 6pm meeting deleted from today's calendar.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 6L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "It doesn't matter whether you come in first, in the middle of the pack, or last. You can say, 'I have finished.' There is a lot of satisfaction in that.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make some time to walk to dog tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"walk to dog\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "for the one time",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "The 2nd one works much better",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "out of the office friday at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L)))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
  },
  {
    "original_sentence": "At 7 pm I am going to the festival so put that on the schedule.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"going to the festival\")) (Event.start_? (?= (NextTime (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "OK!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a grocery trip 3 weeks from now",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"grocery trip\")) (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply (toWeeks 3)))))))))"
  },
  {
    "original_sentence": "Actually make it at 2:00 3 weeks from now.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (DateAtTimeWithDefaults (adjustByPeriod (DateTime.date (Now)) (toWeeks 3)) (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "that's exactly right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great, can you delete whatever I have at this time Sunday?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Sunday)) (DateTime.time (Now))) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Yeah is it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "make a meeting on 10.8.2019",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (MDY 8L (toMonth 10L) (Year.apply 2019L))))))))"
  },
  {
    "original_sentence": "I want the afternoon one.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (Afternoon))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "thanks!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "show my next week events in my calender",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "Put a meeting with Simon on my schedule for tomorrow at 1pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Simon\")))))))))))"
  },
  {
    "original_sentence": "Please schedule a meeting for next week Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (DowOfWeekNew (Monday) (NextWeekList))))))))"
  },
  {
    "original_sentence": "Schedule the meeting for next week Monday at 5:00pm.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^((Constraint DateTime)) roleConstraint (Path.apply \"start\")) (^(DateTime) ConstraintTypeIntension)) (intension (?= (DateAtTimeWithDefaults (DowOfWeekNew (Monday) (NextWeekList)) (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have anything scheduled for 2pm tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Schedule an appointment for the dentist at 2pm tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"appointment for the dentist\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Change the title to Dental Appointment.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^((Constraint String)) roleConstraint (Path.apply \"subject\")) (extensionConstraint (alwaysTrueConstraintConstraint (^(String) AlwaysTrueConstraint)))) (intension (?= \"Dental Appointment\")))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change my meeting for next week Monday to next week Tuesday, same time.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (DowOfWeekNew (Monday) (NextWeekList)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.date_? (?= (DowOfWeekNew (Tuesday) (NextWeekList))))))))"
  },
  {
    "original_sentence": "Change my meeting for next week Monday",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What time is my dentist appointment?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\")))))))"
  },
  {
    "original_sentence": "how long will it take me to get to the dentist's office",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Can you update my dentist appointment to start at 9:30 am and end at 11 am?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\"))))) x1 (DateAtTimeWithDefaults (DateTime.date (Event.start x0)) (HourMinuteAm 9L 30L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (NumberAM 11L)))))))))"
  },
  {
    "original_sentence": "Looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Put don't eat lunch from 11AM to 2PM on March 3rd.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (MD 3L (March)) (NumberAM 11L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"don't eat lunch\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 2L)))))))))"
  },
  {
    "original_sentence": "great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "create work meeting on tuesday at 9",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"work meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 9L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "show me my meetings for tomorrow.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What the first one ?",
    "parse": "(Yield (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 1L)) (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "What is the next event?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Thank you, now what flights do I have scheduled?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"flights\"))))"
  },
  {
    "original_sentence": "General calendar please.",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Tell me what's events are on my schedule for this month.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today))))))"
  },
  {
    "original_sentence": "Post Office visit tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Post Office visit\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "Second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Delete my one-on-one with Maggie",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.isOneOnOne_? (?= true)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Maggie\"))))))))))))"
  },
  {
    "original_sentence": "ok! then find the meeting about the maggie",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"maggie\"))))))))"
  },
  {
    "original_sentence": "Change the ending time to 10:30 AM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L)))))))"
  },
  {
    "original_sentence": "Yes this looks correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "NICE",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have a luncheon scheduled with Jason and his team this week?",
    "parse": "(let (x0 (PersonName.apply \"Jason\")) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"luncheon\")) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))))))) (ThisWeek))))) 0L)))"
  },
  {
    "original_sentence": "please remove David Crim from that",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David Crim\")))))))))))"
  },
  {
    "original_sentence": "That's great, thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please add Daisy to the Luncheon.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Luncheon\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Daisy\"))))))))))"
  },
  {
    "original_sentence": "That works.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "does fusion india in bothell have waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"fusion india in bothell\"))))))"
  },
  {
    "original_sentence": "Does M3 in Reno have waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"M3 in Reno\"))))))"
  },
  {
    "original_sentence": "are there waiters in Dacha Diner in Seattle?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Dacha Diner in Seattle\"))))))"
  },
  {
    "original_sentence": "This morning I need breakfast at 11am in my schedule. Jeff, Pete, Timmy, Tommy, and Bobby will be joining.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"breakfast\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberAM 11L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeff\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Pete\"))))))) (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Timmy\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tommy\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bobby\")))))))))))))"
  },
  {
    "original_sentence": "Yes, that is correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When am I going hiking with Mary, Karen, Kate, and Natalie?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"hiking\")) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\"))) (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\"))) (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kate\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Natalie\")))))))))))))"
  },
  {
    "original_sentence": "Add a gym session tomorrow night with Cam, Jack, Becky, and Ron.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"gym session\")) (Event.start_? (DateTimeConstraint (Night) (Tomorrow)))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cam\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jack\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Becky\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ron\"))))))))))))"
  },
  {
    "original_sentence": "Those do not work",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Do I have a sales meeting early next week?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"sales meeting\")) (EarlyDateRange (NextWeekList)))))))"
  },
  {
    "original_sentence": "Do I have any sales meetings late next week?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"sales meeting\")) (LateDateRange (NextWeekList)))))))"
  },
  {
    "original_sentence": "what about later this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (LateDateRange (ThisWeek)))))) 0L))"
  },
  {
    "original_sentence": "When is my next luncheon with Roxie Hart?",
    "parse": "(Yield (Event.start (FindNumNextEvent (& (Event.subject_? (?~= \"luncheon\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Roxie Hart\"))))) 1L)))"
  },
  {
    "original_sentence": "Great. Will her supervisor be there?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "When do I next meet with Ashley?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ashley\")))) 1L)))"
  },
  {
    "original_sentence": "Is her boss going to attend?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Please show the meeting I have coming up with Yolanda.",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Yolanda\"))))))))"
  },
  {
    "original_sentence": "Is Yolanda's boss among the attendees?",
    "parse": "(Yield (allows (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Yolanda\"))))))) (Execute (refer (extensionConstraint (^((List Attendee)) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Can you add a jog to my calendar sometime between Monday and Thursday of next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"jog\")) (Event.start_? (DateTime.date_? (DowToDowOfWeek (Monday) (Thursday) (NextWeekList))))))))"
  },
  {
    "original_sentence": "The second one looks good",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Put on last weeks team building exercise Jill as one of the participants .",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"team building exercise\")) (LastWeekNew)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jill\"))))))))))"
  },
  {
    "original_sentence": "No it should be two hours long",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete my meeting with Jon last week",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jon\")))) (LastWeekNew)))))))))"
  },
  {
    "original_sentence": "yes that the one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please add my May 1, 2019 doctor's appointment at 2 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (MDY 1L (May) (Year.apply 2019L)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Please make doctor's appointment for three hours.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor's appointment\")))))) (Event.duration_? (?= (toHours 3))))))"
  },
  {
    "original_sentence": "Can you check at what time was the meeting in the past week?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (LastWeekNew)))))))"
  },
  {
    "original_sentence": "What did I have Thursday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Thursday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What about Friday?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Friday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "When was my last meeting with Karen?",
    "parse": "(Yield (Event.start (FindLastEvent (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\")))) (EventBeforeDateTime (Now) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "can you show me the time for the meeting with george ?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"george\")))))))))"
  },
  {
    "original_sentence": "Let's make it 11.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "That looks perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I also need a 1-1 with Sara sometime next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.isOneOnOne_? (?= true))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sara\")))))))))))"
  },
  {
    "original_sentence": "Make it 12PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "The President says I have to work this weekend. Change my brunch to be not on the weekend.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"brunch\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Move the Unmovable Meeting to not be on the weekend.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Unmovable Meeting\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please make my meeting call to be not on the weekend",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"meeting call\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "delete dinner event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\")))))))))"
  },
  {
    "original_sentence": "Yep.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What else do I have scheduled this weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend)))))"
  },
  {
    "original_sentence": "Add coffee with Annie at the Starbucks near her house on March 2 at 9 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"coffee\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 2L (March)) (NumberAM 9L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Starbucks near her house\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Annie\")))))))))))"
  },
  {
    "original_sentence": "Good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add another coffee with Annie at the same location and time tentatively on March 9.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (& (Event.subject_? (?= \"coffee\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 9L (March)) (DateTime.time (Event.start x0)))))) (Event.location_? (?= (Event.location x0)))) (Event.showAs_? (?= (ShowAsStatus.Tentative)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Annie\"))))))))))))"
  },
  {
    "original_sentence": "That's it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make an appointment with Doc today at 4PM.",
    "parse": "(do (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Doc\")))))) (do (^(Event) EmptyStructConstraint) (do (Path.apply \"attendees\") (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 4L))))))))))"
  },
  {
    "original_sentence": "Yes, it looks right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I don't know where I am having dinner with Carson.",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carson\"))))))))))"
  },
  {
    "original_sentence": "Please forward me the address.",
    "parse": "(Yield (PlaceDescribableLocation (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "OK, FIX AN ALARM AT 5.00 AM SO THAT I CAN WAKE UP IN TIME",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Okay, thank you for your help.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "thans",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Set a date for a picnic in the park on Saturday at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"picnic\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (Noon))))) (Event.location_? (?= (LocationKeyphrase.apply \"the park\")))))))"
  },
  {
    "original_sentence": "Can you change the duration of the picnic to two hours?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"picnic\")))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Do I have anything on my schedule before noon on Saturday?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (Noon))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateBeforeTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))) 0L)))"
  },
  {
    "original_sentence": "On Saturday at 8 am, schedule a hair appointment.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"hair appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Create a new event for Oct 20 lasting 5 days. This will be for my vacation.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"vacation\")) (MD 20L (October)) (toDays 5)))))"
  },
  {
    "original_sentence": "Great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I am going to be in Seattle on friday for 89 days",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.location_? (?= (LocationKeyphrase.apply \"Seattle\"))) (NextDOW (Friday)) (toDays 89)))))"
  },
  {
    "original_sentence": "Perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add vacation to New York on January 1st for 10 days.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (& (Event.subject_? (?= \"vacation\")) (Event.location_? (?= (LocationKeyphrase.apply \"New York\")))) (MD 1L (January)) (toDays 10)))))"
  },
  {
    "original_sentence": "Can you decline the baking lessons for me?",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"baking lessons\"))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Yes, thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great! Decline my Cupcake Making Party and say that I've been eating too many cupcakes lately.",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I've been eating too many cupcakes lately\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Cupcake Making Party\"))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Yes, thanks! Decline my Rehearsal Dinner and say that I'm not going to be in the wedding any more.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I'm not going to be in the wedding any more\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Rehearsal Dinner\"))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "an you show me all events for next january",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (January)))))"
  },
  {
    "original_sentence": "Is there anything I need to do on January 15th?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 15L (January)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "What is on my schedule for the second week of February?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NumberWeekOfMonth 2L (February)))))"
  },
  {
    "original_sentence": "I have a meeting with Jack Johnsey",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jack Johnsey\"))))))))))"
  },
  {
    "original_sentence": "I'll take the August 19th meeting",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 19L (August))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Move the meeting with Damon to August 16th",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon\")))))))) (Event.start_? (DateTime.date_? (?= (MD 16L (August))))))))"
  },
  {
    "original_sentence": "Yes this looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you very much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Is there a sales lunch tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"sales lunch\")))))) 0L))"
  },
  {
    "original_sentence": "Can you send an invite to Tom for this?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\"))))))))))"
  },
  {
    "original_sentence": "That looks correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Will I have a guitar lesson this afternoon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"guitar lesson\"))) (Afternoon))))) 0L))"
  },
  {
    "original_sentence": "Okay that's all I need. Thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "make a appointment for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "The first one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Is there a Hockey Game scheduled for tomorrow night after 5pm?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (Tomorrow) (Event.subject_? (?~= \"Hockey Game\")) (NumberPM 5L))))) 0L))"
  },
  {
    "original_sentence": "Will there be a Birthday Party this Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"Birthday Party\")))))) 0L))"
  },
  {
    "original_sentence": "Are there any birthday parties at all this month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"birthday parties\")) (FullMonthofMonth (Date.month (Today))))))) 0L))"
  },
  {
    "original_sentence": "When's my next coffee date on a saturday",
    "parse": "(Yield (Event.start (FindNumNextEvent (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"coffee date\"))) 1L)))"
  },
  {
    "original_sentence": "When is the brainstorming session on Monday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"brainstorming session\"))))))))"
  },
  {
    "original_sentence": "I'll be at that. Let them know.",
    "parse": "(Yield (EventAttendance :event (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "please create an event for next friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "Make a meeting with Abby this morning",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Morning) (Today))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "hold on a second",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "ok schedule the 1",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "who does Abby work with?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "yeah that looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you add breakfast with Jamie tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"breakfast\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamie\")))))))))))"
  },
  {
    "original_sentence": "make a appointment tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Yeah the first works well",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make an appointment with alex at today 5 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 5L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"alex\")))))))))))"
  },
  {
    "original_sentence": "when is my doctor appointment",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor appointment\")))))))"
  },
  {
    "original_sentence": "change the schedule on tomorrow 5 pm",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "change the appointment to march 21",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (MD 21L (March))))))))"
  },
  {
    "original_sentence": "confirmed looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you make a dentist appointment for me tomorrow at 2pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "remove calendar event that is scheduled at 9 am on Friday, April 12",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (MD 12L (April)) (NumberAM 9L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Update event",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "update even scheduled for Friday at 3pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "find event",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Find event scheduled for thursday",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Do I have any other tasks for the day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))) 0L))"
  },
  {
    "original_sentence": "I'd like to schedule an event for 12:30 pm on Tuesday for a Client Meeting, and then make a Upper Management meeting at 3:30 to 4:30 pm on the same day.",
    "parse": "(let (x0 (NextDOW (Tuesday)) x1 (DateAtTimeWithDefaults x0 (HourMinutePm 3L 30L))) (do (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Client Meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults x0 (HourMinutePm 12L 30L)))))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Upper Management meeting\")) (Event.start_? (?= x1))) (Event.end_? (?= (TimeAfterDateTime x1 (HourMinutePm 4L 30L))))))))))"
  },
  {
    "original_sentence": "Thanks you are such a life saver.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "create work conference on thursday at 3",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"work conference\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Lollipops are delicious",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "arrange for lunch",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"lunch\")))))"
  },
  {
    "original_sentence": "add this at mcdonalds",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"mcdonalds\"))))))"
  },
  {
    "original_sentence": "Big toe.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please add lunch tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "What time is my afternoon appointment friday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) (Afternoon)))))))"
  },
  {
    "original_sentence": "The 1PM option works better.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Hold up just a second.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "No, I need a different time.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you make lunch be at 12 pm instead of 1?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "that looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule a meeting with Dan Daniels on Friday at 7",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 7L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Daniels\")))))))))))"
  },
  {
    "original_sentence": "Make an event for 4:30 pm on Saturday for A concert at the House of Blues.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"concert\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (HourMinutePm 4L 30L))))) (Event.location_? (?= (LocationKeyphrase.apply \"House of Blues\")))))))"
  },
  {
    "original_sentence": "Modify the concert at the House of Blues to add 2 hours to make it 4:30 to 6:30 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (& (Event.start_? (DateTime.time_? (?= (HourMinutePm 4L 30L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 6L 30L))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "Can you cancel my dinner with Chris for tomorrow?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chris\")))) (EventOnDate (Tomorrow) (Event.subject_? (?~= \"dinner\")))))))))))"
  },
  {
    "original_sentence": "No, look for dinner with Sarah.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (alwaysTrueConstraintConstraint (^((List Attendee)) AlwaysTrueConstraint))) (intension (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\"))))))))))"
  },
  {
    "original_sentence": "Yeah delete it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Ok great now what else can you help me with",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "I neeed to create a event for next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (NextWeekList))))))"
  },
  {
    "original_sentence": "Add attend Michelle's 21st birthday party this Sunday from 3:00 PM to 5:00 PM please.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"attend Michelle's 21st birthday party\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "it looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule a Friday night bar hop with Greg and Alexa on the 7th starting at 7:45 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Friday night bar hop\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 7L) (HourMinutePm 7L 45L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Greg\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alexa\"))))))))))))"
  },
  {
    "original_sentence": "Looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please Cancel my Brunch Meeting with Todd Packer and Chet on the 17th at 11:45 am.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (nextDayOfMonth (Today) 17L) (HourMinuteAm 11L 45L)) (& (Event.subject_? (?~= \"Brunch Meeting\")) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Todd Packer\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chet\"))))))))))))))"
  },
  {
    "original_sentence": "create work conference on tuesday at 3",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"work conference\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "guitar",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "put meeting with doctor",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Can you make an event for next Monday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))))))"
  },
  {
    "original_sentence": "kek",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have a meeting with Jenny this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jenny\")))) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Do I have any meetings tomorrow morning?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Morning))))) 0L))"
  },
  {
    "original_sentence": "Am I meeting with John tomorrow morning",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))) (Morning))))) 0L))"
  },
  {
    "original_sentence": "cancel the all meeting today",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Create an event for Monday at 2:30 as Vet",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Vet\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (HourMinutePm 2L 30L))))))))"
  },
  {
    "original_sentence": "I'd like for you to decline the lunch meeting event I had scheduled for noon today",
    "parse": "(Yield (EventAttendance :event (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Do I have any events for today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Can you set an appointment at the Santa Barbara Bowl on the 12, in Santa Barbara ca?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 12L)))) (Event.location_? (?= (LocationKeyphrase.apply \"Santa Barbara Bowl in Santa Barbara ca\")))))))"
  },
  {
    "original_sentence": "Decline the event, please",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Cancel any other events planned",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Hi, I'm going to be on location tomorrow at noon with my crew: Drew, George, Pam, and Julian.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon)))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Drew\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"George\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Pam\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Julian\"))))))))))))"
  },
  {
    "original_sentence": "Yes, can you make the location \"set\"?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"set\"))))))"
  },
  {
    "original_sentence": "That looks good to me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I'm going to Arby's with Brit, Brigette, Ash, and Layla on the 2nd at 2:15 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Arby's\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 2L) (HourMinutePm 2L 15L))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brit\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brigette\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ash\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Layla\"))))))))))))"
  },
  {
    "original_sentence": "Yes. More people are coming to Arby's. They are Don, John, Hillary and Donald.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Don\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Hilary\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Donald\")))))))))))"
  },
  {
    "original_sentence": "I want to close some time off to read, so set an event \"Me time\" showing as Out Of Office. Start it at 2pm tomorrow and have it last 4 hours.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Me time\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.duration_? (?= (toHours 4)))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
  },
  {
    "original_sentence": "Great, clear my calendar for Friday too please.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "could you please add a meeting on Friday at 3pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "can you please tell a good author of a book..?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "I need to know all of my \"tentative\" events this week so I can decide what to cancel.",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.showAs_? (?= (ShowAsStatus.Tentative))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))"
  },
  {
    "original_sentence": "Do I have a tentative event today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.showAs_? (?= (ShowAsStatus.Tentative))) (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "add manager meeting at 2 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"manager meeting\")) (Event.start_? (?= (NextTime (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "No, include Mark Sanchez and Maria Mendez.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark Sanchez\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Maria Mendez\")))))))))))"
  },
  {
    "original_sentence": "What year does my car insurance have to be renewed?",
    "parse": "(Yield (Date.year (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"car insurance\")))))))))"
  },
  {
    "original_sentence": "Okay, please cancel the event.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes, please.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "okay thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what year was the big earth quake?",
    "parse": "(Yield (Date.year (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (Event.subject_? (?~= \"big earth quake\"))))))))))"
  },
  {
    "original_sentence": "There's a hockey game at the Blue Cross Arena on Saturday at 7 pm for 3 hours.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"hockey game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 7L))))) (Event.duration_? (?= (toHours 3)))) (Event.location_? (?= (LocationKeyphrase.apply \"Blue Cross Arena\")))))))"
  },
  {
    "original_sentence": "Right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "The Friday after that at 8 pm is a roller derby bout at the Deltaplex.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"roller derby bout\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Friday)) (NumberPM 8L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Deltaplex\")))))))"
  },
  {
    "original_sentence": "Looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "i wanna meet with scott at today 5 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 5L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"scott\")))))))))))"
  },
  {
    "original_sentence": "It's look good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "tanks for your help",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I havea nything after lunch tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (Tomorrow) (^(Event) EmptyStructConstraint) (Lunch))))) 0L))"
  },
  {
    "original_sentence": "Where did I have dinner last Friday night?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (previousDayOfWeek (Today) (Friday)) (Event.subject_? (?~= \"dinner\"))) (Night)))))))"
  },
  {
    "original_sentence": "What was scheduled last friday night?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (previousDayOfWeek (Today) (Friday)) (^(Event) EmptyStructConstraint)) (Night))))"
  },
  {
    "original_sentence": "who went with me?",
    "parse": "(Yield (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "ok well Sasha was there so add her",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sasha\"))))))))))"
  },
  {
    "original_sentence": "Yes. Did this dinner also happen last Wednesday?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (== (DateTime.date (Event.start (^(Dynamic) item x0))) (previousDayOfWeek (Today) (Wednesday))))))"
  },
  {
    "original_sentence": "hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "What is the weather for 07420",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"07420\"))) (?= (Now))))"
  },
  {
    "original_sentence": "what is the weather for new jersey",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"new jersey\"))) (?= (Now))))"
  },
  {
    "original_sentence": "will it snow this weekend in new jersey'",
    "parse": "(Yield (WillSnow (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"new jersey\"))) (DateTime.date_? (ThisWeekend)))))"
  },
  {
    "original_sentence": "is there a storm that will effect nj",
    "parse": "(Yield (IsStormy (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "what storm?",
    "parse": "(Yield (IsStormy (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "when will it snow in new jersey",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "whats the temeperature in kansas",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"kansas\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "whats the weather for emporia, kansas",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"emporia, kansas\"))) (?= (Now))))"
  },
  {
    "original_sentence": "I want to attend a football match tomorrow at 2 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"football match\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Great, can you make it last til 3?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "make \"attend a football match\" 2 - 3 pm Fri",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"attend a football match\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L)))))))))"
  },
  {
    "original_sentence": "attend a football match\" 2 - 3 pm Fri",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"attend a football match\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L)))))))))"
  },
  {
    "original_sentence": "Yes add Sam to that event thanks.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\"))))))))))"
  },
  {
    "original_sentence": "I want to add Wingfield Park as a location to my Game time event.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Game time\")))))) (Event.location_? (?= (LocationKeyphrase.apply \"Wingfield Park\"))))))"
  },
  {
    "original_sentence": "ok good work. Do I have anything else there?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (^(Dynamic) item x0))))) (Event.location_? (?= (Event.location (^(Dynamic) item x0)))))))) 0L))))"
  },
  {
    "original_sentence": "Find the Superbowl Watch Party at Gio's House for me",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Superbowl Watch Party\")) (Event.location_? (?= (LocationKeyphrase.apply \"Gio's House\"))))))))"
  },
  {
    "original_sentence": "do i have anything else at Gio's House",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Gio's House\"))))))) 0L))"
  },
  {
    "original_sentence": "Where is my vacation next year?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"vacation\")))))))"
  },
  {
    "original_sentence": "What else do i have there?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id x0)))) (Event.location_? (?= (Event.location x0)))))))"
  },
  {
    "original_sentence": "make a meeting with Abby tomorrow at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "who's Abby's manager?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))"
  },
  {
    "original_sentence": "it's fine",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "make that 45 minutes",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toMinutes 45))))))"
  },
  {
    "original_sentence": "yes, thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok! what about wednesday on my calander?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "I need an event for wednesday at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Its correct Thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Set up a lunch date with Jenny tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch date\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jenny\")))))))))))"
  },
  {
    "original_sentence": "That is not right please try that again",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "Schedule the lunch date for 1 Pm.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "please do that again.",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "ok. do that once more",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "Thanks. Add a fishing trip for all day Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"fishing trip\")) (NextDOW (Friday))))))"
  },
  {
    "original_sentence": "Schedule computer lab at Montgomery College on Tuesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"computer lab\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))) (Event.location_? (?= (LocationKeyphrase.apply \"Montgomery College\")))))))"
  },
  {
    "original_sentence": "I'm going out to eat next Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"eat\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "WAit a second",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "the eat at 1 pm will work best",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "gimme a second",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Yeah, that's right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "add drink to my calendar after that",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"drink\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Hold on a second.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Create an event for my convention from the 10th to the 13th",
    "parse": "(let (x0 (nextDayOfMonth (Today) 10L)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"convention\")) (DateAndConstraint x0 (nextDayOfMonth x0 13L)))))))"
  },
  {
    "original_sentence": "Name it Baseball Card convention.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"Baseball Card convention\")))))"
  },
  {
    "original_sentence": "Great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Mark that I will be in Guam for two weeks starting on November 29th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.location_? (?= (LocationKeyphrase.apply \"Guam\"))) (MD 29L (November)) (toWeeks 2)))))"
  },
  {
    "original_sentence": "That is what I wanted",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cancel my reminder to pick up Joe from school later today",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "cancel my Saturday appointment",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "No, just change the start to 3.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you find any meetings scheduled between 2 and 5 pm next Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (NextDOW (Friday)) (^(Event) EmptyStructConstraint) (NumberPM 2L) (NumberPM 5L))))"
  },
  {
    "original_sentence": "Create a new meeting for saturday morning",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Saturday)))))))"
  },
  {
    "original_sentence": "do I have any appointment on Sunday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Schedule John and Jennie's anniversary party on Sunday at 3:00 to 4:00 Pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"John and Jeanie's anniversary party\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L)))))))))"
  },
  {
    "original_sentence": "Is there a soccer match with Mia next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"soccer match\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mia\"))))) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Do I have game night with Karl Saturday night?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Saturday)) (& (Event.subject_? (?~= \"game night\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karl\")))))) (Night))))) 0L))"
  },
  {
    "original_sentence": "Is Dave invited to the lunch on Friday?",
    "parse": "(Yield (allows (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dave\"))) (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"lunch\")))))))))"
  },
  {
    "original_sentence": "Do I have a free hour before lunch?",
    "parse": "(let (x0 (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\"))))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.duration_? (?= (toHours 1))) (EventOnDateBeforeTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)))))) 0L)))"
  },
  {
    "original_sentence": "Can you see if ted's available for a brief sit-down before noon?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"brief sit-down\")) (Event.start_? (OnDateBeforeTime (Today) (Noon)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"ted\")))))))))))"
  },
  {
    "original_sentence": "what is today's date?",
    "parse": "(Yield (Today))"
  },
  {
    "original_sentence": "Hi, what do I have scheduled for tomorrow morning?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Morning))))"
  },
  {
    "original_sentence": "Do I have a meeting tomorrow morning?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Morning))))) 0L))"
  },
  {
    "original_sentence": "Okay, can you schedule a 9am meeting for tomorrow?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "Yep, looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Where is the budget meeting on March 1st",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 1L (March)) (Event.subject_? (?~= \"budget meeting\"))))))))"
  },
  {
    "original_sentence": "delete my april 29 appt",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 29L (April)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "hmm no dont cancel it actually",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "I need help with a meeting attendee list",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Do I have Sandy scheduled for any meetings this month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sandy\")))) (FullMonthofMonth (Date.month (Today))))))) 0L))"
  },
  {
    "original_sentence": "Go ahead and setup a meeting with Sandy next month.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sandy\")))))))))))"
  },
  {
    "original_sentence": "Oh shoot, I meant Andy",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Andy\"))))))"
  },
  {
    "original_sentence": "Let's change this to noon",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (Noon)))))))"
  },
  {
    "original_sentence": "I need to add a business trip to New York from the 4th to the 7th",
    "parse": "(let (x0 (nextDayOfMonth (Today) 4L)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"business trip to New York\")) (Event.start_? (DateTime.date_? (?= x0)))) (Event.end_? (DateTime.date_? (?= (nextDayOfMonth x0 7L)))))))))"
  },
  {
    "original_sentence": "Go with the second one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I will be in Kirkland for 3 days starting monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.location_? (?= (LocationKeyphrase.apply \"Kirkland\"))) (NextDOW (Monday)) (toDays 3)))))"
  },
  {
    "original_sentence": "Super",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Looks great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Miriam this Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Miriam\")))))))))))"
  },
  {
    "original_sentence": "Yes, the second one but I need to include Dr. Smith on the meeting.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I need to move today's board meeting to 1pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"board meeting\"))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Can you push it back a little.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Second.",
    "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "On second thought do you have an earlier time for the Bored Board Meeting?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Bored Board Meeting\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?< (Event.start x0)))))))"
  },
  {
    "original_sentence": "Choose option 2.",
    "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What do I have scheduled for Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Schedule time on Friday from 1pm to 3 pm to meditate.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"meditate\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L)))))))))"
  },
  {
    "original_sentence": "Create time to go shopping on Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go shopping\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "Mark my calendar as shopping from 4 to 6 pm on Friday.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"shopping\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 6L)))))))))"
  },
  {
    "original_sentence": "On Friday at 4 pm make an event called shopping.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"shopping\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Extend shopping from 4:30 PM until 6:00 PM.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (HourMinutePm 4L 30L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "Please book Eileen's end-of-year review on Thursday afternoon at Berkeley.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Eileen's end-of-year review\")) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Thursday))))) (Event.location_? (?= (LocationKeyphrase.apply \"Berkeley\")))))))"
  },
  {
    "original_sentence": "The first one. Also book a room for a Potluck on Fri at 11 am.",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Potluck\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 11L))))) (Event.location_? (roomRequest)))))))"
  },
  {
    "original_sentence": "I need a room in Berkeley.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (& (?= (LocationKeyphrase.apply \"Berkeley\")) (roomRequest))))))"
  },
  {
    "original_sentence": "that looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make a appointment for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "which account is this",
    "parse": "(Yield (CurrentUser))"
  },
  {
    "original_sentence": "Show my status as busy this Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.showAs_? (?= (ShowAsStatus.Busy))) (NextDOW (Monday))))))"
  },
  {
    "original_sentence": "Hi",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Schedule a meeting with Alex on Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex\")))))))))))"
  },
  {
    "original_sentence": "Update my meeting time at 2 pm in my calender.",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Check weather in CO",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"CO\"))) (?= (Now))))"
  },
  {
    "original_sentence": "check today weather in TX",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"TX\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "thans",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "thank u",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to set an appointment for lunch with tim tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"tim\")))))))))))"
  },
  {
    "original_sentence": "no, make it at 12 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "its works for me thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add Jack's name to the lunch please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jack\"))))))))))"
  },
  {
    "original_sentence": "no it is not long enough",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "I need the team building event next week moved to the 5th, and it's now going to be held at Pinstack in Allen",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"team building\")) (NextWeekList)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (DateTime.date_? (?= (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 5L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Pinstack in Allen\"))))))))"
  },
  {
    "original_sentence": "yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule bowling for Monday night at 7:00 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"bowling\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Please adjust the end time to 11",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 11L)))))))"
  },
  {
    "original_sentence": "mall visit at 10 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"mall visit\")) (Event.start_? (?= (NextTime (NumberPM 10L))))))))"
  },
  {
    "original_sentence": "delete mall visit at 10 pm",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 10L)) (Event.subject_? (?~= \"mall visit\"))))))))))"
  },
  {
    "original_sentence": "Is there a wedding this weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"wedding\")) (ThisWeekend))))) 0L))"
  },
  {
    "original_sentence": "what are the events tomorrow i have to attend",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "And the other one?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Move my lunch to 12PM please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "Yes, lunch at 12 is perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmUpdateAndReturnActionIntension (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.time_? (?= (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "Set my lunch time for 1 hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch time\")))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "cancel vacation days",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"vacation days\")))))))))"
  },
  {
    "original_sentence": "I like to eat poptarts.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make an event on Thursday for DInner at 5pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"DInner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "An inch longer than a Squirrel.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When am I having dinner with Josh?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Josh\"))))))))))"
  },
  {
    "original_sentence": "Change the recorded time of my meeting with Pam from last Tuesday",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Ok, Can you schedule a meeting for last Tuesday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (previousDayOfWeek (Today) (Tuesday))))))))"
  },
  {
    "original_sentence": "Move it to last monday instead.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (previousDayOfWeek (Today) (Monday))))))))"
  },
  {
    "original_sentence": "Can you make it at 2PM please?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "That is correct!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can I make a dentist appointment for morning?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (DateTime.time_? (Morning)))))))"
  },
  {
    "original_sentence": "Try a little earlier",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Not that early. Try a little later in the day.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Yes. Do I have anything later?",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (^(Event) EmptyStructConstraint) (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))) 0L)))"
  },
  {
    "original_sentence": "Did I accept Gadge's swim meet?",
    "parse": "(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Gadge's swim meet\"))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "How did I respond to the event tomorrow?",
    "parse": "(Yield (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "What was my response to the wedding meeting on Saturday?",
    "parse": "(Yield (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"wedding meeting\"))))))))"
  },
  {
    "original_sentence": "Take dog to Seger Dog Park Saturday morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Take dog to Seger Dog Park\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Saturday))))))))"
  },
  {
    "original_sentence": "Yes the 2nd one works well",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What is the weather at the dog park?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"the dog park\"))) (?= (Now))))"
  },
  {
    "original_sentence": "put the meeting with marry",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"marry\"))))))))))"
  },
  {
    "original_sentence": "The meeting is on Tuesday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Tuesday))))))))"
  },
  {
    "original_sentence": "Make me a meeting next friday at 5 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "Change that appointment to AM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (ConvertTimeToAM (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))))))))))))"
  },
  {
    "original_sentence": "Looks great thanks!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you make me a meeting next wednesday at 10 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "Wait I meant PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (ConvertTimeToPM (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))))))))))))"
  },
  {
    "original_sentence": "Yes that's perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you schedule me an event on May 20 at 8 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (MD 20L (May)) (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "Can you change that to PM please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (ConvertTimeToPM (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))))))))))))"
  },
  {
    "original_sentence": "I need to cancel my event for after 1 pm today.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (Today) (^(Event) EmptyStructConstraint) (NumberPM 1L)))))))))"
  },
  {
    "original_sentence": "That's it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule a meeting with Bill on Friday at 9:30 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteAm 9L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bill\")))))))))))"
  },
  {
    "original_sentence": "No, cancel that",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "When is my next meeting with Joan Allen?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joan Allen\")))) 1L)))"
  },
  {
    "original_sentence": "Please add a vacation from Sunday to Saturday for three weeks from now",
    "parse": "(let (x0 (ClosestDayOfWeek (DateTime.date (adjustByPeriodDuration (Now) (PeriodDuration.apply (toWeeks 3)))) (Sunday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"vacation\")) (DateAndConstraint x0 (nextDayOfWeek x0 (Saturday))))))))"
  },
  {
    "original_sentence": "add my birthday on the 25th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"birthday\")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 25L))))))))"
  },
  {
    "original_sentence": "make it for 4 hours at 1:00",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (Event.duration_? (?= (toHours 4)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please add a pedicure at 5:00 on the same day",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pedicure\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "move it to the 25th",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDay (Execute (refer (& (^(Date) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Day.apply 25L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please add drinks at 7:00",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"drinks\")) (Event.start_? (?= (NextTime (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please move drinks from April 6th to april 25th",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 6L (April)) (Event.subject_? (?~= \"drinks\"))))))) (Event.start_? (DateTime.date_? (?= (MD 25L (April))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete Lunch with Janice on Friday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (& (Event.subject_? (?~= \"Lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice\")))))))))))))"
  },
  {
    "original_sentence": "bleep bloop",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Book a Dinner Date tomorrow with Cait at 5:30 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Dinner Date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 5L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cait\")))))))))))"
  },
  {
    "original_sentence": "Meh",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "add this dinner date at mcdonalds",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner date\")) (Event.location_? (?= (LocationKeyphrase.apply \"mcdonalds\")))))))"
  },
  {
    "original_sentence": "The first one works well",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Do I have any meetings for the next 2 days?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (DateAndConstraint (Today) (adjustByPeriod (Today) (toDays 2))))))) 0L))"
  },
  {
    "original_sentence": "What is the other meeting?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "ok thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have 3 hours free tomorrow morning?",
    "parse": "(Yield (IsFree (RecipientAvailability (& (& (Event.start_? (DateTimeConstraint (Morning) (Tomorrow))) (Event.duration_? (?= (toHours 3)))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
  },
  {
    "original_sentence": "Can you schedule a three hour meeting tomorrow starting at 3:30 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 3L 30L)))) (Event.duration_? (?= (toHours 3)))))))"
  },
  {
    "original_sentence": "What does my schedule look like for Friday this week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (DowOfWeekNew (Friday) (ThisWeek)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "How about Saturday?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "When am I supposed to see Mark?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))))))))"
  },
  {
    "original_sentence": "How a bout a meeting on Sunday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday))))))))"
  },
  {
    "original_sentence": "I would like 1",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "When is the client meeting this month?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"client meeting\")) (FullMonthofMonth (Date.month (Today)))))))))"
  },
  {
    "original_sentence": "Who all is invited to that?",
    "parse": "(Yield (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "I need to meet with Dave later today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Today)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dave\")))))))))))"
  },
  {
    "original_sentence": "Choose the second option. Add Greg to the meeting.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I'm going to meet with Jenny some time after Dave.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dave\")))))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jenny\")))))))))))"
  },
  {
    "original_sentence": "im going to need to move that meeting even later. change it to 3pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Book Bellevue for 2 hours on monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))) (Event.duration_? (?= (toHours 2)))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Bellevue\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "The first one and add Brian to it.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Book Bellevue on Monday from 10am-12pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Bellevue\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 12L)))))))))"
  },
  {
    "original_sentence": "Yes, but can you now please add Brian to it?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brian\"))))))))))"
  },
  {
    "original_sentence": "That looks good, but please also add Iman to the meeting.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Iman\"))))))))))"
  },
  {
    "original_sentence": "no thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Create an event called \"ban previous user\" for this afternoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"ban previous user\")) (Event.start_? (DateTimeConstraint (Afternoon) (Today)))))))"
  },
  {
    "original_sentence": "No",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you remove the meeting at 12.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 12L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "No, I want to keep that.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "can you get appointment for car repair?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"car repair\")))))"
  },
  {
    "original_sentence": "Mark my calendar for 7:30 am tomorrow as business breakfast",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"business breakfast\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinuteAm 7L 30L))))))))"
  },
  {
    "original_sentence": "Can you schedule it 7:30 am to 9 am",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) x1 (DateAtTimeWithDefaults (DateTime.date (Event.start x0)) (HourMinuteAm 7L 30L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (NumberAM 9L)))))))))"
  },
  {
    "original_sentence": "Thanks, schedule my two hour meeting with Jennifer to start at 9:30 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (NextTime (HourMinuteAm 9L 30L)))) (Event.duration_? (?= (toHours 2)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer\")))))))))))"
  },
  {
    "original_sentence": "Please delete Tom from the meeting on Thursday with me and Tom.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\"))))))))))))"
  },
  {
    "original_sentence": "The bottom one",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please set up a show down with Damon Ellery next Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"show\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon Ellery\")))))))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Change you change it to Friday?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)))))))))"
  },
  {
    "original_sentence": "Create an event with Roland and my supervisor on Wednesday at 4.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 4L)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Roland\")))))) (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))))))))"
  },
  {
    "original_sentence": "also push back my meeting with louie to next day",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"louie\")))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (DateTime.date (Event.start x0)) (toDays 1)))))))))"
  },
  {
    "original_sentence": "Show some different timing.",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "When am I seeing my boss again?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Is Eleanor Roosevelt on my calendar attending any events? If so can I see it?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Eleanor Roosevelt\"))))))) 0L))"
  },
  {
    "original_sentence": "Thanks Your response",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Thanks For Your Response",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do i have any more meetings with just Eleanor for this month or next month?",
    "parse": "(do (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Eleanor\"))) (do (& (FullMonthofMonth (Date.month (Today))) (FullMonthofMonth (NextMonth))) (FenceDateTime)))"
  },
  {
    "original_sentence": "Does the meeting have a location?",
    "parse": "(Yield (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Can you tell me when I took my vacation last year?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"vacation\")) (FullYearofYear (LastYear))))))))"
  },
  {
    "original_sentence": "Can you tell me when i had the Dart game last year?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Dart game\")) (FullYearofYear (LastYear))))))))"
  },
  {
    "original_sentence": "create an event for manager meeting at 9 am Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"manager meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "Reschedule the manager meeting to 11am for an hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"manager meeting\")))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Which restaurant is the Lunch with Louis scheduled?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Louis\"))))))))))"
  },
  {
    "original_sentence": "Can I get a dark roast there?",
    "parse": "(FencePlaces)"
  },
  {
    "original_sentence": "Are they large enough to seat my party of 5?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Will I have to serve myself?",
    "parse": "(Yield (not (PlaceHasFeature (PlaceFeature.WaiterService) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Is there any alcohol served at Mojo Coffee House?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Mojo Coffee House\"))))))"
  },
  {
    "original_sentence": "WHEN AM I VACATIONING WITH JAMES, BILLY, JOHN AND AMY.",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"VACATIONING\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"JAMES\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"BILLY\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"JOHN\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"AMY\")))))))))))"
  },
  {
    "original_sentence": "Update Vacationing to add Cindy to it on Friday.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"Vacationing\"))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cindy\"))))))))))"
  },
  {
    "original_sentence": "Add Cindy to Vacationing with James, Billy, John and Amy",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Vacationing\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Billy\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\")))))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cindy\"))))))))))"
  },
  {
    "original_sentence": "Set the end time to 3 pm on the 4th of September.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (?= (DateAtTimeWithDefaults (MD 4L (September)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What is the ground speed of a laden swallow?",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "change the appointment time at 10.00 am - 10.30 am",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Delete that one then. I will then ask you to enter a new event.",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "please show my next events on my calender",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Make one for 5pm for dinner",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (NextTime (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Please add an event \"Camping\" with abby please",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Camping\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"abby\")))))))))))"
  },
  {
    "original_sentence": "nevermind",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Actually can you put that first one on my calendar",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "wait a minute",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Make it 4:30",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinutePm 4L 30L)))))))"
  },
  {
    "original_sentence": "wait",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Could you use the second available time provided?",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "How's tomorrow's meetings?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "How long is the hockey game tonight?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"hockey game\"))) (Night)))))))"
  },
  {
    "original_sentence": "ok thanks!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what about the basketball practice",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"basketball practice\")))))"
  },
  {
    "original_sentence": "Make a appointment for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Select first one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Delete Mother's day dinner from earlier this year.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (EventOnDate (HolidayYear (Holiday.MothersDay) (Date.year (Today))) (Event.subject_? (?~= \"dinner\")))))))))))"
  },
  {
    "original_sentence": "Delete the family reunion on last Sunday in August because I didn't go.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Sunday)) (Event.subject_? (?~= \"family reunion\"))))))))))"
  },
  {
    "original_sentence": "Yea it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you, that's all I needed",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what is the weather weds",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextDOW (Wednesday))))))"
  },
  {
    "original_sentence": "When is the next quarterly review meeting?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"quarterly review meeting\")) 1L)))"
  },
  {
    "original_sentence": "Ok, and was Jemma included on that?",
    "parse": "(Yield (allows (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jemma\"))) (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Book \"free time\" from 3 - 4 pm today.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Today) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"free time\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L)))))))))"
  },
  {
    "original_sentence": "Can you change my status to Working Elsewhere from 1 to 5 pm tomorrow?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.showAs_? (?= (ShowAsStatus.WorkingElsewhere))))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "hi",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Do I have anything betwee 4 and 7 tomorrow?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRangeDateTime (^(Event) EmptyStructConstraint) (DateTimeAndConstraint x0 (TimeAfterDateTime x0 (NumberPM 7L))))))) 0L)))"
  },
  {
    "original_sentence": "Add a meeting one hour before lunch on thursday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (PeriodDurationBeforeDateTime (DateAtTimeWithDefaults (NextDOW (Thursday)) (Lunch)) (PeriodDuration.apply :duration (toHours 1))))))))"
  },
  {
    "original_sentence": "YES THAT IS GOOD.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you add a meeting with Ben 2 hours after my appointment?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (adjustByPeriodDuration (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply :duration (toHours 2))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ben\")))))))))))"
  },
  {
    "original_sentence": "what time is the meeting with Carol?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carol\")))))))))"
  },
  {
    "original_sentence": "Will Alex be attending the Meeting with Carol?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carol\"))))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "cancel the meeting with carol",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carol\")))))))))))"
  },
  {
    "original_sentence": "yeah,it was",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make a appointment for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "What's on tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "the 2nd one needs to be cancelled",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Please do",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Move it around",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Happy Hour today 5 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Happy Hour\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Will it get over ninety degrees today?",
    "parse": "(Yield (> (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))) (toFahrenheit 90)))"
  },
  {
    "original_sentence": "When is Tax Day",
    "parse": "(Yield (NextHolidayFromToday (Holiday.TaxDay)))"
  },
  {
    "original_sentence": "Look for events in the last week of November.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NumberWeekFromEndOfMonth 1L (November)))))"
  },
  {
    "original_sentence": "I need to schedule a party on November 29th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"party\")) (Event.start_? (DateTime.date_? (?= (MD 29L (November)))))))))"
  },
  {
    "original_sentence": "Schedule a team meeting on Tuesday at 8:30 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (HourMinuteAm 8L 30L))))))))"
  },
  {
    "original_sentence": "Yes that looks great to me",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "yes, can you handle reminders for my exam schedules",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "WHAT ALL THE WORKS YOU CAN DO EXCEPT UPDATE AND CREATE EVENTS IN CALENDARR",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "I'm going to take a shower at 10",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"take a shower\")) (Event.start_? (?= (NextTime (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "That looks great, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "make end time as 11 am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "Good thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thanks ill ttyl",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Tell me everything I have for friday from noon to 5",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (NextDOW (Friday)) (^(Event) EmptyStructConstraint) (Noon) (NumberPM 5L))))"
  },
  {
    "original_sentence": "On Friday at 1:30, schedule a meeting for 1 hour.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 1L 30L)))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "I have another meeting right after that so schedule another meeting at 2:35 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (HourMinutePm 2L 35L)))))))"
  },
  {
    "original_sentence": "When is my first meeting for next week scheduled?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)) 1L))"
  },
  {
    "original_sentence": "Show me as \"Not Available\" during the first 2 weeks of January.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.showAs_? (?= (ShowAsStatus.Busy))) (MD 1L (January)) (toWeeks 2)))))"
  },
  {
    "original_sentence": "Is my schedule busy next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "Could you create an event titled \"breakfast\" for tomorrow at 8am?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"breakfast\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Is there a meeting on Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Can you put a reminder on my calendar for 10 am before the meeting?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"reminder\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Could you please tell me what meetings I will be attending with other people next month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint))) (FullMonthofMonth (NextMonth)))))"
  },
  {
    "original_sentence": "Great, thank you. I'm excited to eat ice cream soon! Do you know if I have any other parties or meetings with people invited in October? I'm looking forward to fall and trying to figure out my schedule.",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (October))))))) 0L))"
  },
  {
    "original_sentence": "Great. That's going to be an amazing meeting! Elli is so fun! Can you also tell me if I'm scheduled to attend any meetings with attendees in November?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (November))))))) 0L))"
  },
  {
    "original_sentence": "Delete the Monday 8 pm dinner",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 8L)) (Event.subject_? (?~= \"dinner\"))))))))))"
  },
  {
    "original_sentence": "yes surew",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok done",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make an event for practice on Sunday between 4-7pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"practice\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 7L)))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Update practice event so the time is 4-7:30pm",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"practice\"))))) x1 (DateAtTimeWithDefaults (DateTime.date (Event.start x0)) (NumberPM 4L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (HourMinutePm 7L 30L)))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Change church on Sunday to 8am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"church\"))))))) (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "Perfect thanks!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add brunch to my calendar after that.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"brunch\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Is brunch really a word?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Also add Brittany's Diner as the location.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Brittany's Diner\"))))))"
  },
  {
    "original_sentence": "No, hold that",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "set it as Bryan's Diner instead",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Bryan's Diner\"))))))"
  },
  {
    "original_sentence": "that will work",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Tell me what's going on today.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "OK!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to set a meeting at 10 am in conference room B.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberAM 10L)))) (Event.location_? (?= (LocationKeyphrase.apply \"conference room B\")))))))"
  },
  {
    "original_sentence": "Thanks, go ahead and extend that meeting by an hour.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toHours 1))))))))"
  },
  {
    "original_sentence": "Delete my Trip to the Japanese Gardens this fall.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Trip to the Japanese Gardens\")) (SeasonFall)))))))))"
  },
  {
    "original_sentence": "Yes, cancel this.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you create a Hawaii Vacation this winter?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Hawaii Vacation\")) (Event.start_? (DateTime.date_? (SeasonWinter)))))))"
  },
  {
    "original_sentence": "The 1st one works.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make Hawaii Vacation from Dec 2 to Dec 6th.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Hawaii Vacation\")))))) (& (Event.start_? (DateTime.date_? (?= (MD 2L (December))))) (Event.end_? (DateTime.date_? (?= (MD 6L (December)))))))))"
  },
  {
    "original_sentence": "Lowest temperature tomorrow",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "Add a switch game night to the weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"switch game night\")) (Event.start_? (DateTime.date_? (ThisWeekend)))))))"
  },
  {
    "original_sentence": "Actually, could you have it not be on the weekend?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you schedule a lunch for sunday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))))))"
  },
  {
    "original_sentence": "can we make it not on the weekend?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (negate (ThisWeekend)))))))"
  },
  {
    "original_sentence": "The second one is good",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "schedule beer crawl for saturday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"beer crawl\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))))))"
  },
  {
    "original_sentence": "sorry the weekend will not work",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Who has declined the church trip weekend party?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"church trip weekend party\")))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Who accepted that?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Has anyone accepted the camping invite yet?",
    "parse": "(Yield (> (size (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"camping\")))))) (ResponseStatusType.Accepted))) 0L))"
  },
  {
    "original_sentence": "Contact Elli and see if she wants to go to the bar anytime that isn't the weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"go to the bar\")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\")))))))))))"
  },
  {
    "original_sentence": "Just put in either of those times, both work for me.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thank you. Can you please setup a meeting not on the weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "You pick. I also have a staff meeting that's not on the weekend.",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"staff meeting\")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))))"
  },
  {
    "original_sentence": "Let's do the one on Monday. Please schedule date with Casey sometime this week. Preferably not the weekend.",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"date\")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend)))))) (Event.attendees_? (AttendeeListHasRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Casey\"))))))))))"
  },
  {
    "original_sentence": "Whats going on this week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
  },
  {
    "original_sentence": "cancel this tinny tim birthday event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"tinny tim birthday\")))))))))"
  },
  {
    "original_sentence": "Yes please cancel.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you, do I have anything for next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "How about the week after?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (WeekOfDateNew (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toWeeks 1)))))))"
  },
  {
    "original_sentence": "nice",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "create get to know you meeting on saturday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"get to know you meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))))))"
  },
  {
    "original_sentence": "Let me check.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "the second should be fine.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "On second thought, The first one is better.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "This will work just fine, thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Also, schedule dinner tonight at 7",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "hold on.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "go ahead and add that one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create a Dentist appointment event from 2:00 to 3:00 on March 5th, and set my status to Out of Office.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (MD 5L (March)) (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Dentist Appointment\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L))))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))))))))"
  },
  {
    "original_sentence": "Yes it's perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hi! Can you tell me if I have any plans on Saturday evening?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)) (Night))))"
  },
  {
    "original_sentence": "Schedule vet appointment on April 12.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"vet appointment\")) (Event.start_? (DateTime.date_? (?= (MD 12L (April)))))))))"
  },
  {
    "original_sentence": "Hi, could you move the HR Consulting to be on Tuesday.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"HR Consulting\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Tuesday)))))))))"
  },
  {
    "original_sentence": "That is good, do I have anything else later that afternoon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))) (Afternoon))))) 0L))"
  },
  {
    "original_sentence": "book me one hour Friday for lawn mowing",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lawn mowing\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "no, thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you tell me the name of George's manager?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"George\")))))))"
  },
  {
    "original_sentence": "Make a meeting with George at 11AM tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"George\")))))))))))"
  },
  {
    "original_sentence": "Yes. Who is George's manager?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"George\"))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is the event listed on July 22nd?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 22L (July)) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Please remind me to call Larry.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"call Larry\")))))"
  },
  {
    "original_sentence": "Cancel the event that comes later that Monday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Monday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "change the appointment time at 10.00 am - 10.30 am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))))))"
  },
  {
    "original_sentence": "When is my last appointment?",
    "parse": "(Yield (Event.start (FindLastEvent (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "This looks perfect thanks for the update",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you reschedule my meetings with Jon F and Jon K to next week?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "make a meeting with jon f and jon k in next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jon f\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jon k\"))))))))))))"
  },
  {
    "original_sentence": "when is the lunch tomorrow?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"lunch\"))))))))"
  },
  {
    "original_sentence": "I meant dinner",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"dinner\")))))"
  },
  {
    "original_sentence": "Any thing else?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "Do I have a meeting before the dinner party?",
    "parse": "(let (x0 (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner party\"))))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateBeforeTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))) 0L)))"
  },
  {
    "original_sentence": "How about events at Outback?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Outback\"))))))"
  },
  {
    "original_sentence": "Hi, can you please find my Shuffleboarding Competition?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Shuffleboarding Competition\"))))))"
  },
  {
    "original_sentence": "i meant to one in May in Florida",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.location_? (?= (LocationKeyphrase.apply \"Florida\"))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (May)))))))"
  },
  {
    "original_sentence": "when is my Go to the Mall",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Go to the Mall\")))))))"
  },
  {
    "original_sentence": "Sorry I meant when is my shopping trip in May",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.subject_? (?~= \"shopping trip\")) (FullMonthofMonth (May))))))"
  },
  {
    "original_sentence": "What about the one with with Abby for 3 hours?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.duration_? (?= (toHours 3))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))))"
  },
  {
    "original_sentence": "Where are we going for breakfast on Sunday?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"breakfast\"))))))))"
  },
  {
    "original_sentence": "Will I be able to get takeout from there?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Barking Frog\"))))))"
  },
  {
    "original_sentence": "Doe they offer waiters?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Can you tell me what time they open?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Is there a full bar at the Barking Frog?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"the Barking Frog\"))))))"
  },
  {
    "original_sentence": "Create a meeting with Jon on Saturday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jon\")))))))))))"
  },
  {
    "original_sentence": "i fix a meeting with jon at 10am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberAM 10L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jon\")))))))))))"
  },
  {
    "original_sentence": "no it should be an hour",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "arrange the meeting with Daren smith",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Daren smith\"))))))))))"
  },
  {
    "original_sentence": "Is there anything on wednesday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Make volleyball practice at 5PM tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"volleyball practice\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change the time to 5:15pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 5L 15L)))))))"
  },
  {
    "original_sentence": "Make the event go until 8 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "Can you make an event for Friday t3pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Hiii...Provide some instructions.",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Can you schedule an event for today at 4:00 p.m.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"event\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Can you remove the scheduled event on that same day from 05:00PM to 05:30PM?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 5L))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 5L 30L)))))))))))))"
  },
  {
    "original_sentence": "when is my doctor appointment?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor\")))))))"
  },
  {
    "original_sentence": "name it as \"dentist appointment\"",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"dentist appointment\")))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great, find me two hours for lunch next week with mom",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Make an event for Monday at 3pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "WHAT IS THE WEATHER TODAY IN CLEVELAND OHIO",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"CLEVELAND OHIO\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "what will the weather be on halloween in cleveland?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"cleveland\"))) (DateTime.date_? (?= (NextHolidayFromToday (Holiday.Halloween))))))"
  },
  {
    "original_sentence": "what is the weather currently in akron ohio",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"akron ohio\"))) (?= (Now))))"
  },
  {
    "original_sentence": "When is my flight to italy",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"flight to italy\")))))))"
  },
  {
    "original_sentence": "oops I meant when is my return from Europe in May?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.subject_? (?~= \"return from Europe\")) (FullMonthofMonth (May))))))"
  },
  {
    "original_sentence": "i want to know about my Cruise",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Cruise\"))))))"
  },
  {
    "original_sentence": "i meant the one during December in Greece",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.location_? (?= (LocationKeyphrase.apply \"Greece\"))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (December)))))))"
  },
  {
    "original_sentence": "Can you find me my Island Getaway?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Island Getaway\"))))))"
  },
  {
    "original_sentence": "Ahh sorry, I meant the the vacation in August.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.subject_? (?~= \"vacation\")) (FullMonthofMonth (August))))))"
  },
  {
    "original_sentence": "Order me a new toaster online. Mine is not working anymore.",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "put meeting with whity and rosii",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"whity\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"rosii\")))))))))))"
  },
  {
    "original_sentence": "Should I schedule more meetings with them?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "It is okay. Can you give me their email addresses?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I want to buy a good notebook, which store do you recommend?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Will I be in seattle tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \"seattle\"))) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "Do I have any meetings with Don coming up?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Don\"))))))) 0L))"
  },
  {
    "original_sentence": "Do I have something happening tonight?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Night))))) 0L))"
  },
  {
    "original_sentence": "Do I have a Doctors Visit soon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Doctors Visit\"))))) 0L))"
  },
  {
    "original_sentence": "Do I have my Cat CAll Contest tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"Cat CAll Contest\")))))) 0L))"
  },
  {
    "original_sentence": "Hello , please decline a lunch meeting with lora",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch meeting\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"lora\")))))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Yes cancel this lunch meeting.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Also decline Natalie's Hair Appointment for tomorrow.",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"Natalie's Hair Appointment\")))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Yes, cancel that for me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you tell me what event is after?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)))))))"
  },
  {
    "original_sentence": "Please set up a lunch with Susie on Tuesday. And also cancel my golf meeting for that day.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "ok fine put the lunch with susie on tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"susie\")))))))))))"
  },
  {
    "original_sentence": "The second one is better",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "CHECK FOR THE AVAILABILITY OF SUSIE'S SUPERVISOR",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"SUSIE\")))))))))))"
  },
  {
    "original_sentence": "Mark my schedule for Strength Training on Friday at 5 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Strength Training\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "What is the rating for Thai 101 in Reno?",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Thai 101 in Reno\"))))))"
  },
  {
    "original_sentence": "What about the place Flavors of India in Reno?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(LocationKeyphrase) AlwaysTrueConstraint)) (intension (LocationKeyphrase.apply \"Flavors of India in Reno\")))))"
  },
  {
    "original_sentence": "Please show me the rating of Haru in Reno",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Ruby Steakhouse in Reno\"))))))"
  },
  {
    "original_sentence": "hi, can you help me find a college?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Okay, what's on my schedule for next Tuesday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Extend that to 2 hours!",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "I need help scheduling recurring events on my calendar",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "Could you tell me what's on my schedule today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "How about tomorrow?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Do I have anything scheduled for Monday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Join the Outlook Meeting please.",
    "parse": "(Yield (joinEventCommand (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Outlook Meeting\"))))))))"
  },
  {
    "original_sentence": "could you find the meeting I have with Jeanna?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeanna\"))))))"
  },
  {
    "original_sentence": "I think that might be it.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Create an event title Pizza Party for July 22nd.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Pizza Party\")) (Event.start_? (DateTime.date_? (?= (MD 22L (July)))))))))"
  },
  {
    "original_sentence": "That may possibly work",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a Coffee Run for Monday at 7:30 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Coffee Run\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (HourMinuteAm 7L 30L))))))))"
  },
  {
    "original_sentence": "Create a client meeting with paige ashworth and cecelia waller on Friday from 2-4pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"client meeting\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"paige ashworth\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"cecelia waller\")))))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you mark my 2 PM event today with a ShowAs status of 'Out of Office'?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 2L)) (^(Event) EmptyStructConstraint)))))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))))))"
  },
  {
    "original_sentence": "what I got tomorry hun",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "i need an appointment",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Delete Chris from the meeting at the library.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"meeting\")))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chris\")))))))))))"
  },
  {
    "original_sentence": "i made an appointment with my mom",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "next week",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "good work",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "ok Thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "create turk meetup on monday at 3",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"turk meetup\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "yeah that looks perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "meet up couples for the day",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"meet up couples\")) (Event.start_? (DateTime.date_? (?= (Today))))))))"
  },
  {
    "original_sentence": "No. What date does Black Friday land on 3 years from now?",
    "parse": "(do (DoNotConfirm) (Yield (HolidayYear (Holiday.BlackFriday) (+ (Date.year (Today)) (Year.apply 3L)))))"
  },
  {
    "original_sentence": "What is the date of Labor Day 10 years from now?",
    "parse": "(Yield (HolidayYear (Holiday.LaborDay) (+ (Date.year (Today)) (Year.apply 10L))))"
  },
  {
    "original_sentence": "when is my appointment",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "i want meet my sister",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "appointment at 2pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (?= (NumberPM 2L)) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "may i help you",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "When is Mum coming around?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Schedule a meeting at 9 am tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "that's sounds good job",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what is the weather going to be like in NY tomorrow?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"NY\"))) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "I'm extending my vacation a day, can you add the 17th to my calendar also",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "can you please create a new event in my calendar for march 11",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (MD 11L (March))))))))"
  },
  {
    "original_sentence": "The first one works best.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thank you. Please name the appointment Dentist.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"Dentist\")))))"
  },
  {
    "original_sentence": "What events do I have after the dentist?",
    "parse": "(let (x0 (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist\"))))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)))))"
  },
  {
    "original_sentence": "What is on my calendar on March 11?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 11L (March)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Create event for tomorrow at 9 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"event\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 9L))))))))"
  },
  {
    "original_sentence": "Great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Friday out of the office",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (NextDOW (Friday)))))))"
  },
  {
    "original_sentence": "Where will the first Monday meeting be held?",
    "parse": "(Yield (Event.location (FindNumNextEvent (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)) 1L)))"
  },
  {
    "original_sentence": "Clear all my events scheduled for next Saturday, please.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I didn't mean to delete brunch, I'd like it back on.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "add appointment at 6pm on saturday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Would you cancel the lunch I have coming up?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))))))"
  },
  {
    "original_sentence": "Correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Am I having dinner with Lola and her boss this week?",
    "parse": "(let (x0 (PersonName.apply \"Lola\")) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))))))) (ThisWeek))))) 0L)))"
  },
  {
    "original_sentence": "add basketballl game on modnay at 8",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"basketballl game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "That would work just perfectly",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "working elsewhere next week. Reschedule all meetings",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Please delete my event at 2 pm today",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 2L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Schedule a meeting on Sunday in my events called \"John's meeting with new job\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"John's meeting with new job\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))))))"
  },
  {
    "original_sentence": "Actually, make it not during the weekend.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Schedule make pancakes for Saturday morning",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"make pancakes\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Saturday))))))))"
  },
  {
    "original_sentence": "I changed my mind, the weekend won't work. Make it not the weekend",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "27 IS OK. Can you make a Hike for saturday?",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.day_? (?= (Day.apply 27L))))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Hike\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))))))))"
  },
  {
    "original_sentence": "No, this weekend will not work after all.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Can you put out of office for Monday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (NextDOW (Monday))))))"
  },
  {
    "original_sentence": "Chang my status on Monday to out of office.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (NextDOW (Monday)))))))"
  },
  {
    "original_sentence": "Do I have anything on Monday to do?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "oh so kind of you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Let's mark me as away from 7-9pm on the 25th",
    "parse": "(let (x0 (DateAtTimeWithDefaults (nextDayOfMonth (Today) 25L) (NumberPM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 9L))))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))))))))"
  },
  {
    "original_sentence": "cancel the Hoover concert this weekend",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Hoover concert\")) (ThisWeekend)))))))))"
  },
  {
    "original_sentence": "No nevermind what I want is you to delete the Aweful Attempt At Best appointment tomorrow morning.",
    "parse": "(do (DoNotConfirm) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (Event.subject_? (?~= \"Aweful Attempt At Best appointment\"))) (Morning))))))))))"
  },
  {
    "original_sentence": "Wait, no, it's \"Awfullest Appointment\" the day after that",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (Event.subject_? (?~= \"Awfullest Appointment\"))))))"
  },
  {
    "original_sentence": "Yes, that's right! Can you also please delete my Mixed Doubles Tennis Game on next Saturday?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"Mixed Doubles Tennis Game\")))))))))))"
  },
  {
    "original_sentence": "I meant my solo beach volleyball game on Sunday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Sunday)) (Event.subject_? (?~= \"solo beach volleyball game\"))))))"
  },
  {
    "original_sentence": "Yes, that's correct. Can you also please delete my Fishing Trip on next Friday afternoon?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"Fishing Trip\"))) (Afternoon))))))))))"
  },
  {
    "original_sentence": "no, cancel the \"most awfullest of awful\" event next week",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.subject_? (?~= \"most awfullest of awful\")) (NextWeekList)))))"
  },
  {
    "original_sentence": "please cancel",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have any Out of Office events scheduled for next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))) 0L))"
  },
  {
    "original_sentence": "What is the other one?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "I want to delete that one.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes please.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Remind me to call mom tonight at 8pm",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Make a new meeting called Budget talk.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"Budget talk\")))))"
  },
  {
    "original_sentence": "Where is my dinner scheduled to happen on May 5th?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 5L (May)) (Event.subject_? (?~= \"dinner\"))))))))"
  },
  {
    "original_sentence": "Do I have to wear something fancy there?",
    "parse": "(Yield (not (PlaceHasFeature (PlaceFeature.Casual) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Do they have lobster on the menu?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Is there food for children at Deanie's Seafood Restaurant?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Am I meeting with Sally for the Wednesday meeting?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sally\")))))))) 0L))"
  },
  {
    "original_sentence": "Do I have a meeting before 8am today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateBeforeTime (Today) (^(Event) EmptyStructConstraint) (NumberAM 8L))))) 0L))"
  },
  {
    "original_sentence": "Please I need to meet the boss at 3 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"meet the boss\")) (Event.start_? (?= (NextTime (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Extend the meet the boss event on tomorrow's calendar by half of an hour.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"meet the boss\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toHours 0.5))))))))"
  },
  {
    "original_sentence": "Thanks! Can you also repeat that meeting next week on Tuesday?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceRecurring))"
  },
  {
    "original_sentence": "Can you block out 4 pm to 5 pm for reading on Tuesday of next week?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (DowOfWeekNew (Tuesday) (NextWeekList)) (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"reading\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "What was that?",
    "parse": "(RepeatAgent)"
  },
  {
    "original_sentence": "Can you actually change that to start at 3 pm instead?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Create a meeting in the afternoon on Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Monday)))))))"
  },
  {
    "original_sentence": "hold up",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Change the meeting to Tuesday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Tuesday))))))))"
  },
  {
    "original_sentence": "when does SAra work?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"work\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"SAra\"))))))))))"
  },
  {
    "original_sentence": "The 2nd appointment works for me.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Find out what time Aquaman plays tonight.",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Good schedule building shelves from 6 to 9 pm.",
    "parse": "(let (x0 (NextTime (NumberPM 6L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"building shelves\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 9L)))))))))"
  },
  {
    "original_sentence": "Thank you. What other events do I have during the day tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Add lunch with Carter at 1.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (NextTime (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carter\")))))))))))"
  },
  {
    "original_sentence": "Ok, but make that lunch with Carter 1 full hour please.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete my event on Friday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Never mind just move it to 5PM instead",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "K CORRECT THANK YOU",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "make a meeting with albert on march 22nd evening",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Evening) (MD 22L (March)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"albert\")))))))))))"
  },
  {
    "original_sentence": "Move my brunch with Kyle, Tom, and Molly to 10am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"brunch\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kyle\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Molly\")))))))))) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "Looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "It's well",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add birthday party for next week friday with Peter, Harsh, and Wendy",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"birthday party\")) (Event.start_? (DateTime.date_? (NextWeekList)))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Peter\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harsh\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wendy\"))))))))))))"
  },
  {
    "original_sentence": "The first one looks good.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Delete event called \"Picnic for Charity.\"",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Picnic for Charity\")))))))))"
  },
  {
    "original_sentence": "Can you check to see what I have scheduled on November 20th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 20L (November)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you schedule at 8 am \"Practice\"?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Practice\")) (Event.start_? (?= (NextTime (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Please fixed to before 8 am",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "change my St. Patricks Day Fun to start at 6 pm and last for 3 hours",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"St. Patricks Day Fun\")))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 6L)))) (Event.duration_? (?= (toHours 3)))))))"
  },
  {
    "original_sentence": "yes!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "create basketball game on monday at 3",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"basketball game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hello I would like to change the start time to my event.",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "add an event for tomorrow at 3 pm to watch WrestleMania",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"watch WrestleMania\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "add donald trump to this event",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"donald trump\"))))))))))"
  },
  {
    "original_sentence": "add bob to this one also",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bob\"))))))))))"
  },
  {
    "original_sentence": "Yes, also add the location to Buffalo Wild Wings.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Buffalo Wild Wings\"))))))"
  },
  {
    "original_sentence": "Yes that looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "get rid of soccer event on Sunday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"soccer\"))))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add Basketball Game on that day at 5 pm until 8.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (NumberPM 5L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Basketball Game\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 8L)))))))))"
  },
  {
    "original_sentence": "Do I have a breakfast meeting this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"breakfast meeting\")) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "My mistake - I actually meant lunch meeting next month.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.subject_? (?~= \"lunch meeting\")) (FullMonthofMonth (NextMonth))))))"
  },
  {
    "original_sentence": "Can you find my fish market event?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"fish market\"))))))"
  },
  {
    "original_sentence": "Oh I meant Sushi on next monday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"Sushi\"))))))"
  },
  {
    "original_sentence": "What about Dim Sum april 3rd?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (MD 3L (April)) (Event.subject_? (?~= \"Dim Sum\"))))))"
  },
  {
    "original_sentence": "I want to delete my hair appointment on Friday.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "When was my last hair appointment?",
    "parse": "(Yield (takeRight (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (Event.subject_? (?~= \"hair appointment\"))))) 1L))"
  },
  {
    "original_sentence": "Is there exercise on my schedule anytime this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?= \"exercise\")) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Make an appointment with my optometrist",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Make an appointment with Dr. Sneezy for next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dr. Sneezy\")))))))))))"
  },
  {
    "original_sentence": "I meant Dr. Light.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (alwaysTrueConstraintConstraint (^((List Attendee)) AlwaysTrueConstraint))) (intension (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dr.light\"))))))))))"
  },
  {
    "original_sentence": "Schedule for the 25th",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.day_? (?= (Day.apply 25L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Great, thanks!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need the basketball practice I had on October 15 at 3 pm on my calendar!",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"basketball practice\")) (Event.start_? (?= (DateAtTimeWithDefaults (previousMonthDay (Today) (October) 15L) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Thank you that's perfect!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please put the Pringles party that I had last Thursday at 4 pm on my calendar.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Pringles party\")) (Event.start_? (?= (DateAtTimeWithDefaults (previousDayOfWeek (Today) (Thursday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "That's great!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Put yesterdays ESL Pro League games from 3 pm to 5 pm onto my calendar",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Yesterday) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"ESL Pro League games\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "when is the basketball practice with mila and misa",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"basketball practice\")) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"mila\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"misa\")))))))))))"
  },
  {
    "original_sentence": "When am I going turtle hunting with Sarah, Mary, and Kyle?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"turtle hunting\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kyle\")))))))))))"
  },
  {
    "original_sentence": "We decide to spend the entire day for turtle hunting. Please adjust.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"turtle hunting\")))))) (Event.isAllDay_? (?= true)))))"
  },
  {
    "original_sentence": "Yes this looks much better",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cancel the turtle hunting. A big storm is coming.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"turtle hunting\")))))))))"
  },
  {
    "original_sentence": "Add a jog in Central Park",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"jog\")) (Event.location_? (?= (LocationKeyphrase.apply \"Central Park\")))))))"
  },
  {
    "original_sentence": "Yes, please set the jog at Central Park on Friday from 10 am to 10:30 am.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (& (& (& (Event.subject_? (?= \"jog\")) (Event.start_? (DateTimeFromDowConstraint (?= (Friday)) (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Central Park\")))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Change the name to run please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"run\")))))"
  },
  {
    "original_sentence": "It should be 2 hours long.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "That's good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When does the sales rep go on their team building weekend?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "Add softball tournament all day this Saturday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"softball tournament\")) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (NextDOW (Saturday)))))))"
  },
  {
    "original_sentence": "I need this to be at the ball field",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"ball field\"))))))"
  },
  {
    "original_sentence": "This looks great!!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please make that a two day all day event.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.end_? (DateTime.date_? (?= (adjustByPeriod (DateTime.date (Event.start x0)) (toDays 2)))))))))"
  },
  {
    "original_sentence": "Am I working tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"working\")))))) 0L))"
  },
  {
    "original_sentence": "but am i working tomorrow ?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"working\")))))"
  },
  {
    "original_sentence": "Do I have work after 10 AM?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Event.subject_? (?~= \"work\")) (NumberAM 10L))))) 0L))"
  },
  {
    "original_sentence": "Show me as busy during that time.",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Do i have any meetings this Sunday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"meetings\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday))))))))) 0L))"
  },
  {
    "original_sentence": "Do I have a meeting next Sunday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "OK!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Put Family time from 1 to 4 pm on Sunday.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Family time\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L)))))))))"
  },
  {
    "original_sentence": "Tammy isn't going to be at lunch tomorrow, invite Bob instead",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"lunch\"))))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tammy\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))))))))"
  },
  {
    "original_sentence": "Good. Can you also add Jesse to my dinner plans with Crim, and remove Kim?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner plans\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Crim\"))))))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\")))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))))))"
  },
  {
    "original_sentence": "Yes that works.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you please take Kim Possible off that, and put Elli in instead?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim Possible\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\")))))))))))"
  },
  {
    "original_sentence": "Cancel the conference meeting from my calender",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"conference meeting\")))))))))"
  },
  {
    "original_sentence": "maybe it was called Quarterly Review",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"Quarterly Review\")))))"
  },
  {
    "original_sentence": "What other events do I have this week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))"
  },
  {
    "original_sentence": "cancel the conference meeting",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"conference meeting\")))))))))"
  },
  {
    "original_sentence": "I mean the recap meeting",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"recap meeting\")))))"
  },
  {
    "original_sentence": "Decline the meeting with James tonight.",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\"))))) (Night))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "My error, leave it.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Cancel my meet-and-greet with Elizabeth tomorrow night.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (& (Event.subject_? (?~= \"meet-and-greet\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elizabeth\")))))) (Night)))))))))"
  },
  {
    "original_sentence": "No , not right now.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you let me know when my next meeting with Jill is?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jill\")))) 1L)))"
  },
  {
    "original_sentence": "Thanks. When is my next appointment with Matt?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Matt\")))) 1L)))"
  },
  {
    "original_sentence": "The next time I am meeting with Greg is when?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Greg\")))) 1L)))"
  },
  {
    "original_sentence": "when do I meet with Abby next?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))) 1L)))"
  },
  {
    "original_sentence": "When do I meet with Joanna?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joanna\")))))))))"
  },
  {
    "original_sentence": "Show me my latest events for today",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "I'm eating dinner with family Saturday at 6.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "On sunday add 2 hours to clean closets at 2pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"clean closets\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 2L))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "Mark the 15th as my anniversary",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"anniversary\")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 15L))))))))"
  },
  {
    "original_sentence": "Can you put in my cardiologist appointment on the 22nd at 7:30 am?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"cardiologist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 22L) (HourMinuteAm 7L 30L))))))))"
  },
  {
    "original_sentence": "It's good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thanks 8.00 AM OK at for",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add a carpet cleaning appointment for Tuesday at 8 am for 2 hours.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"carpet cleaning appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 8L))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "its prefect thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Remove an event please.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Please add an event for tomorrow night at 7PM for one hour. It is dinner with my husband.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "good job. Thanks much. Bye.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What's on Monday morning?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)) (Morning))))"
  },
  {
    "original_sentence": "What about Monday night?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDateWithTimeRange (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)) (Night)))))"
  },
  {
    "original_sentence": "change the lunch date time at 1.00 pm - 1.30 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch date\")))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 1L 30L))))))))"
  },
  {
    "original_sentence": "I don't know if that works.,",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Events on 19th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 19L) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Meeting 2 pm tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Naming \"Appointment\" as an event is to generic.",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Can you see if my event in June has my manager as the organizer",
    "parse": "(Yield (== (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (June))))))) (FindManager (toRecipient (CurrentUser)))))"
  },
  {
    "original_sentence": "Did my manager organize the Press Conference",
    "parse": "(Yield (== (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Press Conference\")))))) (FindManager (toRecipient (CurrentUser)))))"
  },
  {
    "original_sentence": "Tell me if Atlas in Atlanta provide waiter service at all times?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Atlas in Atlanta\"))))))"
  },
  {
    "original_sentence": "Ok. Does Carmine's in Bellevue have waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Carmine's in Bellevue\"))))))"
  },
  {
    "original_sentence": "Does M3 in Reno have waiter service",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"M3 in Reno\"))))))"
  },
  {
    "original_sentence": "Create a calendar meeting for Mike Parker, Justin Jewels, Kevin Smith, and Chris Parker for September 23rd 2019.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (MDY 23L (September) (Year.apply 2019L))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mike Parker\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Justin Jewels\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kevin Smith\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chris Parker\"))))))))))))"
  },
  {
    "original_sentence": "The second one works better.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Also schedule a Trip to Vegas with Tony, Greg, Brent, and Josh on the 6th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Trip to Vegas\")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 6L))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tony\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Greg\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brent\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Josh\"))))))))))))"
  },
  {
    "original_sentence": "The second one works better for me.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Cancel my six flags trip with Tony, Greg, Brent, and Josh on the 8th.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"six flags trip\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tony\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Greg\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brent\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Josh\")))))))))))))"
  },
  {
    "original_sentence": "Check whether there is an agenda on the meeting",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Put a meeting with Simon on my schedule for tomorrow at 1pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Simon\")))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "change the meeting on august 13 to one hour",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 13L (August)) (^(Event) EmptyStructConstraint)))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "It looks good. Let me know if you hear from Simon.",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "What is the number for The stone House Cafe in Reno?",
    "parse": "(Yield (Place.phoneNumber (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"stone House Cafe in Reno\"))))))"
  },
  {
    "original_sentence": "Whats the number for PC Gamerz in HI?",
    "parse": "(Yield (Place.phoneNumber (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"PC Gamerz in HI\"))))))"
  },
  {
    "original_sentence": "what is the number for Yoga Pod in Reno?",
    "parse": "(Yield (Place.phoneNumber (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Yoga Pod in Reno\"))))))"
  },
  {
    "original_sentence": "Set my calendar as bust on June 3rd from 1 pm to 5 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (MD 3L (June)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.showAs_? (?= (ShowAsStatus.Busy))))))))"
  },
  {
    "original_sentence": "Tomorrow I have a dinner at 6 pm at pasta house.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L))))) (Event.location_? (?= (LocationKeyphrase.apply \"pasta house\")))))))"
  },
  {
    "original_sentence": "It will go until 7:30.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 7L 30L)))))))"
  },
  {
    "original_sentence": "yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I like to set a time for my dentist appointment at 4pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (NextTime (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Add a meeting for 1 hour at 9 am on Tuesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 9L)))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Can you mark me as out of office until 2:00 PM following that meeting?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 2L))))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))))))))"
  },
  {
    "original_sentence": "do I have any appointment for today? I'm feeling sick",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Good, show me as \"busy\" for the rest of the day.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.showAs_? (?= (ShowAsStatus.Busy))) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "hello. should I leave or stay? my schedule will know",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Set up a meeting with Paige and Damon for Friday afternoon, around 3 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon\"))))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "duration should be 1 hour",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "location is \"Megan's office\"",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Megan's office\"))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "add Karl to the attendees",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karl\"))))))))))"
  },
  {
    "original_sentence": "also add Barack",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack\"))))))))))"
  },
  {
    "original_sentence": "update title to \"Manager's meeting\"",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.subject_? (?= \"Manager's meeting\")))))"
  },
  {
    "original_sentence": "bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "can you change my 9am to 10am?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberAM 9L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "I need it to last a hour.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Why not? Just make it end at 11.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "No, actually, I need it to end by 10:45",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 45L)))))))"
  },
  {
    "original_sentence": "Hi, can you list all of the things I have scheduled for December 23rd, 2019?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MDY 23L (December) (Year.apply 2019L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Oh, great, ok, can you add, \"Go to solstice party\" for 6:30pm to 8pm after that, on the same day?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (HourMinutePm 6L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Go to solstice party\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 8L)))))))))"
  },
  {
    "original_sentence": "Sure",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you cancel the solstice party?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"solstice party\")))))))))"
  },
  {
    "original_sentence": "Unfortunately, yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Put event John's birthday party that day from 6pm until 8pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 6L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"John's birthday party\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 8L)))))))))"
  },
  {
    "original_sentence": "Yea",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What is scheduled for the 26th and 27th ?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (DateAndConstraint (nextDayOfMonth (Today) 26L) (nextDayOfMonth (Today) 27L)))))"
  },
  {
    "original_sentence": "what do I have earlier today",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "What time was my Clean the House event from earlier today?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (EventOnDate (Today) (Event.subject_? (?~= \"Clean the House\")))))))))"
  },
  {
    "original_sentence": "Who was at that meeting earlier today?",
    "parse": "(Yield (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (EventOnDate (Today) (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "OK! Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Hi",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Check weather report in CA today",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"CA\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "oh..",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to know what date valentines day fell on last year.",
    "parse": "(Yield (HolidayYear (Holiday.ValentinesDay) (LastYear)))"
  },
  {
    "original_sentence": "What day was memorial day last year?",
    "parse": "(Yield (HolidayYear (Holiday.MemorialDay) (LastYear)))"
  },
  {
    "original_sentence": "Delete the Lunch Date with David Stark on Saturday at 2 pm.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 2L)) (& (Event.subject_? (?~= \"Lunch Date\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David Stark\")))))))))))))"
  },
  {
    "original_sentence": "Don't forget to wash your hands.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Ding!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Create Shoe Shopping on July 31st at 10 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Shoe Shopping\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 31L (July)) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Rabbit",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Hi. Can you please add dinner reservations to friday february 8th at 6pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner reservations\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 8L (February)) (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "update lunch with Shannon and her supervisor on Friday to 1pm.",
    "parse": "(let (x0 (PersonName.apply \"Shannon\")) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "Perfect, but make it 1 hour long.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I'm going to the mall with Jake and his boss tomorrow",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"going to the mall\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "Okay I want the first option.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Set up a meeting with Josh on Sunday noon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (Noon)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Josh\")))))))))))"
  },
  {
    "original_sentence": "Yes this looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add a presentation to my calendar for 4 pm on Thursday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"presentation\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "It will last 45 minutes.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toMinutes 45))))))"
  },
  {
    "original_sentence": "I wanted to ask you if you could please tell me which user I am logged in as.",
    "parse": "(Yield (CurrentUser))"
  },
  {
    "original_sentence": "Schedule a casino trip on Saturday from 5:00 PM until 9:00 PM with Ryan, Melissa, Amy, Chris, and Audrey at Grand Casino Hinckley.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 5L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (& (Event.subject_? (?= \"casino trip\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 9L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Grand Casino Hinckley\")))) (Event.attendees_? (& (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ryan\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Melissa\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chris\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Audrey\")))))))))))))"
  },
  {
    "original_sentence": "That will work well for me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create an event for a two hour workout tomorrow with Alex at 4:15 pm to workout Arms.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"workout Arms\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 4L 15L))))) (Event.duration_? (?= (toHours 2)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex\")))))))))))"
  },
  {
    "original_sentence": "Change it to start at 4:30.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinutePm 4L 30L)))))))"
  },
  {
    "original_sentence": "Perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Reschedule my conference call to around 3 PM today.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"conference call\")))))) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (Today) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "perfect either work, cancel the Dinner plan that I have today around 5 pm please.",
    "parse": "(do (Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRangeDateTime (Event.subject_? (?~= \"Dinner plan\")) (AroundDateTime (DateAtTimeWithDefaults (Today) (NumberPM 5L))))))))))))"
  },
  {
    "original_sentence": "Yes please.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cool, now can we make a meeting for this Saturday around noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Saturday)) (Noon)))))))"
  },
  {
    "original_sentence": "Can you check weather today in Alan City",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Alan City\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "what's on my calendar this week ?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
  },
  {
    "original_sentence": "Ok thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "set meeting at movies Wednesday 7 - 9 pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"meeting at movies\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 9L)))))))))"
  },
  {
    "original_sentence": "Add Sharon to that",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sharon\"))))))))))"
  },
  {
    "original_sentence": "What do I have scheduled for Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Schedule time on Friday from 1pm to 3 pm to meditate.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"meditate\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L)))))))))"
  },
  {
    "original_sentence": "Create time to go shopping on Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go shopping\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "Mark my calendar as shopping from 4 to 6 pm on Friday.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"shopping\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 6L)))))))))"
  },
  {
    "original_sentence": "Is Easter this weekend?",
    "parse": "(Yield (allows (ThisWeekend) (NextHolidayFromToday (Holiday.Easter))))"
  },
  {
    "original_sentence": "is Halloween in the fall",
    "parse": "(Yield (allows (SeasonFall) (NextHolidayFromToday (Holiday.Halloween))))"
  },
  {
    "original_sentence": "Is Mothers Day in May?",
    "parse": "(Yield (allows (FullMonthofMonth (May)) (NextHolidayFromToday (Holiday.MothersDay))))"
  },
  {
    "original_sentence": "Find me 2 hours on Saturday for a luncheon with the baseball team.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"luncheon with the baseball team\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "The second one is look well",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Find 1 hour on August 1st for Team Building Exercise.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Team Building Exercise\")) (Event.start_? (DateTime.date_? (?= (MD 1L (August)))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "First one is good for me",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Find 75 minutes for Marathon Workout on Saturday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Marathon Workout\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))) (Event.duration_? (?= (toMinutes 75)))))))"
  },
  {
    "original_sentence": "Is the meeting with the staff tomorrow still on?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"meeting with the staff\")))))) 0L))"
  },
  {
    "original_sentence": "Am I meeting with Ryan and Isaac next weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ryan\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Isaac\"))))) (NextWeekend))))) 0L))"
  },
  {
    "original_sentence": "When is it?",
    "parse": "(Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Can you add Tony and Adam to this please?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tony\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Adam\")))))))))))"
  },
  {
    "original_sentence": "That looks correct, thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Who's Jennifer?",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer\")))))))"
  },
  {
    "original_sentence": "Make a meeting with Jesse Rosenfeld and his team",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse Rosenfeld\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindTeamOf x0))))))))"
  },
  {
    "original_sentence": "Let's do it on the 10th.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Great, who is on Elli Parker's team?",
    "parse": "(Yield (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli Parker\")))))))"
  },
  {
    "original_sentence": "Ok plan a time with Jake Cobb and his team",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake Cobb\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindTeamOf x0))))))))"
  },
  {
    "original_sentence": "Who actually am I really?",
    "parse": "(Yield (CurrentUser))"
  },
  {
    "original_sentence": "Remove bob from the baseball game",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"baseball game\")))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bob\")))))))))))"
  },
  {
    "original_sentence": "Make that game a little bit later in the morning.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (LateMorning))))))"
  },
  {
    "original_sentence": "Neither of those work, anything later in the day?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "The first one works for me.",
    "parse": "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Does the new Ezell's in Federal Way have a website?",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Ezell's in 98023\"))))))"
  },
  {
    "original_sentence": "Can you tell me the website of BJ’s Barbecue in 89431?",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"BJ's Barbecue in 89431\"))))))"
  },
  {
    "original_sentence": "What is the website for five guys in 89509",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"five guys in 89509\"))))))"
  },
  {
    "original_sentence": "Hello! I'd like to update my calendar for April 30th",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "I'd like to create and event for next Tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))))))"
  },
  {
    "original_sentence": "4:00-5:00pm",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I'd like to create an event for next Tuesday at 4:00pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Yes!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Search for upcoming events",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Remove it.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what are the events i have this thursday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "show me the event",
    "parse": "(Yield (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "It's good.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what is the weather going to be like Friday in Tampa",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Tampa\"))) (DateTime.date_? (?= (NextDOW (Friday))))))"
  },
  {
    "original_sentence": "Can you add wedding shower for Sophie on Sunday at 2 PM to my calendar.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"wedding shower for Sophie\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "yes looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Are there any events scheduled for yesterday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Yesterday) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Add a meeting yesterday with Dolt.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Yesterday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dolt\")))))))))))"
  },
  {
    "original_sentence": "i had a holiday party 2 years ago today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"holiday party\")) (Event.start_? (DateTime.date_? (?= (PeriodBeforeDate (Today) (toYears 2)))))))))"
  },
  {
    "original_sentence": "Sorry, I meant i had a team meeting?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"team meeting\")))))"
  },
  {
    "original_sentence": "the First option",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I am looking for all my meetings next week",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "Cancel that meeting please",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "hi",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "yes",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "no",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Extend the business meeting for 2 hours",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"business meeting\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toHours 2))))))))"
  },
  {
    "original_sentence": "No, I want it to start after 8 AM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?> (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "Have it start at 9AM please.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "add pete to the event",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"pete\"))))))))))"
  },
  {
    "original_sentence": "ok thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I have a dentist appointment tomorrow afternoon at 1, please add it.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok thanks for your help",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need a meeting scheduled Monday afternoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Monday)))))))"
  },
  {
    "original_sentence": "The afternoon one works",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (Afternoon))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "When is the next managers meeting",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"managers meeting\")) 1L)))"
  },
  {
    "original_sentence": "Can we change the time of that to 10 am and it's now in conference room A",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.location_? (?= (LocationKeyphrase.apply \"conference room A\")))))))"
  },
  {
    "original_sentence": "Exactly what I want",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Put a retreat for Friday to Sunday with Kim",
    "parse": "(let (x0 (NextDOW (Friday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))) (EventAllDayForDateRange (Event.subject_? (?= \"retreat\")) (DateAndConstraint x0 (nextDayOfWeek x0 (Sunday)))))))))"
  },
  {
    "original_sentence": "ok sure",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Let`s do a Camping trip to Yosemite from Nov 1 - 7.",
    "parse": "(let (x0 (MD 1L (November))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"Camping trip to Yosemite\")) (DateAndConstraint x0 (nextDayOfMonth x0 7L)))))))"
  },
  {
    "original_sentence": "Yeah.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I am going to Washington D.C. on the 14th and will return on the 18th.",
    "parse": "(let (x0 (nextDayOfMonth (Today) 14L)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.location_? (?= (LocationKeyphrase.apply \"Washington D.C.\"))) (DateAndConstraint x0 (nextDayOfMonth x0 18L)))))))"
  },
  {
    "original_sentence": "Mark me as busy this morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Morning) (Today))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))"
  },
  {
    "original_sentence": "THE ONE IS WORK BUYS MORNING IS CORRECT",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "10 am works",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks. Can you make another doctor's appointment for saturday at noon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (Noon))))))))"
  },
  {
    "original_sentence": "Wednesday I need to add breakfast from 9-11 then a doctor's appointment from 1-3 plus dinner with hubby from 7 till 11",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Change that to start at 6 pm and it should end at 8 pm then add 45 minutes to drive home right after.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Schedule meeting about schedule Monday at 10 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"meeting about schedule\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Add a lunch at 11 with Shirley.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (NextTime (NumberAM 11L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Shirley\")))))))))))"
  },
  {
    "original_sentence": "Yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What time is the manager's meeting?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"manager's meeting\")))))))"
  },
  {
    "original_sentence": "change the time from 10.00 am to 11.00am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "nice",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you change it to Wednesday?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday))))))))"
  },
  {
    "original_sentence": "Yes, i also cant make the meeting with rob and his boss next week. Please cancel it.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"rob\")))))) (do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))) (NextWeekList)))))))))))"
  },
  {
    "original_sentence": "I want to know who organized that \"Area 77\" thing.",
    "parse": "(Yield (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Area 77\")))))))"
  },
  {
    "original_sentence": "book 10 minutes for time with hubby tonight at 11 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 11L)))) (Event.duration_? (?= (toMinutes 10)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"hubby\")))))))))))"
  },
  {
    "original_sentence": "I would like you to set up a meeting with Adam Wallen",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Adam Wallen\"))))))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you get me Adam Wallen's phone number",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "What is Adam Wallen's email address",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Adam Wallen\"))))))))"
  },
  {
    "original_sentence": "How do I get in touch with Adam Wallen?",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Adam Wallen\")))))))"
  },
  {
    "original_sentence": "When is Adam Wallen free for a meeting?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "Please check for a doctor's appointment next week.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctor's appointment\")) (NextWeekList))))"
  },
  {
    "original_sentence": "can you tell me the time of the event called adam's party?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"adam's party\")))))))"
  },
  {
    "original_sentence": "I see, thanks, can you also add, \"Meet with Client\" for 1 to 2pm on Saturday at Starbucks?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Meeting with Client\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 2L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Starbucks\"))))))))"
  },
  {
    "original_sentence": "What time does Adam's party go to?",
    "parse": "(Yield (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Adam's party\")))))))"
  },
  {
    "original_sentence": "Can you tell me the location of the event called adam's party?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"adam's party\")))))))"
  },
  {
    "original_sentence": "Eric's contact info",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Eric\")))))))"
  },
  {
    "original_sentence": "his phone number",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "okay thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have any meetings scheduled for Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Set up indoor barbecue for Saturday at 2.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"indoor barbecue\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you see if I have anything scheduled for friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "put meeting with steven",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"steven\"))))))))))"
  },
  {
    "original_sentence": "July 26 is good",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 26L (July))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Where am I meeting Dave, Kurt, and Kris?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dave\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kurt\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kris\"))))))))))"
  },
  {
    "original_sentence": "That looks complete.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When am I going on vacation with Tim, Kevin, and Corrine?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"vacation\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kevin\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Corrine\")))))))))))"
  },
  {
    "original_sentence": "what do i have to do in two weeks from now?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (DateAndConstraint (Today) (adjustByPeriod (Today) (toWeeks 2))))))"
  },
  {
    "original_sentence": "What is the other event?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "When was the Grape Festival in Grapevine?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (& (Event.subject_? (?~= \"Grape Festival\")) (Event.location_? (?= (LocationKeyphrase.apply \"Grapevine\"))))))))))"
  },
  {
    "original_sentence": "What did I have last Monday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Monday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Where was the Grape Festival at?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (Event.subject_? (?~= \"Grape Festival\"))))))))"
  },
  {
    "original_sentence": "I want to know if I did anyuthing on the 5th",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousDayOfMonth (Today) 5L) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "What day did I withdraw 1,000 dollars from my account?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Has the sales report meeting start yet?",
    "parse": "(Yield (< (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"sales report meeting\")))))) (Now)))"
  },
  {
    "original_sentence": "Did the team meeting start yet?",
    "parse": "(Yield (< (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"team meeting\")))))) (Now)))"
  },
  {
    "original_sentence": "Has my meeting with Jayden started already?",
    "parse": "(Yield (< (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jayden\")))))))) (Now)))"
  },
  {
    "original_sentence": "Search for employee luncheon",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"employee luncheon\"))))"
  },
  {
    "original_sentence": "What is on my calendar on January 6th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 6L (January)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Great, add an event from 8 am to 8 pm that day called \"Vacation\".",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberAM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Vacation\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 8L)))))))))"
  },
  {
    "original_sentence": "yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "The vacation will lasts for 8 days. Show me as \"Away on vacation.\"",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Hi! I want to change my doctor appointment from Monday to Thursday.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"doctor appointment\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Thursday)))))))))"
  },
  {
    "original_sentence": "yeah it does!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you see if I have an upcoming dentist appointment?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\"))))"
  },
  {
    "original_sentence": "Thanks!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you cancel the party this weekend?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"party\")) (ThisWeekend)))))))))"
  },
  {
    "original_sentence": "yes, unfortunately",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "good and nice",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "update my calendar events",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "put meeting with losliya",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"losliya\"))))))))))"
  },
  {
    "original_sentence": "I want the 10:00 one.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Tell me when my business trip with Aaron is.",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"business trip\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Aaron\"))))))))))"
  },
  {
    "original_sentence": "Schedule an event called Hot Date with Abby this Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Hot Date\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "repeat that my guy",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "I think the second option would be best.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I have added \"Hot Date\" on Friday, November 1st from 1:00 PM to 1:30 PM to your calendar.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (MD 1L (November)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Hot Date\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 1L 30L)))))))))"
  },
  {
    "original_sentence": "It looks great, thanks!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "can you please add a meeting with the boss tomorrow at 2pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "delete Saturday event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "What does my schedule look like for today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Cancel my Gym appointment.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Gym appointment\")))))))))"
  },
  {
    "original_sentence": "Yes I dont need that now",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you please add a meeting with Deborah?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Deborah\"))))))))))"
  },
  {
    "original_sentence": "The first one will work",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Date, now?",
    "parse": "(Yield (Today))"
  },
  {
    "original_sentence": "So when is the Game night for this weekend?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Game night\")) (ThisWeekend)))))))"
  },
  {
    "original_sentence": "Sorry, the poker night next weekend",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.subject_? (?~= \"poker night\")) (NextWeekend)))))"
  },
  {
    "original_sentence": "i would like to know about my Doc App",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Doc App\"))))))"
  },
  {
    "original_sentence": "Oh I meant can you find the Black Jack club next week?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.subject_? (?~= \"Black Jack club\")) (NextWeekList)))))"
  },
  {
    "original_sentence": "when is poker night",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"poker night\")))))))"
  },
  {
    "original_sentence": "Sorry, I meant game night again",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"game night\")))))"
  },
  {
    "original_sentence": "Show me the time of day",
    "parse": "(Yield (Now))"
  },
  {
    "original_sentence": "Add Refine List at 2 pm today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Refine List\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "The time is right, but make the slot for an hour instead of just 30 minutes.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "thank god",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "no i can manage my problem.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Where is my next meeting with Joe at?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joe\")))))))))"
  },
  {
    "original_sentence": "Do I have any meetings on Thursday morning?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)) (Morning))))) 0L))"
  },
  {
    "original_sentence": "updates on my tomorrow events",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Schedule a Trip to Walmart tomorrow at 2:30 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Trip to Walmart\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 2L 30L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks. Please add lunch afterwards.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Looks good. Please change the 8pm appointment to 7pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "set up a meeting with Rachael on Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rachael\")))))))))))"
  },
  {
    "original_sentence": "Actually, can you make it from 2 to 3 pm and then also set another meeting after that for 45 minutes with Paul at 3:15 please.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "When am I going to training this week?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"training\")) (ThisWeek)))))))"
  },
  {
    "original_sentence": "Who else is going?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "cancel the training",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"training\")))))))))"
  },
  {
    "original_sentence": "Yes, let's cancel the training.",
    "parse": "(Yield (Execute (ConfirmDeleteAndReturnAction (Event.subject_? (?~= \"training\")))))"
  },
  {
    "original_sentence": "How long is the team meeting on Monday?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"team meeting\"))))))))"
  },
  {
    "original_sentence": "Where do I go tomorrow?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Cancel that please",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes that's the one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you cancel my meeting with Yusef on Saturday?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Yusef\"))))))))))))"
  },
  {
    "original_sentence": "actually just move it to start at 1PM",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "i need an event called C0ff33 with kim tomorrow mornign",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"C0ff33\")) (Event.start_? (DateTimeConstraint (Morning) (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"kim\")))))))))))"
  },
  {
    "original_sentence": "What time is lunch @monells?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch @monells\")))))))"
  },
  {
    "original_sentence": "Update execute order 66 to be tomorrow.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"execute order 66\")))))) (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Delete all my appointments for this afternoon.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I want to create an event on the calendar for this afternoon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Afternoon) (Today))))))"
  },
  {
    "original_sentence": "The first one is great, add that",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok thanks for your help",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Later at night I need to check on the puppies.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"check on the puppies\")) (Event.start_? (DateTimeConstraint (Night) (Today)))))))"
  },
  {
    "original_sentence": "OK",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When is my next board meeting?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"board meeting\")) 1L)))"
  },
  {
    "original_sentence": "appointment with car mechanic at today 4 pm",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I need a mechanics appointment today after 4pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"mechanics appointment\")) (Event.start_? (DateTimeConstraint (?> (NumberPM 4L)) (Today)))))))"
  },
  {
    "original_sentence": "The one at five",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "this was very helpful for me. can you extend the appointment until 6pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "which time to meet with paul",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"paul\")))))))))"
  },
  {
    "original_sentence": "LEt's move it to 6.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you tell me when my one on one meeting with Kacey is?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.isOneOnOne_? (?= true)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kacey\"))))))))))"
  },
  {
    "original_sentence": "Can you tell me when my next lunch with my mom is?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Add office party to my calendar this Friday at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"office party\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "That looks fine to me",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have a dentist appointment in the spring?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"dentist\")) (SeasonSpring))))) 0L))"
  },
  {
    "original_sentence": "Of course not, that'd be too responsible... Hold on.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Okay, I just scheduled it. Set an appointment for the dentist on March 4th at 1400",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 4L (March)) (HourMinuteMilitary 14L 0L))))))))"
  },
  {
    "original_sentence": "righto!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to create an event for lunch with Luis' manager.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Luis\"))))))))))))"
  },
  {
    "original_sentence": "The second.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "The lunch should be noon to 1:00 PM. By the way, who does Dan Schoffel report to?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "have lunch lasting until 12",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))) (Event.end_? (DateTime.time_? (?= (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "Yes that looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule a team meeting with Troy and Rick for 45 minutes tomorrow before 1pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (DateTimeConstraint (?< (NumberPM 1L)) (Tomorrow)))) (Event.duration_? (?= (toMinutes 45)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Troy\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rick\"))))))))))))"
  },
  {
    "original_sentence": "the second one is good",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When is the net time I see Jen",
    "parse": "(Yield (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jen\")))) 1L))"
  },
  {
    "original_sentence": "I need a meeting with John for 45 minutes sometime after 4",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (OnDateAfterTime (Today) (NumberPM 4L))) (Event.duration_? (?= (toMinutes 45)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))))"
  },
  {
    "original_sentence": "Book a meeting with kevin for Thursday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kevin\")))))))))))"
  },
  {
    "original_sentence": "I need it after 3PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "book the first one please",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you forward this to Kevin?",
    "parse": "(Yield (ForwardEventWrapper (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kevin\"))))))))"
  },
  {
    "original_sentence": "Yes forward it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I am in a messed up situation. Show me my calendar",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Can you add a vacation on May 4th next year?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"vacation\")) (Event.start_? (DateTime.date_? (?= (MDY 4L (May) (NextYear)))))))))"
  },
  {
    "original_sentence": "Awesome! Also when is the Taco time next year?",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Taco time\")) (FullYearofYear (NextYear))))))))"
  },
  {
    "original_sentence": "I need meeting room in Nerd.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.location_? (& (?= (LocationKeyphrase.apply \"Nerd\")) (roomRequest))))))"
  },
  {
    "original_sentence": "The first one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need a new meeting in Bellevue. We have a bunch of people, so we need a room",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.location_? (& (?= (LocationKeyphrase.apply \"Bellevue\")) (roomRequest))))))"
  },
  {
    "original_sentence": "the one today",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (Today)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "create lunch with Rose on Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rose\")))))))))))"
  },
  {
    "original_sentence": "It should be an hour long",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Add the location as \"deli.\"",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"deli.\"))))))"
  },
  {
    "original_sentence": "Please set it for 1pm and add another event with her",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "Please choose the one on the 24th but make it last until 1:00 PM",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Let's schedule Dave for this morning?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Morning) (Today))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dave\")))))))))))"
  },
  {
    "original_sentence": "Either is fine.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I have a meeting with attorney Tuesday morning",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Add a new doctors appointment on thursday morning for 1 hour",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"doctors appointment\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Thursday))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "make a appointment to doctor",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"appointment to doctor\")))))"
  },
  {
    "original_sentence": "I think both of these are good.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "ok find if i have event with emma",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"emma\"))))))"
  },
  {
    "original_sentence": "Put the location as Victory Sandwich Bar",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Victory Sandwich Bar\"))))))"
  },
  {
    "original_sentence": "yeah!right thank you so much.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "yeah!that's what i expected too.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Is there a meeting happening this weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))) 0L))"
  },
  {
    "original_sentence": "I am not feeling well. Please cancel all events this afternoon.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Thanks, put out of office on my schedule for today and add a doctor's appointment to tomorrow at 9 AM at the medical center downtown.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Make an appointment with Jim for Friday at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (Noon)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))))))))))"
  },
  {
    "original_sentence": "Create event Jenny's baby shower for Saturday at 1pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Jenny's baby shower\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "It's going to be til 2.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Add to calendar Senior pictures on Thursday at 6:00 pm with Spencer and Violet .",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Senior pictures\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 6L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Spencer\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Violet\"))))))))))))"
  },
  {
    "original_sentence": "Ok Good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "that looks amazing",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "can you schedule the meeting with Violet's manager",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Violet\")))))))))))"
  },
  {
    "original_sentence": "ok that's fine",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Put on schedule today from 6:30 to 7:00 pm workout with Jennie.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Today) (HourMinutePm 6L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"workout\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 7L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennie\"))))))))))))"
  },
  {
    "original_sentence": "Perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add location: LA Fitness",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"LA Fitness\"))))))"
  },
  {
    "original_sentence": "What am I doing today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "what about today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Change the second one to 4.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Actually I need to change that to 1:00 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "make that 9-10:30",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))))))"
  },
  {
    "original_sentence": "Delete the second one for me please.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "lunch/meeting at the Terry Campus needs to be at 1 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch/meeting\")) (Event.location_? (?= (LocationKeyphrase.apply \"Terry Campus\")))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Good, what else do i have there?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (FindEventWrapperWithDefaults (Event.id_? (negate (?= (Event.id (^(Dynamic) item x0)))))))))"
  },
  {
    "original_sentence": "Add location \"Starbucks\" for meeting in the afternoon on Monday",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)) (Afternoon)))))) (Event.location_? (?= (LocationKeyphrase.apply \"Starbucks\"))))))"
  },
  {
    "original_sentence": "Add family dinner tomorrow at 7",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"family dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Tenatively accept the lunch meeting tomorrow.",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch meeting\")) (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))) :response (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Send a response that may change.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(RespondComment) AlwaysTrueConstraint)) (intension (RespondComment.apply \"that may change\")))))"
  },
  {
    "original_sentence": "Yes but don't send a response anymore.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(RespondShouldSend) AlwaysTrueConstraint)) (intension (RespondShouldSend.apply false)))))"
  },
  {
    "original_sentence": "Hi. I am having a problem with my phone.",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Do I have a meeting scheduled for phone repair?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"phone repair\"))))) 0L))"
  },
  {
    "original_sentence": "Will I go to the Apple Store on Saturday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.location_? (?= (LocationKeyphrase.apply \"Apple Store\"))))))) 0L))"
  },
  {
    "original_sentence": "Show me my project meeting this week",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"project meeting\")) (ThisWeek))))))"
  },
  {
    "original_sentence": "Actually I meant my Presentation next month.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.subject_? (?~= \"Presentation\")) (FullMonthofMonth (NextMonth))))))"
  },
  {
    "original_sentence": "Cool, now tell me when is my Coffee Date for this weekend?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Coffee Date\")) (ThisWeekend)))))))"
  },
  {
    "original_sentence": "O wait I meant for D&D night for Saturday Night.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDateWithTimeRange (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday)) (Event.subject_? (?~= \"D&D night\"))) (Night)))))"
  },
  {
    "original_sentence": "when is the puppy potty train",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"puppy potty train\")))))))"
  },
  {
    "original_sentence": "Sorry I meant the puppy agility training later in the month.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.subject_? (?~= \"puppy agility training\")) (FullMonthofMonth (Date.month (Today)))))))"
  },
  {
    "original_sentence": "I need you to add a meeting with Kyle for Friday at 8 AM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 8L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kyle\")))))))))))"
  },
  {
    "original_sentence": "Change the time to 9am",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "thanks that is perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "10 is better.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "Needs Kara too",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kara\"))))))))))"
  },
  {
    "original_sentence": "Tell me the rating of the Golden Flower in Reno",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Golden Flower in Reno\"))))))"
  },
  {
    "original_sentence": "Let me know how Thai 101 in Reno is rated",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Thai 101 in Reno\"))))))"
  },
  {
    "original_sentence": "What rating does the Station Taproom have?",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Station Taproom\"))))))"
  },
  {
    "original_sentence": "Do I have any dates with Sarah coming up?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\"))))))) 0L))"
  },
  {
    "original_sentence": "Find my Event \"Thanksgiving\"?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Thanksgiving\"))))))"
  },
  {
    "original_sentence": "Do I have anything after that?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))) 0L)))"
  },
  {
    "original_sentence": "what is my next week all events on my calendar?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "Do I have any meetings with Tristan this week?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tristian\"))))))) (ThisWeek))))))"
  },
  {
    "original_sentence": "What time is my dentists appointment next week?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"dentists appointment\")) (NextWeekList)))))))"
  },
  {
    "original_sentence": "Strange, add a dental appointment for Friday at 3PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dental appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Make that a two hour appointment please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Ok, add a salon appointment on the 24th at 10am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"salon appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 24L) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "What else is on for that day and also the next day after that?",
    "parse": "(let (x0 (Execute (refer (^(Dynamic) roleConstraint (Path.apply \"date\"))))) (do (Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate x0 (^(Event) EmptyStructConstraint))))) (Yield (FindEventWrapperWithDefaults (EventOnDate (adjustByPeriod x0 (toDays 1)) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Cancel my meeting with Beth that was scheduled later this afternoon.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Beth\")))) (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (LateAfternoon))))))))))"
  },
  {
    "original_sentence": "No, that meeting was yesterday. Cancel with meeting with Beth at 4pm on 3/9",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (MD 9L (toMonth 3L)) (NumberPM 4L)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Beth\"))))))))))))"
  },
  {
    "original_sentence": "next meeting with jesse",
    "parse": "(Yield (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jesse\")))) 1L))"
  },
  {
    "original_sentence": "definitely i will participate in this meeting.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I'm gonna meet Jesse again tomorrow. Same time.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (DateTime.time (Execute (refer (extensionConstraint (^(DateTime) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\")))))))))))"
  },
  {
    "original_sentence": "Change my status to Busy now.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Now))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))"
  },
  {
    "original_sentence": "Add Jacob's soccer game and Kylde park on Monday at 4 p.m. Schedule dinner at Mario's after the game at 7.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Can you reschedule the dinner to the next monday and then replace it with ice cream social from 5 to 6pm?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Schedule school meeting for Monday evening at 8pm, talent show on Friday at 8pm and studying this weekend for 2 hours.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I need to set up a room at Berkeley as soon as possible.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.location_? (& (?= (LocationKeyphrase.apply \"Berkeley\")) (roomRequest))))))"
  },
  {
    "original_sentence": "That is amazing",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Get a room in Berkeley",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.location_? (& (?= (LocationKeyphrase.apply \"Berkeley\")) (roomRequest))))))"
  },
  {
    "original_sentence": "The first one, thankyou",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Get me a conference room at Bellevue for 4",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 4L)))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Bellevue\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "I am meeting with Jane's manager at 12 pm Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 12L)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\"))))))))))))"
  },
  {
    "original_sentence": "Yes schedule that",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Ok and delete the meeting with Brett's manager from next Thursday.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brett\")))))))))))"
  },
  {
    "original_sentence": "o.k",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add a from 1:00 pm to 2:00 pm with Jane's manager",
    "parse": "(let (x0 (NextTime (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 2L))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\")))))))))))))"
  },
  {
    "original_sentence": "Has anyone accepted the Dinner Party",
    "parse": "(Yield (> (size (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Dinner Party\")))))) (ResponseStatusType.Accepted))) 0L))"
  },
  {
    "original_sentence": "good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Did anyone not accept the Dinner Party?",
    "parse": "(Yield (> (size (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Dinner Party\")))))) (ResponseStatusType.Accepted))) 0L))"
  },
  {
    "original_sentence": "Thanks! I'm excited to see them soon. Who has declined my Romantic Comedy Watching Party?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Romantic Comedy Watching Party\")))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "When is the bosses birthday?",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "I'd like to set up a recurring appointment.",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "can you schedule multiple events at once?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Can you copy data from one event to a second event?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "can you please set up an event called \"art night\" on Monday, starting at 6 and running until 10 PM?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 6L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"art night\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 10L)))))))))"
  },
  {
    "original_sentence": "Not quite.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Please schedule an event called \"art night\" on Monday, beginning at 6:00.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"art night\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "that'll do.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "can you send the attendees a reminder before the event?",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "can you add a shopping list of things I'll need for the event?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "please delete \"art night\" from my calendar.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"art night\")))))))))"
  },
  {
    "original_sentence": "can you change the name of \"art night\" to \"girls' night\"?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"art night\")))))) (Event.subject_? (?= \"girls' night\")))))"
  },
  {
    "original_sentence": "yes, thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "please reschedule \"girls' night\" to 6 AM on March 19, 2020.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"girls' night\")))))) (Event.start_? (?= (DateAtTimeWithDefaults (MDY 19L (March) (Year.apply 2020L)) (NumberAM 6L)))))))"
  },
  {
    "original_sentence": "Who are David Lax's reports",
    "parse": "(Yield (FindReports (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David Lax\")))))))"
  },
  {
    "original_sentence": "Who are my reports",
    "parse": "(Yield (FindReports (toRecipient (CurrentUser))))"
  },
  {
    "original_sentence": "Schedule a conference with Jesse Rosenfeld and team",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse Rosenfeld\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"conference\")) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindTeamOf x0)))))))))"
  },
  {
    "original_sentence": "friday 11th works for me and make it for 1 hour longer",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Make it for the 11th",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.day_? (?= (Day.apply 11L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you tell me when my Dr appointment is this month?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Dr appointment\")) (FullMonthofMonth (Date.month (Today)))))))))"
  },
  {
    "original_sentence": "Do I have any meetings this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Please add Grandma's party this Saturday at 5 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Grandma's party\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Yes, but change the end time from seven to ten pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 10L))))))))"
  },
  {
    "original_sentence": "It should say from five till ten...",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 10L))))))))"
  },
  {
    "original_sentence": "That is correct",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "well, thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Cancel my meeting with my boss next Friday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))))))"
  },
  {
    "original_sentence": "Sorry, I meant the one on Saturday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Yes, that's what I was looking for.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make an event tomorrow called \"Break Dancing\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Break Dancing\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "it needs to be 3 hours",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 3))))))"
  },
  {
    "original_sentence": "The second one please",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I'm going to need to schedule a tutoring session tomorrow at 2 pm for two hours. It'll be in Berkeley.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"tutoring session\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.duration_? (?= (toHours 2)))) (Event.location_? (?= (LocationKeyphrase.apply \"Berkeley\")))))))"
  },
  {
    "original_sentence": "whats on my calendar for 2/25/19",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MDY 25L (toMonth 2L) (Year.apply 2019L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you add grocery shopping that day at 4 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"grocery shopping\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Yes, it looks right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "After that put get dinner ready at 5 pm that day.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"get dinner ready\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "I need a event",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Ok thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "No thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Will it be sunny in Kashgar tomorrow at 8 am?",
    "parse": "(Yield (IsSunny (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Kashgar\"))) (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L))))))"
  },
  {
    "original_sentence": "In that case, I'll play soccer in the park then.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"play soccer\")) (Event.start_? (?= (Execute (refer (extensionConstraint (^(DateTime) EmptyStructConstraint))))))) (Event.location_? (?= (LocationKeyphrase.apply \"the park\")))))))"
  },
  {
    "original_sentence": "What's on my calendar on January 15th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 15L (January)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Yes can you please set an event starting tomorrow at 3pm for my dentist appointment?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Are there any appointments next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "do i have anything on the schedule tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Ok, I'd like you to schedule a follow-up with Greg a week after that meeting.",
    "parse": "(let (x0 (adjustByPeriodDuration (Execute (refer (extensionConstraint (^(DateTime) EmptyStructConstraint)))) (PeriodDuration.apply (toWeeks 1)))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"follow-up\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Greg\"))))))))))))"
  },
  {
    "original_sentence": "Delete event tomorrow at 9 pm",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 9L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "What were the details of the event you deleted?",
    "parse": "(Yield (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Do I have anything scheduled for this coming weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))) 0L))"
  },
  {
    "original_sentence": "What about the weekend after next?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekend))))"
  },
  {
    "original_sentence": "Can you delete everything on my calendar in January?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Cancel everything after 4pm on Friday.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (NextDOW (Friday)) (^(Event) EmptyStructConstraint) (NumberPM 4L))))"
  },
  {
    "original_sentence": "Ok, now add a family dinner on friday at 5pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"family dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Put call Carol for dinner at 4.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"call Carol for dinner\")) (Event.start_? (?= (NextTime (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Schedule breakfast date with Jim on Monday from 8 to 8:30 am.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"breakfast date\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinuteAm 8L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\"))))))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have anything on my calendar this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything on my calendar for next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Can you schedule an appointment for lunch tomorrow?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Schedule an appointment for noon tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon)))))))"
  },
  {
    "original_sentence": "Yes make it 2 hours",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Add Cecelia Waller",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cecelia Waller\"))))))))))"
  },
  {
    "original_sentence": "Add Jerri Skinner",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jerri Skinner\"))))))))))"
  },
  {
    "original_sentence": "Move it to Friday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Friday))))))))"
  },
  {
    "original_sentence": "perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you create an event called team information gathering at 10 am next Tuesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team information gathering\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "What do I have scheduled tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Schedule meeting with new client for Monday morning.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I need to schedule a meeting for tomorrow at 8 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "yes ok!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Okay. Add my boss, Ray Southerland, as one of the attendees please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ray Southerland\"))))))))))"
  },
  {
    "original_sentence": "Looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cancel my meeting with Dan Morton and his skip for Monday.",
    "parse": "(let (x0 (PersonName.apply \"Dan Morton\")) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))))))))))))))))"
  },
  {
    "original_sentence": "I'd like to set up a meeting.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "How?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "I want to set up a meeting with Barack Obama and Fiona Mason",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fiona Mason\")))))))))))"
  },
  {
    "original_sentence": "the first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What do I have doing on between 1 and 4 on Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (NextDOW (Friday)) (^(Event) EmptyStructConstraint) (NumberPM 1L) (NumberPM 4L))))"
  },
  {
    "original_sentence": "I need a sales meeting before 10 am Wednesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"sales meeting\")) (Event.start_? (OnDateBeforeTime (NextDOW (Wednesday)) (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "It's not right. I want sales meeting before 10 am",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?< (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "I like the second option",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you change the meeting to 8a?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"8a\"))))))"
  },
  {
    "original_sentence": "Can you tell me who has not declined the Track Event",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Track\")))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "ok then who has not accepted the bird event?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"bird\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "So who is not Tentative for the Pool Party?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Pool Party\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Can you tell me if Le Bernardin in New York City has waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Le Bernardin in New York City\"))))))"
  },
  {
    "original_sentence": "Does Carmine's in Bellevue offer waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Carmine's in Bellevue\"))))))"
  },
  {
    "original_sentence": "Thank you. What about Cracker Barrel in Lebanon, TN?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(LocationKeyphrase) AlwaysTrueConstraint)) (intension (LocationKeyphrase.apply \"Cracker Barrel in Lebanon, TN\")))))"
  },
  {
    "original_sentence": "Does Mamak Vegan Kitchen in Chamblee have waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Mamak Vegan Kitchen in Chamblee\"))))))"
  },
  {
    "original_sentence": "Clear all events from the 15th to the 21st of March.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Add work out everyday between those dates at 9 am.",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "Set up a lunch date for me and Peggy for Friday at 1.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch date\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Peggy\")))))))))))"
  },
  {
    "original_sentence": "whats peggys email",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"peggy\"))))))))"
  },
  {
    "original_sentence": "Who is Peggy's manager?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Peggy\")))))))"
  },
  {
    "original_sentence": "I'm going to eat my cake tomorrow at noon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"eat my cake\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))))))"
  },
  {
    "original_sentence": "Hold on, let me think about it.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Confirm the lunch date.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "It does. can you add one for Monday as well?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceRecurring))"
  },
  {
    "original_sentence": "Show me all events coming up today",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Good. Move dinner to start an hour later.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "Yes. Also I want to invite Molly to dinner.",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (^(Dynamic) item x0)) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Molly\"))))))))))))"
  },
  {
    "original_sentence": "Yes. Please add Garage Sale on Saturday all day",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"Garage Sale\")) (NextDOW (Saturday)))))))"
  },
  {
    "original_sentence": "Schedule Garage Sale for July 31st at 8 am. Also it will last 7 hours.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Garage Sale\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 31L (July)) (NumberAM 8L))))) (Event.duration_? (?= (toHours 7)))))))"
  },
  {
    "original_sentence": "Is Claim Jumper's in Reno a casual restaurant?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Claim Jumper's in Reno\"))))))"
  },
  {
    "original_sentence": "Ok is Blue Coyote in Truckee casual?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Blue Coyote in Truckee\"))))))"
  },
  {
    "original_sentence": "Is Tasaka Guri Guri Shop a casual place?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Tasaka Guri Guri Shop\"))))))"
  },
  {
    "original_sentence": "Join Luna Lyming",
    "parse": "(Yield (joinEventCommand (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Luna Lyming\"))))))))"
  },
  {
    "original_sentence": "Do I have any meetings before 2pm on Monday?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 2L))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateBeforeTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))) 0L)))"
  },
  {
    "original_sentence": "let's change that to 10-12",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "Yes, that is correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you see if I Have anything between 4 and 6pm on Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) (TimeToTime (NumberPM 4L) (NumberPM 6L)))))"
  },
  {
    "original_sentence": "Did I accept my McDonalds meeting?",
    "parse": "(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"McDonalds meeting\"))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "How did I respond to nap time?",
    "parse": "(Yield (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"nap time\")))))))"
  },
  {
    "original_sentence": "Did I accept Elli's Wedding in May?",
    "parse": "(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Elli's Wedding\")) (FullMonthofMonth (May)))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Where is my Skype meeting tomorrow?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"Skype meeting\"))))))))"
  },
  {
    "original_sentence": "Where will my meeting with Kim be?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))))"
  },
  {
    "original_sentence": "Where is my meeting with Jennifer?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer\")))))))))"
  },
  {
    "original_sentence": "I'm supposed to be meeting with Adrielle at L'Attente on Friday at 6:30 pm. No telling how long it'll take, so just give me 5 hours for now.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 6L 30L)))) (Event.duration_? (?= (toHours 5)))) (Event.location_? (?= (LocationKeyphrase.apply \"L'Attente\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Adrielle\")))))))))))"
  },
  {
    "original_sentence": "It does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Alright.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Sure. I also want to put \"tell Augie where you're going\" on the schedule starting an hour and a half before my meeting with Adrielle. Just in case something happens to me while I'm there.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"tell Augie where you're going\")) (Event.start_? (?= (PeriodDurationBeforeDateTime (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Adrielle\")))))))) (PeriodDuration.apply :duration (toHours (+ 1 0.5))))))))))"
  },
  {
    "original_sentence": "Perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Alright. Well, wish me luck.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Will do. Have a good one.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Enter dentist appointment for tomorrow at 3 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Reschedule that for Quest dental pleae",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Quest dental\"))))))"
  },
  {
    "original_sentence": "Look for birthdays for this month.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"birthdays\")) (FullMonthofMonth (Date.month (Today))))))"
  },
  {
    "original_sentence": "Create a lunch meeting tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "it should end at 2 PM since half an hour will not be enough. Also, it is going to be at the cafeteria.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.end_? (DateTime.time_? (?= (NumberPM 2L)))) (Event.location_? (?= (LocationKeyphrase.apply \"cafeteria\")))))))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can I change my getaway cruise with John Mayer to sometime in November?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"getaway cruise\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John Mayer\"))))))))) (Event.start_? (DateTime.date_? (FullMonthofMonth (November)))))))"
  },
  {
    "original_sentence": "Going on a cruise for half an hour is not correct. It should be at least two days.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (Execute (refer (& (^(Date) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (toDays 2)))))"
  },
  {
    "original_sentence": "Looks perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I'm hanging out with girlfriend on monday",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Kaylie, Josh, Brandon, Hunter, and I will be going to the Water Park on the 24th at 11 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"going to the Water Park\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 24L) (NumberAM 11L))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kaylie\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Josh\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brandon\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Hunter\"))))))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you add Rod and Janet to this event too?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rod\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janet\")))))))))))"
  },
  {
    "original_sentence": "Yes, thank you, this looks right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "How much snow in Jackson Hole on Friday?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Sum) (snowPrecipIntensity) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Jackson Hole\"))) (DateTime.date_? (?= (NextDOW (Friday)))))))"
  },
  {
    "original_sentence": "Awesome!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Yes, add go skiing that day from 3:30pm to 10:30pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (HourMinutePm 3L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"go skiing\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 10L 30L)))))))))"
  },
  {
    "original_sentence": "Delete my meeting with Jim today",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\"))))))))))))"
  },
  {
    "original_sentence": "Yes cancel the meeting with damon straeter",
    "parse": "(Yield (Execute (ConfirmDeleteAndReturnAction (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"damon straeter\"))))))))))"
  },
  {
    "original_sentence": "Can you give me other events on this day?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Create a new event tomorrow morning at 5 am called \"Why do people wake up this early?\".",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Why do people wake up this early?\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 5L))))))))"
  },
  {
    "original_sentence": "Cancel that, I don't want to wake up this early.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "The new release is on the 25th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"new release\")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 25L))))))))"
  },
  {
    "original_sentence": "The first one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "In the other time slot you offered, put lunch with Jim.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Schedule a lunch with JIm on Monday at 1 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"JIm\")))))))))))"
  },
  {
    "original_sentence": "yep but make the end time 2 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "what is on my schedule this Sunday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you add Farmers Market for Sunday from 10 AM until 1 PM?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Farmers Market\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 1L)))))))))"
  },
  {
    "original_sentence": "Looks fine",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hi. Decline my invitation to go to the theater on Saturday and say that I don't feel like hanging out with other people on that day.",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I don't feel like hanging out with other people on that day.\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"go to the theater\")))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Yea, that looks good. Please decline the Fishing event and say I would rather play video games",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I would rather play video games\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Fishing\"))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "Yes, thank you! Decline my Helicopter Ride and say that I'm going to take an airplane instead.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I'm going to take an airplane instead\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Helicopter Ride\"))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "Change the location of my meeting with Todd from Olive Garden to Chiles.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \"Olive Garden\"))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Todd\"))))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Chiles\"))))))"
  },
  {
    "original_sentence": "Yes that works.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Yes add Melanie to this event",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Melanie\"))))))))))"
  },
  {
    "original_sentence": "Yeah. Also add Alex, Alice, Bob, Ian, Parker, Payton, Zay, Josh, Sean, Robyn and Celeste to that meeting.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex\"))))))) (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Parker\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alice\")))))))) (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Zay\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ian\")))))))) (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sean\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Payton\"))))))) (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Celeste\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Josh\")))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Robyn\"))))))))))))"
  },
  {
    "original_sentence": "I need you to set up a lunch meeting for 12pm - 1pm on Friday at The French Laundry.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 12L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 1L))))) (Event.location_? (?= (LocationKeyphrase.apply \"The French Laundry\"))))))))"
  },
  {
    "original_sentence": "Will it be hot at the French Laundry?",
    "parse": "(Yield (IsHot (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"the French Laundry\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "Then create a calendar event to go for a walk at the park from 1:30 PM to 2:00 PM",
    "parse": "(let (x0 (NextTime (HourMinutePm 1L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"go for a walk\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 2L))))) (Event.location_? (?= (LocationKeyphrase.apply \"the park\"))))))))"
  },
  {
    "original_sentence": "will it be cold on my walk?",
    "parse": "(Yield (IsCold (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"walk\"))))))))"
  },
  {
    "original_sentence": "What's the temperature going to be then?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Could you push back the Thursday morning meeting to the afternoon.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)) (Morning)))))) (Event.start_? (DateTime.time_? (Afternoon))))))"
  },
  {
    "original_sentence": "Make it last 3 hours",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 3))))))"
  },
  {
    "original_sentence": "Please make it earlier",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "The second please.",
    "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need to delay the softball practice with Stacy to sometime next week.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"softball practice\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Stacy\"))))))))) (Event.start_? (DateTime.date_? (NextWeekList))))))"
  },
  {
    "original_sentence": "delete kyleighs dentist appointment from yesterday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Yesterday) (& (Event.subject_? (?~= \"dentist appointment\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"kyleigh\")))))))))))))"
  },
  {
    "original_sentence": "Ok ! Thank you Emily",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule eye doctor appointment for last week friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"eye doctor appointment\")) (Event.start_? (DateTime.date_? (?= (DowOfWeekNew (Friday) (LastWeekNew)))))))))"
  },
  {
    "original_sentence": "Yes, the eye doctor appointment starts at 4 PM.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Schedule a dentist appointment in 3 hours.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 3)))))))))"
  },
  {
    "original_sentence": "Yes looks right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I also have a doctor's appointment 45 minutes from now",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toMinutes 45)))))))))"
  },
  {
    "original_sentence": "fine",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I'm going to see a movie in 5 hours.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"see a movie\")) (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 5)))))))))"
  },
  {
    "original_sentence": "Tell me who I am.",
    "parse": "(Yield (CurrentUser))"
  },
  {
    "original_sentence": "How many times this month do I have meetings scheduled?",
    "parse": "(FenceAggregation)"
  },
  {
    "original_sentence": "When is the next meeting?",
    "parse": "(Yield (Event.start (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))"
  },
  {
    "original_sentence": "What one is that?",
    "parse": "(Yield (Event.subject (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "What meeting were you talking about on saturday?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Can you tell me where my meeting on Saturday is located?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "what in the heck is the time?",
    "parse": "(Yield (Now))"
  },
  {
    "original_sentence": "Schedule Senior pictures with Jen on Thursday at 5:00 at Coonskin.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Senior pictures\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 5L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Coonskin\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jen\")))))))))))"
  },
  {
    "original_sentence": "looks better",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, could you schedule another event for me called pick up grocery tomorrow in the morning?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pick up grocery\")) (Event.start_? (DateTimeConstraint (Morning) (Tomorrow)))))))"
  },
  {
    "original_sentence": "this looks great at 10:30",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (HourMinuteAm 10L 30L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "10:30 is perfect",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is the website for Fogo de Chao in Cupertino?",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Fogo de Chao in Cupertino\"))))))"
  },
  {
    "original_sentence": "Find and see if Miller Union in Atlanta has a website",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Miller Union in Atlanta\"))))))"
  },
  {
    "original_sentence": "Website for Earl's in Tyson Corner, VA NOW",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Earl's in Tyson Corner, VA\"))))))"
  },
  {
    "original_sentence": "Find an event on my calendar with Barack Obama",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\"))))))"
  },
  {
    "original_sentence": "Create an event in my calendar with barack obama",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"barack obama\"))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Create an event on my calendar with Cher Roydon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher Roydon\"))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Update my schedule",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Delete my event with barack obama from my calendar",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"barack obama\")))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What time is my next meeting with Cheryl?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cheryl\")))) 1L)))"
  },
  {
    "original_sentence": "Did I invite her boss?",
    "parse": "(Yield (allows (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))) (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "When is my next tennis event with Elli?",
    "parse": "(Yield (Event.start (FindNumNextEvent (& (Event.subject_? (?~= \"tennis\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\"))))) 1L)))"
  },
  {
    "original_sentence": "Is her supervisor invited to this?",
    "parse": "(Yield (allows (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))) (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Will you tell me when my next intern meeting with Cathy is?",
    "parse": "(Yield (Event.start (FindNumNextEvent (& (Event.subject_? (?~= \"intern meeting\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cathy\"))))) 1L)))"
  },
  {
    "original_sentence": "Is her manager an attendee?",
    "parse": "(Yield (allows (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))) (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "How many meetings do i have this month with Jill and her boss?",
    "parse": "(let (x0 (PersonName.apply \"Jill\")) (Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today))))))))))"
  },
  {
    "original_sentence": "What about the second?",
    "parse": "(Yield (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Can you move that one up one hour?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (PeriodDurationBeforeDateTime (Event.start x0) (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "That's good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I am going to be with Abby and Abby's Boss tomorrow all day",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (Tomorrow)))))))"
  },
  {
    "original_sentence": "Hey move the start time of the Office Party to be 2 hours later.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Office Party\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply :duration (toHours 2)))))))))"
  },
  {
    "original_sentence": "Good. Do I have anything else at the same place?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction)) x1 (^(Dynamic) item x0)) (do (Yield x0) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id x1)))) (Event.location_? (?= (Event.location x1))))))) 0L))))"
  },
  {
    "original_sentence": "I want it to be in Seattle then",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Seattle\"))))))"
  },
  {
    "original_sentence": "Is there anything else I could do there?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id x0)))) (Event.location_? (?= (Event.location x0))))))) 0L)))"
  },
  {
    "original_sentence": "When will my next Fish Sitting event at Andrew's House?",
    "parse": "(Yield (Event.start (FindNumNextEvent (& (Event.subject_? (?~= \"Fish Sitting\")) (Event.location_? (?= (LocationKeyphrase.apply \"Andrew's House\")))) 1L)))"
  },
  {
    "original_sentence": "Do I have anything else at Andrew's House?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Andrew's House\"))))))) 0L))"
  },
  {
    "original_sentence": "create ball game on tuesday at 2",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"ball game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Book me a meeting with Janet for next Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janet\")))))))))))"
  },
  {
    "original_sentence": "add Janet to address book",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "look up Janet in address book",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "then look it up?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "ok. book me a meeting for next Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))))))"
  },
  {
    "original_sentence": "first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "time is 11 AM to noon",
    "parse": "(let (x0 (NextTime (NumberAM 11L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (Noon)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "change title to \"Meeting with Janet\"",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"Meeting with Janet\")))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thank you and bye for now.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Who has indicated they may attend the ice cream social next month?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"ice cream social\")) (FullMonthofMonth (NextMonth))))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "who has tentatively accepted the Mobile game",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Mobile game\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Who may be at the Game Night",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Game Night\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Can you tell me what is on my calendar tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you make that from 2 to 5 pm please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Ehm, nevermind",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "I need help with my schedule.",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "What is in my schedule?",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Thank you! I don't think it will take an hour to buy a birthday card though.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "No",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please decrease the amount of time spent on the birthday card to 10 minutes and move it to 8 in the morning. 7 is too early.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Move the birthday card to 8 please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"birthday card\")))))) (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "Also, please move up the end time to 8:10",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 8L 10L)))))))"
  },
  {
    "original_sentence": "the birthday card should be rom 8 to 8:10",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"birthday card\")))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 8L 10L))))))))"
  },
  {
    "original_sentence": "What can you help me with",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Ok. Please do.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you reduce the amount of events I have please?",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Can you put a meet and greet with fans in my calendar?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Who is in my address book?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "What time is my lunch meeting tomorrow?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"lunch meeting\"))))))))"
  },
  {
    "original_sentence": "When does that meeting go to?",
    "parse": "(Yield (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Change it to end at 4 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Please add Barack Obama to my calendar on May 15 at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 15L (May)) (Noon)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\")))))))))))"
  },
  {
    "original_sentence": "Yes, thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you send me a reminder 1 hour before the appointment?",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Oh, okay. Thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have any meetings with Paige coming up?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige\"))))))) 0L))"
  },
  {
    "original_sentence": "Oh. What meetings do I have today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Do you have ANY meetings scheduled for me?",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "I see. Well I guess I get to take the day off!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When is my meeting with Bogaloo next week?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bogaloo\")))) (NextWeekList)))))))"
  },
  {
    "original_sentence": "End the meeting at 11:30 AM.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.end_? (?= (TimeAfterDateTime (Event.start x0) (HourMinuteAm 11L 30L))))))))"
  },
  {
    "original_sentence": "Please mark me a busy for the Thursday - Saturday next week as board meeting conference.",
    "parse": "(let (x0 (DowOfWeekNew (Thursday) (NextWeekList))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.showAs_? (?= (ShowAsStatus.Busy))) (EventAllDayForDateRange (Event.subject_? (?= \"board meeting conference\")) (DateAndConstraint x0 (nextDayOfWeek x0 (Saturday)))))))))"
  },
  {
    "original_sentence": "This looks good. Please add.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, can you add vacation right after that ends for 7 days?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"vacation\")) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 7)))))"
  },
  {
    "original_sentence": "Make it 10 days instead on October 17.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (MD 17L (October)) (toDays 10)))))"
  },
  {
    "original_sentence": "Looks dope",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Could you change my Cycling Race to be sometime on Tuesday?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Cycling Race\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (EventSometimeOnDate (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Tuesday)) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Okay. Now, I need you to move my Cycling to be sometime tomorrow",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Cycling\")))))) (EventSometimeOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "it should be sometime monday actually",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (EventSometimeOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Monday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "yes good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "My lunch with Amy tomorrow needs to be pushed back an hour.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\")))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "That is perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to change the meeting with Kim to sometime next week.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))) (Event.start_? (DateTime.date_? (NextWeekList))))))"
  },
  {
    "original_sentence": "Let's go with the first option.",
    "parse": "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Who has responded about the meeting next Monday??",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)))))) (ResponseStatusType.None)))"
  },
  {
    "original_sentence": "Great, thanks! Who has answered regarding the Pub Crawl?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Pub Crawl\")))))) (ResponseStatusType.None)))"
  },
  {
    "original_sentence": "Great! Also, who has responded to my invitation to the Silent Auction on next Friday?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"Silent Auction\"))))))) (ResponseStatusType.None)))"
  },
  {
    "original_sentence": "I need to pick strawberries at 5\"30 tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pick strawberries\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 5L 30L))))))))"
  },
  {
    "original_sentence": "Sure is.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Actually, that should start at 6;45",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 6L 45L)))))))"
  },
  {
    "original_sentence": "Can you change the end time to make it end at 7.30 pm please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (HourMinutePm 7L 30L)))))))"
  },
  {
    "original_sentence": "Yes i want to update. Thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What openings do I have on my calendar for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What events do I have on my calendar for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "It's good to know that, tomorrow I want a dinner",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "The second one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "no. how about 7 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "Do I have anything scheduled for December 26th?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 26L (December)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Will it be raining at the candlelight vigil tonight in Golden Gate Park?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Golden Gate Park\"))) (DateTimeConstraint (Night) (Today)))))"
  },
  {
    "original_sentence": "Put it on my calendar then, for 9pm in Golden Gate Park",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 9L)))) (Event.location_? (?= (LocationKeyphrase.apply \"Golden Gate Park\")))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "If it's not raining sunday morning at 8am, put a run on my calendar.",
    "parse": "(FenceConditional)"
  },
  {
    "original_sentence": "Awesome, and add a lunch at Panera at 1pm Friday with Mom.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "who is the best inbthe team",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "I need a meeting with my team",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser))))))))"
  },
  {
    "original_sentence": "Who is on my team",
    "parse": "(Yield (FindTeamOf (toRecipient (CurrentUser))))"
  },
  {
    "original_sentence": "make an event with my team on friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Thursday will work",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (& (^(Date) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Thursday))))))))"
  },
  {
    "original_sentence": "What time is my flight on Monday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"flight\"))))))))"
  },
  {
    "original_sentence": "And what time should it end?",
    "parse": "(Yield (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "add meeting with directors at 2 pm that day",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Do I have any meetings on March 21st?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 21L (March)) (Event.subject_? (?~= \"meetings\")))))) 0L))"
  },
  {
    "original_sentence": "add a meeting at 9 am on March 21st",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (MD 21L (March)) (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "I'd like to book a room at Berkeley for 1:30 pm with Jason.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (NextTime (HourMinutePm 1L 30L)))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Berkeley\")) (roomRequest)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jason\")))))))))))"
  },
  {
    "original_sentence": "Looks really good thank you!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need a room at NERD on 5pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 5L)))) (Event.location_? (& (?= (LocationKeyphrase.apply \"NERD\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "Yes. Looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please book me for Berkeley next weekend.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekend))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Berkeley\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "Check if i have a doctor's appointment in the next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctor's appointment\")) (NextWeekList))))"
  },
  {
    "original_sentence": "Set and event lunch with sister on Wednesday at 1 pm.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "The time isn't right, cancel lunch with sister.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "No, don't cancel that but have it go until 2:00 PM. Is there something scheduled that day at 7 AM?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Am I having lunch with anyone tomorrow?",
    "parse": "(Yield (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"lunch\"))))))))"
  },
  {
    "original_sentence": "When is my meeting with Paige Ashworth?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\")))))))))"
  },
  {
    "original_sentence": "When is my next doctor's appointment?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"doctor's appointment\")) 1L)))"
  },
  {
    "original_sentence": "Schedule my doctor's appointment for Tuesday at 3:00.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Yes, thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule a lunch meeting with Paige for Friday at 11:30am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteAm 11L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige\")))))))))))"
  },
  {
    "original_sentence": "Yes, thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to update my events for tomorrow morning.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Tomorrow morning is the first day of school",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"first day of school\")) (Event.start_? (DateTimeConstraint (Morning) (Tomorrow)))))))"
  },
  {
    "original_sentence": "Choose first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "It should be at 8:00 in the morning.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "Extend it until 4pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Do they have takeout at Wild River Grille in Reno",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Wild River Grille in Reno\"))))))"
  },
  {
    "original_sentence": "does the Stone House Cafe in Reno do takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Stone House Cafe in Reno\"))))))"
  },
  {
    "original_sentence": "Does Johnny's Ristorante have takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Johnny's Ristorante\"))))))"
  },
  {
    "original_sentence": "What meeting do i have tonight?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Night))))"
  },
  {
    "original_sentence": "How long is the staff meeting tomorrow?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"staff meeting\"))))))))"
  },
  {
    "original_sentence": "ANd who's coming?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Add Bob and John to it",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I'm going to the movies in the fall",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"movies\")) (Event.start_? (DateTime.date_? (SeasonFall)))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Do I have anything else that day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "Ok. Schedule a dinner this spring with Lisa",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTime.date_? (SeasonSpring)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lisa\")))))))))))"
  },
  {
    "original_sentence": "I want to go to the art museum this spring.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go to the art museum\")) (Event.start_? (DateTime.date_? (SeasonSpring)))))))"
  },
  {
    "original_sentence": "Add in my calendar an all-day event at the beach for the fundraiser.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"fundraiser\")) (Event.location_? (?= (LocationKeyphrase.apply \"beach\")))) (Event.isAllDay_? (?= true))))))"
  },
  {
    "original_sentence": "Make a appointment for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "put appointment with my friend",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Schedule that all day fundraiser for the 24th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"fundraiser\")) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (nextDayOfMonth (Today) 24L))))))"
  },
  {
    "original_sentence": "That is exactly what I wanted!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule trouble shoot client inquiry at 2pm today for 45 minutes, block out another 30 minutes to test the results and 20 minutes afterwards to update the client via phone.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Please schedule me to meet with my manager next Tuesday at 2 PM for my performance review.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"performance review\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 2L))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Yes this looks much better",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Update my performance review to 3:00 pm now, the boss had something come up.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"performance review\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "That'll do.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "doing it all.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add go to dinner at 5:00 pm tomorrow after my 4:00 interview at ChemTech.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Show me when the next Blood moon will be",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "What time is my lobotomy?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lobotomy\")))))))"
  },
  {
    "original_sentence": "Reschedule the lobotomy to the following week for 2 hours.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lobotomy\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply (toWeeks 1))))) (Event.duration_? (?= (toHours 2))))))))"
  },
  {
    "original_sentence": "Yes, thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Perfect thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When is Mardi Gras",
    "parse": "(Yield (NextHolidayFromToday (Holiday.MardiGras)))"
  },
  {
    "original_sentence": "I need to see Sally and Jose today at 3 pm for 1 hour.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L)))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sally\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jose\"))))))))))))"
  },
  {
    "original_sentence": "Looks great!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "set my schedule to \"Out Of Office\" til Tuesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (DateAndConstraint (Today) (NextDOW (Tuesday)))))))"
  },
  {
    "original_sentence": "Do I have time to watch a TV show this evening?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"watch a TV show\")) (Event.start_? (DateTimeConstraint (Evening) (Today)))))))"
  },
  {
    "original_sentence": "Do I have events later today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))) 0L))"
  },
  {
    "original_sentence": "i need a meeting with kim, crim, and their bosses",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"kim\"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"crim\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x0)))) (AttendeeListHasRecipient (FindManager x1))))))))"
  },
  {
    "original_sentence": "Make a new Office Party Planning event for Monday at 1 with Jennifer, her boss, Elli and her manager",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer\"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Office Party Planning\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 1L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1))))))))))"
  },
  {
    "original_sentence": "Create an event on my calendar and invite Samson, his boss, Samuel and his boss.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Samson\"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Samuel\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "who I be",
    "parse": "(Yield (CurrentUser))"
  },
  {
    "original_sentence": "delete the family picnic in this weekend.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"family picnic\")) (ThisWeekend)))))))))"
  },
  {
    "original_sentence": "change that to \"Family Dinner\"",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"Family Dinner\")))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please cancel the event.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes please do so.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "hi can you tell me what my appointments are tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "can you add and event to my calendar for next friday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "can you make the appointment for 3pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "that looks great. can you set the appointment to drinks with greg",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"drinks with greg\")))))"
  },
  {
    "original_sentence": "ok.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a think tank with Jill, James, and Sandy on Thursday from 3 to 4 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"think tank\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jill\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sandy\")))))))))))))"
  },
  {
    "original_sentence": "Yes that looks very good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "add donald trump to this event",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"donald trump\"))))))))))"
  },
  {
    "original_sentence": "Yes that looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Yes very good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Create a meeting with Kim's team",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))))))"
  },
  {
    "original_sentence": "the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Great. Make a team building event with Dan Morton's team this weekend.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"team building\")) (Event.start_? (DateTime.date_? (ThisWeekend)))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Morton\"))))))))))))"
  },
  {
    "original_sentence": "please conform the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I would conform the second one.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Tell me the UV index for Las Angeles, CA this weekend.",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (uvIndex) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Las Angeles, CA\"))) (DateTime.date_? (ThisWeekend)))))"
  },
  {
    "original_sentence": "What will the weather be like on the day of my haircut ?",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"haircut\")))))))"
  },
  {
    "original_sentence": "what will the weather be like on Game Night",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Game Night\")))))))"
  },
  {
    "original_sentence": "what will the weather be like at the Open a Store",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Open a Store\")))))))"
  },
  {
    "original_sentence": "I need to change the date of my doctor appointment",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "I need to remove an appointment",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Dr. James",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dr. James\")))))))"
  },
  {
    "original_sentence": "What is my schedule next week",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "to set a appointment lisa at late evening",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Evening) (Today))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"lisa\")))))))))))"
  },
  {
    "original_sentence": "I don't like either of them for now.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Make a dinner reunion party next weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner reunion party\")) (Event.start_? (DateTime.date_? (NextWeekend)))))))"
  },
  {
    "original_sentence": "No, let's rename it to just dinner party",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"dinner party\")))))"
  },
  {
    "original_sentence": "No, sorry, go back to naming it Dinner Reunion party, thanks.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"Dinner Reunion party\")))))"
  },
  {
    "original_sentence": "Has the construction meeting for this week started yet?",
    "parse": "(Yield (< (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"construction meeting\")) (ThisWeek)))))) (Now)))"
  },
  {
    "original_sentence": "Did feed the baby start?",
    "parse": "(Yield (< (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"feed the baby\")))))) (Now)))"
  },
  {
    "original_sentence": "Has my teleconference meeting begun already?",
    "parse": "(Yield (< (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"teleconference meeting\")))))) (Now)))"
  },
  {
    "original_sentence": "Arrange a meeting with the Supervisors on Monday 10 AM",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Make an event for Tuesday at 3pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "I want the event to be for the full hour.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "4 to 5 make it.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Mark my calendar for march 31 at 12pm with John smith, mike jones, and adam mark attending.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 31L (March)) (NumberPM 12L)))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John smith\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"mike jones\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"adam mark\"))))))))))))"
  },
  {
    "original_sentence": "yes this looks good to me",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Let's add Larry, Bill, and Danny to the meeting with John Smith",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John Smith\")))))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Larry\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bill\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Danny\")))))))))))"
  },
  {
    "original_sentence": "Yup, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add birthday party for Saturday at 1 pm. Please invite Rocky, Lola, and Rosco.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"birthday party\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 1L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rocky\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lola\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rosco\"))))))))))))"
  },
  {
    "original_sentence": "Change my dentist appointment from the 19th to the 22nd at 9:00 AM",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 22L)) (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Set lunch tomorrow at 12",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "It looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to schedule a message on Friday at 3:00 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"message\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "It is.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When is Kwanzaa three years from now?",
    "parse": "(Yield (HolidayYear (Holiday.Kwanzaa) (+ (Date.year (Today)) (Year.apply 3L))))"
  },
  {
    "original_sentence": "Hey, when is my meeting with Charles Barkley next week?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Charles Barkley\")))) (NextWeekList)))))))"
  },
  {
    "original_sentence": "when i have meeting with charles barkley next week ?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"charles barkley\")))) (NextWeekList)))))))"
  },
  {
    "original_sentence": "ok. i will come",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "its ok for now thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Tell if am I free on February the 3rd?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 3L (February)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What do I have on the schedule on February 4th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 4L (February)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Find me Ceol in Reno for me.",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Ceol in Reno\")))"
  },
  {
    "original_sentence": "Can it accommodate groups?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Does Twisted Fork in Reno have group seating?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Twisted Fork in Reno\"))))))"
  },
  {
    "original_sentence": "What does my weekend look like?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "What do I have to do this weeknd?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "Move brunch to the next day",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"brunch\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (DateTime.date (Event.start x0)) (toDays 1)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "please update my evends in my calender",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Schedule school interview for August 1st.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"school interview\")) (Event.start_? (DateTime.date_? (?= (MD 1L (August)))))))))"
  },
  {
    "original_sentence": "Are there any slots available after 3:00PM?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Schedule my school interview on august 1st after 3pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"school interview\")) (Event.start_? (OnDateAfterTime (MD 1L (August)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "cancel this please",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Schedule another meeting for July 25th at 2 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (MD 25L (July)) (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "cancel Sunday appointment",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Please add Going to the Movies in it's place",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (do (DateTime.date (Event.start x0)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Going to the Movies\")) (Event.start_? (?= (Event.start x0)))) (Event.end_? (?= (Event.end x0)))))))))"
  },
  {
    "original_sentence": "Change the time to 2:00 to 4:00 PM.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) x1 (DateAtTimeWithDefaults (DateTime.date (Event.start x0)) (NumberPM 2L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (NumberPM 4L)))))))))"
  },
  {
    "original_sentence": "After the movies I have a dinner at 5 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (TimeAfterDateTime (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"movies\")))))) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Set a reminder to call the dentist tomorrow morning at 9:00am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"reminder to call the dentist\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "Will Sven be free next month",
    "parse": "(Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sven\")))))))) false))"
  },
  {
    "original_sentence": "is Jake free next month",
    "parse": "(Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))))))) false))"
  },
  {
    "original_sentence": "Let's shoot for the 2nd",
    "parse": "(Yield (CreateCommitEventWrapper (Execute (refer (extensionConstraint (CreateCommitEvent.data_? (EventSpec.start_? (DateTime.date_? (Date.day_? (?= (Day.apply 2L)))))))))))"
  },
  {
    "original_sentence": "I can work with that time yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "okay is Sven free in June",
    "parse": "(Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (FullMonthofMonth (June)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sven\")))))))) false))"
  },
  {
    "original_sentence": "Agent, Please schedule the June Second meeting with sven.",
    "parse": "(Yield (CreateCommitEventWrapper (Execute (refer (extensionConstraint (CreateCommitEvent.data_? (EventSpec.start_? (DateTime.date_? (?= (MD 2L (June)))))))))))"
  },
  {
    "original_sentence": "That looks great!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Is rose free on Friday afternoon?",
    "parse": "(Yield (RecipientAvailability (& (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Friday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"rose\")))))))) false))"
  },
  {
    "original_sentence": "Add one to my schedule.",
    "parse": "(Yield (CreateCommitEventWrapper (Execute (refer (extensionConstraint (^(CreateCommitEvent) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "next week, how is it?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "create soccer match on thursday at 3",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"soccer match\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Pancakes.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule 2 hours for Dinner and a Movie on Tuesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Dinner and a Movie\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "The after is great to go to.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "The 2nd event works fine for me",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "create lunch with friend tomorrow",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Organizer of Gather Knights?",
    "parse": "(Yield (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Gather Knights\")))))))"
  },
  {
    "original_sentence": "what is my schedule tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "add workout at YMCA to my calendar Saturday morning at 8 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"workout\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 8L))))) (Event.location_? (?= (LocationKeyphrase.apply \"YMCA\")))))))"
  },
  {
    "original_sentence": "It should be an hour long. 30 minutes is too short",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "That looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you put dinner at Red Robin for 8 on Friday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 8L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Red Robin\")))))))"
  },
  {
    "original_sentence": "Is there any way to move the meeting to sometime that isn't the weekend?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "can you move my brunch to not be on the weekend?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"brunch\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "choose the first one. And can you move my workout to not be on the weekend also?",
    "parse": "(do (Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"workout\")))))) (Event.start_? (DateTime.date_? (negate (ThisWeekend))))))))"
  },
  {
    "original_sentence": "Cancel my evening reservations for the rest of the week.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Cancel todays evening reservations",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Evening)))))))))"
  },
  {
    "original_sentence": "I meant tomorrow's meeting",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Create an event with Barack obama on my calendar",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack obama\"))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Show me my schedule",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Modify my schedule",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Hi there. Can you tell me tomorrow's forecast for Columbus, Ohio?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Columbus, Ohio\"))) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "What are the chances it will rain in the morning?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (rainPrecipProbability) (WeatherQueryApi (AtPlace (Here)) (DateTimeConstraint (Morning) (Tomorrow)))))"
  },
  {
    "original_sentence": "Columbus, Ohio",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"Columbus, Ohio\")))))))"
  },
  {
    "original_sentence": "can you tell me the chance of rain in that time?",
    "parse": "(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When is the next football game with Brandon?",
    "parse": "(Yield (Event.start (FindNumNextEvent (& (Event.subject_? (?~= \"football game\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brandon\"))))) 1L)))"
  },
  {
    "original_sentence": "Make a Seahawks game for the same time as that but tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Seahawks game\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (DateTime.time (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))))"
  },
  {
    "original_sentence": "That is perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When am I seeing Sarah next?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\")))) 1L)))"
  },
  {
    "original_sentence": "Schedule a haircut for the exact time next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"haircut\")) (Event.start_? (?= (adjustByPeriodDuration (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply (toWeeks 1)))))))))"
  },
  {
    "original_sentence": "please accept the Field conference",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Field conference\"))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Yes, thanks. Also accept my Berry Picking Party and say that I will bring enough baskets for everyone.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I will bring enough baskets for everyone\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Berry Picking Party\"))))) :response (ResponseStatusType.Accepted))))"
  },
  {
    "original_sentence": "Yes, and accept my berry eating party the next day.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"berry eating party\"))))) :response (ResponseStatusType.Accepted))))"
  },
  {
    "original_sentence": "create baseball game on monday at 2",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"baseball game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Is Jamison coming to the Jimmy Hoffa search party event next week?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Jimmy Hoffa search party\")) (NextWeekList))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamison\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Forward it to Jonah Jamison",
    "parse": "(Yield (ForwardEventWrapper (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jonah Jamison\"))))))))"
  },
  {
    "original_sentence": "Yes, forward it to Jonah Jamison.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you invite Mike Hunt to the search party as well?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"search party\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mike Hunt\"))))))))))"
  },
  {
    "original_sentence": "Yeah, send it to him.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to go to the hardware store at 2:50pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"hardware store\")) (Event.start_? (?= (NextTime (HourMinutePm 2L 50L))))))))"
  },
  {
    "original_sentence": "What was the name of that event last year on June 11th?",
    "parse": "(Yield (Event.subject (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MDY 11L (June) (LastYear)) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Who attended my completely forgettable Halloween party last year?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"forgettable Halloween party\")) (FullYearofYear (LastYear))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "hi, am looking to put up a meeting on Friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "Start it at 11:15 am.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 11L 15L)))))))"
  },
  {
    "original_sentence": "Yes this works well",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you add steve to this meeting>",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"steve\"))))))))))"
  },
  {
    "original_sentence": "Yes. Please forward this to Steve.",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (ForwardEventWrapper (^(Dynamic) item x0) (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steve\"))))))))))"
  },
  {
    "original_sentence": "What is the temperature in Los Angeles in the morning",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Los Angeles\"))) (DateTimeConstraint (Morning) (Today)))))"
  },
  {
    "original_sentence": "Will it rain",
    "parse": "(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "That's good. I can leave my rain jacket at home.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Will I need an umbrella in the evening?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTimeConstraint (Evening) (Today)))))"
  },
  {
    "original_sentence": "Make a appointment for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Decline my meeting tomorrow morning and say I will be in late",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I will be in late\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Morning))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "That's correct. I'm needing to decline the RoundUp and say I'll be gone at that time.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I'll be gone at that time\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"RoundUp\"))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "Yes. Bob invited me for drinks next Wednesday after work, but I need to decline. Please let him know that I look forward to doing this another time.",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I look forward to doing this another time.\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"drinks\"))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Can you please schedule happy hour drinks with Karl Boon for this weekend?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"happy hour drinks\")) (Event.start_? (DateTime.date_? (ThisWeekend)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karl Boon\")))))))))))"
  },
  {
    "original_sentence": "No",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you schedule it for the afternoon?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.time_? (Afternoon))))))"
  },
  {
    "original_sentence": "How many hours is my vacation?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"vacation\")))))))"
  },
  {
    "original_sentence": "find my current location",
    "parse": "(Yield (Here))"
  },
  {
    "original_sentence": "cancel my all events in my calender",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "put meeting with fernandus and lofer",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"fernandus\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"lofer\")))))))))))"
  },
  {
    "original_sentence": "Yes, they do, thanks",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Do I have any meetings before 3pm today?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Today) (NumberPM 3L))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateBeforeTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))) 0L)))"
  },
  {
    "original_sentence": "I need an appointment between 4 and 6 pm",
    "parse": "(let (x0 (NextTime (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeAndConstraint x0 (TimeAfterDateTime x0 (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "what do i have tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Let`s find a good time to walk my dog.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"walk my dog\")))))"
  },
  {
    "original_sentence": "Yeah it's ok .Create a meeting in the afternoon on Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Monday)))))))"
  },
  {
    "original_sentence": "Add workout at 4pm to schedule please.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"workout\")) (Event.start_? (?= (NextTime (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Please add Emily to the workout.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"workout\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\"))))))))))"
  },
  {
    "original_sentence": "hym",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "I want to schedule a staff meeting. It will be attended by John, Sarah, Tom, Barack.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"staff meeting\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack\"))))))))))))"
  },
  {
    "original_sentence": "Let's go with option number two.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Ok, please delete the meeting with John, Sarah, Tom, and Barack",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack\"))))))))))))"
  },
  {
    "original_sentence": "Yes, please.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make a meeting with my manager",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))))))"
  },
  {
    "original_sentence": "Who is on Kim Possible's team?",
    "parse": "(Yield (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim Possible\")))))))"
  },
  {
    "original_sentence": "All of them, let's go ahead and set the meeting for 4 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (& (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "wait for it",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "The first option works best.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "delete a calendar event for July 20th at 8 pm for drakes concert",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"drakes concert\")) (EventOnDateTime (DateAtTimeWithDefaults (MD 20L (July)) (NumberPM 8L)) (^(Event) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "Yes cancel this event.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I'd like to visit Yellowstone National Park on the 17th at 1.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"visit\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 17L) (NumberPM 1L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Yellowstone National Park\")))))))"
  },
  {
    "original_sentence": "Is it going to rain in Yellowstone that day?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Yellowstone\"))) (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "And the wind?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (windSpeed) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Schedule dinner and drinks with Amy on Saturday at 7:30 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner and drinks\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (HourMinutePm 7L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\")))))))))))"
  },
  {
    "original_sentence": "Yes. Also add a meeting with Tom after",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Event.end (^(Dynamic) item x0)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))))))))))"
  },
  {
    "original_sentence": "Perfect. Please put the event on my calendar.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "That looks good. Just make it 80 minutes long",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toMinutes 80))))))"
  },
  {
    "original_sentence": "Looks good but change the date to 30 of April.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.date_? (?= (MD 30L (April))))))))"
  },
  {
    "original_sentence": "What is on my schedule for today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Do I have any upcoming events?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))) 0L))"
  },
  {
    "original_sentence": "Add a meeting with Miriam Graham, Joshua Murphy, and Lee Gu for next Monday at 10 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L)))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Miriam Graham\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joshua Murphy\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lee Gu\"))))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is the weather in Charleston?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Charleston\"))) (?= (Now))))"
  },
  {
    "original_sentence": "Will it rain tomorrow in London?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"London\"))) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "What is the average rainfall in Panama?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "I need an event for llast thursday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (previousDayOfWeek (Today) (Thursday))))))))"
  },
  {
    "original_sentence": "name it Doctor's Appt",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"Doctor's Appt\")))))"
  },
  {
    "original_sentence": "The second one. Please mark on the calendar that I had surgery last Friday.",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"surgery\")) (Event.start_? (DateTime.date_? (?= (DowOfWeekNew (Friday) (LastWeekNew))))))))))"
  },
  {
    "original_sentence": "no thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please put meeting at Round Rock Library on Friday at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (Noon)))) (Event.location_? (?= (LocationKeyphrase.apply \"Round Rock Library\")))))))"
  },
  {
    "original_sentence": "Thats perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What is the weather like for then",
    "parse": "(Yield (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Okay, great, now can you also set down that I need to drive over to Stinson Beach in Marin on Saturday at 10 am?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"drive over\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 10L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Stinson Beach in Marin\")))))))"
  },
  {
    "original_sentence": "What meetings do I have next Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Do I have a meeting with tom's boss?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"tom\"))))))))))) 0L))"
  },
  {
    "original_sentence": "When is my meeting with dan?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"dan\")))))))))"
  },
  {
    "original_sentence": "I'll be at the \"The Drowsy Chaperone\" at the Main Street Theater with Sarah on Saturday at 4.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"The Drowsy Chaperone\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 4L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Main Street Theater\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\")))))))))))"
  },
  {
    "original_sentence": "No, it's gotta be later than 5 actually.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "I'm happy with this",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "no, I want 6 pm instead",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Create a lunch tomorrow at noon with Terry, Amy, and Timothy.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Terry\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Timothy\"))))))))))))"
  },
  {
    "original_sentence": "Yes, make it an hour long though",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "That's fine.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you invite John Parker to that lunch as well",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John Parker\"))))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete the event with my team",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser))))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please restore that one. I want you to cancel the meeting that was scheduled for tomorrow.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "please try to cancel it",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Cancel my meeting tomorrow.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Good morning. Cancel all morning appointments.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "reate a new appointment tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Wait a moment, please",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Ok, keep the 10am appointment",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Confirm.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you delete my appointment with carla?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"carla\")))))))))))"
  },
  {
    "original_sentence": "Let me think about it",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "What is the weather like for my golf event this Friday?",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"golf\"))))))))"
  },
  {
    "original_sentence": "will it rain during the run on saturday?",
    "parse": "(Yield (WillRain (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"run\")))))))))"
  },
  {
    "original_sentence": "what will the weather be like for the Go to Store",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Go to Store\")))))))"
  },
  {
    "original_sentence": "Change the staff meeting for tomorrow morning to 8:30, extend the duration to two hours and go to the next meeting with HR at 11:00 AM.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Delete my date at 1600 hours.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (HourMinuteMilitary 16L 0L)) (Event.subject_? (?~= \"date\"))))))))))"
  },
  {
    "original_sentence": "Can I still make the date?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "Please check my 14 o clock",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (HourMinuteMilitary 14L 0L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Change the name of Appointment to Date",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"Date\")))))"
  },
  {
    "original_sentence": "Yes is fine",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create Friendsgiving for this Thursday at 5pm with Jaron, Bobbin, Steve-O, and Kiandre.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Friendsgiving\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 5L))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jaron\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bobbin\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steve-O\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kiandre\"))))))))))))"
  },
  {
    "original_sentence": "Yeah. You're Perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When do I go golfing with don, Moira and Steve?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"golfing\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"don\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Moira\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steve\")))))))))))"
  },
  {
    "original_sentence": "Can you add Sharon to the golfing with Don, Moira and Steve and have it end at 4:30 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"golfing\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Don\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Moira\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steve\")))))))))) (& (Event.end_? (DateTime.time_? (?= (HourMinutePm 4L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sharon\")))))))))))"
  },
  {
    "original_sentence": "That looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "List my team.",
    "parse": "(Yield (FindTeamOf (toRecipient (CurrentUser))))"
  },
  {
    "original_sentence": "ITS GOOD",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "that will be it for today",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When do I see Leonard next?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Leonard\")))) 1L)))"
  },
  {
    "original_sentence": "Afterward, make a lunch meeting at flo's diner",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \"flo's diner\")))))))"
  },
  {
    "original_sentence": "After I need to add meeting with HP",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"HP\")))))))))))"
  },
  {
    "original_sentence": "When do I see Harry again?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harry\")))))))))"
  },
  {
    "original_sentence": "Thankyou",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to do a lunch meeting at Tonio's after.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Tonio's\")))))))"
  },
  {
    "original_sentence": "defer the meeting with Lewis at 2 pm today",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "meeting with lewis at 2 today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"lewis\")))))))))))"
  },
  {
    "original_sentence": "OK GOOD",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Ok, now, please move that meeting to tomorrow at the same time.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (?= (adjustByPeriodDuration (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply (toDays 1))))))))"
  },
  {
    "original_sentence": "cancel this meeting and change to friday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Friday))))))))"
  },
  {
    "original_sentence": "Hi there. For Wednesday of next week, I need to add a TPS Reports Summary Meeting at 1:45 pm until 3:15 pm. I think we're going to be in the HR Department Conference Room.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (DowOfWeekNew (Wednesday) (NextWeekList)) (HourMinutePm 1L 45L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"TPS Reports Summary Meeting\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 3L 15L))))) (Event.location_? (& (?= (LocationKeyphrase.apply \"the HR Department Conference Room\")) (roomRequest))))))))"
  },
  {
    "original_sentence": "Oops. That's not right. It should be on the 24th, not the 23rd.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (ClosestDay (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Day.apply 24L))))))))"
  },
  {
    "original_sentence": "Great. I think that's all for now. Thanks kindly.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What's today?",
    "parse": "(Yield (Today))"
  },
  {
    "original_sentence": "Do I have any dates this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"dates\")) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "I need that lunch moved back to 1:15.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 1L 15L)))))))"
  },
  {
    "original_sentence": "Make it last 1 hour.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "make my lunch date from 1 to 2",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (& (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Change the name of my lunch to Bill",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.subject_? (?= \"Bill\")))))"
  },
  {
    "original_sentence": "I need to change the monthly meeting today from 2 pm to 3 pm and also include Richard, Kim and Connie on the attendee list for the new time.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 2L)) (Event.subject_? (?~= \"monthly meeting\"))))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Richard\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Connie\"))))))))))))"
  },
  {
    "original_sentence": "make a appointment tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "The one at 10am is a good one",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Modify my scheduled start time for the meeting with Andrew. It will now start at 10 AM on Tuesday.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Andrew\")))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Tuesday)) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Yeah sure that looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When was the last coffee house meeting on my schedule",
    "parse": "(Yield (Event.start (FindLastEvent (EventBeforeDateTime (Now) (Event.subject_? (?~= \"coffee house meeting\"))))))"
  },
  {
    "original_sentence": "How many events do I have tomorrow?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "How about the day after?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "What about the following Saturday>",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (nextDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday))))))))"
  },
  {
    "original_sentence": "What about the day afterwards?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1))))))))"
  },
  {
    "original_sentence": "What is the second event tomorrow?",
    "parse": "(Yield (Event.showAs (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Put a team meeting on the calendar next Monday at 3pm for Jim, Bob, Sue, and Ann.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 3L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))))) (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sue\")))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ann\"))))))))))))"
  },
  {
    "original_sentence": "Yup, great, thank you!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "can you also create a mud wrestling event for saturday with Ann, Sue, Jim and Bob??",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"mud wrestling\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ann\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sue\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\"))))))))))))"
  },
  {
    "original_sentence": "The first option.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Also, I have a 5:00 pm meeting with Leonard, Sheldon, Howard, and Raj; please cancel it.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Leonard\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sheldon\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Howard\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Raj\"))))) (EventOnDateTime (NextTime (NumberPM 5L)) (^(Event) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "Does asadero sinaloa in ballard have a casual dress code?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"asadero sinaloa in ballard\"))))))"
  },
  {
    "original_sentence": "is Bistro 7 in Reno casual?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Bistro 7 in Reno\"))))))"
  },
  {
    "original_sentence": "Is the Lone Eagle in Incline Village, Nv casual?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Incline Village, Nv\"))))))"
  },
  {
    "original_sentence": "Set up a 1 hour meeting tomorrow to discuss staff changes in Conference Room A. Let's begin at 9 am.",
    "parse": "(FenceConferenceRoom)"
  },
  {
    "original_sentence": "Conference Room A is booked. Let's go with Jim's office instead.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Jim's office\"))))))"
  },
  {
    "original_sentence": "Make the meeting last until 11:30 am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 11L 30L)))))))"
  },
  {
    "original_sentence": "indeed",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "So how long is that meeting now?",
    "parse": "(Yield (Event.duration (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "On the Wednesday after that meeting, schedule a 45 minute staff meeting in Conference Room B, starting at 10 am.",
    "parse": "(FenceConferenceRoom)"
  },
  {
    "original_sentence": "looks right to me",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Changed my mind. Move that staff meeting to Friday.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"staff meeting\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)))))))))"
  },
  {
    "original_sentence": "looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Since I changed the staff meeting, let's change the discuss staff changes to the 21st.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"discuss staff changes\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 21L)))))))))"
  },
  {
    "original_sentence": "looks dank",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hey, you know go ahead and cancel the humanity event on the 22nd. I decided it's not for me. Too edgy.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 22L) (Event.subject_? (?~= \"humanity\"))))))))))"
  },
  {
    "original_sentence": "Yep!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule a meeting with Amy for Wednesday at 10 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 10L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\")))))))))))"
  },
  {
    "original_sentence": "Make it last 1 hour.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Hello, what is the date after tomorrow?",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "Can you schedule a business meeting for next Tuesday at 3:00 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"business meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Change the duration to 45 minutes.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toMinutes 45))))))"
  },
  {
    "original_sentence": "Good, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "meet with Marie this weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (ThisWeekend))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marie\")))))))))))"
  },
  {
    "original_sentence": "Do I have anything scheduled for this weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))) 0L))"
  },
  {
    "original_sentence": "Good. Schedule an event for Thursday entitled \"Send out Invites\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Send out Invites\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday)))))))))"
  },
  {
    "original_sentence": "neither",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "hey",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "what is the weather like in San Diego?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"San Diego\"))) (?= (Now))))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule party 7 pm tonight",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"party\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Change the duration to 3 hours.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 3))))))"
  },
  {
    "original_sentence": "Put meeting on calendar for November 20th at 12 pm with jennifer, jake, and jesse",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 20L (November)) (NumberPM 12L)))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jennifer\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jake\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jesse\"))))))))))))"
  },
  {
    "original_sentence": "Add three more people from the Sales Department. Their names are John Smith, Carry Underwood and Bill Clinton.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John Smith\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carry Underwood\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bill Clinton\")))))))))))"
  },
  {
    "original_sentence": "Looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Me, Abby, Jake, and JEsse are having dinner at the Italian place this evening.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTimeConstraint (Evening) (Today)))) (Event.location_? (?= (LocationKeyphrase.apply \"Italian place\")))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"JEsse\"))))))))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Change dentist appointment to Monday",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Monday)))))))))"
  },
  {
    "original_sentence": "Looks good, thanks!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make an appointment on Friday at Tim's House.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))) (Event.location_? (?= (LocationKeyphrase.apply \"Tim's House\")))))))"
  },
  {
    "original_sentence": "I want the appointment at 1:00 pm.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Cancel all Meetings on Tuesday and Wednesday.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Schedule a training meeting for 2:00 pm on Wednesday with Jimmy Bates, Karen Bannion and Sue Duvall.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"training meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 2L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jimmy Bates\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen Bannion\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sue Duvall\"))))))))))))"
  },
  {
    "original_sentence": "Schedule a planning meeting with Jesse, Sean, and Greta",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"planning meeting\")) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sean\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Greta\"))))))))))))"
  },
  {
    "original_sentence": "The second one is fine. Please delete the steering meeting with Amber, Rose, and Dustin at 3pm",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 3L)) (& (Event.subject_? (?~= \"steering meeting\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amber\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rose\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dustin\")))))))))))))))"
  },
  {
    "original_sentence": "yup, looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you move my meeting tomorrow to Friday?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)))))))))"
  },
  {
    "original_sentence": "the first one",
    "parse": "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What time does that meeting start.",
    "parse": "(Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Delete \"smash party\" event from yesterday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Yesterday) (Event.subject_? (?~= \"smash party\"))))))))))"
  },
  {
    "original_sentence": "Yes delete it since it happened already",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you, can you add Dinner with Steven this Saturday at 7pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 7L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steven\")))))))))))"
  },
  {
    "original_sentence": "Good but it shouldn't have ended until 9 PM.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 9L)))))))"
  },
  {
    "original_sentence": "Add James and Rachel please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rachel\")))))))))))"
  },
  {
    "original_sentence": "Please let me know where my dinner will be tomorrow night",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (Event.subject_? (?~= \"dinner\"))) (Night)))))))"
  },
  {
    "original_sentence": "make a apportionment today at Red Robin",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Today)))) (Event.location_? (?= (LocationKeyphrase.apply \"Red Robin\")))))))"
  },
  {
    "original_sentence": "Top one",
    "parse": "(Yield (Execute (ChooseCreateEvent (TopResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can I sit outside there?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.OutdoorDining) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Do they have any happy hour specials?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.HappyHour) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "can you change my Sewer Chase to occur in the AM",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Sewer Chase\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (ConvertTimeToAM (DateTime.time (Event.start x0))))))))))"
  },
  {
    "original_sentence": "Can you change my Rolo's to PM",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Rolo's\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (ConvertTimeToPM (DateTime.time (Event.start x0))))))))))"
  },
  {
    "original_sentence": "Yes, Thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you change my Smash Weekly Event to be in the pm?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Smash Weekly\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (ConvertTimeToPM (DateTime.time (Event.start x0))))))))))"
  },
  {
    "original_sentence": "That looks great, but then can you update the meeting with Kim to be AM please.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))) (do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (ConvertTimeToAM (DateTime.time (Event.start x0)))))))))))"
  },
  {
    "original_sentence": "Can you tell me what time my appointment starts on Sunday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"appointment\"))))))))"
  },
  {
    "original_sentence": "Do I have any meetings on Monday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "How long ago did I first meet with Tom?",
    "parse": "(Yield (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))) 1L))"
  },
  {
    "original_sentence": "Create an event where my car will be in the shop from October 21st until November 1st.",
    "parse": "(let (x0 (MD 21L (October))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"where my car will be in the shop\")) (DateAndConstraint x0 (nextMonthDay x0 (November) 1L)))))))"
  },
  {
    "original_sentence": "good!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please make a work business trip to Kansas lasting 5 days on the 10th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"work business trip to Kansas\")) (nextDayOfMonth (Today) 10L) (toDays 5)))))"
  },
  {
    "original_sentence": "That is it indeed.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create an event called Guys Weekend starting November 14th and lasting for four days.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"Guys Weekend\")) (MD 14L (November)) (toDays 4)))))"
  },
  {
    "original_sentence": "Yes that looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need you to delete John Parker from my event with john, ted simon and Jordan",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"john\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"ted\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"simon\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jordan\"))))))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John Parker\")))))))))))"
  },
  {
    "original_sentence": "yes, and please invite tony and adam",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"tony\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"adam\")))))))))))"
  },
  {
    "original_sentence": "This is perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Find my next meeting with June, April, Mae and Julie",
    "parse": "(Yield (FindNumNextEvent (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"June\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"April\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mae\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Julie\"))))) 1L))"
  },
  {
    "original_sentence": "I wanted to know if you had a particular item in stock?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "create work shindig on monday at 2",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"work shindig\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "hang on a minute.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Ok, that's fine",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule dinner tomorrow with tony, liv and hannah.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"tony\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"liv\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"hannah\"))))))))))))"
  },
  {
    "original_sentence": "Those times do not work for dinner",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Hang on I have to take my cat outside.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "What are any other available times?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "what's the weather tonight in Italy?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Italy\"))) (DateTimeConstraint (Night) (Today))))"
  },
  {
    "original_sentence": "marketing management seminar on Friday for 4 hours",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"marketing management seminar\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.duration_? (?= (toHours 4)))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "okey thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What are my events for the morning?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Morning))))"
  },
  {
    "original_sentence": "How long will the conference call next week be?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"conference call\")) (NextWeekList)))))))"
  },
  {
    "original_sentence": "Delete doctors appointment for Monday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"doctors appointment\"))))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete my Meal Prep please.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Meal Prep\")))))))))"
  },
  {
    "original_sentence": "Yea that's it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I have hockey practice on Wednesday afternoon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"hockey practice\")) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Wednesday))))))))"
  },
  {
    "original_sentence": "The second one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I also have dinner with my parents that evening.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Is Alice attending the 2:00 team event?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"team\")) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alice\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Will she be at the team meeting tomorrow morning?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"team meeting\")))))) (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Will Jake Thomas be attending the budget meeting?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"budget meeting\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake Thomas\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Is Randolph coming to baseball practice next Thursday?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.subject_? (?~= \"baseball practice\")))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Randolph\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Cool. Is Debbie going to make it to the training session this weekend?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"training session\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Debbie\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "I've decided to live another week, so I'll need to cancel my funeral.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"funeral\")))))))))"
  },
  {
    "original_sentence": "Yup. That's no longer needed!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Put \"swimming with manatees\" on my calendar for April 4 at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"swimming with manatees\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 4L (April)) (Noon))))))))"
  },
  {
    "original_sentence": "It's almost perfect, but I need it to last for four hours total, so from 12 to 4pm please.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (& (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 4L))))) (Event.duration_? (?= (toHours 4)))))))"
  },
  {
    "original_sentence": "My meeting at City Hall will need to be pushed back to next month.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (?= (LocationKeyphrase.apply \"City Hall\"))))))) (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth)))))))"
  },
  {
    "original_sentence": "The Tuesday appointment would be the best way to go.",
    "parse": "(Yield (Execute (ChooseUpdateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "No..it is okay for me.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to cancel my project planning meeting next week",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"project planning meeting\")) (NextWeekList)))))))))"
  },
  {
    "original_sentence": "No, I meant my project kick-off meeting.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"project kick-off meeting\")))))"
  },
  {
    "original_sentence": "Yes, that's the right one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to set up a phone meeting with Mark between lunch and the staff meeting.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\"))))) x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"staff meeting\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"phone meeting\")) (Event.start_? (DateTimeAndConstraintBetweenEvents x0 x1))) (Event.end_? (DateTimeAndConstraintBetweenEvents x0 x1))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\"))))))))))))"
  },
  {
    "original_sentence": "Schedule it for 1:30 pm.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (HourMinutePm 1L 30L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "okay thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please schedule a nail appointment between lunch and shopping.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\"))))) x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"shopping\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"nail appointment\")) (Event.start_? (DateTimeAndConstraintBetweenEvents x0 x1))) (Event.end_? (DateTimeAndConstraintBetweenEvents x0 x1)))))))"
  },
  {
    "original_sentence": "1:00 PM is best.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Yes, change that to an hour later and move my last meeting an hour later too",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "ok only one fix it",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Schedule my soccer appointment at 2pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"soccer appointment\")) (Event.start_? (?= (NextTime (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "The first one. And schedule a shopping trip afterwards at 3pm.",
    "parse": "(let (x0 (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (do (Yield x0) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"shopping trip\")) (Event.start_? (?= (TimeAfterDateTime (Event.end (^(Dynamic) item x0)) (NumberPM 3L))))))))))"
  },
  {
    "original_sentence": "Perfect. Let's make pick up kids from mall at 5.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pick up kids from mall\")) (Event.start_? (?= (NextTime (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Can you modify my meeting with Sam to start at 8 am?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\")))))))) (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "Add to schedule dinner with Jennie from 7:00 for 1 hour.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (NextTime (NumberPM 7L))))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennie\")))))))))))"
  },
  {
    "original_sentence": "yes and mark me as busy during that time",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.showAs_? (?= (ShowAsStatus.Busy))))))"
  },
  {
    "original_sentence": "Hello, agent. Who has responded to the construction planning meeting on the 24th?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 24L) (Event.subject_? (?~= \"construction planning meeting\"))))))) (ResponseStatusType.None)))"
  },
  {
    "original_sentence": "Who has Responded to the Compliance event?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Compliance\")))))) (ResponseStatusType.None)))"
  },
  {
    "original_sentence": "Okay, thanks. Who has answered my invitation to attend a Photoshop Training Event tomorrow?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"Photoshop Training Event\"))))))) (ResponseStatusType.None)))"
  },
  {
    "original_sentence": "Create an event for Lunch with Mother in Law next Sunday at 3:00 pm to 4:30 pm.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Schedule walk with her after lunch.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Can you move both of those events 2 hours earlier?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I will be at the Summit from Friday to Sunday",
    "parse": "(let (x0 (NextDOW (Friday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"Summit\")) (DateAndConstraint x0 (nextDayOfWeek x0 (Sunday))))))))"
  },
  {
    "original_sentence": "This looks good, thanks!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great. Also, please add an all day Church meeting next week.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Church meeting\")) (Event.start_? (DateTime.date_? (NextWeekList)))) (Event.isAllDay_? (?= true))))))"
  },
  {
    "original_sentence": "I want it to last for 3 days.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (toDays 3)))))"
  },
  {
    "original_sentence": "Make it next Wednesday for 4 days",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (NextDOW (Wednesday)) (toDays 4)))))"
  },
  {
    "original_sentence": "Hi. Please tell me when I saw the dentist last April.",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"dentist\")) (FullMonthofPreviousMonth (April))))))))"
  },
  {
    "original_sentence": "Thank you for finding that event! Can you also tell me when I did the Iron Man Marathon last December?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Iron Man Marathon\")) (FullMonthofPreviousMonth (December))))))))"
  },
  {
    "original_sentence": "Did I do anything in last December?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofPreviousMonth (December)))))) 0L))"
  },
  {
    "original_sentence": "Look up if i have an appointment with Paige Ashworth today",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\")))))))"
  },
  {
    "original_sentence": "can you set an appointment with Cecelia Waller on Thursday 9th on my calendar?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cecelia Waller\")))))))))))"
  },
  {
    "original_sentence": "Thursday 9AM appointment with Cecelia Waller",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberAM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cecelia Waller\")))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "dentist appointment at 11:30 AM 9th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 9L) (HourMinuteAm 11L 30L))))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "meeting barack obama on 20th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 20L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"barack obama\")))))))))))"
  },
  {
    "original_sentence": "at 1pm",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "can you remove the dentist appointment and change it to November 2019",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "remove dentist appointment",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\")))))))))"
  },
  {
    "original_sentence": "cancel",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "yes",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Let the team know that I’m running 20 minutes late",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Okay thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "It is okay. Can you tell me how to get to the meeting faster from my house?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "put meeting time changed",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "What events do I have on friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "I have a conference call I need to make on Thursday at 4 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"conference call\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Friday I have a meeting with coworkers at 2 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Move my meeting with Shawn from Tuesday to Thursday at 1 p.m.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Shawn\"))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Thursday)) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "yeppers",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have any meetings on friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Good, okay, can you also tell me when my next meeting with Peter and Jules is?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Peter\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jules\"))))) 1L)))"
  },
  {
    "original_sentence": "what is going on friday morning?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) (Morning))))"
  },
  {
    "original_sentence": "Do I have any meetings this week",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Make me an event that starts in june of 2021",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (FullMonthofMonth (June) (Year.apply 2021L)))))))"
  },
  {
    "original_sentence": "Can you find all of my events in July 2021",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (July) (Year.apply 2021L)))))"
  },
  {
    "original_sentence": "Awesome, what about my events in August 2021?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (August) (Year.apply 2021L)))))"
  },
  {
    "original_sentence": "Cool, could you make a snow boarding event in December 2020",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventDuringRange (Event.subject_? (?= \"snow boarding\")) (FullMonthofMonth (December) (Year.apply 2020L))))))"
  },
  {
    "original_sentence": "Could you please tell me when my snowboarding event is in January 2022?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (January) (Year.apply 2022L)))))"
  },
  {
    "original_sentence": "i wanna meet my mom",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "What events do I have this weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "Can we change that to start at 9 AM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do meet at coffee shop with my contacts.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"meet at coffee shop with my contacts\")))))"
  },
  {
    "original_sentence": "Need to be at work at 8:00 AM tomorrow to attend a conference call with Tokyo office at 8:15 AM and please allow one hour for commute time.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Change my conference call to start at 7 am until 7:30 and make an appointment to drive to the airport at 9 am on that day.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "can you cancel 15 minutes off of that?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (subtractDurations (Event.duration (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (toMinutes 15)))))))"
  },
  {
    "original_sentence": "Actually can you make the drive to the airport 20 minutes so it would be 9-920am?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"drive to the airport\")))))) (Event.duration_? (?= (toMinutes 20))))))"
  },
  {
    "original_sentence": "Please note my meeting with my manager for the day after tomorrow at 10 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (adjustByPeriod (Tomorrow) (toDays 1)) (NumberAM 10L)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Yes, please add Tom to the meeting as well.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\"))))))))))"
  },
  {
    "original_sentence": "Yes this looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Oh wait tom cant make it until 11 please start it then",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "That's good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hello! What is the weather for today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "What is the weather in Ithaca today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Ithaca\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "Is it supposed to snow today?",
    "parse": "(Yield (WillSnow (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "Is it supposed to snow tomorrow?",
    "parse": "(Yield (WillSnow (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "Is it supposed to snow any time in the next week?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Is it supposed to rain tomorrow?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "Is it supposed to rain in Ithaca tomorrow?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Ithaca\"))) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "What's the forecast?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "What can you help me with regarding weather?",
    "parse": "(WeatherPleasantry)"
  },
  {
    "original_sentence": "Is it supposed to freeze tonight?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Schedule my haircut for 3pm on 3/5",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"haircut\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 5L (toMonth 3L)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "That looks fine.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add John, Janette, Eric and Kevin to the luncheon on next Tuesday.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"luncheon\"))))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janette\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Eric\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kevin\")))))))))))"
  },
  {
    "original_sentence": "also I need to add movie night for Friday, that’s with Janice, Janet, hazel and Fiona",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"movie night\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janet\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"hazel\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fiona\"))))))))))))"
  },
  {
    "original_sentence": "Actually can it be at 8pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "That looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When am I wrestling with Jake, Jesse, Kim, and Abby this week?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"wrestling\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))) (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "do you know the current president",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "Can you please schedule \"Go to Follow Up Interview\" for the day after tomorrow at 2 until 3pm?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (adjustByPeriod (Tomorrow) (toDays 1)) (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Go to Follow Up Interview\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L)))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change that to go to 5 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "whaer is my metting",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Awesome",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Mark my calendar for time and date",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "What can you help me with then?",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "yeah i need your help.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Is my schedule for tomorrow clear?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Good schedule meeting in lunch room with Sung, Rex, Ned, and Sam from 1 to 4 pm.",
    "parse": "(let (x0 (NextTime (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L))))) (Event.location_? (?= (LocationKeyphrase.apply \"lunch room\")))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sung\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rex\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ned\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\")))))))))))))"
  },
  {
    "original_sentence": "Yes, thank you!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you also tell me when my next meeting with Rand is?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rand\"))))))"
  },
  {
    "original_sentence": "Accept my Date Night/Game Night",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Date Night/Game Night\"))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "THANKS OK",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Oh, also please accept the invitation to the movies!",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"movies!\"))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "I need my pyramid scheme accepted and comment that says \"time to make some moneys\"",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"time to make some moneys\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"pyramid scheme\"))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Do I have any events scheduled today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "When do I have a meeting with John next week?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))) (NextWeekList)))))))"
  },
  {
    "original_sentence": "call Tom as well?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\"))))))))"
  },
  {
    "original_sentence": "Ok, i will dial the number thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to call Heather Tackett",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Heather Tackett\"))))))))"
  },
  {
    "original_sentence": "Call Jimmy for me",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jimmy\"))))))))"
  },
  {
    "original_sentence": "Let's give Victor a call",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Victor\"))))))))"
  },
  {
    "original_sentence": "Put a lunch meeting with Abby, Kim, and Jesse at Taco Bell tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.location_? (?= (LocationKeyphrase.apply \"Taco Bell\")))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\"))))))))))))"
  },
  {
    "original_sentence": "That looks amazing",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Lets make a meeting with Abby tomorrow. Also add JEsse and Kim",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"JEsse\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))))))"
  },
  {
    "original_sentence": "Second one please",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "can you set up a new event for friday at 11:30 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteAm 11L 30L)))))))"
  },
  {
    "original_sentence": "please name it \"dental appointment\"",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"dental appointment\")))))"
  },
  {
    "original_sentence": "maybe",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "You did a great job!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Thank you very much.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have a date in the fall?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"date\")) (SeasonFall))))) 0L))"
  },
  {
    "original_sentence": "Can you add Losli to that event?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Losli\"))))))))))"
  },
  {
    "original_sentence": "Hi, what time is my first meeting tomorrow?",
    "parse": "(Yield (Event.start (FindNumNextEvent (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) 1L)))"
  },
  {
    "original_sentence": "Hello, show me the schedule for Monday morning.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)) (Morning))))"
  },
  {
    "original_sentence": "Schedule motivational meeting at 1 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"motivational meeting\")) (Event.start_? (?= (NextTime (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "Move my YouTube Binge to sometime not on the weekend",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"YouTube Binge\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "choose the first option",
    "parse": "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Move my Netflix Binge to any day that isnt on the weekend",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Netflix Binge\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "I like the second one",
    "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "i need Road Trip to be not on the weekend",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Road Trip\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Schedule a meeting at 1400 hour tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinuteMilitary 14L 0L)))))))"
  },
  {
    "original_sentence": "Yes this looks ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Have it go to 1445 please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (HourMinuteMilitary 14L 45L)))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make a new meeting tomorrow at 4pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Add meetings same time everyday for this week.",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "Do I have anything this evening?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Evening))))) 0L))"
  },
  {
    "original_sentence": "Do I have any events next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "I need to schedule an all day \"Easter Egg Hunt\" for next Easter.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"Easter Egg Hunt\")) (NextHolidayFromToday (Holiday.Easter))))))"
  },
  {
    "original_sentence": "I would like to schedule an appointment for next Thursday at 1 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Thanks, I didn't mean tomorrow, I meant the following Thursday and have it start at 1:30.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfWeek (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Thursday)) (HourMinutePm 1L 30L)))))))"
  },
  {
    "original_sentence": "Thanks, set up a lunch with Jennie on the same day at 11 AM and cancel anything else I have on that morning.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Add fishing in Rocky Mountain National Park to my Saturday calendar from 7 AM to 4 PM.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"fishing\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Rocky Mountain National Park\"))))))))"
  },
  {
    "original_sentence": "What will the weather be like for my fishing trip tomorrow there?",
    "parse": "(Yield (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Can you also add a hike at Rocky Mountain National Park on Sunday from 12:00 pm to 3:00 pm?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 12L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"hike\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Rocky Mountain National Park\"))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Is there going to be good weather during the hike?",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"hike\")))))))"
  },
  {
    "original_sentence": "Can you delete my lunch appointment tomorrow",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"lunch appointment\"))))))))))"
  },
  {
    "original_sentence": "What is on my calendar tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Schedule vacation on that day.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"vacation\")) (Event.start_? (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "No, the entire day should be vacation.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (Execute (refer (& (^(Date) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Date) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Move the tree climbing to not occur on the weekend. I only climb trees during the week.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"tree climbing\")) (ThisWeekend)))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Move the pajama party so that it does not happen on the weekend.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"pajama party\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "NO",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Move mountain climbing to some other time that isn't on the weekend",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"mountain climbing\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "The first one please",
    "parse": "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Hi, what's the weather looking like for my basketball game tomorrow?",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"basketball game\"))))))))"
  },
  {
    "original_sentence": "what will the weather be like at the baseball game",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"baseball game\")))))))"
  },
  {
    "original_sentence": "I'm meeting with Sandy tomorrow at 1 pm. Micheal might come too.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sandy\")))))) (AttendeeListHasRecipientWithType (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Micheal\"))))) (AttendeeType.Optional))))))))"
  },
  {
    "original_sentence": "Yeah.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you add a meeting with Joe on Friday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joe\")))))))))))"
  },
  {
    "original_sentence": "No, I need a new calendar invite with Joe Bowes.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joe Bowes\"))))))))))"
  },
  {
    "original_sentence": "No thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need a new calendar invite for this Friday at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (Noon)))))))"
  },
  {
    "original_sentence": "Yes, thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule getting computer repaired on Saturday afternoon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"getting computer repaired\")) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Saturday))))))))"
  },
  {
    "original_sentence": "The second one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Change the duration to one hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Looks great thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Set a dinner next Saturday at 7 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Is Heather invited to the company picnic this weekend?",
    "parse": "(Yield (allows (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Heather\"))) (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"company picnic\")) (ThisWeekend))))))))"
  },
  {
    "original_sentence": "Invite Heather to the company picnic and forward the invite to her.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Invite Heather to the company picnic on Saturday at 2 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 2L)) (Event.subject_? (?~= \"company picnic\"))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Heather\"))))))))))"
  },
  {
    "original_sentence": "That looks very good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Could you forward this to Karen?",
    "parse": "(Yield (ForwardEventWrapper (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\"))))))))"
  },
  {
    "original_sentence": "Put down that I have to pick up my parents from the airport this Sunday at 4 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pick up my parents from the airport\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "What is on my calendar next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "Search for meetings at 8 am on Monday.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 8L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Do I have any meetings on my calendar for Monday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Create a meeting for coffee at 8am on monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"meeting for coffee\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Cancel the dinner at Cheddar's planned for Tuesday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))))))))))"
  },
  {
    "original_sentence": "Actually cancel the one on Friday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Friday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Yes, please make sure to cancel that.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Perfect, thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I had to cancel my dentist appointment tomorrow, please remove it from my calendar.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"dentist appointment\"))))))))))"
  },
  {
    "original_sentence": "Wait, do I have a meeting tomorrow at 4 pm?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "yes, cancel that",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "schedule dentist for tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))))))"
  },
  {
    "original_sentence": "No, I need something later than both of those.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "let me check",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Schedule the 2:30 one.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (HourMinutePm 2L 30L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need the third full week of February to be set as Out of Office.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (NumberWeekOfMonth 3L (February)))))))"
  },
  {
    "original_sentence": "Ill be having lunch with Brenda monday at 1 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brenda\")))))))))))"
  },
  {
    "original_sentence": "that works",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "move my lunch at 1 pm to start next week",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 1L)) (Event.subject_? (?~= \"lunch\"))))))) (Event.start_? (DateTime.date_? (NextWeekList))))))"
  },
  {
    "original_sentence": "yes looks decent",
    "parse": "(Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please move coffee with Brenda to next week",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"coffee\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brenda\"))))))))) (Event.start_? (DateTime.date_? (NextWeekList))))))"
  },
  {
    "original_sentence": "coffee date should end at 4 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "who hasnt accepted the happy hour",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"happy hour\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Who has not declined the happy hour then?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"happy hour\")))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "who has not Accepted Party House ?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Party House\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Find Moody's in Truckee, CA",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Moody's in Truckee, CA\")))"
  },
  {
    "original_sentence": "Is it good groups?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "i need information for Riva Grill On the Lake in Tahoe",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Riva Grill On the Lake in Tahoe\")))"
  },
  {
    "original_sentence": "it is good for groups i have friends coming",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Is there a meeting with Tom scheduled for tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))))) 0L))"
  },
  {
    "original_sentence": "Do I have a lunch date Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"lunch date\")))))) 0L))"
  },
  {
    "original_sentence": "make an appointment at 9am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "Yes, thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Give me the second event listed on Tuesday next week",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) 2L))"
  },
  {
    "original_sentence": "When does the Second event next month start?",
    "parse": "(Yield (Event.start (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))) 2L)))"
  },
  {
    "original_sentence": "what is my second event in July?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (July))) 2L))"
  },
  {
    "original_sentence": "HELLO HOW ARE YOU?",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "OK PLEASE HELP ME TO FIND OUT MY CALENDER",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "OK .THEN WHAT IS THE PRESENT SITUATION OF WEATHER HERE",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (?= (Now))))"
  },
  {
    "original_sentence": "WHAT IS THE PRESENT WEATHER CONDITION IN FORT WAYNE",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"FORT WAYNE\"))) (?= (Now))))"
  },
  {
    "original_sentence": "SO U DON'T HAVE ANY IDEA ABOUT MY CALENDER?",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "SHAME SHAME PUPPY SHAME",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "WHAT IS THE CAPITAL OF INDIAN? DO U KNOW THAT",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "THANKS FOR YOUR HELP",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have a psychologist appointment this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"psychologist appointment\")) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Will it be snowing in Truckee this weekend, I want to go skiing.",
    "parse": "(Yield (WillSnow (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Truckee\"))) (DateTime.date_? (ThisWeekend)))))"
  },
  {
    "original_sentence": "Please schedule a meeting with my son at 3 pm tomorrow",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "How cold will it be at that time?",
    "parse": "(Yield (IsCold (WeatherQueryApi (AtPlace (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))) (?= (Execute (refer (extensionConstraint (^(DateTime) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "when do I have meet with John on skype?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"meet\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))))"
  },
  {
    "original_sentence": "Make a appointment for they bus meeting",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"they bus meeting\")))))"
  },
  {
    "original_sentence": "Yes, the bus meeting on Friday March 8 is perfect.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 8L (March))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What time is my grocery delivery scheduled for tomorrow?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"grocery delivery\"))))))))"
  },
  {
    "original_sentence": "How long does it run for?",
    "parse": "(Yield (Event.duration (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Make grocery delivery 1 hour long.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"grocery delivery\")))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Yes. This is the window in which my groceries will be delivered.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "yeah looking good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Who organized the CMA Party on Saturday?",
    "parse": "(Yield (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"CMA Party\")))))))"
  },
  {
    "original_sentence": "Schedule a meeting a 3pm with Reginald in the next 10 minutes through the end of the day",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 10L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Reginald\"))))))))))))"
  },
  {
    "original_sentence": "Ok thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I'll be swimming from 1 am to the end of day.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberAM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"swimming\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 1L)))))))))"
  },
  {
    "original_sentence": "This will be fine.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have any events at the end of the day tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (EndOfWorkDay)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Just wondering what events are happening in the fall?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (SeasonFall))))"
  },
  {
    "original_sentence": "Go ahead and schedule something in the winter.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (SeasonWinter))))))"
  },
  {
    "original_sentence": "Go with the one on Dec 2nd. Also, delete my last event in the fall.",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 2L (December))))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindLastEvent (EventDuringRange (^(Event) EmptyStructConstraint) (SeasonFall))))))))"
  },
  {
    "original_sentence": "Yes, indeed!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "create the calendar",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Delete the appointment scheduled at 10:00 AM",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberAM 10L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Yeah.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Have you told Judy?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "schedule a meeting with judy at 10 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberAM 10L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"judy\")))))))))))"
  },
  {
    "original_sentence": "Can you schedule a party friday at 7 pm to 12 at Hotwings'r Us.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"party\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 12L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Hotwings'r Us\"))))))))"
  },
  {
    "original_sentence": "Yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great, thanks. What do I have scheduled Saturday morning?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)) (Morning))))"
  },
  {
    "original_sentence": "Can you add Trip down to Muir Woods and SF for 12:30pm on Saturday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Trip down to Muir Woods and SF\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (HourMinutePm 12L 30L))))))))"
  },
  {
    "original_sentence": "Yes thats good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Extend the end time until 3:00 PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Arrange a meeting with all members for later next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (LateDateRange (NextWeekList)))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Sorry I meant earlier next week",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (EarlyDateRange (NextWeekList)))))))"
  },
  {
    "original_sentence": "How about later this month",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (LateDateRange (FullMonthofMonth (Date.month (Today)))))))))"
  },
  {
    "original_sentence": "Can you sync with my email?",
    "parse": "(FenceSwitchTabs)"
  },
  {
    "original_sentence": "Okay, thats cool. can you also search for events?",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Okay I don't think there was any. Thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What events do I have tomorrow between 9 AM and noon?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (TimeToTime (NumberAM 9L) (Noon)))))"
  },
  {
    "original_sentence": "Please show me what I have on Wed.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "please check the thursday events",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What do I have this weekend, then?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "Ok, I'd like to find out what's coming up for next week.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "Has Karen responded to the meeting on the 30th?",
    "parse": "(Yield (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 30L))))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\"))))))))"
  },
  {
    "original_sentence": "ok fine thanks, is Mark gonna be there",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Fine. Will Martha be at lunch?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Martha\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Good. Is Brock meeting me for drinks on Sunday?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"drinks\")))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brock\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Ok. Will Kathy be at the party?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"party\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kathy\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Great. Is Molly going to make it to the appointment next month?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth)))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Molly\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "can you tell me when it has been my last appointment with Ann?",
    "parse": "(Yield (FindLastEvent (EventBeforeDateTime (Now) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ann\")))))))"
  },
  {
    "original_sentence": "Add Lunch with Ann on Friday at 12:30 pm to 1:30 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 12L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Lunch\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 1L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ann\"))))))))))))"
  },
  {
    "original_sentence": "tell me when is fathers day next",
    "parse": "(Yield (NextHolidayFromToday (Holiday.FathersDay)))"
  },
  {
    "original_sentence": "whats up",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "make a date with jessica",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"date\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jessica\")))))))))))"
  },
  {
    "original_sentence": "who is in my contacts",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "who is in my calender",
    "parse": "(Yield (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "what is the phase of the moon tonight",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"phase of the moon\"))) (Night))))"
  },
  {
    "original_sentence": "what is your name",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "can you make a date for 2021",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"date for 2021\")) (Event.start_? (?= (NextTime (HourMinutePm 11L 30L))))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "make a date for the first friday in october 2021",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"date\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "you didnt do it right",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Update my meeting with Megan,",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Update my meeting with Megan to 3pm Friday",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Megan\")))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Can you locate a meeting with Megan?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Megan\"))))))"
  },
  {
    "original_sentence": "List everything with Jim",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\"))))))"
  },
  {
    "original_sentence": "create the drama and music event this evening",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"drama and music\")) (Event.start_? (DateTimeConstraint (Evening) (Today)))))))"
  },
  {
    "original_sentence": "I can use either time.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I also need a dental appointment tomorrow afternoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dental appointment\")) (Event.start_? (DateTimeConstraint (Afternoon) (Tomorrow)))))))"
  },
  {
    "original_sentence": "both would work fine",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "i am ready to appointment",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add order pizzas for the school to be delivered at 11am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"order pizzas for the school to be delivered\")) (Event.start_? (?= (NextTime (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "That's going to need to be until 1PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Create event \"Snack\" for midnight.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Snack\")) (Event.start_? (?= (NextTime (Midnight))))))))"
  },
  {
    "original_sentence": "I need to start it a little earlier, please.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "What events do I have next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "Do I have any lunches scheduled?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunches\"))))) 0L))"
  },
  {
    "original_sentence": "Any meetings?",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Thanks. Can you add Jerri to the Sync please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jerri\"))))))))))"
  },
  {
    "original_sentence": "No. Jerri should be added to \"sync\"",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Schedule mandatory team meeting on Tuesday at 5:00 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"mandatory team meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "yeah!right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "That's actually bad, can you change that to 10am?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "It looks right to me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Sounds great, thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a doctor's appointment for Tuesday at 3:30 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (HourMinutePm 3L 30L))))))))"
  },
  {
    "original_sentence": "I need to change my lunch with Tera to be at Hedary's",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tera\"))))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Hedary's\"))))))"
  },
  {
    "original_sentence": "perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have any events scheduled today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "When do I have a meeting with John next week?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))) (NextWeekList)))))))"
  },
  {
    "original_sentence": "I want to schedule a meeting at 11 AM with John next Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 11L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))))"
  },
  {
    "original_sentence": "when is my next all day event",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.isAllDay_? (?= true)) 1L)))"
  },
  {
    "original_sentence": "Thanks, When Is my next all day event?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.isAllDay_? (?= true)) 1L)))"
  },
  {
    "original_sentence": "Okay, thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Delete my all day events",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Delete the next all day event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (Event.isAllDay_? (?= true)) 1L)))))"
  },
  {
    "original_sentence": "Yeah, I don't want it anymore",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add lunch with my mom at 1pm.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "The lunch meeting I had with Brian and Scott was last Thursday at 4 pm, not 3 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brian\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scott\"))))))))) (Event.start_? (?= (DateAtTimeWithDefaults (previousDayOfWeek (Today) (Thursday)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Yes. But it lasted for 2 hours please update that also.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Great. And Briana was also present at the lunch meeting.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Briana\"))))))))))"
  },
  {
    "original_sentence": "Yes also Linda was at the meeting as well please upate",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Linda\"))))))))))"
  },
  {
    "original_sentence": "When is my next vet appointment?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"vet appointment\")) 1L)))"
  },
  {
    "original_sentence": "can you cancel that event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Let's put staff birthdays on the calendar",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"staff birthdays\")))))"
  },
  {
    "original_sentence": "No",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Add Paige Ashworth birthday 3/15/83",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Paige Ashworth birthday\")) (Event.start_? (DateTime.date_? (?= (MDY 15L (toMonth 3L) (Year.apply 83L)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Schedule a dinner with Sarah for tomorrow at 4pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\")))))))))))"
  },
  {
    "original_sentence": "It's Great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you change dinner with Sara on Wednesday from 4:00 pm to 6:00 pm?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 4L)) (& (Event.subject_? (?= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sara\")))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (TimeAfterDateTime (Event.start x0) (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "Let's change the end time to 8.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "can you arrange an event at 7.00 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "When is Car Cramp?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Car Cramp\")))))))"
  },
  {
    "original_sentence": "Cool. Do I have anything else going on that day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "Join car cramp",
    "parse": "(Yield (joinEventCommand (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"car cramp\"))))))))"
  },
  {
    "original_sentence": "Please show all meeting I have for this week.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
  },
  {
    "original_sentence": "Can you add a meeting tomorrow at 8 am?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "I need to find the last time I had lunch with Cindy.",
    "parse": "(Yield (Event.start (FindLastEvent (EventBeforeDateTime (Now) (& (Event.subject_? (?= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cindy\")))))))))"
  },
  {
    "original_sentence": "Can you make a new meeting at 5 pm on Monday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "meeting with Sung-Hwan",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sung-Hwan\"))))))))))"
  },
  {
    "original_sentence": "my next appointment with Daniel to 11 AM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Daniel\")))) 1L)) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "yes thats right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I would like an appointment with Candy at noon today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (Noon)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Candy\")))))))))))"
  },
  {
    "original_sentence": "Looks good thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I've heard bad things about the Adanbertos in Folsom, what is their rating?",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Adanbertos in Folsom\"))))))"
  },
  {
    "original_sentence": "and what about Tiwa Kitchen Restaurant in Taos?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(LocationKeyphrase) AlwaysTrueConstraint)) (intension (LocationKeyphrase.apply \"Tiwa Kitchen Restaurant in Taos\")))))"
  },
  {
    "original_sentence": "Lemme get a rating for Taylor's in Loomis",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Taylor's in Loomis\"))))))"
  },
  {
    "original_sentence": "Hello, I need to cancel my event for June 17th.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 17L (June)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "On May 4th, can you add an event called \"Movie\" at 7 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Movie\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 4L (May)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Is there a meeting with Jamie next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamie\")))) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Schedule a meeting with Jamie for next Tuesday at 9",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamie\")))))))))))"
  },
  {
    "original_sentence": "Also another meeting with Jamie on January 10th at 2.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 10L (January)) (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamie\")))))))))))"
  },
  {
    "original_sentence": "Violin lesson December 4 at 4 at my house",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Violin lesson\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 4L (December)) (NumberPM 4L))))) (Event.location_? (?= (LocationKeyphrase.apply \"my house\")))))))"
  },
  {
    "original_sentence": "Set a reminder for me at 3PM to \"Bring My Violin\"",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "I need to mark off 3 whole days starting this wednesday while I'm going on vacation.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"vacation\")) (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (NextDOW (Wednesday)) (toDays 3))))))"
  },
  {
    "original_sentence": "Looks perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I have a work conference for 3 days starting on the 19th of October and will be out of office.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"work conference\")) (MD 19L (October)) (toDays 3))))))"
  },
  {
    "original_sentence": "Yes please add that.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Starting tomorrow I will be at a wedding until Sunday",
    "parse": "(let (x0 (Tomorrow)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"wedding\")) (DateAndConstraint x0 (nextDayOfWeek x0 (Sunday))))))))"
  },
  {
    "original_sentence": "When is my next appointment with Dr. Seuss?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dr. Seuss\"))))))) 1L)))"
  },
  {
    "original_sentence": "I have lunch with Mom before that at 1.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Schedule lunch with dad next Thursday at 11:30 AM.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Block out some time for dinner with mom on Friday at 4",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Cancel my meetings on March 2nd.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Make the lunch with dad to 1 pm.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Where is my third event on March 15th taking place?",
    "parse": "(Yield (Event.location (FindNumNextEvent (EventOnDate (MD 15L (March)) (^(Event) EmptyStructConstraint)) 3L)))"
  },
  {
    "original_sentence": "I meant to ask about the first event",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(Number) AlwaysTrueConstraint)) (intension 1))))"
  },
  {
    "original_sentence": "Can you check my 2nd event for the 15th?",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (MD 15L (March)) (^(Event) EmptyStructConstraint)) 2L))"
  },
  {
    "original_sentence": "Update my schedule to include Danny's soccer practice at 5 pm Wednesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Danny's soccer practice\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Yeah put it on my calendar",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you change my 5pm meeting to start at 4?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 5L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "yes thats looks prefect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "where is my 4 pm Sunday?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 4L)) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "what's the weather like today",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "Portland Oregon",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"Portland Oregon\")))))))"
  },
  {
    "original_sentence": "when will it rain?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "What will the weather be like in one week?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (adjustByPeriod (Today) (toWeeks 1))))))"
  },
  {
    "original_sentence": "Portland Oregon",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"Portland Oregon\")))))))"
  },
  {
    "original_sentence": "What will the weather be like on November 5",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (MD 5L (November))))))"
  },
  {
    "original_sentence": "Portland Oregon",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"Portland Oregon\")))))))"
  },
  {
    "original_sentence": "what else can you tell me about the weather?",
    "parse": "(WeatherPleasantry)"
  },
  {
    "original_sentence": "what's the humidity?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (humidity) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "whats the humidity in portland oregon?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (humidity) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"portland oregon\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "whats the chance of rain in portland oregon",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"portland oregon\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "Can you schedule a lunch meeting with Lisa, Kim, Sandy and myself for noon tomorrow?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lisa\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sandy\"))))))))))))"
  },
  {
    "original_sentence": "Looks perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Unfortunately, Sandy will not be able to come. Add John to the event.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sandy\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))))"
  },
  {
    "original_sentence": "Let's make it an hour long.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Move hte lunch meeting with Damon Straeter, Kevin, Leia, Sasha so that I can attend",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "How long is the meeting on December 1st?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 1L (December)) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "and the meeting on the 2nd?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDay (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Day.apply 2L)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Ok thank you for your information.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "How long is the budget meeting tomorrow?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"budget meeting\"))))))))"
  },
  {
    "original_sentence": "Please change the start of this meeting to 9:30 AM",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 9L 30L)))))))"
  },
  {
    "original_sentence": "When is my next chiropractor appointment?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"chiropractor appointment\")) 1L)))"
  },
  {
    "original_sentence": "I want to make the location be Dr Jones.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Dr Jones\"))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "On Friday, what do I have planned?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Ok. Schedule evening Church meeting on Friday evening.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Church meeting\")) (Event.start_? (DateTimeConstraint (Evening) (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "can you delete my event on August 17 at 13",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (MD 17L (August)) (HourMilitary 13L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what have I done today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateBeforeTime (Today) (^(Event) EmptyStructConstraint) (DateTime.time (Now)))))"
  },
  {
    "original_sentence": "What did I do today during the afternoon?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Afternoon))))"
  },
  {
    "original_sentence": "What sleep in's do I have earlier today",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateBeforeTime (Today) (Event.subject_? (?~= \"sleep in\")) (DateTime.time (Now)))))"
  },
  {
    "original_sentence": "What day is my staff meeting?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"staff meeting\")))))))"
  },
  {
    "original_sentence": "Who all has accepted that meeting? Any of their bosses?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Who is in the meeting?",
    "parse": "(Yield (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Invite Larry, Curly, and Moe.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Larry\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Curly\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Moe\")))))))))))"
  },
  {
    "original_sentence": "Yes. Who is Moe's boss?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Moe\"))))))))"
  },
  {
    "original_sentence": "What is my next scheduled appointment?",
    "parse": "(Yield (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L))"
  },
  {
    "original_sentence": "what year does my meeting end",
    "parse": "(Yield (Date.year (DateTime.date (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "what about my gym membership",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"gym membership\")))))"
  },
  {
    "original_sentence": "Put me down for a nap on august 1 of the year my gym membership",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"nap\")) (Event.start_? (DateTime.date_? (?= (MDY 1L (August) (Date.year (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))))))"
  },
  {
    "original_sentence": "is there a five guys in bellevue?",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"five guys in bellevue\")))"
  },
  {
    "original_sentence": "Tite! Will Five Guys accomodate groups?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Can you find Cascades Grille in Bellevue?",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Cascades Grille in Bellevue\")))"
  },
  {
    "original_sentence": "Is that place good for groups",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Delete all appointments for this upcoming Saturday.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Delete my meeting on Saturday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Do I have to tell you now?",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Can you change the meeting to 11 please?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "Make a appointment for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Actually, put that appointment on hold.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Nevermind, let's choose the second option.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Let me check",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "What time is my next meeting?",
    "parse": "(Yield (Event.start (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))"
  },
  {
    "original_sentence": "cancel the appointment on calender",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need a new event with Robert next week around 5",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAtTime (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Robert\")))))))) (NumberPM 5L)))))"
  },
  {
    "original_sentence": "meeting sep 13, fri",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 13L (September))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Create an event for my vacation to Nashville next Thursday through Sunday.",
    "parse": "(let (x0 (NextDOW (Thursday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (& (Event.subject_? (?= \"vacation\")) (Event.location_? (?= (LocationKeyphrase.apply \"Nashville\")))) (DateAndConstraint x0 (nextDayOfWeek x0 (Sunday))))))))"
  },
  {
    "original_sentence": "Looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Mark that I'll be in Iowa for 5 days",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.location_? (?= (LocationKeyphrase.apply \"Iowa\"))) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 5)))))"
  },
  {
    "original_sentence": "That is great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Abby and I will be in Hawaii all this week.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (& (Event.location_? (?= (LocationKeyphrase.apply \"Hawaii\"))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))) (ThisWeek)))))"
  },
  {
    "original_sentence": "Write down a doctor appointment next Monday at 10 in the morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "thank you for that",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is on my calendar on January 7th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 7L (January)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Do I have any appointments on July 5?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 5L (July)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "How many times do I have dinner with my parents scheduled over the next four weeks?",
    "parse": "(FenceAggregation)"
  },
  {
    "original_sentence": "How long is it between the tomorrow's meeting and when the project is due?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Hi, I would like to speak to a representative.",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Last week, did I go snowboarding?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"go snowboarding\")) (EventDuringRange (^(Event) EmptyStructConstraint) (LastWeekNew)))))) 0L))"
  },
  {
    "original_sentence": "Can you change the time period that I went snowboarding last week?",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Show me the event when I went snowboarding.",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (Event.subject_? (?~= \"snowboarding\"))))))))"
  },
  {
    "original_sentence": "Add Rebecca as attending.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rebecca\"))))))))))"
  },
  {
    "original_sentence": "Set up a meeting with Billy on Wednesday at 3 PM in my office.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 3L)))) (Event.location_? (?= (LocationKeyphrase.apply \"my office\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Billy\")))))))))))"
  },
  {
    "original_sentence": "Change the duration to 1 hour, and set my ShowAs status as being busy.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.duration_? (?= (toHours 1))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))"
  },
  {
    "original_sentence": "What events do I have on December 17?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 17L (December)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What's the weather like in Tokyo today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Tokyo\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "How's the weather in Cleveland in two weeks",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Cleveland\"))) (DateTime.date_? (?= (adjustByPeriod (Today) (toWeeks 2))))))"
  },
  {
    "original_sentence": "Weather mongolia tuesday",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"mongolia\"))) (DateTime.date_? (?= (NextDOW (Tuesday))))))"
  },
  {
    "original_sentence": "DO you know?",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "What's the weather going to be in Nagasaki in three days",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Nagasaki\"))) (DateTime.date_? (?= (adjustByPeriod (Today) (toDays 3))))))"
  },
  {
    "original_sentence": "What's the weather in Vancouver right now",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Vancouver\"))) (?= (Now))))"
  },
  {
    "original_sentence": "Tunisia weather yesterday?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Tunisia\"))) (DateTime.date_? (?= (Yesterday)))))"
  },
  {
    "original_sentence": "Magagascar weather thanksgiving",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Magagascar\"))) (DateTime.date_? (?= (NextHolidayFromToday (Holiday.Thanksgiving))))))"
  },
  {
    "original_sentence": "Please decline my trip to Hollywood and say that I'm busy curing corona",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I'm busy curing corona\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"trip to Hollywood\"))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "please decline the Access meeting and say that I don't have access.",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I don't have access.\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Access meeting\"))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "yes, then could you decline the RoundUp for me.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"RoundUp\"))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "Schedule a date for the upcoming company picnic.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"company picnic\")))))"
  },
  {
    "original_sentence": "put meeting on july 22",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 22L (July))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please delete the performance review event with my boss next week",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"performance review\")) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))) (NextWeekList)))))))))"
  },
  {
    "original_sentence": "add john to this meeting",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"john\"))))))))))"
  },
  {
    "original_sentence": "Yes thank you. Send a reminder to John.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceReminder))"
  },
  {
    "original_sentence": "what month does summer start",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "What meetings do I have scheduled?",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "When am I meeting with Joshua Murphy?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joshua Murphy\")))))))))"
  },
  {
    "original_sentence": "Create a meeting with Rex Poling on Thursday at 9:00 AM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberAM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rex Poling\")))))))))))"
  },
  {
    "original_sentence": "that's fine",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I also have an appointment with Emily Braun next Monday from 10 AM to 12 PM",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 12L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily Braun\"))))))))))))"
  },
  {
    "original_sentence": "Great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Good, can you tell me when the meeting with Rex Poling?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rex Poling\")))))))))"
  },
  {
    "original_sentence": "Add a meeting with Rex Poling on Thursday at 9AM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberAM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rex Poling\")))))))))))"
  },
  {
    "original_sentence": "Yes, but for an hour",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Book a lunch meeting with, Lee Gu tomorrow from noon to 3",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (Noon))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lee Gu\"))))))))))))"
  },
  {
    "original_sentence": "Yes that is correct",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Ok thank you I am done",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "goodbye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When is my meeting with Kim/",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))))"
  },
  {
    "original_sentence": "Change it to Friday at the same time.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)))))))))"
  },
  {
    "original_sentence": "delete moving, because I don't want to help anymore",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"moving\")))))))))"
  },
  {
    "original_sentence": "yeah that's it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok thanks. That's all for now",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "make an event for winter",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (SeasonWinter))))))"
  },
  {
    "original_sentence": "actually can we make that late winter? sorry",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (LateDateRange (SeasonWinter)))))))"
  },
  {
    "original_sentence": "can we go a week before that?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (PeriodBeforeDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toWeeks 1))))))))"
  },
  {
    "original_sentence": "looks great!",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "How is the weather going to be here next Thursday?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextDOW (Thursday))))))"
  },
  {
    "original_sentence": "Ok, that is great, please add bicycling to my calendar next Thursday from 2 pm to 4 pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"bicycling\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L)))))))))"
  },
  {
    "original_sentence": "And please add yoga for next Thursday at 5 pm to 7 pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 5L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"yoga\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 7L)))))))))"
  },
  {
    "original_sentence": "When am I meeting with Suzy?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Suzy\")))))))))"
  },
  {
    "original_sentence": "I need to cancel that meeting.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Can you please add a training session to my calendar for tomorrow morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"training session\")) (Event.start_? (DateTimeConstraint (Morning) (Tomorrow)))))))"
  },
  {
    "original_sentence": "keep the bottom one , which looks perfect",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "It's good.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do i have anything with Amy and Mark this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\"))))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))) 0L))"
  },
  {
    "original_sentence": "Ok carryon your work.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please accept my hair appointment for this friday, tell them this hair needs alot of attention.",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"this hair needs alot of attention\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"hair appointment\")))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Yes. Can you remind me what time that appointment is?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "will you accept the Not April Fools for me and say i hate practical jokes",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"i hate practical jokes\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Not April Fools\"))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Yes, thanks. Accept Spring Dance Party on Thursday and say that I'm preparing a new dance to show everyone.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I'm preparing a new dance to show everyone.\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.subject_? (?~= \"Spring Dance Party\")))))) :response (ResponseStatusType.Accepted))))"
  },
  {
    "original_sentence": "What will the weather be like in Portland tomorrow?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Portland\"))) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "I need to schedule going to park at 1 pm tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"going to work\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "Please delete going to work tomorrow",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"going to work\"))))))))))"
  },
  {
    "original_sentence": "Add visit to park to my schedule tomorrow at 1 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"visit to park\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "hi, i need to add a meeting on Teusday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))))))"
  },
  {
    "original_sentence": "Let's go with the 10AM but make it end at 11AM",
    "parse": "(do (refer (^(Event) ConstraintTypeIntension)) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "No, it's going to start at 10:00 am.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "No sorry",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Please book disc golf on Saturday morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"disc golf\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Saturday))))))))"
  },
  {
    "original_sentence": "Find me Olmstead in New York",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Olmstead in New York\")))"
  },
  {
    "original_sentence": "Are they good for groups?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Please remove my dinner with Barack Obama tomorrow night at 8pm",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 8L)) (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\")))))))))))))"
  },
  {
    "original_sentence": "set dinner meeting tomorrow at 8 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "Dinner will be about 2 hours",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "show me as busy until tomorrow at 2pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (Now))) (Event.end_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Who reports to Abby",
    "parse": "(Yield (FindReports (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))"
  },
  {
    "original_sentence": "Who does Abby report to?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))"
  },
  {
    "original_sentence": "Who are my reports",
    "parse": "(Yield (FindReports (toRecipient (CurrentUser))))"
  },
  {
    "original_sentence": "yeah!good thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "yes",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add a workout session for Sunday at 8 am for 3 hours",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"workout session\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 8L))))) (Event.duration_? (?= (toHours 3)))))))"
  },
  {
    "original_sentence": "yeah",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Will you pay attention to text and talk across different platforms I interact with.?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "How wil, you pick up on dates that need to be calendered",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "How",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "What do i do let you know to remeber a date",
    "parse": "(^(PleasantryCalendar) EmptyStructConstraint)"
  },
  {
    "original_sentence": "How do you work",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "How do you help with my calender",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "What commands do you need access to",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "What meetings do I have on the 6th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 6L) (Event.subject_? (?~= \"meetings\")))))"
  },
  {
    "original_sentence": "Anything on the 7th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 7L) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you reschedule that to the 8th?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 8L)))))))))"
  },
  {
    "original_sentence": "Can you have the meeting go until 12 and then schedule me for meeting Beth for lunch at 1.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Can you check if it will be sunny on my Two Year Anniversary?",
    "parse": "(Yield (IsSunny (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Two Year Anniversary\"))))))))"
  },
  {
    "original_sentence": "Will it snow at the SIKE!",
    "parse": "(Yield (WillSnow (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"SIKE!!!?\"))))))))"
  },
  {
    "original_sentence": "What will the weather be like at the concert",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"concert\")))))))"
  },
  {
    "original_sentence": "Add a lunch with Mark tomorrow at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))))))))))"
  },
  {
    "original_sentence": "Yes but I need to have my lunch at 11",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "Actually change it to 10:00 am please.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "Mark just realized he will be out of town, can you add David Lax instead?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David Lax\"))))))"
  },
  {
    "original_sentence": "actually make it at 1 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Block off 30 minutes starting at 5:30 on Wednesday night for a Guitar Lesson, and set my status to Out of Office.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Guitar Lesson\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (HourMinutePm 5L 30L))))) (Event.duration_? (?= (toMinutes 30)))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
  },
  {
    "original_sentence": "Yes, please make sure to put it on my schedule.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "what is on my calendar for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "add an appointment with T&G flooring tomorrow at 10am",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "what tasks can you complete?",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "I need to postpone a meeting with our accountant.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I need to schedule a meeting with Tom's boss.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))))))))"
  },
  {
    "original_sentence": "fix the first one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "set location to Rosso Pizzeria & Wine Bar",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Rosso Pizzeria & Wine Bar\"))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "can you please make my plan",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"plan\")))))"
  },
  {
    "original_sentence": "thank you 1 works best",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I have an appointment for oil change Tomorrow afternoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"oil change\")) (Event.start_? (DateTimeConstraint (Afternoon) (Tomorrow)))))))"
  },
  {
    "original_sentence": "Either one of these will work great.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "i want next meeting with carry and jack today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Today)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"carry\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jack\"))))))))))))"
  },
  {
    "original_sentence": "After the dinner, schedule a movie date also on Friday night with Manny's team.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"dinner\"))))))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Manny\"))))))))))))"
  },
  {
    "original_sentence": "Yes that looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "And when is the next time I meet with Peter?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Peter\")))) 1L)))"
  },
  {
    "original_sentence": "I want to meet with Carla's team immediately after that.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carla\"))))))))))))"
  },
  {
    "original_sentence": "Okay, and after this set up lunch with David Crim's team.",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (Event.end (^(Dynamic) item x0))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David Crim\"))))))))))))))"
  },
  {
    "original_sentence": "can you remove my event with Scot Hanson",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scot Hanson\")))))))))))"
  },
  {
    "original_sentence": "scot hanson",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"scot hanson\")))))))"
  },
  {
    "original_sentence": "yes, remove the one for april 8th",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 8L (April)) (Event.isOneOnOne_? (?= true))))))))))"
  },
  {
    "original_sentence": "delete meeting with scot hanson on the 8th",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 8L) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"scot hanson\"))))))))))))"
  },
  {
    "original_sentence": "Schedule Killing Eve season 1 this Friday night.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Killing Eve season 1\")) (Event.start_? (DateTimeConstraint (Night) (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "Does Oceano in Reno have waiter services?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Oceano in Reno\"))))))"
  },
  {
    "original_sentence": "Does M3 in Reno have waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"M3 in Reno\"))))))"
  },
  {
    "original_sentence": "Is there waiter service at On The Boarder in Peoria?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"The Boarder in Peoria\"))))))"
  },
  {
    "original_sentence": "create babysitting at brothers on friday at 7",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"babysitting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 7L))))) (Event.location_? (?= (LocationKeyphrase.apply \"brothers\")))))))"
  },
  {
    "original_sentence": "YEAH RIGHT",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "The event should go until 11pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 11L)))))))"
  },
  {
    "original_sentence": "change my babysitting event to last until 11 pm",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Look perfect.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "add a dinner party tonight",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner party\")) (Event.start_? (DateTimeConstraint (Night) (Today)))))))"
  },
  {
    "original_sentence": "the bottom please",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "yes thank you but i have one more party on next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"one more party\")) (Event.start_? (DateTime.date_? (NextWeekList)))))))"
  },
  {
    "original_sentence": "Seems fine to me.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "that's fine , confirm the one more party from 10am to 10.30 am",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "change thursday mornings weekly meeting to friday morning",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "make 20th annual cheese cake bake off in march 12 at 1 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"20th annual cheese cake bake off\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 12L (March)) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "i need an event called 6R347",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"6R347\")))))"
  },
  {
    "original_sentence": "i need to \"go to the movie 1917\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"go to the movie 1917\")))))"
  },
  {
    "original_sentence": "the 2nd one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "There should be a calendar event for a meeting with Stephanie on Friday between 1-3pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Stephanie\"))))))))))))"
  },
  {
    "original_sentence": "No, I want it at 2:00 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Phenominal. Can you add another attendee - Kara?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kara\"))))))))))"
  },
  {
    "original_sentence": "Yeah, and show me that where is the meeting.",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (Event.location (^(Dynamic) item x0)))))"
  },
  {
    "original_sentence": "Please save the time after the meeting with Abby until the end of the day for a 1:1 with Elli",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (Event.end x0))) (Event.end_? (?= (TimeAfterDateTime (Event.end x0) (EndOfWorkDay))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\"))))))))))))"
  },
  {
    "original_sentence": "also i need a meeting with abby tomorrow after work ends",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (EndOfWorkDay)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"abby\")))))))))))"
  },
  {
    "original_sentence": "That looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I would like to schedule an appointment for next Thursday at 1 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Thanks, I didn't mean tomorrow, I meant the following Thursday and have it start at 1:30.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfWeek (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Thursday)) (HourMinutePm 1L 30L)))))))"
  },
  {
    "original_sentence": "Add physical therapy at 1330",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"physical therapy\")) (Event.start_? (?= (NextTime (HourMinuteMilitary 13L 30L))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add dinner date at 17:30 with Jon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner date\")) (Event.start_? (DateTime.time_? (?= (HourMinuteMilitary 17L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jon\")))))))))))"
  },
  {
    "original_sentence": "The friday one",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you add breakfast next saturday at 0900?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"breakfast\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (HourMinuteMilitary 9L 0L))))))))"
  },
  {
    "original_sentence": "I need to get rid of the harvest festival planning in May",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"harvest festival planning\")) (FullMonthofMonth (May))))))))))"
  },
  {
    "original_sentence": "no it should be the one in June at Jam Park",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.location_? (?= (LocationKeyphrase.apply \"Jam Park\"))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (June)))))))"
  },
  {
    "original_sentence": "you got it",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "OK",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When do I have a meeting with Loretta next week?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Loretta\")))) (NextWeekList)))))))"
  },
  {
    "original_sentence": "Cool, how about the one with Melanie?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Melanie\"))))))"
  },
  {
    "original_sentence": "Beautiful. Thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What about my next with Susan?",
    "parse": "(Yield (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Susan\")))) 1L))"
  },
  {
    "original_sentence": "Tell me which day last week I met with Phil",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Phil\")))) (EventDuringRange (^(Event) EmptyStructConstraint) (LastWeekNew))))))))"
  },
  {
    "original_sentence": "tomorrow joining with my friends",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Did I have a meeting with Phil during the last month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Phil\")))) (FullMonthofLastMonth))))"
  },
  {
    "original_sentence": "Alter the meeting to start at 8 AM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "I need it for an hour",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Can you schedule a lunch meeting on Tuesday with Charlie, Holden, Bill, and Sam.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Charlie\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Holden\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bill\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\"))))))))))))"
  },
  {
    "original_sentence": "The second option will work better for everyone.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you extend that by 30 minutes?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toMinutes 30))))))))"
  },
  {
    "original_sentence": "That looks great, thank you!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you schedule a Exam Session with Brenda, Nick, Carter, and Barack?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Exam Session\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brenda\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nick\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carter\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack\"))))))))))))"
  },
  {
    "original_sentence": "delete the memory i don't need that info",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"memory\")))))))))"
  },
  {
    "original_sentence": "cancel the memory on calender",
    "parse": "(Yield (Execute (ConfirmDeleteAndReturnAction (Event.subject_? (?~= \"memory\")))))"
  },
  {
    "original_sentence": "list the meeting date and time on sunday",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Delete the appointment on August 11. Something more important just came up.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 11L (August)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Yes. Delete it and the next event",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have a meeting with my boss today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))))))) 0L))"
  },
  {
    "original_sentence": "Oh, good, do you know if I have any meetings set for tomorrow morning as well?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Morning))))"
  },
  {
    "original_sentence": "nice to see you",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Do I have anything with Tom this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "OK NEXT WEEK ANY MEETING",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "How many meetings do I have in the next 3 months that have attendees?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextPeriod (toMonths 3))))))))"
  },
  {
    "original_sentence": "Great. These meetings will be so much fun! Can you tell me if I have any meetings with other people scheduled for May 15th? Thanks!",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (negate (^((List Attendee)) AlwaysFalseConstraint))) (EventOnDate (MD 15L (May)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Do I have any events with people coming in October?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (negate (^((List Attendee)) AlwaysFalseConstraint))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (October))))))) 0L))"
  },
  {
    "original_sentence": "what is my lunch time..?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))))"
  },
  {
    "original_sentence": "How long is lunch scheduled to last?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))))"
  },
  {
    "original_sentence": "Oh, okay, can you please make it for an hour instead and then tomorrow, I need to add, \"Go to RV Seller\" from 6 to 7pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L))) (do (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1)))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Go to RV Seller\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 7L))))))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Change the lunch to an hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Schedule a meeting with Ross's team right after the meeting with Rachel.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rachel\")))))))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ross\"))))))))))))"
  },
  {
    "original_sentence": "That is what I wanted.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When the morning meeting ends I need to see Harriet's team.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"morning meeting\")))))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harriet\"))))))))))))"
  },
  {
    "original_sentence": "Yes, that'll do.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "This is what i needed.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need you to look up football games outside of Oakland.",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"football games\")) (Event.location_? (negate (?= (LocationKeyphrase.apply \"Oakland\")))))))"
  },
  {
    "original_sentence": "Search for events tomorrow that arent at Burger King",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.location_? (negate (?= (LocationKeyphrase.apply \"Burger King\")))) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Where am I having lunch besides Pizza Hut?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch\")) (Event.location_? (negate (?= (LocationKeyphrase.apply \"Pizza Hut\")))))))"
  },
  {
    "original_sentence": "I need to schedule a meeting with Eric Larsen tomorrow at 3:30 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 3L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Eric Larsen\")))))))))))"
  },
  {
    "original_sentence": "Yes, what about with Mike?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mike\")))))))"
  },
  {
    "original_sentence": "Can you cancel all events tomorrow",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Can you tell me what events I have Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can Scott be added to that?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scott\"))))))))))"
  },
  {
    "original_sentence": "Who do I have lunch with",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Where is lunch at",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))))"
  },
  {
    "original_sentence": "Add cafe as the lunch location",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))) (Event.location_? (?= (LocationKeyphrase.apply \"cafe\"))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change the time for lunch to 12 pm to 1 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Invite Janice Kang and Scot Hanson to lunch",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice Kang\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scot Hanson\")))))))))))"
  },
  {
    "original_sentence": "Do I have a doctor's appointment?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor's appointment\"))))) 0L))"
  },
  {
    "original_sentence": "Do I have a doctor's appointment",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor's appointment\"))))) 0L))"
  },
  {
    "original_sentence": "Cancel my appointment",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "YEs",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Block off all of Thursday for doctor's appointments with Katie.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"doctor's appointments\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Katie\")))))))) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (NextDOW (Thursday)))))))"
  },
  {
    "original_sentence": "Apex legends practice is at 6.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Apex legends practice\")) (Event.start_? (?= (NextTime (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "When is my next meeting Alex mark",
    "parse": "(Yield (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex mark\")))) 1L))"
  },
  {
    "original_sentence": "Let's push it to 4.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you add a meeting to my calendar on the 16th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 16L)))))))"
  },
  {
    "original_sentence": "12pm to 2pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "have the meeting from 12 pm to 2 pm",
    "parse": "(let (x0 (NextTime (NumberPM 12L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 2L)))))))))"
  },
  {
    "original_sentence": "add a meeting on my calendar on the 16th from 12 to 2 pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (nextDayOfMonth (Today) 16L) (NumberPM 12L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 2L)))))))))"
  },
  {
    "original_sentence": "great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add my dentist appointment on the 17th to the calendar. It is at 9am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 17L) (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "please remove the meeting from my calendar on the 16th",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 16L) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "that is the one. Thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "what is on my calendar",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What events do I have schedule this month with Carlos?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carlos\")))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today)))))))"
  },
  {
    "original_sentence": "Do I have any more schedule in the following months with Carlos?",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "How about with Karina?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karina\")))))))"
  },
  {
    "original_sentence": "Move the Karina dinner to Monday the 9th at 6:00 pm.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karina\"))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 9L)) (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "Do I have any with Marnie?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marnie\"))))))) 0L))"
  },
  {
    "original_sentence": "Make an event for Chance's birthday Monday at 7 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Chance's birthday\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Have it end at 8:45.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (HourMinutePm 8L 45L)))))))"
  },
  {
    "original_sentence": "i have in dinner with team members in today. delete that",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser))))))))))))))"
  },
  {
    "original_sentence": "Oh, no, not that one. It should be the one the next day.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Yes, that's the one, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thanks!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "put appointment with doctor",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"appointment with doctor\")))))"
  },
  {
    "original_sentence": "make an appointment with emiley",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"emiley\"))))))))))"
  },
  {
    "original_sentence": "Yes, schedule me for August 2nd at 10 am.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (?= (DateAtTimeWithDefaults (MD 2L (August)) (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Do you know what day President's Day will be on next year?",
    "parse": "(Yield (Date.dayOfWeek (HolidayYear (Holiday.PresidentsDay) (NextYear))))"
  },
  {
    "original_sentence": "do i have any work at that time",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Event.subject_? (?~= \"work\")))))) 0L))"
  },
  {
    "original_sentence": "When is Best Friends day?",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "Make a 3 day event called \"learning to follow prompts\" starting today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"learning to follow prompts\")) (Today) (toDays 3)))))"
  },
  {
    "original_sentence": "Yes, that should work.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I'll need an all day event to visit my parents on Wednesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"visit my parents\")) (NextDOW (Wednesday))))))"
  },
  {
    "original_sentence": "I appreciate it!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "remind me to set up my party all day tomorrow",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "When is practice tomorrow?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"practice\"))))))))"
  },
  {
    "original_sentence": "Delete practice tomorrow",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"practice\"))))))))))"
  },
  {
    "original_sentence": "Can you cancel my event \"practice\" at 4:00 PM tomorrow?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L)) (Event.subject_? (?= \"practice\"))))))))))"
  },
  {
    "original_sentence": "Do I have anything between 3 and 7pm tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (Tomorrow) (^(Event) EmptyStructConstraint) (NumberPM 3L) (NumberPM 7L))))) 0L))"
  },
  {
    "original_sentence": "When is my next practice?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"practice\")) 1L)))"
  },
  {
    "original_sentence": "Add a meeting with Jane for next Thursday at 1pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 1L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\")))))))))))"
  },
  {
    "original_sentence": "when am i bowling with rovk and binny",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"bowling\")) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"rovk\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"binny\")))))))))))"
  },
  {
    "original_sentence": "thank you very much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you schedule Go to the Batting Cages with Matty, Kellin, Brandon, and Matt on the 18th at 5:45 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Go to the Batting Cages\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 18L) (HourMinutePm 5L 45L))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Matty\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kellin\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brandon\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Matt\"))))))))))))"
  },
  {
    "original_sentence": "I forgot to include Barack. Please add him.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack\"))))))))))"
  },
  {
    "original_sentence": "Perfect thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "who is a maybe for tuesday?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "O yeah who might have accepted the Lunch invite for this Friday.",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"Lunch\"))))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Hey did some people might have accepted the invite to the Ball Game this weekend?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Ball Game\")) (ThisWeekend)))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "I need an appointment with the manager.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))))))"
  },
  {
    "original_sentence": "Delay the dinner at Ritz",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.location_? (?= (LocationKeyphrase.apply \"Ritz\")))))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Do I have anything else there",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))) 0L))"
  },
  {
    "original_sentence": "Where is my bathroom break?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"bathroom break\")))))))"
  },
  {
    "original_sentence": "What other events do I have there?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id x0)))) (Event.location_? (?= (Event.location x0)))))))"
  },
  {
    "original_sentence": "Do I have anything scheduled with DJ?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"DJ\"))))))) 0L))"
  },
  {
    "original_sentence": "yes",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Do I have any lunch meetings this Thursday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.subject_? (?~= \"lunch meetings\")))))) 0L))"
  },
  {
    "original_sentence": "Add Church meeting at 7PM on Thursday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Church meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "make the duration 45 minutes on that",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toMinutes 45))))))"
  },
  {
    "original_sentence": "Do I have anything with abby this spring?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"abby\")))) (SeasonSpring))))) 0L))"
  },
  {
    "original_sentence": "Ok then I need an event with abby and her manager in the summer instead!",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"abby\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (SeasonSummer))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "the first one looks good",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I will be out of the office tomorrow for an emergency. I need you to cancel my appointments.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Cancel my team orientation meeting tomorrow",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"team orientation meeting\"))))))))))"
  },
  {
    "original_sentence": "OK add \"team orientation meeting\" on tuesday for me",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team orientation meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))))))"
  },
  {
    "original_sentence": "Can you make it Wednesday instead?",
    "parse": "(do (refer (^(Event) ConstraintTypeIntension)) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Wednesday)))))))))"
  },
  {
    "original_sentence": "Let go with the second one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Cancel my upcoming meeting with Doug, Sheldon and Russell.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Doug\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sheldon\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Russell\"))))))))))))"
  },
  {
    "original_sentence": "Yes, this is exactly what I want to cancel.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Okay great. I do also need to move my meeting with Raymond, Rachael, and Simon to Friday at 5 pm.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Raymond\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rachael\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Simon\"))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "That's perfect. Also, cancel my date with Joe, Simon, and Marie.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"date\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joe\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Simon\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marie\"))))))))))))))"
  },
  {
    "original_sentence": "put the meeting with benny, kyle, and trevor at 8.00 am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"benny\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"kyle\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"trevor\"))))))))) (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "who has not accepted invitation to birthday party",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"birthday party\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "how has not possibly responded to happy hour",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"happy hour\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "who has not declined Divas Day Out",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Divas Day Out\")))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "What do I have going on in 2021?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullYearofYear (Year.apply 2021L)))))"
  },
  {
    "original_sentence": "what do I have going on in 2021",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullYearofYear (Year.apply 2021L)))))))"
  },
  {
    "original_sentence": "What else do I have for 2021?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullYearofYear (Year.apply 2021L))))))"
  },
  {
    "original_sentence": "Tell me why I don't have appointments for this week.",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Please pen in a phone call sometime Monday morning with Leslie.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"phone call\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Leslie\")))))))))))"
  },
  {
    "original_sentence": "The second one works best.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Do I have any meetings this week with Tom?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Ok confirm my meeting with Tom.",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Add Emily to my meeting with Tom.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\"))))))))))"
  },
  {
    "original_sentence": "fine",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make an event called Bowling on Friday at 8 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"bowling\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "Reschedule my Tennis Match to a week from now.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Tennis Match\")))))) (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply (toWeeks 1))))))))"
  },
  {
    "original_sentence": "Yes this looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Where is the tennis match being held, currently?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"tennis match\")))))))"
  },
  {
    "original_sentence": "Update the Tennis match to make it 8:00 pm start time now.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Tennis match\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "IT'S GOOD",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I have to make a doctor's appointment, but it needs to be by 3PM tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "No look for any open time between 12:00 PM and 3:00 PM.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "ok thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you book a Doctors appointment for me on Friday between noon and 2:30 PM?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (Noon))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Doctors appointment\")) (Event.start_? (DateTimeAndConstraint x0 (TimeAfterDateTime x0 (HourMinutePm 2L 30L)))))))))"
  },
  {
    "original_sentence": "Lets make it closer to 1:45",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinutePm 1L 45L)))))))"
  },
  {
    "original_sentence": "Cancel lunch",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))))))"
  },
  {
    "original_sentence": "Not yet.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "make the lunch 2 hours",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "create football night on tuesday at 3",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"football night\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Yes this looks much better",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you very much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you clear my schedule 2 days from now",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "make an event for tuesday at 4pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Push my meeting with Tim this Sunday morning.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\")))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTimeConstraint (Morning) (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Sunday))))))))"
  },
  {
    "original_sentence": "The second.",
    "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Move my workout to next week please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"workout\")))))) (Event.start_? (DateTime.date_? (NextWeekList))))))"
  },
  {
    "original_sentence": "fix the first one",
    "parse": "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Push my appointment with Dr. Moore back to sometime next week.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dr. Moore\")))))))) (Event.start_? (DateTime.date_? (NextWeekList))))))"
  },
  {
    "original_sentence": "Move shopping tomorrow to 11am.",
    "parse": "(do (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"shopping\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "Show me a list of all events not at Taco Bell.",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \"Taco Bell\"))))))"
  },
  {
    "original_sentence": "Are there any events away from McDonald's?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \"McDonald's\"))))))"
  },
  {
    "original_sentence": "Do I have any events scheduled for next month outside Kansas City?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \"Kansas City\"))))))"
  },
  {
    "original_sentence": "Cancel all my appointments in July 2020; I need the time off to have surgery.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Please cancel all my appointments in July 2020.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Hey do I have anything going on in January 2021?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (January) (Year.apply 2021L)))))) 0L))"
  },
  {
    "original_sentence": "Thanks. Can you move my appointment on January 5th of 2021 to anytime in March 2020?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MDY 5L (January) (Year.apply 2021L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.date_? (FullMonthofMonth (March) (Year.apply 2020L)))))))"
  },
  {
    "original_sentence": "Make me something IN february 2023",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (FullMonthofMonth (February) (Year.apply 2023L)))))))"
  },
  {
    "original_sentence": "Delete my study session for Monday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"study session\"))))))))))"
  },
  {
    "original_sentence": "Yes please",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Good. And also cancel my Late Nap from the next day at 3 pm.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (NumberPM 3L)) (Event.subject_? (?~= \"Late Nap\"))))))))))"
  },
  {
    "original_sentence": "that looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "CAN YOU REPLACE MY FOOTBALL MEETING TO NEXT FRIDAY",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"FOOTBALL MEETING\")))))) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "Could you do next Friday, 4/26 instead?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.date_? (?= (MD 26L (toMonth 4L))))))))"
  },
  {
    "original_sentence": "Can we change it to the 26th please?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.date_? (?= (ClosestDay (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Day.apply 26L))))))))"
  },
  {
    "original_sentence": "that looks right now thanks!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I would appreciate it if after the football meeting, we scheduled pick up the kids.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pick up the kids\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"football meeting\"))))))))))))"
  },
  {
    "original_sentence": "Can you please delete my hike from this weekend",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"hike\")) (ThisWeekend)))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I would like to create a meeting with Patricia for Tuesday morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Tuesday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Patricia\")))))))))))"
  },
  {
    "original_sentence": "done",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make a new event on Saturday called Lunch.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Lunch\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))))))"
  },
  {
    "original_sentence": "k arrange the meeting on 1.00 pm",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Actually, can you extend that by 30 minutes?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toMinutes 30))))))))"
  },
  {
    "original_sentence": "I need to cancel my meeting with my team this afternoon.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))) (Afternoon)))))))))"
  },
  {
    "original_sentence": "I meant tonight.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Night)))))"
  },
  {
    "original_sentence": "Yes, this is great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks. Cancel my trip on the 7th too",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 7L) (Event.subject_? (?~= \"trip\"))))))))))"
  },
  {
    "original_sentence": "yes i want cancel",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add Brunch on Sunday with Karina.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Brunch\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karina\")))))))))))"
  },
  {
    "original_sentence": "The afternoon one is best.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (Afternoon))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Ok!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add event Prom party on Sunday morning",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Prom party\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Sunday))))))))"
  },
  {
    "original_sentence": "Update my dinner date to be two hours long.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner date\")))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "How many cities are we visiting on tour this month?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "What is on my schedule for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Add office meeting at 9 AM to my schedule for tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"office meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "reschedule the trip to sometime next monday",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"trip\")))))) (EventSometimeOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Let's go with the second one.",
    "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What time is my flight to London?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"flight to London\")))))))"
  },
  {
    "original_sentence": "reschedule my flight to london",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"flight to london\")))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "reschedule it to some other time",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (EventRescheduled (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Delete the 12:30 with Jason",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jason\")))))))))))"
  },
  {
    "original_sentence": "Brian",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brian\")))))))"
  },
  {
    "original_sentence": "Ryan",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ryan\")))))))"
  },
  {
    "original_sentence": "Esau",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Esau\")))))))"
  },
  {
    "original_sentence": "Molly",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Molly\")))))))"
  },
  {
    "original_sentence": "Adrian",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Adrian\")))))))"
  },
  {
    "original_sentence": "Meeting up with Karen at 4Pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\")))))))))))"
  },
  {
    "original_sentence": "Yes, but make it end at 5 PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "yes can you make the same meeting from 4 to 5 for the next friday too?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "when is my personal meeting date",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"personal meeting date\")))))))"
  },
  {
    "original_sentence": "Add personal meeting date for friday at 3pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"personal meeting date\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Arrange a meeting with me and the VP of Starks Inc on Tuesday.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "whats my response for the Soccer Game",
    "parse": "(Yield (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Soccer Game\")))))))"
  },
  {
    "original_sentence": "What am I doing with Tony tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tony\")))) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Does Twisted Fork Reno have a happy hour?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.HappyHour) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Twisted Fork Reno\"))))))"
  },
  {
    "original_sentence": "Does the Nine-O Cafe in Bellevue have a happy hour?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.HappyHour) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Nine-O Cafe in Bellevue\"))))))"
  },
  {
    "original_sentence": "Does Shibuya in Bellevue have a happy hour special?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.HappyHour) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Shibuya in Bellevue\"))))))"
  },
  {
    "original_sentence": "What event do I have at 9 pm Tuesday?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 9L)) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Delete my nine a.m. meeting on Wednesday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 9L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Create a new meeting at 9:30 am on Wednesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (HourMinuteAm 9L 30L)))))))"
  },
  {
    "original_sentence": "What other things do I have scheduled until 5:30pm today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRangeDateTime (^(Event) EmptyStructConstraint) (DateTimeAndConstraint (Now) (DateAtTimeWithDefaults (Today) (HourMinutePm 5L 30L))))))"
  },
  {
    "original_sentence": "OK, schedule a coffee meeting with Annie at 8 am tomorrow",
    "parse": "(Yield (& (& (Event.subject_? (?= \"coffee meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Annie\")))))))))"
  },
  {
    "original_sentence": "Move my flight to New Zealand to 9:30 am please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"flight to New Zealand\")))))) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 9L 30L)))))))"
  },
  {
    "original_sentence": "Yeah",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I would like to delete my doctor's appointment for this Saturday at 11 am.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor's appointment\")))))))))"
  },
  {
    "original_sentence": "Make a doctor's appointment this Friday at 10 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Schedule lunch with Eric for 1pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (NextTime (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Eric\")))))))))))"
  },
  {
    "original_sentence": "Create event meeting for 3:00 PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Change my hair appointment to tomorrow.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"hair appointment\")))))) (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "No, I need the hair appointment to be early in the day on Friday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTimeConstraint (Early) (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Friday)))))))"
  },
  {
    "original_sentence": "Change my basketball practice to be an hour long.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"basketball practice\")))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "yeah",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "kk",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a Football Scrimmage with Corey, Patrick, Ryan, and Justin on the 6th at 7 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Football Scrimmage\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 6L) (NumberPM 7L))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Corey\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Patrick\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ryan\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Justin\"))))))))))))"
  },
  {
    "original_sentence": "Yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please add \"football stadium\" as the location.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"football stadium\"))))))"
  },
  {
    "original_sentence": "Yeah, that",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add go to dinner at 5:00 pm tomorrow after my 4:00 interview at ChemTech.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Make a meeting with John at 5 pm on Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 5L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))))"
  },
  {
    "original_sentence": "update the meeting with Martha tomorrow to 4:00 p.m.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Martha\"))))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "can you make the meeting with martha from 4:00pm til 5:00pm",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"martha\"))))))) x1 (DateAtTimeWithDefaults (DateTime.date (Event.start x0)) (NumberPM 4L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "Thanks, add it and confirm",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok fine thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What events do I have scheduled tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "When is my last meeting Tuesday?",
    "parse": "(Yield (Event.start (FindLastEvent (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "cancel the brainstorming session event please",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"brainstorming session\")))))))))"
  },
  {
    "original_sentence": "Yes that is",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What is my last scheduled event on Thursday?",
    "parse": "(Yield (FindLastEvent (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you schedule a Tail Wagging Session after that?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Tail Wagging Session\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Remove recurring lunch with Tom for this month only.",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "Hello there. I need help updating an event for tomorrow. I think it is called accounting errors meeting.",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"accounting errors meeting\")))))))"
  },
  {
    "original_sentence": "Can you move that to 1 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "I have to work on papers from 8 to 11 am.",
    "parse": "(let (x0 (NextTime (NumberAM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"work on papers\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 11L)))))))))"
  },
  {
    "original_sentence": "Please update another event for tomorrow. I have a meeting with my supervisor.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "i want to meet with Fred on Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fred\")))))))))))"
  },
  {
    "original_sentence": "second one works for me fix it and make lunch after that",
    "parse": "(let (x0 (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (do (Yield x0) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (Event.end (^(Dynamic) item x0))))))))))"
  },
  {
    "original_sentence": "Yes, can you also plan a presentation with mike and his manager tomororw midday",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"mike\")))))) (do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"presentation\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))))))))))"
  },
  {
    "original_sentence": "add planning before this event",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"planning\")) (Event.end_? (?= (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "I need to add gym session to my calendar on Saturday at 10 am and I'll be there for 1 hour and 20 minutes. It's at Gold's Gym",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"gym session\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 10L))))) (Event.duration_? (?= (addDurations (toHours 1) (toMinutes 20))))) (Event.location_? (?= (LocationKeyphrase.apply \"Gold's Gym\")))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you also add drive home for 20 minutes right after that",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"drive home\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.duration_? (?= (toMinutes 20)))))))"
  },
  {
    "original_sentence": "Looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When is my next project planning meeting?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"project planning meeting\")) 1L)))"
  },
  {
    "original_sentence": "what is the weather for tomorrow in seattle",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"seattle\"))) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "great!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "are there tornados",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "okay go for it",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "are we done",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add a one hour meeting with Emily and LuAnne to my schedule tomorrow at 3 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"LuAnne\"))))))))))))"
  },
  {
    "original_sentence": "yes please add the boardroom to the location",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"the boardroom\"))))))"
  },
  {
    "original_sentence": "Add Annie to the meeting.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Annie\"))))))))))"
  },
  {
    "original_sentence": "That looks perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Is Dan Marton and his team available on Friday?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Marton\")))))) (Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindTeamOf x0))))) false)))"
  },
  {
    "original_sentence": "Let's go with the second one.",
    "parse": "(Yield (CreateCommitEventWrapper (Execute (refer (& (^(CreateCommitEvent) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(CreateCommitEvent) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Ok great. Set a reminder for 15 minutes before the meeting starts.",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "ok, when is my meeting with Kim Possible's team?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim Possible\")))))))))))))"
  },
  {
    "original_sentence": "move the Art Project event to October 11 and keep the same time and add Elli Parker and Abby Gonano to it",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Art Project\")))))) (& (Event.start_? (DateTime.date_? (?= (MD 11L (October))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli Parker\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby Gonano\"))))))))))))"
  },
  {
    "original_sentence": "How is the weather going to be tomorrow here?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "Oh great, add a swimming practice for tomorrow at 9 am to 11 am.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"swimming practice\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 11L)))))))))"
  },
  {
    "original_sentence": "And add basketball practice tomorrow from 1 pm to 4 pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"basketball practice\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L)))))))))"
  },
  {
    "original_sentence": "Hello Jake, Damon Straeter here. Thanks for agreeing to help me out, I really appreciate it! I'd like to reschedule my appointment with our accounting manager for later in the week, as we are having discussions of another acquisition tomorrow, regarding Digital Inc. After we have all the details ironed out and have made an agreement concerning how they will be incorporated within our structure, I'd like to meet with my team manager of accounting. We will discuss the specific financial implications of the deal before it is finalized and forward it to the CEO for board approval.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "ok, list me the works you are capable of doing",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "create meeting with Damon Straeter",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon Straeter\"))))))))))"
  },
  {
    "original_sentence": "The second option works.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please add the accounting manager to this appointment.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Add work meeting with Wade Monday at 1",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"work meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wade\")))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add speech with Barack Obama tuesday at 3",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"speech\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 3L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\")))))))))))"
  },
  {
    "original_sentence": "Perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add lunch with cecelia",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"cecelia\")))))))))))"
  },
  {
    "original_sentence": "Wednesday at 1",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTimeFromDowConstraint (?= (Wednesday)) (NumberPM 1L))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Night out with Cher Friday at 7",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Night out\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 7L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher\")))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add doctor's appointment Wednesday at 2 with Karl",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 2L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karl\")))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is my chat id",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Add \"Ice Cream Social\" this time next week.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Ice Cream Social\")) (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply (toWeeks 1)))))))))"
  },
  {
    "original_sentence": "The second one works better.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Is there an exam on my calendar 36 hours from now",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 36))) (Event.subject_? (?~= \"exam\")))))) 0L))"
  },
  {
    "original_sentence": "Please create a new event 24 hours from now called \"Studying for the SAT\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Studying for the SAT\")) (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 24)))))))))"
  },
  {
    "original_sentence": "perfect, thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Has Scott called me yet?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "I mean, has Scott responded to our meeting today yet?",
    "parse": "(Yield (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scott\"))))))))"
  },
  {
    "original_sentence": "Who all is invited?",
    "parse": "(Yield (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Who all is invited",
    "parse": "(Yield (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "OK. Arrange the meetings with Megan Bowen and Scott.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I want to schedule a meeting with Mike on the weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (ThisWeekend))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mike\")))))))))))"
  },
  {
    "original_sentence": "Could you change it to not be on the weekend please?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "I'd like the first one. Also I have a track meet on Saturday at 4 pm",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"track meet\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 4L)))))))))"
  },
  {
    "original_sentence": "Let's make that not during the weekend.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "the second option works. Can you schedule a tree pruning session on saturday at 9 am",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"tree pruning session\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 9L)))))))))"
  },
  {
    "original_sentence": "I want it to not be on the weekend",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "I would like schedule my meeting with Alexa to be after 3 pm tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (OnDateAfterTime (Tomorrow) (NumberPM 3L))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alexa\")))))))))))"
  },
  {
    "original_sentence": "make it earlier",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Make our meeting be later",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Fix the second schedule and fix it.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Let's go with 7:30 but make it until 8:30",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Tell me what events I have scheduled Monday",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Move the fifth event to the 4th.",
    "parse": "(let (x0 (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 5L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 4L)))))))))"
  },
  {
    "original_sentence": "That is perfect, thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What do I have planned for December 25th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 25L (December)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What's on my agenda for next Tuesday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What do i have this week with Bill and his supervisor?",
    "parse": "(let (x0 (PersonName.apply \"Bill\")) (Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))))"
  },
  {
    "original_sentence": "Ok thanks, good to know. You can cancel that.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "looking good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add a meeting with Bill and his boss day after tomorrow.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bill\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (adjustByPeriod (Tomorrow) (toDays 1))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "My meeting with Jack should be sometime 2pm and 5pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jack\")))))))) (Event.start_? (DateTime.time_? (TimeToTime (NumberPM 2L) (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "the second is great",
    "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Yeah it's ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have any appointments today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Could you repeat that search?",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "Make one Appointment with Ashley",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ashley\"))))))))))"
  },
  {
    "original_sentence": "can you do that again?",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "the first one is best",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Can you please schedule a meeting with Tom for 5pm on Friday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 5L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))))))))"
  },
  {
    "original_sentence": "I need it to go until 7",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "Actually, scratch that, I want it to be scheduled to half past 6.",
    "parse": "(do (Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint)))) (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinutePm 6L 30L))))))"
  },
  {
    "original_sentence": "No, it should start at 6:30 pm.",
    "parse": "(do (Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint)))) (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinutePm 6L 30L))))))"
  },
  {
    "original_sentence": "Find the time for Lucy and her boss's meeting this weekend",
    "parse": "(let (x0 (PersonName.apply \"Lucy\")) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))) (ThisWeekend))))))))"
  },
  {
    "original_sentence": "when was my last meeting?",
    "parse": "(Yield (Event.start (FindLastEvent (EventBeforeDateTime (Now) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Can you tell me what events I have for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "The appointment at 1 PM should be titled Meeting with Liadrin.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 1L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Liadrin\")))))))))))"
  },
  {
    "original_sentence": "add donald trump to this meeting",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"donald trump\"))))))))))"
  },
  {
    "original_sentence": "What is the weather like in Miami, FL today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Miami, FL\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "What is the hottest month for the state of FLorida?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Will it rain tomorrow in new york?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"new york\"))) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "Has there ever been a tornado in Los Angeles?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "What is the weather like in Omaha, Ne?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Omaha, Ne\"))) (?= (Now))))"
  },
  {
    "original_sentence": "Schedule a meeting with my boss tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Number 1.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is Alex Jone's phone number?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex Jone's\"))))))))"
  },
  {
    "original_sentence": "What is his home address?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "put the meeting at alex jones tomorrow morning 9.00 to 9.30 am",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinuteAm 9L 30L))))) (Event.location_? (?= (LocationKeyphrase.apply \"alex jones\"))))))))"
  },
  {
    "original_sentence": "Yes this looks much better",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "put on my appointment tomorrow before 7pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (OnDateBeforeTime (Tomorrow) (NumberPM 7L))))))"
  },
  {
    "original_sentence": "Can you set up a meeting for me that isn't on the weekend please?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "I need to see Abby, but not during the weekend. Make me something",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))) (Event.attendees_? (AttendeeListHasRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))"
  },
  {
    "original_sentence": "JANUARY 27 IS OK",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 27L (January))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "i need a meeting called \"weekday meeting\", so it can't be on the weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"weekday meeting\")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend)))))))))"
  },
  {
    "original_sentence": "Monday works.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Change the birthday party to Nov 3rd.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"birthday party\")))))) (Event.start_? (DateTime.date_? (?= (MD 3L (November))))))))"
  },
  {
    "original_sentence": "Perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Let's push it to the week after",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (DateTime.date (Event.start x0)) (toWeeks 1)))))))))"
  },
  {
    "original_sentence": "That's great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Push out my anniversary dinner to sometime next week.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"anniversary dinner\")))))) (Event.start_? (DateTime.date_? (NextWeekList))))))"
  },
  {
    "original_sentence": "i am in birthday party",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Put Birthday party at 7 pm to 10 pm on Sunday.",
    "parse": "(let (x0 (NextDOW (Sunday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Birthday party\")) (Event.start_? (?= (DateAtTimeWithDefaults x0 (NumberPM 7L))))) (Event.end_? (?= (DateAtTimeWithDefaults x0 (NumberPM 10L)))))))))"
  },
  {
    "original_sentence": "Can you delete my meeting with rob?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"rob\")))))))))))"
  },
  {
    "original_sentence": "Hello, can you move my 2:00 pm meeting to after my dinner please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 2L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\")))))))))))"
  },
  {
    "original_sentence": "Looks okay.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "add meeting at 6pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "Make a appointment to evening 6PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "That's right. An hour after that ends, schedule my meeting with Hank.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceMultiAction))"
  },
  {
    "original_sentence": "Hi, my project team is scheduled to meet on the calendar for all day Thursday, can you make it all day Thursday and Friday as well?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "put meeting with amanda and grozaa",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"amanda\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"grozaa\")))))))))))"
  },
  {
    "original_sentence": "Make it all day Wednesday I guess.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Wednesday))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Move my 2 day conference with Gerry and Mike up a week.",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "I need a meeting tomorrow later than 2 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (OnDateAfterTime (Tomorrow) (NumberPM 2L))))))"
  },
  {
    "original_sentence": "OK",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need to also make movie date earlier.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"movie date\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?< (Event.start x0)))))))"
  },
  {
    "original_sentence": "Please note the first work on my calendar",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Nope looks awful",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Schedule a doctor's appointment for next Wednesday at 8:00 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to make a meeting at 2 pm tomorrow for 3 hours.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)))) (Event.duration_? (?= (toHours 3)))))))"
  },
  {
    "original_sentence": "Please adjust the doctor's appointment on Wednesday to be an hour long",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (Event.subject_? (?~= \"doctor's appointment\"))))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Can you also put down, \"Go Used Car Shopping\" on Saturday at 1pm, then put \"Dinner with Connor\" at 6 that same day?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Used car shopping is going to go to 3 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"car shopping\")))))) (Event.end_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Can you put Cats the movie event on my calendar for thursday at 7?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Cats the movie\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Please invite Leeny to the movie for me",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Leeny\"))))))))))"
  },
  {
    "original_sentence": "That looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Also, reschedule my workout tonight for tomorrow morning.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"workout\"))) (Night)))))) (Event.start_? (DateTimeConstraint (Morning) (Tomorrow))))))"
  },
  {
    "original_sentence": "Can you make it last two hours and be at the gym?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (& (Event.duration_? (?= (toHours 2))) (Event.location_? (?= (LocationKeyphrase.apply \"gym\")))))))"
  },
  {
    "original_sentence": "Set alarm for Labor day for next year?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Set alarm\")) (Event.start_? (DateTime.date_? (?= (HolidayYear (Holiday.LaborDay) (NextYear)))))))))"
  },
  {
    "original_sentence": "Can you do the first one for me?",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thank you. Can you also set a backup alarm for 10:15 AM on June 3rd next year?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"backup alarm\")) (Event.start_? (?= (DateAtTimeWithDefaults (MDY 3L (June) (NextYear)) (HourMinuteAm 10L 15L))))))))"
  },
  {
    "original_sentence": "Delete the meeting with John's supervisor tomorrow",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))))))))))"
  },
  {
    "original_sentence": "Correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Ok that will be all!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "it's ok bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I have a teacher's conference in Nashville next Thursday through Sunday and will be out of the office.",
    "parse": "(let (x0 (NextDOW (Thursday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.location_? (?= (LocationKeyphrase.apply \"Nashville\"))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))) (EventAllDayForDateRange (Event.subject_? (?= \"teacher's conference\")) (DateAndConstraint x0 (nextDayOfWeek x0 (Sunday)))))))))"
  },
  {
    "original_sentence": "Yes that looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I have a festival to photograph on June 15th for 3 days",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"festival to photograph\")) (MD 15L (June)) (toDays 3)))))"
  },
  {
    "original_sentence": "that should work for me",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you add the football tournament out of town for 3 days on November 1?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"football tournament out of town\")) (MD 1L (November)) (toDays 3)))))"
  },
  {
    "original_sentence": "What's happening on Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Oh I meant Saturday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Add a trip to the beach to my calendar for tomorrow at 2 pm to 5 pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"trip to the beach\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "Sorry, update the location to Galveston beach.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Galveston beach\"))))))"
  },
  {
    "original_sentence": "And change the subject to beach party",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"beach party\")))))"
  },
  {
    "original_sentence": "Schedule a company open house with Fiona Mason and Cecilia Waller from 12-5pm on Tuesday",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 12L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"company open house\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fiona Mason\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cecilia Waller\")))))))))))))"
  },
  {
    "original_sentence": "Schedule a company open house with Fiona Mason and Cecelia Waller from 12-5pm on Tuesday",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 12L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"company open house\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fiona Mason\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cecelia Waller\")))))))))))))"
  },
  {
    "original_sentence": "Yes, thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create a lunch meeting",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"lunch meeting\")))))"
  },
  {
    "original_sentence": "Hang on the phone is ringing",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "The 4pm works",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Yes put it on my calendar.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Update lunch meeting to 1 pm please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch meeting\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "yep!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "don't change",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "prepare a check list for buying groceeries",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Remind me to make a grocery list tonight",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "How long is my car appointment today?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"car appointment\"))))))))"
  },
  {
    "original_sentence": "and the doctor appointment monday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Monday)) (Event.subject_? (?~= \"doctor appointment\"))))))"
  },
  {
    "original_sentence": "Can you add thirty minutes to the end of that appointment?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toMinutes 30))))))))"
  },
  {
    "original_sentence": "DONE",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "switch it to Tuesday",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Tuesday)))))))))"
  },
  {
    "original_sentence": "Latest appointment today?",
    "parse": "(Yield (FindLastEvent (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "That works good enough.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "There's not. Bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I'm going to lunch this Tuesday at 3pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Yes, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Will it be below 70F this week?",
    "parse": "(Yield (< (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeek)))) (NumberInDefaultTempUnits 70)))"
  },
  {
    "original_sentence": "I'm going shopping at Town Center at 2 pm on Sunday. Add it to my calendar.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"shopping\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 2L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Town Center\")))))))"
  },
  {
    "original_sentence": "yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "OK, HELP ME TO FIND THE ADDRESS FOR TOWN CENTER",
    "parse": "(FindPlaceAtHere (LocationKeyphrase.apply \"TOWN CENTER\") (AtPlace (Here)))"
  },
  {
    "original_sentence": "not helpful",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Find the town center in New Rochelle New York",
    "parse": "(Yield (FindPlaceAtHere (LocationKeyphrase.apply \"town center\") (AtPlace (FindPlace (LocationKeyphrase.apply \"New Rochelle New York\")))))"
  },
  {
    "original_sentence": "delete my meeting",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "yes please cancel this and reschedule for next tuesday",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))))))"
  },
  {
    "original_sentence": "Change the meeting from 3 to 4pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to set up dinner later tonight",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTimeConstraint (Night) (Today)))))))"
  },
  {
    "original_sentence": "The second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Perfect lets do dessert after",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dessert\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "How about a movie late tonight",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"movie\")) (Event.start_? (DateTimeConstraint (Night) (Today)))))))"
  },
  {
    "original_sentence": "the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Do I have a meeting at noon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (Noon)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Can you schedule Batting Practice in that time slot?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Make an event for Monday at 4pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "cancel the sports event on calender",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"sports\")))))))))"
  },
  {
    "original_sentence": "Yes that is it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create a coffee break tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"coffee break\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "Change the coffee break to 10 AM and it will be for 15 minutes only",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.duration_? (?= (toMinutes 15)))))))"
  },
  {
    "original_sentence": "Yep. good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule a meeting with Erica today at 3 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Erica\")))))))))))"
  },
  {
    "original_sentence": "Yes, but I need it to last until 4PM.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Please move it to 2pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "can you remove calender events?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "remove calendar events",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "remove events",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "calendar updating",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "whats my schedule today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "create me a calendar",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "update my calendar",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "create me a calendar",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "yes, thank you",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "not for now",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Reschedule the meeting with Jimmy's manager for 1 August 2019.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jimmy\")))))))))))) (Event.start_? (DateTime.date_? (?= (MDY 1L (August) (Year.apply 2019L))))))))"
  },
  {
    "original_sentence": "are you sure that jimmy's manager name is dan schoffel",
    "parse": "(Yield (== (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"dan schoffel\"))))) (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jimmy\"))))))))"
  },
  {
    "original_sentence": "Can you add Jimmy to the meeting",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jimmy\"))))))))))"
  },
  {
    "original_sentence": "add donald trump to this meeting please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"donald trump\"))))))))))"
  },
  {
    "original_sentence": "It doesn't look right. Cancel it.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Create an event with Patricia on Friday at 10;30 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteAm 10L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Patricia\")))))))))))"
  },
  {
    "original_sentence": "That works for me! Thanks a bunch!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you schedule a Movie Night with Elli for tomorrow at 8'15 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Movie Night\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 8L 15L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\")))))))))))"
  },
  {
    "original_sentence": "That works.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Good.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I want to know when is Rebuilding Winterfell with, Jon, Arya, and Bran.",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Rebuilding Winterfell\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jon\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Arya\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bran\")))))))))))"
  },
  {
    "original_sentence": "Change the time to 2pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Yes. Add a Sunbathing event with Carlie, Sarah and Ashley for tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Sunbathing\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carlie\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ashley\"))))))))))))"
  },
  {
    "original_sentence": "Yes. please cancel my lunch with rob, rob and allen.",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?= \"lunch\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"rob clark\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"rob thomas\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"allen\"))))))))))))))"
  },
  {
    "original_sentence": "Yeah is it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hello, what exactly is a personal calendar?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "What can be added to a personal calendar?",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "How do I create this calendar?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Can I make an event?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "I need to create an appointment for March 27, 2019 at 1:30 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (MDY 27L (March) (Year.apply 2019L)) (HourMinutePm 1L 30L)))))))"
  },
  {
    "original_sentence": "Yes, but I need a 24hr reminder",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceReminder))"
  },
  {
    "original_sentence": "Great, but I also want an alarm to remind me of this appointment for the day before, put an alarm for March 26, 2019 at 12pm to remind me of the appointment",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Okay, bye.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "remind me to pay bills every first day of the month",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "Is my supervisor the organizer of my Coffee?",
    "parse": "(Yield (== (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Coffee\")))))) (FindManager (toRecipient (CurrentUser)))))"
  },
  {
    "original_sentence": "Is my boss the organizer for the event next week?",
    "parse": "(Yield (== (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))) (FindManager (toRecipient (CurrentUser)))))"
  },
  {
    "original_sentence": "Can you search for a calendar event?",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Can you create an event?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "On april 9th at 9pm create an event",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (MD 9L (April)) (NumberPM 9L)))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you search for my appointments?",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Great. What is it?",
    "parse": "(Yield (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Can you display my events",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Book a 1 hour lunch after my 10am orientation.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (adjustByPeriodDuration (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"orientation\")) (Event.start_? (DateTime.time_? (?= (NumberAM 10L))))))))) (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Also book a meeting after lunch at 1:00 pm for 1 hour.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 1L)))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "perfect",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you please delete my Photoshoot near the Washington Monument from my calendar",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Photoshoot\")) (Event.location_? (?= (LocationKeyphrase.apply \"the Washington Monument\")))))))))))"
  },
  {
    "original_sentence": "Yes pleae",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule me a photoshoot for the week after that.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"photoshoot\")) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toWeeks 1)))))))))"
  },
  {
    "original_sentence": "The 2nd one is great",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "lunch with parents at 3 pm",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I need to go shopping at 2pm so add that to the schedule.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go shopping\")) (Event.start_? (?= (NextTime (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Decline the wedding invite for next month and say I don't like the bride",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I don't like the bride\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"wedding\")) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Yes, thank you. Decline my invitation for a Game of Thrones Watching Party next week and say that I think that Game of Thrones is boring.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I think that Game of Thrones is boring\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Game of Thrones Watching Party\"))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Decline movie night and say that I'm going to read instead",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I'm going to read instead\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"movie night\"))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "How cold will it get in Port Jefferson NY today?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Port Jefferson NY\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "what's the temperature at Stony Brook University?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Stony Brook\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "Is there a lot of sunlight?",
    "parse": "(Yield (IsSnowy (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Will it rain this week on Long Island?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Long Island\"))) (DateTime.date_? (ThisWeek)))))"
  },
  {
    "original_sentence": "Will it rain in Manhattan?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Manhattan\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "What's the temperature in Queens?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Queens\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "What's the lowest temperature in New York state",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"New York state\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "what part of New York is it 35 degrees?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "i want meet doctor in sunday 9.00am",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I have a doctor's appointment at 9AM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= (NextTime (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "When is my next appointment with Frank?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Frank\")))) 1L)))"
  },
  {
    "original_sentence": "The next time I am meeting with Owen is when?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Owen\")))) 1L)))"
  },
  {
    "original_sentence": "And when do I next meet with Wayne?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wayne\")))) 1L)))"
  },
  {
    "original_sentence": "When do I see Olivia?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Olivia\"))))))"
  },
  {
    "original_sentence": "When do I meet with Connie next?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Connie\")))) 1L)))"
  },
  {
    "original_sentence": "Delete the meeting with Janet for tomorrow and schedule a new one with Janice for next Tuesday.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Schedule a meeting with Janice next Tuesday from 2:30 pm to 4:15.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Tuesday)) (HourMinutePm 2L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 4L 15L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice\"))))))))))))"
  },
  {
    "original_sentence": "Yep, looks perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Actually could you make that for an hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Hi",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Can you schedule the meeting with Janice Kang",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice Kang\"))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please create an event for my dinner with Scott at Lucky's Cafe for March 10th at 2 to 3 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (MD 10L (March)) (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Lucky's Cafe\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scott\"))))))))))))"
  },
  {
    "original_sentence": "I wanna to run my company without failure. Is there any idea",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "yeah",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I don't know",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "how can you help me",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "how is the weather today in New York",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"New York\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "for what",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "then, why should you talk to me",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What's the price range of Taco Bell in Grand Haven?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Taco Bell in Grand Haven\"))))))"
  },
  {
    "original_sentence": "How is the pricing at Wild River Grille in Reno?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Wild River Grille in Reno\"))))))"
  },
  {
    "original_sentence": "Is Curry's tavern cheap?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Curry's tavern\"))))))"
  },
  {
    "original_sentence": "Nevermind. What is the pricing for Badang Sushi in cerritos",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Badang Sushi in cerritos\"))))))"
  },
  {
    "original_sentence": "Please list all events I have on Sunday January 18th.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 18L (January)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Cancel that dinner",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Add a dinner on January 19th at 7 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 19L (January)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Great, please search to make sure this doesn't conflict with anything.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (DateTime.date (Event.start x0)) (^(Event) EmptyStructConstraint) (DateTime.time (Event.start x0)) (DateTime.time (Event.end x0))))))"
  },
  {
    "original_sentence": "Do I have anything booked for Tuesday at 2 PM?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 2L)) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Schedule dinner with John from 4:00 to 5:00pm tomorrow.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))))))"
  },
  {
    "original_sentence": "Make that for an hour and a half.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours (+ 1 0.5)))))))"
  },
  {
    "original_sentence": "Add softball from 8:00 PM to 10:00 PM on Friday.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"softball\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 10L)))))))))"
  },
  {
    "original_sentence": "Start softball at 7 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"softball\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "what is the weather in brooklyn ny",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"brooklyn ny\"))) (?= (Now))))"
  },
  {
    "original_sentence": "cool thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what is the chat id",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "I need to discuss the mouthfeel with Natalie. Can you set up a reminder for tomorrow at 8pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"discuss the mouthfeel\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Natalie\")))))))))))"
  },
  {
    "original_sentence": "Yes thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add a meeting with Robert tomorrow at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Robert\")))))))))))"
  },
  {
    "original_sentence": "make the appointment with johnson",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"johnson\"))))))))))"
  },
  {
    "original_sentence": "Sorry, I meant, can you please schedule another meeting with Johnson for the day after, March 14th, from 1 to 1:45 pm?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (MD 14L (March)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 1L 45L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Johnson\"))))))))))))"
  },
  {
    "original_sentence": "wow it is awesome meeting time.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What day was my last sales projection meeting?",
    "parse": "(Yield (Event.start (FindLastEvent (EventBeforeDateTime (Now) (Event.subject_? (?~= \"sales projection meeting\"))))))"
  },
  {
    "original_sentence": "When was my last conference call with my boss?",
    "parse": "(Yield (Event.start (FindLastEvent (EventBeforeDateTime (Now) (& (Event.subject_? (?~= \"conference call\")) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))))))))"
  },
  {
    "original_sentence": "Did I have anything with Ren last week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ren\")))) (LastWeekNew))))) 0L))"
  },
  {
    "original_sentence": "Was Ren here this month?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "create avengers night on tuesday at 12",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"avengers night\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What events do I have scheduled for today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Reschedule that for friday, same time",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)))))))))"
  },
  {
    "original_sentence": "Can you please add meeting with Paige Ashworth on April 11 at 9am?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 11L (April)) (NumberAM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\")))))))))))"
  },
  {
    "original_sentence": "Yes thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "The meeting will run from 9am to 10am",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberAM 9L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 10L)))))))))"
  },
  {
    "original_sentence": "Perfect",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I don't need run on my calendar tomorrow from 9 to 10am.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L)) (Event.subject_? (?~= \"run\"))))))))))"
  },
  {
    "original_sentence": "Please remove \"run\" from my calendar",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"run\")))))))))"
  },
  {
    "original_sentence": "Remove both of them",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Please add lunch with Jerri Skinner on May 5 at 12pm at Panera Bread",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 5L (May)) (NumberPM 12L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Panera Bread\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jerri Skinner\")))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please add board meeting with Kristen Clifford on April 19 at the Holiday Inn from 9am to 4pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (MD 19L (April)) (NumberAM 9L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (& (Event.subject_? (?= \"board meeting\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Holiday Inn\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kristen Clifford\"))))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Get Sally on the phone please.",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Maddy needs to be picked up after I finish my meeting today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Maddy needs to be picked up\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"meeting\")))))))))))))"
  },
  {
    "original_sentence": "Yes, it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "great awesome",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "nope, that's all",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have a Put Put Meeting on December 13th?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 13L (December)) (Event.subject_? (?~= \"Put Put Meeting\")))))) 0L))"
  },
  {
    "original_sentence": "anything on the schedule for tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "am I getting a hair cut this month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"hair cut\")) (FullMonthofMonth (Date.month (Today))))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything going on in January?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (January)))))) 0L))"
  },
  {
    "original_sentence": "create an event for sunday afternoon and name it going out with the girls",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"going out with the girls\")) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Sunday))))))))"
  },
  {
    "original_sentence": "Pick the second one, but make it 2 hours long",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Do I have something coming up in Fall?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (SeasonFall))))) 0L))"
  },
  {
    "original_sentence": "Whoops I meant to say Winter",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (SeasonWinter)))))"
  },
  {
    "original_sentence": "Hi",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Can you show me my calendar for this month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today))))))"
  },
  {
    "original_sentence": "Change my meeting with Kim's skip to tomorrow at 6",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))))))) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 6L)))))))"
  },
  {
    "original_sentence": "What is the name of Kim's skip? I met him once but I do not remember his name.",
    "parse": "(Yield (RecipientWithNameLike (?= (FindManager (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint))))))) (PersonName.apply \"Kim\")))"
  },
  {
    "original_sentence": "And who's his skip?",
    "parse": "(Yield (FindManager (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Can you make a meeting for tommrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "The meeting at 10 to 10:30 will work",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Has everyone accepted the budget meeting?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Has Jimmy accepted the budget meeting?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"budget meeting\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jimmy\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "What was David Lax's response to the budget meeting?",
    "parse": "(Yield (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"budget meeting\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David Lax\"))))))))"
  },
  {
    "original_sentence": "Did Jerome accept the meeting invite too?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jerome\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "What's Jennifer's response for the kickoff meeting?",
    "parse": "(Yield (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"kickoff meeting\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer\"))))))))"
  },
  {
    "original_sentence": "Create a meeting next week with my boss and Joan.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (& (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joan\"))))))))))))"
  },
  {
    "original_sentence": "The one on Monday fits better.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Who are all in my meeting.",
    "parse": "(Yield (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "theye are how may people are compain events",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Am I going to lunch with Tyler and his boss on July 24th?",
    "parse": "(let (x0 (PersonName.apply \"Tyler\")) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 24L (July)) (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))))))))))) 0L)))"
  },
  {
    "original_sentence": "Lets have a family picnic at Yellowstone park tonight",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"family picnic\")) (Event.start_? (DateTimeConstraint (Night) (Today)))) (Event.location_? (?= (LocationKeyphrase.apply \"Yellowstone park\")))))))"
  },
  {
    "original_sentence": "The first one, but from 6:00 pm to 8:30 pm.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Yes that looks good",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What will the weather be like that day?",
    "parse": "(Yield (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Add hike at Afton State Park on Monday afternoon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"hike\")) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Monday))))) (Event.location_? (?= (LocationKeyphrase.apply \"Afton State Park\")))))))"
  },
  {
    "original_sentence": "make a meeting with johnson and robert coming wednesday afternoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Wednesday)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"johnson\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"robert\"))))))))))))"
  },
  {
    "original_sentence": "The bottom one works best",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "That's good, thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When is my next staff meeting?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"staff meeting\")) 1L)))"
  },
  {
    "original_sentence": "add lisa, lonnie, and jessica to the staff meeting",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"staff meeting\")))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"lisa\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"lonnie\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jessica\")))))))))))"
  },
  {
    "original_sentence": "basketball game 7 pm saturday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"basketball game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "The game is going to go to 8:30 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (HourMinutePm 8L 30L)))))))"
  },
  {
    "original_sentence": "Looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Change my two meetings tomorrow with the location Willy's and make a new meeting at 2 pm on May 15th called Dentist.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Change my Dentist appointment to 3 pm and make it last an hour, then add a new appointment on the 25th with Bron at Jim's Party Palace at 5 pm.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Accept the invitation to drinks with marty and tell him he is buying this time",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"he is buying this time\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"drinks\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"marty\")))))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "THANKS OK",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Accept the meeting with kim",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"kim\"))))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "That's great, thank you!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Remind me of what time I am having drinks with Marty?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"drinks\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marty\"))))))))))"
  },
  {
    "original_sentence": "Could you accept the event that is called money talk and say \"let's talk\"",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"let's talk\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"money talk\"))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Make an event for 3 pm in which I take a cake and bake",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"take a cake and bake\")) (Event.start_? (?= (NextTime (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Yeah, but make it for Saturday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday))))))))"
  },
  {
    "original_sentence": "Yes I can't wait for the cake.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "That sounds great.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Create a new meeting called Table Tennis Tournament on Monday at 4:00 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Table Tennis Tournament\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "How can get my calendar events to alert me like alarms?",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "can you set meetings?",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "What is on my schedule for today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you delete that? I don't think I can make it",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes cancel that",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hi, my name is Damon Straeter and I need to change an event on my calendar. Please update \"Shave Barry's Back\" from 11:00am on Sunday to 1:00pm on Friday",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 11L)) (Event.subject_? (?~= \"Shave Barry's\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "Please add Barry to this event.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barry\"))))))))))"
  },
  {
    "original_sentence": "It should take an hour so have it until 2",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "It looks great!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok wraps it up for me",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "do I have an appointment in August with Harris?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harris\")))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (August))))))) 0L))"
  },
  {
    "original_sentence": "what's his phone number?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "mmkay then can you cancel the appointment?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "actually nevermind",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Will I need a jacket this weekend?",
    "parse": "(Yield (NeedsJacket (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeekend)))))"
  },
  {
    "original_sentence": "Paris, Texas.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"Paris, Texas\")))))))"
  },
  {
    "original_sentence": "Is it going to rain?",
    "parse": "(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "For how long?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Will I need a jacket for the evening on Saturday?",
    "parse": "(Yield (NeedsJacket (WeatherQueryApi (AtPlace (Here)) (DateTimeConstraint (Evening) (NextDOW (Saturday))))))"
  },
  {
    "original_sentence": "I need a meeting with Abby tomorrow at \"Gonano's Establishment\" at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)))) (Event.location_? (?= (LocationKeyphrase.apply \"Gonano's Establishment\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "Wait, is Abby currently in town?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "It looks right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create a lunch with Abby tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "Hold on a first",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "please conform the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "hold off for a second",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Thank You",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Does The Butcher and Barkeep in Harleysville have a full bar?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"The Butcher and Barkeep in Harleysville\"))))))"
  },
  {
    "original_sentence": "Does Applebee's in Carson City have a full bar",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Applebee's in Carson City\"))))))"
  },
  {
    "original_sentence": "Does Maggie's Pierogies in Sherwood Park have a full bar?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Maggie's Pierogies in Sherwood Park\"))))))"
  },
  {
    "original_sentence": "What time on Monday do i meet Amy, Glenn and Jonah for the walmart protest?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (& (Event.subject_? (?~= \"walmart protest\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Glenn\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jonah\"))))))))))))"
  },
  {
    "original_sentence": "Ok sounds good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When is my tee time with Mary, Billy, and Grace?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"tee time\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Billy\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Grace\")))))))))))"
  },
  {
    "original_sentence": "put on your calendar on monday the 18 th is at 5.30 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 18L) (HourMinutePm 5L 30L)))))))"
  },
  {
    "original_sentence": "PERFECT",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Set a reminder to call Harold at 4pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"call Harold\")) (Event.start_? (?= (NextTime (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Do I have any other events at 4 pm?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 4L)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Delete the meeting I had scheduled with Thomas on Friday from 10 to 11 am",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Thomas\"))))) (TimeToTime (NumberAM 10L) (NumberAM 11L))))))))))"
  },
  {
    "original_sentence": "ok. what is my next event on my calender",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))"
  },
  {
    "original_sentence": "Change the time to 11am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "Yes this looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need help rescheduling today's meeting",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "This schedule is very nice.",
    "parse": "(Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please reschedule the staff meeting to sometime next Tuesday",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"staff meeting\")))))) (EventSometimeOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "I need to schedule a meeting with Angela Smith on Friday at 8",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 8L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Angela Smith\")))))))))))"
  },
  {
    "original_sentence": "Oh, sorry, I meant a meeting with Don Brown.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Don Brown\"))))))"
  },
  {
    "original_sentence": "I need it scheduled for Thursday instead.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Thursday))))))))"
  },
  {
    "original_sentence": "I need to add Eli as well.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Eli\"))))))))))"
  },
  {
    "original_sentence": "it was good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Is Matt going to the football game with me on Sunday?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"football game\")))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Matt\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Awesome. Is Greg coming to the concert tomorrow night?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (Event.subject_? (?~= \"concert\"))) (Night))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Greg\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "What about Matt?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Matt\"))))))"
  },
  {
    "original_sentence": "Cool. Is Jen coming to the meeting tomorrow morning?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Morning))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jen\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Is Kim going to drinks tonight?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"drinks\"))) (Night))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Ok. Will Kim be attending the company luncheon next week?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"company luncheon\")) (NextWeekList))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Are there any events with Chad ?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chad\"))))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything on December 18th?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 18L (December)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Is Tina on my meeting schedule this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tina\")))) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Am I seeing Chad for baseball this month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"baseball\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chad\"))))) (FullMonthofMonth (Date.month (Today))))))) 0L))"
  },
  {
    "original_sentence": "That's alright.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "i want meet my sister",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "i want meet my pet",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "i want meet my cat",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "i want meet my president",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "i want meet my doctor",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Can you make me an event at brunch at The Breakfast Shack",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (Brunch)))) (Event.location_? (?= (LocationKeyphrase.apply \"The Breakfast Shack\")))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have a meeting before brunch?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (NextTime (Brunch)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Can you delete my event on May 20 at brunch",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (MD 20L (May)) (Brunch)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Help me locate my lunch meeting tomorrow.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"lunch meeting\")))))"
  },
  {
    "original_sentence": "Can you cancel my lunch meeting tomorrow?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"lunch meeting\"))))))))))"
  },
  {
    "original_sentence": "Will it break 60 degrees today?",
    "parse": "(Yield (> (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))) (toFahrenheit 60)))"
  },
  {
    "original_sentence": "What do i have early next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (EarlyDateRange (NextWeekList)))))"
  },
  {
    "original_sentence": "Do I have anything planned for late next month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (LateDateRange (FullMonthofMonth (NextMonth))))))) 0L))"
  },
  {
    "original_sentence": "What did I have on my calendar late last month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (LateDateRange (FullMonthofLastMonth)))))"
  },
  {
    "original_sentence": "What day is my doctor's appointment?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor's appointment\")))))))"
  },
  {
    "original_sentence": "Do I have a doctor's appointment scheduled?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor's appointment\"))))) 0L))"
  },
  {
    "original_sentence": "that's good.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make a new appointment after that called shopping.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"shopping\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Can you make my shopping from 2:00 until 3:00?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Can I set up a dinner date tomorrow at the Chili's off of highway 75 at 6:00 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Chili's off of highway 75\")))))))"
  },
  {
    "original_sentence": "What time is Tom's concert tomorrow night?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (Event.subject_? (?~= \"Tom's concert\"))) (Night)))))))"
  },
  {
    "original_sentence": "Make me an event tomorrow with my team",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Make it later in the afternoon. However, if I have no free time, I will take the second option.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Make it later in the night",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (LateTimeRange (Night)))))))"
  },
  {
    "original_sentence": "first one is free",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "thanks now i need dinner to be a bit after that",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Search January 3rd events",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 3L (January)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What about the next day?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "I need to prep for dinner at 5:30pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"prep for dinner\")) (Event.start_? (?= (NextTime (HourMinutePm 5L 30L))))))))"
  },
  {
    "original_sentence": "That's right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What is the weather going to be tomorrow in chicago",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"chicago\"))) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "Schedule a meeting with Marie tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marie\")))))))))))"
  },
  {
    "original_sentence": "Second one works better",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "no need for this time set second schedule",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add grocery shopping to my calendar on Tuesday at 4 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"grocery shopping\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Yes the grocery shopping is Tuesday at 4:00 pm but make it a whole hour on the calendar.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Who's invited to my 8pm?",
    "parse": "(Yield (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 8L)) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "change the party time at 8.30 pm - 9.00 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"party\")))))) (& (Event.start_? (DateTime.time_? (?= (HourMinutePm 8L 30L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 9L))))))))"
  },
  {
    "original_sentence": "I need it to be later than that",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Yup. Do I have anything before that?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction)) x1 (Event.start (^(Dynamic) item x0))) (do (Yield x0) (Yield (FindEventWrapperWithDefaults (EventOnDateBeforeTime (DateTime.date x1) (^(Event) EmptyStructConstraint) (DateTime.time x1))))))"
  },
  {
    "original_sentence": "what about after?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))))"
  },
  {
    "original_sentence": "What is the weather?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (?= (Now))))"
  },
  {
    "original_sentence": "Weather for the week?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeek))))"
  },
  {
    "original_sentence": "My friends and I usually schedule video game night on weekends. For this week, can you add video game night with Laina, Allen, and Rheema on Saturday from 8 PM - 11 PM?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"video game night\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 11L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Laina\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Allen\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rheema\")))))))))))))"
  },
  {
    "original_sentence": "Very nice.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hold on. I'll check to see what else I need to add to my schedule if anything and be right back.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "I'm back. It looks there's nothing else I need help with it. Thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you add a doctor's appointment to my personal calendar?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"doctor's appointment\")))))"
  },
  {
    "original_sentence": "No, I need it for May 22 at 12 noon.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (DateAtTimeWithDefaults (MD 22L (May)) (Noon)))))))"
  },
  {
    "original_sentence": "Yes, thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "That works.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you write down a dinner date for this evening at six?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "Okay, thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add my doctor appointment to my calendar for April 5th at 10:00am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 5L (April)) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "it's perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Actually, make it an hour long.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "You do it!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change my meeting for tomorrow from 4 pm to 5pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "No, neither of those will work. I need it to be at 7 pm .",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "No actually it's not going to work out, delete that appointment from my calendar.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Schedule a workout tomorrow at 11AM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"workout\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "No, we need to change the time to 9 am.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "Make my schedule clear tomorrow",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "CHECK WHETHER I HAVE ANY APPOINTMENT TOMORROW",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Make a new appointment for a meeting in the main conference room on the second floor.",
    "parse": "(FenceConferenceRoom)"
  },
  {
    "original_sentence": "make that 9-10:30 am",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make it the one on July 12.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Create a new meeting with Jacob and his manager this Friday at 6pm",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jacob\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 6L)))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "Yes it's right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete the meeting with phil and his boss",
    "parse": "(let (x0 (PersonName.apply \"phil\")) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))))))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thank you, now add this to my calendar",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have anything on my calendar for the 1st of next month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 1L (NextMonth)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Schedule party from 7 pm to 10 pm that day.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Execute (refer (^(Date) roleConstraint (Path.apply \"date\")))) (NumberPM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"party\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 10L)))))))))"
  },
  {
    "original_sentence": "Can you send me reminder to shop for the party on Feb 27 at 5 PM?",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Please make meet with my trainer",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "ok, chech for lisa's contact information",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"lisa\")))))))"
  },
  {
    "original_sentence": "Is there a holiday this weekend?",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "Is there a tree day?",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "What day does Thanksgiving fall on?",
    "parse": "(Yield (NextHolidayFromToday (Holiday.Thanksgiving)))"
  },
  {
    "original_sentence": "OK GOOD",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "NEXT MEETING ON 7 AM\\",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberAM 7L)))))))"
  },
  {
    "original_sentence": "Make that appointment 45 minutes long please.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toMinutes 45))))))"
  },
  {
    "original_sentence": "looks right. fix it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What's on my calendar for the weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "Can you add the location for the first event to be at Costco?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 1L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Event.location_? (?= (LocationKeyphrase.apply \"Costco\"))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change the second appointment to \"Watching John Wick 3\"",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Event.subject_? (?= \"Watching John Wick 3\")))))"
  },
  {
    "original_sentence": "Yes!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "hello I want you to help me, with a problem I have with my mom",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Will meet mom for dinner 3 hours after work today and set to last 30 minutes before the gym.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Add my surgery to Dec 1 to dec 3",
    "parse": "(let (x0 (MD 1L (December))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"surgery\")) (DateAndConstraint x0 (nextMonthDay x0 (December) 3L)))))))"
  },
  {
    "original_sentence": "Yes this looks much better",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I have to stay in recovery for two weeks starting December 3rd.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"stay in recovery\")) (MD 3L (December)) (toWeeks 2)))))"
  },
  {
    "original_sentence": "Looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add a trip to the beach with Karina December 17th for 7 days.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karina\"))))))) (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"trip to the beach\")) (MD 17L (December)) (toDays 7))))))"
  },
  {
    "original_sentence": "Add a one hour lunch with Anne to my schedule tomorrow at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Anne\")))))))))))"
  },
  {
    "original_sentence": "What do I have with Bethany?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bethany\"))))))"
  },
  {
    "original_sentence": "delete today's trip to the store",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"trip to the store\"))))))))))"
  },
  {
    "original_sentence": "Do I have any meetings today from 3 pm to 5 pm?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (Today) (^(Event) EmptyStructConstraint) (NumberPM 3L) (NumberPM 5L))))) 0L))"
  },
  {
    "original_sentence": "Cancel my Business Meeting tomorrow with Dan Marton, Jesse, and Elli.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (& (Event.subject_? (?~= \"Business Meeting\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Marton\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\"))))))))))))))"
  },
  {
    "original_sentence": "Yes please. Now add in a Brainstorming Session with Abby, Kim and Jennifer tomorrow at 3 pm",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Brainstorming Session\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer\")))))))))))))"
  },
  {
    "original_sentence": "Create an event called create an event with Jennifer, Jake, and Kim.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"create an event\")) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))))))"
  },
  {
    "original_sentence": "Bottom",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need to get in Spaghetti Eating Contest Training for Saturday morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Spaghetti Eating Contest Training\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Saturday))))))))"
  },
  {
    "original_sentence": "The earlier the better. The first option is good.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "please create an event",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "thursday april 4",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 4L (April))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "change start time to 11:00",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 11L)))))))"
  },
  {
    "original_sentence": "change length to 2 hours",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "show me upcoming events",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "do i have any appointments",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))) 0L))"
  },
  {
    "original_sentence": "what's on my calender",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "what's the weather kansas city",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"kansas city\"))) (?= (Now))))"
  },
  {
    "original_sentence": "When is my next meeting with the boss?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))) 1L)))"
  },
  {
    "original_sentence": "YES",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I'd like to extend meeting with the boss until 6.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))))))) (Event.end_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Change my dentist appointment from the 19th to the 22nd at 9:00 AM",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 22L)) (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "Does Goosefoot in Chicago have a casual dress code?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Goosefoot in Chicago\"))))))"
  },
  {
    "original_sentence": "Is Bistro 7 in Reno casual?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Bistro 7 in Reno\"))))))"
  },
  {
    "original_sentence": "is Rum Sugar Lime in Reno casual",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Rum Sugar Lime in Reno\"))))))"
  },
  {
    "original_sentence": "Will Jeff, Jimmy, and Elliot be at the birthday party this weekend?",
    "parse": "(Yield (allows (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeff\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jimmy\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elliot\")))) (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"birthday party\")) (ThisWeekend))))))))"
  },
  {
    "original_sentence": "Invite Tom to this event please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\"))))))))))"
  },
  {
    "original_sentence": "The start time should be 8 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "The birthday party should end at 10 PM. Half an hour should not be enough.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 10L)))))))"
  },
  {
    "original_sentence": "Absolutely.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What time is the movie with Ryan?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"movie\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ryan\"))))))))))"
  },
  {
    "original_sentence": "Can you add an event called \"Movie\" on saturday at 8pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Movie\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "Add Bill, Phill, Jill, and Dill to the Lunch Event",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Lunch\")))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bill\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Phill\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jill\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dill\")))))))))))"
  },
  {
    "original_sentence": "That is correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great. When is geocaching with Bob, Tom, Harry and Ron?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"geocaching\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harry\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ron\")))))))))))"
  },
  {
    "original_sentence": "Thank you, keep it at that time please.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "My brunch can not be on the weekend",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"brunch\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "My moon trip can't occur on the weekend. Change it.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"moon trip\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Move the taco party so that it is not on the weekend.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"taco party\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Schedule a break for me at 3pm today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"break\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Once was he name of is he can the day when he only reason for bear like tree.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Stop asking",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Where am I having lunch tomorrow?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"lunch\"))))))))"
  },
  {
    "original_sentence": "Change the time to 3pm please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Layla can't make it to our meeting on Friday.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Layla\")))))))))))"
  },
  {
    "original_sentence": "Yes, and add Matthew to the meeting",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Matthew\"))))))))))"
  },
  {
    "original_sentence": "Can you make an event for Friday at 2pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "That looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "cancel this appointment please",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "when is good friday?",
    "parse": "(Yield (NextHolidayFromToday (Holiday.GoodFriday)))"
  },
  {
    "original_sentence": "it's fine",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "put the meeting with danny",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"danny\"))))))))))"
  },
  {
    "original_sentence": "select first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "put meeting with vivo and apple",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"vivo\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"apple\")))))))))))"
  },
  {
    "original_sentence": "When is Apple Appreciation Day?",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "I need to add a meeting with Janet for next Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janet\")))))))))))"
  },
  {
    "original_sentence": "Yes the meeting at 1 works",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thank you. Do I have any meetings with John this week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))) (ThisWeek))))"
  },
  {
    "original_sentence": "Add meeting with Jenny's boss Thursday at 2pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jenny\"))))))))))))"
  },
  {
    "original_sentence": "WHAT A PLAN SATURDAY?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Cancel Hike to the moon on Saturday at 10:00 am.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 10L)) (Event.subject_? (?~= \"Hike to the moon\"))))))))))"
  },
  {
    "original_sentence": "That is correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What else is scheduled Saturday",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "I'll be at the comedy festival with susan and joan from friday to saturday.",
    "parse": "(let (x0 (NextDOW (Friday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"comedy festival\")) (Event.start_? (DateTime.date_? (?= x0)))) (Event.end_? (DateTime.date_? (?= (nextDayOfWeek x0 (Saturday)))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"susan\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"joan\")))))))))))))"
  },
  {
    "original_sentence": "Sweet",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need a paint balling event from the 18 to the 23",
    "parse": "(let (x0 (nextDayOfMonth (Today) 18L)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"paint balling\")) (Event.start_? (DateTime.date_? (?= x0)))) (Event.end_? (DateTime.date_? (?= (nextDayOfMonth x0 23L)))))))))"
  },
  {
    "original_sentence": "Yes, paint balling will be fun.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Actually, I want to make a trip to Disneyland with my family from the 19th to the 25th.",
    "parse": "(let (x0 (nextDayOfMonth (Today) 19L)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"trip to Disneyland with my family\")) (DateAndConstraint x0 (nextDayOfMonth x0 25L)))))))"
  },
  {
    "original_sentence": "Can you schedule a meeting with Harry, Mary and Carey to discuss the budget at Panera on Friday at 12?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"discuss the budget\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 12L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Panera\")))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harry\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carey\"))))))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "schedule a meeting with Jim and Sarah tonight to discuss employee reviews",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"discuss employee reviews\")) (Event.start_? (DateTimeConstraint (Night) (Today)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\"))))))))))))"
  },
  {
    "original_sentence": "First.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please update the time for my event \"discuss the budget\" so that it is scheduled for 2:00 pm instead",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"discuss the budget\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Create an event for a family BBQ this weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"family BBQ\")) (Event.start_? (DateTime.date_? (ThisWeekend)))))))"
  },
  {
    "original_sentence": "I don't like the times.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Let's make family bbq at 1 tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"family bbq\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "Nah, let's change the arrival to 2.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Change the end time to 8PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "who are Penny?",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Penny\")))))))"
  },
  {
    "original_sentence": "What is Penny's number?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Penny\"))))))))"
  },
  {
    "original_sentence": "Can you cancel my meeting for tomorrow?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great job",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Let's make an appointment with Jen at 4.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jen\")))))))))))"
  },
  {
    "original_sentence": "No, make it an hour",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "send a message to sandy called \"come so as possible\"",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "make an event for monday at 5pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "it'll be a 45 minute appointment",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toMinutes 45))))))"
  },
  {
    "original_sentence": "This looks much better",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, now can you delete whatever I have at this time friday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (DateTime.time (Now))) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Cancel my appointment for todays dentist appointment at 2pm.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 2L)) (Event.subject_? (?~= \"dentist appointment\"))))))))))"
  },
  {
    "original_sentence": "Yes please cancel the 2 pm dentist appointment for today",
    "parse": "(Yield (Execute (ConfirmDeleteAndReturnAction (& (Event.subject_? (?~= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Can you create a dentist appointment a Dr. Bob's office on thursday at 1pm for 3 hours",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 1L))))) (Event.duration_? (?= (toHours 3)))) (Event.location_? (?= (LocationKeyphrase.apply \"Dr. Bob's office\")))))))"
  },
  {
    "original_sentence": "Can you update the dentist appointment with Dr. Bob to 3:00 PM instead?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Yes, that looks good thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add parent teach conference to my calendar on Friday at 1:00pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"parent teach conference\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "make it parent teacher conference",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"parent teacher conference\")))))"
  },
  {
    "original_sentence": "Make it 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Add book club meeting for this saturday at noon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"book club meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (Noon))))))))"
  },
  {
    "original_sentence": "make it book club meeting",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"book club meeting\")))))"
  },
  {
    "original_sentence": "Do I have anything scheduled later today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventForRestOfToday (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Cancel any events that I have tomorrow",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "ok cancel any events today",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "put meeting with roger and racoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"roger\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"racoon\")))))))))))"
  },
  {
    "original_sentence": "please conform second meeting with roger at 10:00 AM - 10:30 AM UTC",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Create event with Francine tomorrow at 2:00am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Francine\")))))))))))"
  },
  {
    "original_sentence": "Where is my event happening around Wednesday 6 pm",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRangeDateTime (^(Event) EmptyStructConstraint) (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 6L)))))))))"
  },
  {
    "original_sentence": "Postpone it to thursday around 5 PM",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Thursday)) (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "Yes, the first one. Also, can you schedule a manicure for tomorrow around 3 pm?",
    "parse": "(do (Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"manicure\")) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)))))))))"
  },
  {
    "original_sentence": "set up a client review with Abby tomorrow at 2:00 pm. We need a room",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"client review\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.location_? (roomRequest))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "Looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make the room on client review : Berkeley",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"client review\")))))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Berkeley\")) (roomRequest))))))"
  },
  {
    "original_sentence": "Yes it is.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need a conference room for my department meeting on the 29th at 11 am. Make it at City Center.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"department meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 29L) (NumberAM 11L))))) (Event.location_? (& (?= (LocationKeyphrase.apply \"City Center\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "Find me 45 minutes for a meeting with Kay on Friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))) (Event.duration_? (?= (toMinutes 45)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kay\")))))))))))"
  },
  {
    "original_sentence": "those times are too early",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Make the start time 2:30 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinutePm 2L 30L)))))))"
  },
  {
    "original_sentence": "cancel the next meeting with Williamson",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Williamson\")))) 1L)))))"
  },
  {
    "original_sentence": "ok thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I have a ski trip this winter with abby and jake",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"ski trip\")) (Event.start_? (DateTime.date_? (SeasonWinter)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"abby\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jake\"))))))))))))"
  },
  {
    "original_sentence": "Actually it should be spring",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (SeasonSpring))))))"
  },
  {
    "original_sentence": "looks great!",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Add an appointment for January 31st at 8am for a Dentist appointment and set a reminder six months later for a follow up Dentist appointment and set a reminder one day before the first appointment with an alarm",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I need you to delete my first event in the spring.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (SeasonSpring)) 1L)))))"
  },
  {
    "original_sentence": "Yuppers",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you find me my events last march?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofPreviousMonth (March)))))) 0L))"
  },
  {
    "original_sentence": "Thanks so much! Do you know if I had any events last August?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofPreviousMonth (August)))))) 0L))"
  },
  {
    "original_sentence": "What about Events just last month?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofLastMonth)))))"
  },
  {
    "original_sentence": "cancel all of my meetings next Friday i am taking the day off",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "schedule a conference with Mac and Sully tomorrow at 12 to discuss plan",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"conference\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 12L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mac\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sully\"))))))))))))"
  },
  {
    "original_sentence": "yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you make that an hour?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Yes it is what I want",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can I make a doctor's appointment with my cardiologist for 4pm on Saturday?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "The duration should be 2 hours.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "I am going to Friar Tucks for dinner Thursday at 4:30 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinutePm 4L 30L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Friar Tucks\")))))))"
  },
  {
    "original_sentence": "Do I have a soccer practice tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"soccer practice\")))))) 0L))"
  },
  {
    "original_sentence": "Is there soccer practice next week too?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"soccer practice\")) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Set the events for the soccer practice on saturday",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"soccer practice\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Saturday)))))))))"
  },
  {
    "original_sentence": "Will I be walking in the Park with Angela this weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (& (Event.subject_? (?~= \"walking\")) (Event.location_? (?= (LocationKeyphrase.apply \"the Park\")))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Angela\"))))) (ThisWeekend))))) 0L))"
  },
  {
    "original_sentence": "Is there a meeting with Cynthia at the restaurant?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \"the restaurant\"))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cynthia\")))))))) 0L))"
  },
  {
    "original_sentence": "I need to delete my Dinner with Bob on Friday at 8pm.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 8L)) (& (Event.subject_? (?~= \"Dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))))))))))"
  },
  {
    "original_sentence": "Do I have anything else on friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Schedule coffee with Bob on Saturday at 10 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"coffee\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 10L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))))))))"
  },
  {
    "original_sentence": "When is my meeting with John?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))"
  },
  {
    "original_sentence": "Have the meeting until 2:30 instead",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 2L 30L)))))))"
  },
  {
    "original_sentence": "Yes, do I have anything for Sunday?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Add Make pies to my schedule on Friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Make pies\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "Please cancel my date with Alexandria that was coming up this Tuesday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (& (Event.subject_? (?~= \"date\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alexandria\")))))))))))))"
  },
  {
    "original_sentence": "Yes it's good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Find my next event with Alexandria on a Tuesday afternoon after that one.",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "Add lunch with Abby a week later",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (NextWeekList)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "The first one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can rid of the hair appointment from Monday as I canceled it.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Monday)) (Event.subject_? (?~= \"hair appointment\"))))))))))"
  },
  {
    "original_sentence": "Yes that's right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you remove my meeting from yesterday? Something came up and I couldn't attend.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Yesterday) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "No it wa at 10 am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "Looks great thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "remember to go buy some nike on Tuesday",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Set a reminder to buy turkey on Thanksgiving Day.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"buy turkey\")) (Event.start_? (DateTime.date_? (?= (NextHolidayFromToday (Holiday.Thanksgiving)))))))))"
  },
  {
    "original_sentence": "Dog grooming appointment on thursday at 1pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dog grooming appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "Sure does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please move dog grooming to 3pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dog grooming\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Great - please block out the remainder of the day after that.",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (adjustByPeriod (DateTime.date (Event.end (^(Dynamic) item x0))) (toDays 1)) (toDays 1)))))))"
  },
  {
    "original_sentence": "work Monday at 8am ending at 4pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"work\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L)))))))))"
  },
  {
    "original_sentence": "After work I think set a event for dinner at 5 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "When does my dentist appointment happen?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\")))))))"
  },
  {
    "original_sentence": "Book an hour meeting tomorrow at 10:00am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 10L)))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Cancel the meeting with Brenda and her boss today.",
    "parse": "(let (x0 (PersonName.apply \"Brenda\")) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))) (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "yes thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Okay, thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a team meeting on Friday at 7:45 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteAm 7L 45L))))))))"
  },
  {
    "original_sentence": "Be sure to invite my co-managers.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "cancel the team meeting",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"team meeting\")))))))))"
  },
  {
    "original_sentence": "Yes, that's the one.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Will it be hot in Shenzhen on March 10th at noon?",
    "parse": "(Yield (IsHot (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Shenzhen\"))) (?= (DateAtTimeWithDefaults (MD 10L (March)) (Noon))))))"
  },
  {
    "original_sentence": "Can you add a meeting with clients on the same date and time?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "what Do I have earlier today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "What event did I have earlier today that was at Grand Sierra Resort?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \"Grand Sierra Resort\"))) (EventBeforeDateTime (Now) (EventOnDate (Today) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "What did I have earlier today that was at Claim Jumper's",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \"Claim Jumper's\"))) (EventBeforeDateTime (Now) (EventOnDate (Today) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Set me as busy for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))"
  },
  {
    "original_sentence": "Yes, the top",
    "parse": "(Yield (Execute (ChooseCreateEvent (TopResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "REtry that",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "Now make a party and invite my team",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"party\")) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Schedule the second one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please remove \"Jessica's Baby Shower\" from my schedule",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Jessica's Baby Shower\")))))))))"
  },
  {
    "original_sentence": "Set my January 1 status as out of office.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (MD 1L (January)))))))"
  },
  {
    "original_sentence": "put gym down at 4pm tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"gym\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Make a nail appointment with Paulette at Hair Affair for me, Satuday at 3.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"nail appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 3L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Hair Affair\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paulette\")))))))))))"
  },
  {
    "original_sentence": "move nail appointment from 3pm to 5pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.subject_? (?~= \"nail appointment\")) (NumberPM 3L)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "Thank you. Do I have dinner with Rachel down for 7:30 PM?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (NextTime (HourMinutePm 7L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rachel\"))))))))))"
  },
  {
    "original_sentence": "Can you change the name of my appointment to Nails.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"Nails\")))))"
  },
  {
    "original_sentence": "may i help you",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "What is the link to the Haru in Reno website?",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Haru in Reno\"))))))"
  },
  {
    "original_sentence": "Website of McHuston Booksellers & Irish Bistro in Broken Arrow",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"McHuston Booksellers & Irish Bistro in Broken Arrow\"))))))"
  },
  {
    "original_sentence": "Does Ruby Steakhouse in Reno have a website?",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Ruby Steakhouse in Reno\"))))))"
  },
  {
    "original_sentence": "Accept my Friday event and respond with, \"I might show up late depending on how my meeting goes.",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I might show up late depending on how my meeting goes\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Actually, send the message: \"I will be thirty minutes late, but I will be in attendance.\"",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(RespondComment) AlwaysTrueConstraint)) (intension (RespondComment.apply \"i will be thirty minutes late, but i will be in attendance\")))))"
  },
  {
    "original_sentence": "Please decline the Interview",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Interview\"))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Actually, send the message: \"I didn't want to work there\"",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(RespondComment) AlwaysTrueConstraint)) (intension (RespondComment.apply \"I didn't want to work there\")))))"
  },
  {
    "original_sentence": "That might be too aggressive. Change it to \"Sorry, something came up and I can't make it.\"",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(RespondComment) AlwaysTrueConstraint)) (intension (RespondComment.apply \"Sorry, something came up and I can't make it.\")))))"
  },
  {
    "original_sentence": "please erase my today evening dinner",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"dinner\"))) (Evening)))))))))"
  },
  {
    "original_sentence": "Yes, delete that",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have anything after 6pm on Tuesday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint) (NumberPM 6L))))) 0L))"
  },
  {
    "original_sentence": "Can you move my date night on tomorrow to May 20",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?= \"date night\")) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestMonthDayToDate (Day.apply 20L) (May) (DateTime.date (Event.start x0))))))))))"
  },
  {
    "original_sentence": "Actually, i meant my hangout brunch",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (Event.subject_? (?~= \"hangout brunch\")))))"
  },
  {
    "original_sentence": "Can you update my shopping Event to be next Monday?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"shopping\")))))) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))))))"
  },
  {
    "original_sentence": "Oh wait I actually meant retail therapy",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (Event.subject_? (?~= \"retail therapy\")))))"
  },
  {
    "original_sentence": "Perfect, that looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you change my Event on 20, to start tomorrow",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 20L) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "oh oops i meant the one on May 21",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (EventOnDate (MD 21L (May)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Show as busy until 5pm today.",
    "parse": "(let (x0 (Now)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.showAs_? (?= (ShowAsStatus.Busy))))))))"
  },
  {
    "original_sentence": "It should start at 12:01 AM.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 12L 1L)))))))"
  },
  {
    "original_sentence": "perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cancel my meeting with Elizabeth today.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elizabeth\"))))))))))))"
  },
  {
    "original_sentence": "Please also cancel my meeting with Frank on Friday, May 1st.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 1L (May)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Frank\"))))))))))))"
  },
  {
    "original_sentence": "yes, the time not suitable.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "schedule dinner for the weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTime.date_? (ThisWeekend)))))))"
  },
  {
    "original_sentence": "I would prefer it not be on the weekend",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "do the second one. And can we schedule a breakfast for sunday?",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"breakfast\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday))))))))))"
  },
  {
    "original_sentence": "Can you move it so it's not on the weekend?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "yes the second option. Can you schedule Pastry Baking for sunday?",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Pastry Baking\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday))))))))))"
  },
  {
    "original_sentence": "How about you change it to not be on the weekend?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "When is Easter Monday?",
    "parse": "(Yield (NextHolidayFromToday (Holiday.EasterMonday)))"
  },
  {
    "original_sentence": "What's going on right now? Like right now.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (Now) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Coral Blue",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Coral Blue\")))))))"
  },
  {
    "original_sentence": "Maylin Storm",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Maylin Storm\")))))))"
  },
  {
    "original_sentence": "Skye Willow",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Skye Willow\")))))))"
  },
  {
    "original_sentence": "Rumi Sage",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rumi Sage\")))))))"
  },
  {
    "original_sentence": "Zen Ren",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Zen Ren\")))))))"
  },
  {
    "original_sentence": "Please fix the my doctor appointment in some cafe places",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Make sure my doctor appointment is set.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"doctor appointment\")))))"
  },
  {
    "original_sentence": "The bottom one is correct.",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks can you tell me what meetings I have after that",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to schedule a brunch meeting with Jen on Wednesday at 11:00 am for 1 hour.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"brunch meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 11L))))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jen\")))))))))))"
  },
  {
    "original_sentence": "yeah that's right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I'd like to know the weather for Monday's outdoor board meeting.",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"outdoor board meeting\"))))))))"
  },
  {
    "original_sentence": "i need to know the weather at the Lake Day",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Lake Day\")))))))"
  },
  {
    "original_sentence": "What will the weather be like for Drink Day?",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Drink Day\")))))))"
  },
  {
    "original_sentence": "Can you find 30 minutes this evening to give Jim a promotion",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"give Jim a promotion\")) (Event.start_? (DateTimeConstraint (Evening) (Today)))) (Event.duration_? (?= (toMinutes 30)))))))"
  },
  {
    "original_sentence": "The latest works.",
    "parse": "(Yield (Execute (ChooseCreateEvent (Latest) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Find 45 minutes for Jims promotion this evening",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Jims promotion\")) (Event.start_? (DateTimeConstraint (Night) (Today)))) (Event.duration_? (?= (toMinutes 45)))))))"
  },
  {
    "original_sentence": "The first option is good.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Find 2 hours for a BBQ Lunch at home next Saturday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"BBQ Lunch\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))) (Event.duration_? (?= (toHours 2)))) (Event.location_? (?= (LocationKeyphrase.apply \"home\")))))))"
  },
  {
    "original_sentence": "yes choose the latest one",
    "parse": "(Yield (Execute (ChooseCreateEvent (Latest) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please update my dentist appointment to a time not on the weekend.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Alright let's schedule it for the 27th.",
    "parse": "(Yield (Execute (ChooseUpdateEventFromConstraint (Event.start_? (DateTime.date_? (Date.day_? (?= (Day.apply 27L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make sure you also change my monthly checkup to not the weekend as well",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"monthly checkup\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "i also need to change Download Tinder to not be on the weekend",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Download Tinder\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "I really would love you please Mr to accept my meeting tomorrow",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Accept the invitation to the 2 pm meeting on Tuesday",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 2L)) (^(Event) EmptyStructConstraint))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "could you decline the Ski Party.",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Ski Party\"))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "How's the weather where you are?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Is it raining?",
    "parse": "(Yield (IsRainy (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))"
  },
  {
    "original_sentence": "Is it sunny?",
    "parse": "(Yield (IsSunny (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "When will it start to rain?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "What is the weather like in San Francisco?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"San Francisco\"))) (?= (Now))))"
  },
  {
    "original_sentence": "What is the hottest day of the year in Oregon",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "What time is sunset in portland",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunsetTime) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"portland\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "whats your name",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "how cold is it",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))"
  },
  {
    "original_sentence": "how do i end this",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Move my lunch date with Greg, Danny and Connor to next Thursday at 12:00.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch date\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Greg\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Danny\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Connor\")))))))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "Amazing job. Also add Kara to the mix.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kara\"))))))))))"
  },
  {
    "original_sentence": "Can you add Kara to the list of people?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kara\"))))))))))"
  },
  {
    "original_sentence": "Can you make a new event for Friday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "bottom one is ok and name it as lunch appointment with boss.",
    "parse": "(do (Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"lunch appointment with boss\"))))))"
  },
  {
    "original_sentence": "hello how may i heip you",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "I would like to delete my event \"4th of July bash\" from my Calendar.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"4th of July bash\")))))))))"
  },
  {
    "original_sentence": "correct",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When was my sales conference last month?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"sales conference\")) (FullMonthofLastMonth)))))))"
  },
  {
    "original_sentence": "Please delete the sales conference with Bob and his supervisor on June 12th at 4 PM",
    "parse": "(let (x0 (PersonName.apply \"Bob\")) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (MD 12L (June)) (NumberPM 4L)) (& (Event.subject_? (?~= \"sales conference\")) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))))))))))))"
  },
  {
    "original_sentence": "Delete my doctors appointment for 3pm on Friday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L)) (Event.subject_? (?~= \"doctors appointment\"))))))))))"
  },
  {
    "original_sentence": "Thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have any other appointments on friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "Mark me as out of office friday",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "I have work from 9 am to 9 pm tomorrow at the office. Please add that to my calendar.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"work\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 9L))))) (Event.location_? (?= (LocationKeyphrase.apply \"the office\"))))))))"
  },
  {
    "original_sentence": "Can you add at hair appointment to my schedule on Saturday from 10:30 am to 11:30 am at Hair Studios",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (HourMinuteAm 10L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"hair appointment\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinuteAm 11L 30L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Hair Studios\"))))))))"
  },
  {
    "original_sentence": "I also need to put a party down for Saturday night at 10 pm. It's at Mark's house.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"party\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 10L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Mark's house\")))))))"
  },
  {
    "original_sentence": "Can you put down that it's going to start at 11:30 actually?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 11L 30L)))))))"
  },
  {
    "original_sentence": "I need yoga put on my schedule tonight at 8 pm at Corepower southloop",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"yoga\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 8L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Corepower southloop\")))))))"
  },
  {
    "original_sentence": "Can you move that to tomorrow actually?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Set an event for 10 am tomorrow, \"Meet with tax guy\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Meet with tax guy\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "On Saturday at 10 pm, can you add the appointment called \"Rave\"?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Rave\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 10L))))))))"
  },
  {
    "original_sentence": "I think I want to cancel the Rave appointment.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Rave\")))))))))"
  },
  {
    "original_sentence": "Add a doctor's appointment to my calendar for Monday at 11 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "What time is my dentist appointment next week?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"dentist appointment\")) (NextWeekList)))))))"
  },
  {
    "original_sentence": "Create an appointment at 3PM with Jim to go over documents and remind me an hour before so I have time to travel to work from my house.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Change dinner on Friday to be at Fiorentinos at 7pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"dinner\"))))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))) (Event.location_? (?= (LocationKeyphrase.apply \"Fiorentinos\")))))))"
  },
  {
    "original_sentence": "Yeah looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok ,change it on 8 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "Yes, now extend it by an hour.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (addDurations (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint)))) (toHours 1)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cancel any appointments on Friday afternoon after 1:00 pm.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "What day last month did I go to the doctor?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"go to the doctor\")) (FullMonthofLastMonth)))))))"
  },
  {
    "original_sentence": "Was there a dentist appointment last month also?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"dentist appointment\")) (FullMonthofLastMonth))))) 0L))"
  },
  {
    "original_sentence": "Ok delete that appointment.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "No, I need to go.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "add it for friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "find the next lunch",
    "parse": "(Yield (FindNumNextEvent (Event.subject_? (?~= \"lunch\")) 1L))"
  },
  {
    "original_sentence": "Change that time to 1 pm to 2 pm.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (Event.end_? (DateTime.time_? (?= (DateTime.time (TimeAfterDateTime (Event.start x0) (NumberPM 2L)))))))))))"
  },
  {
    "original_sentence": "That works.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you hange the end time of that to 1:30",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 1L 30L)))))))"
  },
  {
    "original_sentence": "Yup that will work.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add a sports meeting with Lebron on Sunday at 12.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"sports meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 12L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lebron\")))))))))))"
  },
  {
    "original_sentence": "Did I have anything planned for today",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Do i have any events tomorrow",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Are there any meetings with Peter scheduled next month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Peter\")))) (FullMonthofMonth (NextMonth)))))) 0L))"
  },
  {
    "original_sentence": "DO I have training next month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"training\")) (FullMonthofMonth (NextMonth)))))) 0L))"
  },
  {
    "original_sentence": "Will I get my haircut next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"haircut\")) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "can you please schedule a meeting for 10am with it",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "Yes my meeting/appointment is at 10:00 am tomorrow, May 14.",
    "parse": "(Yield (Execute (ConfirmCreateAndReturnAction (Event.start_? (?= (DateAtTimeWithDefaults (MD 14L (May)) (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "That's great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "make a apportionment tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Can you choose the second one please",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "create meeting with my boss",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))))))"
  },
  {
    "original_sentence": "The second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "second one is the best.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule gym time with Mary tomorrow at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"gym time\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\")))))))))))"
  },
  {
    "original_sentence": "Yes. Who's logged in now?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CurrentUser)))"
  },
  {
    "original_sentence": "I have a meeting with Fiona next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fiona\")))))))))))"
  },
  {
    "original_sentence": "the firs one",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "the first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "yes, but add an hour",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (addDurations (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint)))) (toHours 1)))))))"
  },
  {
    "original_sentence": "add an hour to the meeting",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (addDurations (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint)))) (toHours 1)))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "add an hour to the meeting with Fiona",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fiona\")))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toHours 1))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have any meetings in October with Jimmy?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jimmy\")))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (October))))))) 0L))"
  },
  {
    "original_sentence": "Well, do I have any meetings with him in two months?",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "How about november?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (November))))))"
  },
  {
    "original_sentence": "Okay. What about December?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (December))))))"
  },
  {
    "original_sentence": "What do I have Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "can you cancel this event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Let's go ahead and cancel this",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Yes cancel it",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "On May 31st, what do I have planned?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 31L (May)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "can you remove an event from my calendar",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "create an event",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "the first",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "can you change the name",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "no",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "create an event for next thursday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday))))))))"
  },
  {
    "original_sentence": "make the event called birthday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"birthday\")))))"
  },
  {
    "original_sentence": "mark that down as joe's birthday for next wednesday instead",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.subject_? (?= \"joe's birthday\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday)))))))))"
  },
  {
    "original_sentence": "My mother wants to have lunch tomorrow at 1 pm.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Can you find appointments with Sharon?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sharon\"))))))"
  },
  {
    "original_sentence": "I'm going to need to cancel that now.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "cancel request",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Cancel my meeting at 4",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 4L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "What time is my meeting with Andrew today?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Andrew\"))))))))))"
  },
  {
    "original_sentence": "move my meeting with andrew today at 2 to tomorrow at 2",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 2L)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"andrew\"))))))))) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "sure it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you change the location of my meeting tomorrow to the conference room on the 3rd floor instead of my office",
    "parse": "(FenceConferenceRoom)"
  },
  {
    "original_sentence": "Yes, can you add a trip to the lawyers office after my meeting with Andrew?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"trip to the lawyers office\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Andrew\"))))))))))))))"
  },
  {
    "original_sentence": "I'll take the second one.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Create a doctor's appointment reminder for half past three today and bump the start dinner reminder up to six pm instead of five.",
    "parse": "(let (x0 (Today) x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults x0 (NumberPM 5L)) (Event.subject_? (?= \"start dinner\"))))))) (do (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults x0 (adjustByDuration (NumberPM 3L) (toHours 0.5))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x1) (Event.start_? (?= (TimeAfterDateTime (Event.start x1) (NumberPM 6L)))))))))"
  },
  {
    "original_sentence": "Is Katie's baby shower this tuesday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"Katie's baby shower\")))))) 0L))"
  },
  {
    "original_sentence": "I went shopping with Kim last monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"shopping\")) (Event.start_? (DateTime.date_? (?= (previousDayOfWeek (Today) (Monday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))))))"
  },
  {
    "original_sentence": "OK!",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need the shopping spree I had last Friday into my calendar.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"shopping spree\")) (Event.start_? (DateTime.date_? (?= (previousDayOfWeek (Today) (Friday)))))))))"
  },
  {
    "original_sentence": "Can you do the second one?",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Hello! I would like you to cancel my appointment with Sara on Tuesday at 2:00 pm",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 2L)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sara\"))))))))))))"
  },
  {
    "original_sentence": "Yes thats the one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cool. I need to make a new one for the following day.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (adjustByPeriodDuration (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply (toDays 1))))))))"
  },
  {
    "original_sentence": "Thanks. Please create a new one for the week after.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceOther))"
  },
  {
    "original_sentence": "What events do i have tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Please add Star Ship maintenance to my calendar on november 25th at 8 am with Captain Picard",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Star Ship maintenance\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 25L (November)) (NumberAM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Captain Picard\")))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "okay",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "delete event star ship maintenance on monday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (ClosestDayOfWeek (Today) (Monday)) (Event.subject_? (?~= \"star ship maintenance\"))))))))))"
  },
  {
    "original_sentence": "Yes, cancel the Star Ship maintenance at 8:00 am.",
    "parse": "(Yield (Execute (ConfirmDeleteAndReturnAction (& (Event.subject_? (?~= \"Star Ship maintenance\")) (Event.start_? (DateTime.time_? (?= (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Can you help me remember what I've got going on tomorrow after work in the evening?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (Tomorrow) (^(Event) EmptyStructConstraint) (DateTime.time (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (Event.subject_? (?~= \"work\"))) (Evening))))))))))"
  },
  {
    "original_sentence": "Please change bar fight to 10pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (Event.subject_? (?~= \"bar fight\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 10L)))))))"
  },
  {
    "original_sentence": "Much better, that'll be fun.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change the first event to 5:00 PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 1L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "Yes. Also extend it to 7 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "no thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Create a meeting for next new years even for a party at 5",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"meeting for next new years even\")) (Event.start_? (?= (NextTime (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Can you create an event on the 4th labeled appointment at 2 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 4L) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Can you make an event called Anniversary on June 2?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Anniversary\")) (Event.start_? (DateTime.date_? (?= (MD 2L (June)))))))))"
  },
  {
    "original_sentence": "Add a meeting with Lindsey in the boardroom for friday afternoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Friday)))) (Event.location_? (?= (LocationKeyphrase.apply \"the boardroom\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lindsey\")))))))))))"
  },
  {
    "original_sentence": "The second one please.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "That works just perfectly",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "set a meeting for playing with the kids at 6pm.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Where is my work meeting??",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"work meeting\")))))))"
  },
  {
    "original_sentence": "Do I have any other events there?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id x0)))) (Event.location_? (?= (Event.location x0))))))) 0L)))"
  },
  {
    "original_sentence": "i need you to move it to Seattle",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Seattle\"))))))"
  },
  {
    "original_sentence": "what else do I have there",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))) 0L))"
  },
  {
    "original_sentence": "Where is the Relax on the Beach event located?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Relax on the Beach\")))))))"
  },
  {
    "original_sentence": "can you tell me what else I have in Hawaii?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Hawaii\"))))))"
  },
  {
    "original_sentence": "HELLO, I NEED YOU TO HELP ME SEARCH AN EVENT ON THE CALENDER.",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "can you search for any meetings with Jill",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jill\"))))))"
  },
  {
    "original_sentence": "Is that a meeting with Jill?",
    "parse": "(Yield (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "remove phil",
    "parse": "(do (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"phil\"))))))))) (Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Cancel give doctors more incentives to push prescriptions",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "I need to add the dogs vet appointment to my schedule for Friday at 10 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dogs vet appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When is the cats vet appointment?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"cats vet appointment\")))))))"
  },
  {
    "original_sentence": "Can you cancel that?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "an appointment for tomorrow at 6 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 6L)))))))"
  },
  {
    "original_sentence": "Please move the appointment to 7:30",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 7L 30L)))))))"
  },
  {
    "original_sentence": "Cancel 6 am appointment. Make an appointment for 7:30 and schedule a meeting for 9",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "All of my meetings are with Japan and should be scheduled for the evening, not the morning. Please update them.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Can you add a meeting with Jim to my calendar at 10 am tomorrow and make it in Jim's office",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 10L)))) (Event.location_? (?= (LocationKeyphrase.apply \"Jim's office\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))))))))))"
  },
  {
    "original_sentence": "That looks fine",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Where is the weezer concert this week? I think it's thursday",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (DowOfWeekNew (Thursday) (ThisWeek)) (Event.subject_? (?~= \"weezer concert\"))))))))"
  },
  {
    "original_sentence": "What is the address there?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "What Events do I have in the Spring?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (SeasonSpring))))"
  },
  {
    "original_sentence": "Could you add a new Event for the Spring?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (SeasonSpring))))))"
  },
  {
    "original_sentence": "The first one works fine I guess",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Do I have an event in the fall?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (SeasonFall))))) 0L))"
  },
  {
    "original_sentence": "Do I have a doctor's appointment this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctor's appointment\")) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "How about tomorrow?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "When do I have my doctor's appointment?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor's appointment\")))))))"
  },
  {
    "original_sentence": "please change the event 12.30 pm to 1.00 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (TimeToTime (HourMinutePm 12L 30L) (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "What about the following week?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (WeekOfDateNew (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toWeeks 1)))))))"
  },
  {
    "original_sentence": "What is the cost of food at KFC in Miami?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"KFC in Miami\"))))))"
  },
  {
    "original_sentence": "Also how much is Adega Grill in Newark?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Adega Grill in Newark\"))))))"
  },
  {
    "original_sentence": "Which one is closer to the train station?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"P.F. Chang's in Bellevue\"))))))"
  },
  {
    "original_sentence": "Can you schedule a meeting in the conference room this Friday from 10 AM til 11 AM?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 11L))))) (Event.location_? (?= (LocationKeyphrase.apply \"the conference room\"))))))))"
  },
  {
    "original_sentence": "Yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I'd like to add a lunch at 2pm tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Sounds good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "great but have it end at 3 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Can you delete the event \"make soup\" tonight",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"make soup\"))) (Night)))))))))"
  },
  {
    "original_sentence": "Am I busy on Friday this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Make event to go to girlfriend house on Sunday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go to girlfriend house\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))))))"
  },
  {
    "original_sentence": "create movie night monday at 8",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"movie night\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "looks better",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add Jess to my movie night",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"movie night\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jess\"))))))))))"
  },
  {
    "original_sentence": "can you add jess to movie night?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"movie night\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jess\"))))))))))"
  },
  {
    "original_sentence": "ok that's fine",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to change a events in my calendar",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "you just removed the old events from my calendar",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "update me a new events in that calendar",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "create a new event",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "ok help me with the modified dates",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "no that's all",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Thanks for your he;p",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Yes. I want know today's news?",
    "parse": "(FencePlaces)"
  },
  {
    "original_sentence": "Where is my lunch meeting friday?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"lunch meeting\"))))))))"
  },
  {
    "original_sentence": "Can I dress casually for Outback Steakhouse?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Do they have outdoor dining available?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.OutdoorDining) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Do they have food for kids?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "out of the office friday at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L)))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
  },
  {
    "original_sentence": "At 7 pm I am going to the festival so put that on the schedule.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"going to the festival\")) (Event.start_? (?= (NextTime (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "please check at see if the appointment for tomorrow has been canceled",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Do I have anything on the calendar for March 2nd 2019",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MDY 2L (March) (Year.apply 2019L)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Do I have any dr appointments coming up?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dr appointments\"))))) 0L))"
  },
  {
    "original_sentence": "Move my meeting with John to Friday the 22nd at 1 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 22L) (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Block out 2 hours for the meeting.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Mark me as out of office for that 2 hours.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))))))"
  },
  {
    "original_sentence": "I need to add a meeting to my calendar.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "When is thanksgiving?",
    "parse": "(Yield (NextHolidayFromToday (Holiday.Thanksgiving)))"
  },
  {
    "original_sentence": "I need to set up a doctor's appointment next week with Barack Obama",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (DateTime.date_? (NextWeekList)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\")))))))))))"
  },
  {
    "original_sentence": "No, can you schedule this for Thursday instead of Monday?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Thursday))))))))"
  },
  {
    "original_sentence": "Yes, can you schedule the second one? I need to be reminded beforehand to prepare.",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (FenceReminder))"
  },
  {
    "original_sentence": "No, I only need the first one.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please remove that appointment",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What time is Eli Elliots's Birthday Extravaganza?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Eli Elliots's Birthday Extravaganza\")))))))"
  },
  {
    "original_sentence": "Okay, do I have any events after this?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)))))"
  },
  {
    "original_sentence": "alright, now i need a Rocket League Champion Series on the 10th around 3 for 2 hours",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Rocket League Champion Series\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 10L) (NumberPM 3L))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "Yes, it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Okay. When am I going to outer space on ice?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"outer space on ice\")))))))"
  },
  {
    "original_sentence": "Hi, please create an event on Sunday for church",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"church\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))))))"
  },
  {
    "original_sentence": "set it for not on the weekend",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Ya the first one is good.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make me an event for this weekend.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (ThisWeekend))))))"
  },
  {
    "original_sentence": "26 IS NOT OK. It actually can't be over the weekend.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "also i need an event called Brunch Time next weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Brunch Time\")) (Event.start_? (DateTime.date_? (NextWeekend)))))))"
  },
  {
    "original_sentence": "nope cant be on the weekend",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Let's schedule a meeting with Justin on Sunday morning please.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Sunday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Justin\")))))))))))"
  },
  {
    "original_sentence": "Change Justin Timberlake to Britney Spears",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Britney Spears\"))))))"
  },
  {
    "original_sentence": "Set it for 9:30 please.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 9L 30L)))))))"
  },
  {
    "original_sentence": "Please make it 9:30 to 11:00",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (HourMinuteAm 9L 30L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "The first one looks good",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I have a meeting with Andy on Tuesday at 1 pm that will go until 1:45 pm in Andy's office",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 1L 45L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Andy's Office\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Andy\"))))))))))))"
  },
  {
    "original_sentence": "Yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "create chess tournament on monday in chicago",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"chess tournament\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))) (Event.location_? (?= (LocationKeyphrase.apply \"chicago\")))))))"
  },
  {
    "original_sentence": "how is the weather in chicago",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"chicago\"))) (?= (Now))))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Put me down for meeting Lori at Epcot Saturday at 11 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"meeting Lori\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 11L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Epcot\")))))))"
  },
  {
    "original_sentence": "What's the weather at Epcot center going to be then?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Epcot center\"))) (?= (Execute (refer (extensionConstraint (^(DateTime) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "What about the next day for universal Studios?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"universal Studios\"))) (DateTime.date_? (?= (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1))))))"
  },
  {
    "original_sentence": "Cancel everything tomorow",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Who am I logged in as?",
    "parse": "(Yield (CurrentUser))"
  },
  {
    "original_sentence": "What is his phone number",
    "parse": "(Yield (Person.phoneNumber (CurrentUser)))"
  },
  {
    "original_sentence": "Add him to my meeting friday",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "what is my tomorrow event on my calender",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Can you tell me what events I have with Howie this week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Howie\")))) (ThisWeek))))"
  },
  {
    "original_sentence": "What about with Harry?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harry\"))))))"
  },
  {
    "original_sentence": "What events on Thursday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "thanks im done",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What time is my eye appointment on Monday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"eye appointment\"))))))))"
  },
  {
    "original_sentence": "Thanks, can you add a meeting with Zelda at 4:30 for 20 minutes on Monday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (HourMinutePm 4L 30L)))) (Event.duration_? (?= (toMinutes 20)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Zelda\")))))))))))"
  },
  {
    "original_sentence": "I am waiting for that meeting.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "when is my next meeting with Albert",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Albert\")))) 1L)))"
  },
  {
    "original_sentence": "add a meeting with albert upcoming monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"albert\")))))))))))"
  },
  {
    "original_sentence": "I would like to search for my birthday party for this Saturday at 3pm.",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 3L)) (Event.subject_? (?~= \"birthday party\")))))))"
  },
  {
    "original_sentence": "cancel it",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Plan an event in my calendar called \"Bob's 15th Birthday\" for this weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Bob's 15th Birthday\")) (Event.start_? (DateTime.date_? (ThisWeekend)))))))"
  },
  {
    "original_sentence": "no schedule it for a day that is not the weekend",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Schedule dinner this weekend.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTime.date_? (ThisWeekend)))))))"
  },
  {
    "original_sentence": "Actually, I don't want this to happen during the weekend.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "I need to prepare dinner this weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"prepare dinner\")) (Event.start_? (DateTime.date_? (ThisWeekend)))))))"
  },
  {
    "original_sentence": "move it to not the weekend",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (negate (ThisWeekend)))))))"
  },
  {
    "original_sentence": "Make the lunch date with Jay on Saturday noon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch date\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (Noon))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jay\")))))))))))"
  },
  {
    "original_sentence": "Make it last for 1 hour please.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Instead it should start at 2 PM.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Nope, you need to make it begin at 1:45 PM instead.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinutePm 1L 45L)))))))"
  },
  {
    "original_sentence": "I think that will do it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "add a meeting with Barack Obama",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\"))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "when are my meetings this month",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today))))))"
  },
  {
    "original_sentence": "what is on my calander",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "program on my calendar a meeting with my whole family, to celebrate my birthday",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Cancel the meeting.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Please cancel that.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make an appointment today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Today)))))))"
  },
  {
    "original_sentence": "First option",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "what appointment is it",
    "parse": "(Yield (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Add an all day event for tomorrow called training",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"training\")) (Tomorrow)))))"
  },
  {
    "original_sentence": "perfect! thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make vacation from october 5 - 10",
    "parse": "(let (x0 (MD 5L (October))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"vacation\")) (DateAndConstraint x0 (nextMonthDay x0 (October) 10L)))))))"
  },
  {
    "original_sentence": "Awesome thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you cancel that? I just reoemebered I can't go",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Do I have any Out of Office events scheduled for next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))) 0L))"
  },
  {
    "original_sentence": "What is the other one?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "I want to delete that one.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes please.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I'm moving Tour Potential Development Sites to 3PM on March 1st.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Tour Potential Development Sites\")))))) (Event.start_? (?= (DateAtTimeWithDefaults (MD 1L (March)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Set up a dinner meeting at Golden Corral at 5pm with my grandparents.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Can you book a meeting with Greg for Thursday afternoon?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Thursday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Greg\")))))))))))"
  },
  {
    "original_sentence": "Yeah, can you book the first one at 12 pm please?",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Great, now I just need to book one more appointment at the car dealer's for Saturday at 1 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 1L)))) (Event.location_? (?= (LocationKeyphrase.apply \"car dealer's\")))))))"
  },
  {
    "original_sentence": "yeah,awesome",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "yeah,awesome",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "update my monday meeting to be on friday",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "which room is that in?",
    "parse": "(Yield (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Make an appointment with Kathy",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kathy\"))))))))))"
  },
  {
    "original_sentence": "How about next wednesday at 11.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "Yes perfect but Can you add that it is about PTA stuff?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"about PTA stuff\")))))"
  },
  {
    "original_sentence": "Good, but I think I need it to go for 45 minutes instead.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toMinutes 45))))))"
  },
  {
    "original_sentence": "Go ahead and make it last for an hour to be safe.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "put down movies with pat at 2 pm at movies",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"movies\")) (Event.start_? (?= (NextTime (NumberPM 2L))))) (Event.location_? (?= (LocationKeyphrase.apply \"movies\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Pat\")))))))))))"
  },
  {
    "original_sentence": "change subject to movies with maddison",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"movies with maddison\")))))"
  },
  {
    "original_sentence": "What am I up to on Thursday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "The first event should be 4 hours",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 1L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Event.duration_? (?= (toHours 4))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, that works better",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you tell me what is happening on December 9?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 9L (December)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Delete all events from my calendar on March 5th",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Can you see when my next meeting is?",
    "parse": "(Yield (Event.start (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))"
  },
  {
    "original_sentence": "can you cancel that for me",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Did I ever respond to the Town Hall this week?",
    "parse": "(Yield (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?= \"Town Hall\")) (ThisWeek)))))))"
  },
  {
    "original_sentence": "What time is my meeting with Dee tonight?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dee\"))))) (Night)))))))"
  },
  {
    "original_sentence": "ok make the starting time at 12.30 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 12L 30L)))))))"
  },
  {
    "original_sentence": "extend it until 1 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Yup!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you very much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What day can you get me to go see Avengers: Endgame?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"Avengers: Endgame\")))))"
  },
  {
    "original_sentence": "I'm going to the movies on Satuyrday at 7pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"movies\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "That looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Has Sam accepted the invitation for the movie yet?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"movie\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Did I accept the invite to the movies?",
    "parse": "(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"movies\"))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "I like to discuss wedding plans with Kristen Clifford on Wednesday at 1:00 pm for 1 hour.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"discuss wedding plans\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 1L))))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kristen Clifford\")))))))))))"
  },
  {
    "original_sentence": "Yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, also add the location of Patritzio's",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Patritzio's\"))))))"
  },
  {
    "original_sentence": "Great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, have a good day",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "nothing else",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Delete my lunch for Wednesday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (Event.subject_? (?~= \"lunch\"))))))))))"
  },
  {
    "original_sentence": "What do I have scheduled today at 3:00 pm?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 3L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Does Iron Gate Pizza in Cannelton have a website?",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Iron Gate Pizza in Cannelton\"))))))"
  },
  {
    "original_sentence": "Does that place have a website?",
    "parse": "(Yield (Place.url (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What's the website of Take 2: A Resonance Cafe in Tulsa?",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Take 2: A Resonance Cafe in Tulsa\"))))))"
  },
  {
    "original_sentence": "Let me know how the schedule of mine looks",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "change the days I will be at the conference with Monday through Thursday",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"conference\"))))) x1 (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Monday))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (DateTime.date_? (?= x1))) (Event.end_? (DateTime.date_? (?= (nextDayOfWeek x1 (Thursday))))))))))"
  },
  {
    "original_sentence": "Yes but the conference starts at 8 AM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "Looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I want a meeting that lasts for 2 weeks starting on the first of november.",
    "parse": "(let (x0 (MD 1L (November))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= x0))) (Event.end_? (DateTime.date_? (?= (adjustByPeriod x0 (toWeeks 2))))))))))"
  },
  {
    "original_sentence": "The 2nd one works.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "when is womens day",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"womens day\")))))))"
  },
  {
    "original_sentence": "I actually like 1-3 PM b etter",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "what are events in womens day",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "please update my events in my calender",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "please delete any events after this event",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "what do I have going on tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have anything now?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (Now) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Oh, neat! Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you tell me what business meetings I have that are not in New York?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"business meetings\")) (Event.location_? (negate (?= (LocationKeyphrase.apply \"New York\")))))))"
  },
  {
    "original_sentence": "Show me meetings that aren't in New Orleans.",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \"New Orleans\"))))))"
  },
  {
    "original_sentence": "Are there any meetings that aren't Tahoe?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \"Tahoe\"))))))"
  },
  {
    "original_sentence": "Thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have any other events planned at anywehre other than The Secret Place?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \"The Secret Place\"))))))) 0L))"
  },
  {
    "original_sentence": "What events do I have on December 17?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 17L (December)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you add an appointment called Hair on that day from 3 to 4 pm?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Hair\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L)))))))))"
  },
  {
    "original_sentence": "What events do I have on December 17?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 17L (December)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you add an appointment called Hair on that day from 3 to 4 pm?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Hair\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L)))))))))"
  },
  {
    "original_sentence": "Is thee anything on the schedule the day after that?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Can you schedule my trip to Bali in the spring?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"trip to Bali\")) (Event.start_? (DateTime.date_? (SeasonSpring)))))))"
  },
  {
    "original_sentence": "Hmm, no, it should be in the fall.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (SeasonFall))))))"
  },
  {
    "original_sentence": "Oh, my bad, I meant summer.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (SeasonSummer))))))"
  },
  {
    "original_sentence": "Yeah, the second one will do, thanks!",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Change my dentist appointment reminder from fall to spring.",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Add a dentist appointment reminder for spring, instead of fall, please.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment reminder\")) (Event.start_? (DateTime.date_? (SeasonSpring)))))))"
  },
  {
    "original_sentence": "the second option",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Have this event last one hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make an event for next Saturday called \"Happy fun time for friends.\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Happy fun time for friends\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))))))"
  },
  {
    "original_sentence": "make that for 2 hours.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "first one is perfect. fix it.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks! Schedule 2 hours on Friday, March 8 for party prep",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"party prep\")) (Event.start_? (DateTime.date_? (?= (MD 8L (March)))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "The first one will work well for me.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make a meeting with David Largenstop on the 24th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 24L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David Largenstop\")))))))))))"
  },
  {
    "original_sentence": "The first one. And make the meeting for 2 pm.",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Looks good. I also want to add the location Robata Japanese Steak House.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Robata Japanese Steak House\"))))))"
  },
  {
    "original_sentence": "Looks great. Please schedule a car to take us to that location.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceScope))"
  },
  {
    "original_sentence": "Can you add an event \"schedule a car for meeting with David Largenstop\" to my calendar with a reminder the day before?",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Tell me what event I have with Rachel next month.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rachel\")))) (FullMonthofMonth (NextMonth)))))"
  },
  {
    "original_sentence": "How about the month after that with Rachel?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toMonths 1))))))))"
  },
  {
    "original_sentence": "Or Stephanie?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Stephanie\"))))))"
  },
  {
    "original_sentence": "What events are with stephanie",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"stephanie\"))))))"
  },
  {
    "original_sentence": "And what about with steve?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"steve\"))))))"
  },
  {
    "original_sentence": "What is the location of the meeting with Felix, Heisman and Jessie?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Felix\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Heisman\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jessie\"))))))))))"
  },
  {
    "original_sentence": "Please add a budget meeting with Becky, Michelle, and Quinn tomorrow at 4:00 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"budget meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Becky\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Michelle\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Quinn\"))))))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When am I golfing with Jordan, Chad, and Jane?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"golfing\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jordan\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chad\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\")))))))))))"
  },
  {
    "original_sentence": "This event will go until 3:00 PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "What day is my dentist appointment on?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\")))))))"
  },
  {
    "original_sentence": "Make the location be at Brian Dental.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Brian Dental\"))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create a meeting with Abby today from 4 pm until the end of the day",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Today) (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (EndOfWorkDay))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))))))))"
  },
  {
    "original_sentence": "Push the meeting to last the rest of the day.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (EndOfWorkDay)))))))"
  },
  {
    "original_sentence": "Pretty good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Extend my seminar until the end of the day.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"seminar\")))))) (Event.end_? (DateTime.time_? (?= (EndOfWorkDay)))))))"
  },
  {
    "original_sentence": "Erase the event for Bug's Bunny's Baby Shower",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Bug's Bunny's Baby Shower\")))))))))"
  },
  {
    "original_sentence": "Cancel the lunch date at maria's on tuesday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (& (Event.subject_? (?~= \"lunch date\")) (Event.location_? (?= (LocationKeyphrase.apply \"maria's\"))))))))))))"
  },
  {
    "original_sentence": "Hmm actually, let's keep it, but rename it to \"Lunch and Ice Cream Date\".",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"Lunch and Ice Cream Date\")))))"
  },
  {
    "original_sentence": "Yeah, this is what I wanted.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you add dinner and drinks date to the calendar for 5 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner and drinks date\")) (Event.start_? (?= (NextTime (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "I need a vaation for next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"vaation\")) (Event.start_? (DateTime.date_? (NextWeekList)))))))"
  },
  {
    "original_sentence": "No can you provide me a day and time for Wednesday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (& (^(Date) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Wednesday))))))))"
  },
  {
    "original_sentence": "The first option works best for me.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Change the name to vacation",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"vacation\")))))"
  },
  {
    "original_sentence": "Make that an all day event.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.isAllDay_? (?= true)))))"
  },
  {
    "original_sentence": "Who has not accepted the trip to Boston?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"trip to Boston\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Who has not tentatively accepted the trip to Boston?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"trip to Boston\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Who has not declined our trip to Boston?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"trip to Boston\")))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "What day am I hiking with Chelsea?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"hiking\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chelsea\"))))))))))"
  },
  {
    "original_sentence": "Thanks, do I have anything else scheduled on that day?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Mark me as away from the office from 7AM to 4PM on Friday the 8th.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (nextDayOfMonth (Today) 8L) (NumberAM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L))))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))))))))"
  },
  {
    "original_sentence": "Yep.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Perfect thank you, please tell me what I have for Saturday.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "My best friend Kristen Clifford, and I want to go see a movie tomorrow? could you set an appointment up for 11 am?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"go see a movie\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kristen Clifford\")))))))))))"
  },
  {
    "original_sentence": "My best friend Kristen Clifford, and I want to go see a movie tomorrow, could you set an appointment up for 11 am?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"go see a movie\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kristen Clifford\")))))))))))"
  },
  {
    "original_sentence": "My best friend Kristen Clifford and I want to go see a movie tomorrow? could you set an appointment up for 11 am?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"go see a movie\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kristen Clifford\")))))))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "can you make it 8 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "Hi I need help with my calendar",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "I want to manage my personal calendar by creating an event",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "I want to shedule an appointment with Karl Boon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karl Boon\"))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I'd like for there to be an event for work lunch between 12-3pm",
    "parse": "(let (x0 (NextTime (NumberPM 12L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"work lunch\")) (Event.start_? (DateTimeAndConstraint x0 (TimeAfterDateTime x0 (NumberPM 3L)))))))))"
  },
  {
    "original_sentence": "it is the great time for the work",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Let's put dinner with kids at 7.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner with kids\")) (Event.start_? (?= (NextTime (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Correct, but add mom to the dinner",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Change the name of the event to dinner with kids and mom.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"dinner with kids and mom\")))))"
  },
  {
    "original_sentence": "How long is the meeting at the other office next month?",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "ok! what is my today event",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What about tomorrow?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "ok schedule swim team meet tomorrow 4 pm at ymca pool",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"swim team meet\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L))))) (Event.location_? (?= (LocationKeyphrase.apply \"ymca pool\")))))))"
  },
  {
    "original_sentence": "Sure thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "what time is it right now?",
    "parse": "(Yield (Now))"
  },
  {
    "original_sentence": "what is on my schedule today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What building is that in?",
    "parse": "(Yield (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "make it for an hour long",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete event \"my doctor's appointment\" next week",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"my doctor's appointment\")) (NextWeekList)))))))))"
  },
  {
    "original_sentence": "Set a new doctor's appointment for this Friday at 3 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"new doctor's appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Add an hour for reviews at 3pm today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"reviews\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "I have to update my product list tomorrow from 8 to 10 am.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"update my product list\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 10L)))))))))"
  },
  {
    "original_sentence": "Great - what else is on the plate that day?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Can you add a meeting with my client at 1:00 pm today?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Go ahead and move it to 3pm instead.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "what about later tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "make an event for tuesday at 10am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "Change title Bike Ride.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"Bike Ride\")))))"
  },
  {
    "original_sentence": "take it or leave it",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Singing lesson with Kyle Wednesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Singing lesson\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kyle\")))))))))))"
  },
  {
    "original_sentence": "I need to call my mom this afternoon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"call my mom\")) (Event.start_? (DateTimeConstraint (Afternoon) (Today)))))))"
  },
  {
    "original_sentence": "The well",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule 2 hours on Sunday starting at 7 pm for Taylor Swift Concert.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Taylor Swift Concert\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 7L))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "yaaabba daaaabaaa doooo",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "i want appointment Taylor Swift Concert in Sunday 7 Pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Taylor Swift Concert\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "are we out of the woods yet?",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "Can you make basketball practice for 3pm tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"basketball practice\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add meeting with Tiffany's manager on Thursday at 3:30 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinutePm 3L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tiffany\"))))))))))))"
  },
  {
    "original_sentence": "Add a financial planning meeting on Thursday at 3:30 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"financial planning meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinutePm 3L 30L))))))))"
  },
  {
    "original_sentence": "YEAH RIGHT",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add Hair appointment with Tiffany on the 14th at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Hair appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 14L) (Noon))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tiffany\")))))))))))"
  },
  {
    "original_sentence": "great but make it last an hour",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Find Pink Salt in Seattle for me",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Pink Salt in Seattle\")))"
  },
  {
    "original_sentence": "Do they have the facilities to accept a large group of people?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Hmmm ok, then find me Ceol in Reno for me?",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Ceol in Reno\")))"
  },
  {
    "original_sentence": "are they good for large groups?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "I would like to schedule a bike ride at Central park at 4:30 pm on Saturday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"bike ride\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (HourMinutePm 4L 30L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Central park\")))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you tell me the weather I have a concert on Friday at 7 pm near the central park.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "update my work meeting to 2 hours instead of 1 last week",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"work\")) (Event.duration_? (?= (toHours 1)))) (LastWeekNew)))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "That looks good to me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great, thanks!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I like to add to the schedule work lunch on Thursday at Chucky Cheese at 12:30 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"work lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinutePm 12L 30L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Chucky Cheese\")))))))"
  },
  {
    "original_sentence": "Good. Change the location to Chuck E Cheese.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Chuck E Cheese\"))))))"
  },
  {
    "original_sentence": "Find me a day with more than three events and cancel them",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Find my next scheduled event.",
    "parse": "(Yield (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L))"
  },
  {
    "original_sentence": "Find me 30 minutes to talk to my mom tomorrow",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Find me 30 minutes for Long Talk with Madeline tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Long Talk\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.duration_? (?= (toMinutes 30)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Madeline\")))))))))))"
  },
  {
    "original_sentence": "Find me 30 minutes for Talking on the Phone tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Talking on the Phone\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.duration_? (?= (toMinutes 30)))))))"
  },
  {
    "original_sentence": "help me by arranging an event with metu",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"metu\"))))))))))"
  },
  {
    "original_sentence": "umm i need to think about it",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "I think I'll take the one on Wednesday",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Let me think about it",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Okay, book it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "make a appointment tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Wait just a minute",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "the first one tomorrow will be best",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What time is my third event on Monday?",
    "parse": "(Yield (Event.start (FindNumNextEvent (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)) 3L)))"
  },
  {
    "original_sentence": "When does my third event on monday end?",
    "parse": "(Yield (Event.end (FindNumNextEvent (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)) 3L)))"
  },
  {
    "original_sentence": "wheres my third event on monday?",
    "parse": "(Yield (Event.location (FindNumNextEvent (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)) 3L)))"
  },
  {
    "original_sentence": "Ryan, Brian, Chad and myself aren't golfing anymore on Saturday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ryan\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brian\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chad\"))))) (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"golfing\")))))))))))"
  },
  {
    "original_sentence": "No, the one actually with Mark and Steve.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (alwaysTrueConstraintConstraint (^((List Attendee)) AlwaysTrueConstraint))) (intension (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steve\")))))))))))"
  },
  {
    "original_sentence": "Yes, that is the one I need canceled",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you! Can you also cancel my swing lessons at 9am tomorrow?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L)) (Event.subject_? (?~= \"swing lessons\"))))))))))"
  },
  {
    "original_sentence": "Actually cancel the one on Friday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Friday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Basketball Practice at 8 Sunday morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Basketball Practice\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Add Brock to this and make it at the YMCA.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.location_? (?= (LocationKeyphrase.apply \"YMCA\"))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brock\")))))))))))"
  },
  {
    "original_sentence": "Perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "A new addition is Scott and we've changed it to be at the health center.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.location_? (?= (LocationKeyphrase.apply \"health center\"))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scott\")))))))))))"
  },
  {
    "original_sentence": "Add Bobby, and let's meet at the Star Center.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (& (Event.location_? (?= (LocationKeyphrase.apply \"Star Center\"))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bobby\")))))))))))"
  },
  {
    "original_sentence": "Add work meeting at the office today at 9:00 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"work meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberAM 9L))))) (Event.location_? (?= (LocationKeyphrase.apply \"the office\")))))))"
  },
  {
    "original_sentence": "Remove my appointment with Dr. House, I'm done with him.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dr. House\")))))))))))"
  },
  {
    "original_sentence": "Actually it should be Dr. Smith.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dr. Smith\"))))))))))"
  },
  {
    "original_sentence": "please change the meeting 1.00 pm - 1.30 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (& (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 1L 30L))))))))"
  },
  {
    "original_sentence": "correct",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Have it end 45 minutes later please.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.end_? (?= (adjustByPeriodDuration (Event.end x0) (PeriodDuration.apply :duration (toMinutes 45)))))))))"
  },
  {
    "original_sentence": "Add McDreamy to that as well.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"McDreamy\"))))))))))"
  },
  {
    "original_sentence": "Create a company meeting at Lambo field on Friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"company meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.location_? (?= (LocationKeyphrase.apply \"Lambo field\")))))))"
  },
  {
    "original_sentence": "second one is best",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What is the weather like during my company meeting?",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"company meeting\")))))))"
  },
  {
    "original_sentence": "Can you also set up a Company Dinner at Bob's Steak and Chop House on Thursday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Company Dinner\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday)))))) (Event.location_? (?= (LocationKeyphrase.apply \"Bob's Steak and Chop House\")))))))"
  },
  {
    "original_sentence": "No I need something later in the day",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "May I know who has not declining the dinner party?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner party\")))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Who has not accepted Violin Lessons?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Violin Lessons\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Who has not tentatively accepted the corn teen?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"corn teen\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Find the meeting with my Boss and add Kims manager.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))))))"
  },
  {
    "original_sentence": "have this end at 2 please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "good, thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you tell me if I meet with Allen on Tuesday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Allen\")))))))) 0L))"
  },
  {
    "original_sentence": "How about with Cameron?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cameron\"))))))"
  },
  {
    "original_sentence": "What events are on my calendar next Tuesday morning?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) (Morning))))"
  },
  {
    "original_sentence": "Is there anything else scheduled that day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "can you cancel it?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes please do",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have anything on Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Hello can you setup a lunch with Karl today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (Today))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karl\")))))))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "can you change lunch to 12pm?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "Who made that Pool Party Event? It is raining out...",
    "parse": "(Yield (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Pool Party\")))))))"
  },
  {
    "original_sentence": "may i help you",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Let's put the mod mediation on for 4PM today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"mod mediation\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "yeah its right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Looks great, thanks!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you search my meetings for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you set up a phone conference with Cornelio Hernandez at 10:45 AM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"phone conference\")) (Event.start_? (?= (NextTime (HourMinuteAm 10L 45L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cornelio Hernandez\")))))))))))"
  },
  {
    "original_sentence": "Yes, it does. Thank you!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you also add a phone conference with Barack Obama at 2:15PM?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"phone conference\")) (Event.start_? (?= (NextTime (HourMinutePm 2L 15L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\")))))))))))"
  },
  {
    "original_sentence": "Can you make the end time 3:15?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (HourMinutePm 3L 15L)))))))"
  },
  {
    "original_sentence": "Yes. Thank you!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "hi, can you tell me the weather in boston for today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"boston\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "chilly! what's the weather like in denver tomorrow",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"denver\"))) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "where in the US is it going to be warmest today?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "what's the weather like in Vegas today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Vegas\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "Sounds nice.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What's the chance of rain today in boston?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"boston\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "OK, thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "goodbye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Delete event Soccer practice January 3",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 3L (January)) (Event.subject_? (?~= \"Soccer practice\"))))))))))"
  },
  {
    "original_sentence": "Excellent. What other Soccer practices do I have over the next month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventAfterDateTime (Event.subject_? (?~= \"Soccer practice\")) (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Do I have any meetings scheduled past 4:30 pm on Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (NextDOW (Friday)) (^(Event) EmptyStructConstraint) (HourMinutePm 4L 30L))))) 0L))"
  },
  {
    "original_sentence": "Schedule Bar on Friday at 6 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Bar\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "Yep, perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "how did i respond to the baking event",
    "parse": "(Yield (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"baking event\")))))))"
  },
  {
    "original_sentence": "Ok no problem. How do I respond to the Holiday Party?",
    "parse": "(Yield (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Holiday Party\")))))))"
  },
  {
    "original_sentence": "Did I accept the after party invite?",
    "parse": "(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"after party\"))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "add shopping on grocery store tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"shopping on grocery store\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "please make the second one for me",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "that's well thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "add work meeting upcoming monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"work meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))))))"
  },
  {
    "original_sentence": "pretty sure with the first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "that's fine thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "no need enough",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have a D&D session tonight?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"D&D session\"))) (Night))))) 0L))"
  },
  {
    "original_sentence": "Am I playing video games with Travis tonight?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (& (Event.subject_? (?~= \"video games\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Travis\")))))) (Night))))) 0L))"
  },
  {
    "original_sentence": "Am I seeing Abby on Saturday to talk about my finances?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (& (Event.subject_? (?~= \"talk about my finances\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))))) 0L))"
  },
  {
    "original_sentence": "am i scheduled for spin on sunday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"spin\")))))) 0L))"
  },
  {
    "original_sentence": "am I traveling to NY this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"traveling\")) (Event.location_? (?= (LocationKeyphrase.apply \"NY\")))) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "What is my second Event tomorrow?",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) 2L))"
  },
  {
    "original_sentence": "what is my second event next month",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))) 2L))"
  },
  {
    "original_sentence": "What time is my second event on April 2?",
    "parse": "(Yield (Event.start (FindNumNextEvent (EventOnDate (MD 2L (April)) (^(Event) EmptyStructConstraint)) 2L)))"
  },
  {
    "original_sentence": "Make an Event for all of next weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (NextWeekend)))))"
  },
  {
    "original_sentence": "Yes this should be good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Set up a road trip the 11-15th",
    "parse": "(let (x0 (nextDayOfMonth (Today) 11L)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"road trip\")) (DateAndConstraint x0 (nextDayOfMonth x0 15L)))))))"
  },
  {
    "original_sentence": "You got it right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Mark me as being on a cruise to Bermuda starting on November 15th and lasting a week.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"cruise to Bermuda\")) (MD 15L (November)) (toWeeks 1)))))"
  },
  {
    "original_sentence": "Does Andiamo Steakhouse in Las Vegas have waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Andiamo Steakhouse in Las Vegas\"))))))"
  },
  {
    "original_sentence": "Does the Cheesecake Factory in Reno have waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Cheesecake Factory in Reno\"))))))"
  },
  {
    "original_sentence": "Does Oceano in Reno have waiter services?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Oceano in Reno\"))))))"
  },
  {
    "original_sentence": "Please push back my swimming date with Claire by one hour.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"swimming date\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Claire\"))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "Yes that's right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Good. And add playground time Sunday after church.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"playground time\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"church\"))))))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Yes. And schedule a meeting at the library at 3",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 3L)))) (Event.location_? (?= (LocationKeyphrase.apply \"the library\")))))))"
  },
  {
    "original_sentence": "HI. I need to add 5 appointments to my calendar. I have a 5:15 dentist appointment on Wednesday. I also have a 2:30 appointment Friday. That one is for the pediatrician.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Add 3 more appointments evenly spaced between 6am and 6pm on friday",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Louise cancelled our meeting last Tuesday. Can you take it off of my calendar?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Tuesday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Louise\"))))))))))))"
  },
  {
    "original_sentence": "No. Cancel my meeting with Jane that was yesterday at 1 pm.",
    "parse": "(do (DoNotConfirm) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Yesterday) (NumberPM 1L)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\")))))))))))))"
  },
  {
    "original_sentence": "yeah thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add that I had a Sales Team Meeting last Wednesday at 4:45 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Sales Team Meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (previousDayOfWeek (Today) (Wednesday)) (HourMinutePm 4L 45L))))))))"
  },
  {
    "original_sentence": "Yes but change the time to start at 3 PM.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Have the meeting on Friday changed to 1800",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (HourMinuteMilitary 18L 0L)))))))"
  },
  {
    "original_sentence": "That is good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I'm going on vacation around 6 tomorrow and ending at 903",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (HourMilitary 6L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"vacation\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinuteMilitary 9L 3L)))))))))"
  },
  {
    "original_sentence": "Yes. Let's change the start to 0500.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinuteMilitary 5L 0L)))))))"
  },
  {
    "original_sentence": "do I have anything at 5h tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (HourMilitary 5L)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Can you move my presentation today, but earlier in the day?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"presentation\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?< (DateTime.time (Event.start x0)))))))))"
  },
  {
    "original_sentence": "Anything later in the day?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "No, no, much later please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Awesome",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Move my sales conference to an earlier time on Friday.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"sales conference\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTimeConstraint (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))) (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday))))))))"
  },
  {
    "original_sentence": "please decline the Scheduling meeting and say that I can't fit that in my schedule.",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I can't fit that in my schedule\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Scheduling meeting\"))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "that will be good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Decline the car wash fundraiser and say that I'm going to the lake for the weekend.",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I'm going to the lake for the weekend\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"car wash fundraiser\"))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Yes, thanks so much! Decline my Table Tennis Match and say that I have to go out of town and see my step-brother that day.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I have to go out of town and see my step-brother that day\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Table Tennis Match\"))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "I'd like to add an appointment",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "What is your name?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Can you add a that I have a concert to go to this coming wednesday at 6pm and set a reminder?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Add an event that I have a concert",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"concert\")))))"
  },
  {
    "original_sentence": "no, change the date to may 1",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (MD 1L (May))))))))"
  },
  {
    "original_sentence": "William's birthday March 18th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"William's birthday\")) (Event.start_? (DateTime.date_? (?= (MD 18L (March)))))))))"
  },
  {
    "original_sentence": "Delete doctors appointment for Monday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"doctors appointment\"))))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change my meeting on Monday to Tuesday.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Tuesday)))))))))"
  },
  {
    "original_sentence": "Add a meeting with Tim at 330pm today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (HourMinutePm 3L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\")))))))))))"
  },
  {
    "original_sentence": "The meeting will last 2 hours",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Can you add Formal on my calendar next Saturday at 7 PM?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Formal\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "No.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Change the formal to Friday night.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"formal\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTimeConstraint (Night) (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday))))))))"
  },
  {
    "original_sentence": "Add Formal friday night.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Formal\")) (Event.start_? (DateTimeConstraint (Night) (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "No, I'll need a different time",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Schedule doctor's appointment with Dr Johnson for next Tuesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dr Johnson\")))))))))))"
  },
  {
    "original_sentence": "Yes 1pm. And schedule a trip to the pharmacy afterwards.",
    "parse": "(let (x0 (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint))))) (do (Yield x0) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"trip to the pharmacy\")) (Event.start_? (?= (Event.end (^(Dynamic) item x0))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "OK, NOW PREPARE A LIST OF MEDICINES TO BE BOUGHT FROM THE PHARMACY",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Add Dr. Oz to the doctor appointment event.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor appointment\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dr. Oz\"))))))))))"
  },
  {
    "original_sentence": "That is correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete event \"Birthday Party\" on June 24th.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 24L (June)) (Event.subject_? (?~= \"Birthday Party\"))))))))))"
  },
  {
    "original_sentence": "Add birthday party to June 25th at 7 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"birthday party\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 25L (June)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Add Bre's roommates homecoming party for the Saturday after Jan 25th between 6 pm and 9 pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (nextDayOfWeek (MD 25L (January)) (Saturday)) (NumberPM 6L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Bre's roommates homecoming party\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 9L)))))))))"
  },
  {
    "original_sentence": "Do I have a meeting shorter than 30 minutes anytime between next Monday and Thursday?",
    "parse": "(let (x0 (NextDOW (Monday))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.duration_? (?< (toMinutes 30))) (EventDuringRange (^(Event) EmptyStructConstraint) (DateAndConstraint x0 (nextDayOfWeek x0 (Thursday)))))))) 0L)))"
  },
  {
    "original_sentence": "I'm looking for something with a subject like \"planning\" that's sometime between today and a week from today and I know it's longer than 30 minutes and shorter than 2 hours",
    "parse": "(let (x0 (Today)) (Yield (FindEventWrapperWithDefaults (& (& (Event.duration_? (?> (toMinutes 30))) (Event.duration_? (?< (toHours 2)))) (EventDuringRange (Event.subject_? (?~= \"planning\")) (DateAndConstraint x0 (adjustByPeriod x0 (toWeeks 1))))))))"
  },
  {
    "original_sentence": "Right! Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "One more thing. Add a 2 hour long therapy session to my calendar. It starts at 9 am on the Thursday of next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"therapy session\")) (Event.start_? (?= (DateAtTimeWithDefaults (DowOfWeekNew (Thursday) (NextWeekList)) (NumberAM 9L))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "Make sure I am free the entire weekend",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "When am I scheduled to go to Miami?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"go to Miami\"))))"
  },
  {
    "original_sentence": "Delete that event and any events for this coming week.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Good Set an event for working more hours starting Monday at 8 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"working more hours\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Do I have anything on my calendar for the following Saturday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "make a Smash meeting for this Saturday night.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Smash meeting\")) (Event.start_? (DateTimeConstraint (Night) (NextDOW (Saturday))))))))"
  },
  {
    "original_sentence": "Wait, I want it to not be on the weekend.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Great",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks, can you schedule a dentist appointment next weekend!",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (DateTime.date_? (NextWeekend)))))))"
  },
  {
    "original_sentence": "actually i don't want it on a weekend",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "27 is ok. and can you schedule theater for saturday?",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.day_? (?= (Day.apply 27L))))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"theater\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))))))))"
  },
  {
    "original_sentence": "change it not on the weekend",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (negate (ThisWeekend)))))))"
  },
  {
    "original_sentence": "Yes choose the second",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make a dinner party for tomorrow at 7 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner party\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Sorry, make the dinner party last 2 hours please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner party\")))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hi, can you create a reminder for lunch on Wednesday of next week?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (DowOfWeekNew (Wednesday) (NextWeekList)))))))))"
  },
  {
    "original_sentence": "When and where is my brunch with Jill tomorrow?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (& (Event.subject_? (?~= \"brunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jill\")))))))))) (do (Yield (Event.start x0)) (Yield (Event.location x0))))"
  },
  {
    "original_sentence": "Does W Hotel have a full bar?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"W Hotel\"))))))"
  },
  {
    "original_sentence": "Can you tell me their phone number?",
    "parse": "(Yield (Place.phoneNumber (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Thanks, do they have patio seating?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "cool, 10:30 ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "next meeting on 7 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberAM 7L)))))))"
  },
  {
    "original_sentence": "Add the location please. It is Conference Room C.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Conference Room C\"))))))"
  },
  {
    "original_sentence": "It's a meeting, not an appointment. You should change that or I might think I'm going to get my hair cut.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"meeting\")))))"
  },
  {
    "original_sentence": "Yes, that looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change the location to the Ross Park Zoo in Binghamton.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Ross Park Zoo in Binghamton\"))))))"
  },
  {
    "original_sentence": "Who is a maybe for the conference call?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"conference call\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Who possibly accepted the Mental Institution",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Mental Institution\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Who is perhaps joining my Zoom Meeting tomorrow?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"Zoom Meeting\"))))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Get me Fran Drescher.",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fran Drescher\"))))))))"
  },
  {
    "original_sentence": "Can you please call Mr. Sheffield for me?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sheffield\"))))))))"
  },
  {
    "original_sentence": "I need you to call Seth Smitts",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Seth Smitts\"))))))))"
  },
  {
    "original_sentence": "Call Victor",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Victor\"))))))))"
  },
  {
    "original_sentence": "I wonder what's been up with Johnny, give him a call.",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Johnny\"))))))))"
  },
  {
    "original_sentence": "What is the location of my dinner with Robert on Saturday?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Robert\")))))))))))"
  },
  {
    "original_sentence": "Is that a fast food chain?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Can you describe the restaurant?",
    "parse": "(Yield (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Does Jack-in-the-Box have waiters, or is it considered a self-serve restaurant?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Jack-in-the-Box\"))))))"
  },
  {
    "original_sentence": "make a appointment for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "drinks with friends sunday",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I wanna meet my mom at today 5 PM",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "make a appointment for today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Today)))))))"
  },
  {
    "original_sentence": "Where is dinner tonight?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"dinner\"))) (Night)))))))"
  },
  {
    "original_sentence": "Does it offer takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Do they have outdoor seating?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.OutdoorDining) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "i need to schedule an event for saturday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))))))"
  },
  {
    "original_sentence": "can you please tell me what i did on monday afternoon",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (previousDayOfWeek (Today) (Monday)) (^(Event) EmptyStructConstraint)) (Afternoon))))"
  },
  {
    "original_sentence": "Do I have anything else scheduled that day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "What do I have tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What did I have scheduled on May 15th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (previousMonthDay (Today) (May) 15L) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Rename it to Candyland Extravaganza.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"Candyland Extravaganza\")))))"
  },
  {
    "original_sentence": "Can you extend it to 3PM please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "put concert at 8 pm today with status out of office",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"concert\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 8L))))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
  },
  {
    "original_sentence": "wait remove my status from that.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.showAs_? (^(ShowAsStatus) AlwaysFalseConstraint)))))"
  },
  {
    "original_sentence": "create basketball night on tuesday at 8",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"basketball night\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "CHANGE THE TOPIC TO BASKETBALL EVENT",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"BASKETBALL EVENT\")))))"
  },
  {
    "original_sentence": "great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "sure, thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When is Veteran's Day?",
    "parse": "(Yield (NextHolidayFromToday (Holiday.VeteransDay)))"
  },
  {
    "original_sentence": "Hey there how many i help you?",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Change the lunch date with Mary to be tomorrow at 2pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch date\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\"))))))))) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "looks right to me",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change it to be Friday please",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)))))))))"
  },
  {
    "original_sentence": "Looks correct to me",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Howdy, can you set up an event called, \"Walk for 30 Minutes\" on this coming Tuesday the 12th from 1pm to 1:30pm please?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (nextDayOfMonth (Today) 12L) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Walk for 30 Minutes\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 1L 30L)))))))))"
  },
  {
    "original_sentence": "Change my meeting on Thursday to be titled \" Budget Meeting\".",
    "parse": "(do (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"Budget Meeting\"))))))"
  },
  {
    "original_sentence": "Who can we expect at our monthly meeting?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"monthly meeting\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Great. Now can you tell me who Declined the Game night invite?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Game night\")))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Who has accepted the Team activity?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Team activity\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "I need to schedule a doctor's appointment sometime not on a weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend)))))))))"
  },
  {
    "original_sentence": "The second one is good. Also can you schedule a meeting with Will Riker not on the weekend?",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Will Riker\"))))))))))))"
  },
  {
    "original_sentence": "I need a meeting with my team, obviously can't be on the weekend since we won't be at work.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Directions for my 1:00 lunch date with Jan and add a 3:00 pm appointment to get oil changed after with directions to Speedy oil.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I would like to set an appointment for Friday at 8:00AM this week.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "I'd like to remove any meetings I have planned for after lunch today.",
    "parse": "(FenceConditional)"
  },
  {
    "original_sentence": "thanks for helping",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to schedule a doctors appointment after lunch tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctors appointment\")) (Event.start_? (OnDateAfterTime (Tomorrow) (Lunch)))))))"
  },
  {
    "original_sentence": "I will do the first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Awesome, now can we add meeting with Tim after lunch on the 3rd?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (OnDateAfterTime (nextDayOfMonth (Today) 3L) (Lunch))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\")))))))))))"
  },
  {
    "original_sentence": "The second one is after lunch thanks",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Do I have a meeting with Kevin this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kevin\")))) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "I need to add Jason to that.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jason\"))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Jason just cancelled.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jason\")))))))))))"
  },
  {
    "original_sentence": "That looks fine.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, I need you to put hiking with Alice Saturday morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"hiking\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Saturday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alice\")))))))))))"
  },
  {
    "original_sentence": "create meeting with Patrick on Sunday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Patrick\")))))))))))"
  },
  {
    "original_sentence": "The one at 1 pm. Add the location Main Office.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "change the meeting on jul 30",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "This looks good, confirm it in my calendar",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Great, and make it an hour long please.",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (^(Dynamic) item x0)) (Event.duration_? (?= (toHours 1))))))))"
  },
  {
    "original_sentence": "Move lunch with Sheila to next Thursday fro 11am-1pm.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sheila\")))))))) x1 (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Thursday)) (NumberAM 11L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (NumberPM 1L)))))))))"
  },
  {
    "original_sentence": "Yes thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you also put down a meeting with Cathy and Dennis on Saturday from 6 to 7:30pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 6L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 7L 30L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cathy\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dennis\")))))))))))))"
  },
  {
    "original_sentence": "Awesome, now can you just add Michael and Samantha as well to that meeting with Cathy and Dennis?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListHasRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Michael\")))) (AttendeeListHasRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Samantha\")))))))))"
  },
  {
    "original_sentence": "meeting on 9pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberPM 9L)))))))"
  },
  {
    "original_sentence": "hi, help me delete the event this afternoon",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Afternoon)))))))))"
  },
  {
    "original_sentence": "Yes thats the right one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you very much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Any dentist appointments this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"dentist appointments\")) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Can you change it so it is an hour long?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Hi there!",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Add meeting with bank at 3:30 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"meeting with bank\")) (Event.start_? (?= (NextTime (HourMinutePm 3L 30L))))))))"
  },
  {
    "original_sentence": "No I need it from 3:15 to 6:45",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 15L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 6L 45L))))))))"
  },
  {
    "original_sentence": "Good for now. I need more help",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I see my accountant this week?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Check for appointments with accountant in them.",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"accountant\"))))"
  },
  {
    "original_sentence": "I want to work on my report on Friday at 6 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"work on my report\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "that's perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please decline the LAN party invite and say no thanks nerds!",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"no thanks nerds!\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"LAN party\"))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "That's great. Also, decline the invite for the chess competition saying i'm not a nerd",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"i'm not a nerd\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"chess competition\"))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "Yes, that's good. Decline my Star Trek Watching Party and say that only nerds like Star Trek.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"say that only nerds like Star Trek\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Star Trek Watching Party\"))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "Yes it is",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When did the Crazy Office Party happen in 2018?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Crazy Office Party\")) (FullYearofYear (Year.apply 2018L))))))))"
  },
  {
    "original_sentence": "i need an event in 2056 for death day",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"death day\")) (Event.start_? (DateTime.date_? (FullYearofYear (Year.apply 2056L))))))))"
  },
  {
    "original_sentence": "first one also i want a big celebration in 2050",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"big celebration\")) (Event.start_? (DateTime.date_? (FullYearofYear (Year.apply 2050L)))))))))"
  },
  {
    "original_sentence": "send an invite to bob and jane for today meet.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Today)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bob\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jane\"))))))))))))"
  },
  {
    "original_sentence": "What is Bob's boss's name?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))))"
  },
  {
    "original_sentence": "Thanks for the information",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please find my meetings tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you schedule an event for tomorrow and call it football game?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"football game\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "Hold on one second.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Let's do the second one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Yes, that looks great!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Prepare presentation materials",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"Prepare presentation materials\")))))"
  },
  {
    "original_sentence": "fix the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make it earlier please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "How long is it going to last?",
    "parse": "(Yield (Event.duration (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Is an earlier time available?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Add a one hour meeting with Jim at 1 PM to this afternoon's schedule.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 1L)))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))))))))))"
  },
  {
    "original_sentence": "Can you please add 30 minutes to this event for me",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (addDurations (toMinutes 30) (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint))))))))))"
  },
  {
    "original_sentence": "yes it looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have anything on Saturday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "cancel that please",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "What is tomorrow's weather in Phoenix, Arizona?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Phoenix, Arizona\"))) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "What's the percentage for chance of precipitation?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (rainPrecipProbability) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Is there a storm headed our way?",
    "parse": "(Yield (IsStormy (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "what information do you have access to?",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "what city in arizona has the coldest weather right now?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "is there snow in flagstaff?",
    "parse": "(Yield (IsSnowy (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"flagstaff\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "has sedona received any snow this year?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "did it hail last week?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Hello, Can you tell me what is exactly is my 3rd event is.",
    "parse": "(Yield (FindNumNextEvent (^(Event) EmptyStructConstraint) 3L))"
  },
  {
    "original_sentence": "Thank you, is there a location for my third event on March 20th?",
    "parse": "(Yield (Event.location (FindNumNextEvent (EventOnDate (MD 20L (March)) (^(Event) EmptyStructConstraint)) 3L)))"
  },
  {
    "original_sentence": "When does my third event on march 20 start?",
    "parse": "(Yield (Event.start (FindNumNextEvent (EventOnDate (MD 20L (March)) (^(Event) EmptyStructConstraint)) 3L)))"
  },
  {
    "original_sentence": "What events do I have today with clients?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Then what do I have with James?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\"))))))"
  },
  {
    "original_sentence": "How about Nina?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nina\"))))))"
  },
  {
    "original_sentence": "What about Abby?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))"
  },
  {
    "original_sentence": "Add an event with Abby for tomorrow at 9:00.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "I would like to delete my doctor's appointment for this Saturday at 11 am.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 11L)) (Event.subject_? (?~= \"doctor's appointment\"))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make a doctor's appointment this Friday at 10 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Schedule lunch with Eric for 1pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (NextTime (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Eric\")))))))))))"
  },
  {
    "original_sentence": "Looks right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "There needs to be an appointment each week on Tuesday at 8 am for \"team meeting\".",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "Do I have anything scheduled for tomorrow at 3 pm?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Can you cancel that?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Can you delete John and Tommy from the party this Friday.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"party\"))))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tommy\"))))))))))))"
  },
  {
    "original_sentence": "I would like Bo and Bunny removed from the Inventory scheduled for Friday.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"Inventory\"))))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bo\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bunny\"))))))))))))"
  },
  {
    "original_sentence": "Also delete Alex and Josie from the team meeting.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"team meeting\")))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Josie\"))))))))))))"
  },
  {
    "original_sentence": "Fiona and Velma will be at the team meeting instead",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fiona\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Velma\")))))))))))"
  },
  {
    "original_sentence": "remove fiona and velma from the attendees they called off",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"fiona\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"velma\"))))))))))))"
  },
  {
    "original_sentence": "How was my response in the staff meeting today?",
    "parse": "(Yield (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"staff meeting\"))))))))"
  },
  {
    "original_sentence": "change the meeting 4.00 pm - 4.30 pm",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) x1 (DateAtTimeWithDefaults (DateTime.date (Event.start x0)) (NumberPM 4L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (HourMinutePm 4L 30L)))))))))"
  },
  {
    "original_sentence": "Has Abby responded to the Staff Meeting?",
    "parse": "(Yield (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Staff Meeting\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))))"
  },
  {
    "original_sentence": "What about Tyler and Ashley?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Can we add Dan Marton to the Staff meeting at 3?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Staff meeting\")) (Event.start_? (DateTime.time_? (?= (NumberPM 3L))))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Marton\"))))))))))"
  },
  {
    "original_sentence": "Am I working on New Year's Eve?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextHolidayFromToday (Holiday.NewYearsEve)) (Event.subject_? (?~= \"working\")))))) 0L))"
  },
  {
    "original_sentence": "Am I working New Year's Day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"working New Year's Day\"))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything this weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))) 0L))"
  },
  {
    "original_sentence": "do i have any event the first week of january",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NumberWeekOfMonth 1L (January)))))) 0L))"
  },
  {
    "original_sentence": "Am I seeing Greg for dinner on Monday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Greg\"))))))))) 0L))"
  },
  {
    "original_sentence": "hi, i want to update a meeting on friday",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "when is my next meeting?",
    "parse": "(Yield (Event.start (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))"
  },
  {
    "original_sentence": "it should be an hour",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "ok thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you schedule Dragon Ball Z Watch Party for tomorrow at 2:15 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dragon Ball Z Watch Party\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 2L 15L))))))))"
  },
  {
    "original_sentence": "Do I have anything on my schedule after my meeting with James that isn't \"Gym Time\"?",
    "parse": "(let (x0 (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\"))))))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (negate (?~= \"Gym Time\"))) (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)))))) 0L)))"
  },
  {
    "original_sentence": "Do I have any events that aren't called pole dancing?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (negate (?~= \"pole dancing\")))))) 0L))"
  },
  {
    "original_sentence": "what do i have besides Morning Jog",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (negate (?~= \"Morning Jog\")))))"
  },
  {
    "original_sentence": "is there a dedicated bar at the monopole in plattsburgh?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"monopole in plattsburgh\"))))))"
  },
  {
    "original_sentence": "check out Haru in Reno and if it's got a bar",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Haru in Reno\"))))))"
  },
  {
    "original_sentence": "Does The Rustic Rooster in Cuttingsville have a full bar?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"The Rustic Rooster in Cuttingsville\"))))))"
  },
  {
    "original_sentence": "Delete Saturday flight at 10am.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 10L)) (Event.subject_? (?~= \"flight\"))))))))))"
  },
  {
    "original_sentence": "Great, can you now add, \"Lyft to Sacramento Airport\" to Sunday from 12 to 12:30pm?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 12L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Lyft to Sacramento Airport\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 12L 30L)))))))))"
  },
  {
    "original_sentence": "Add flight at 3pm on that day.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"flight\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "I am going to be seeing the sites in Paris on Monday at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"seeing the sites\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (Noon))))) (Event.location_? (?= (LocationKeyphrase.apply \"Paris\")))))))"
  },
  {
    "original_sentence": "Can you put a doctors appointment on my calender for monday 8am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctors appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Make a appointment to Friday with office members.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Make a appointment on Friday at 3:00 in my office.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L)))) (Event.location_? (?= (LocationKeyphrase.apply \"my office\")))))))"
  },
  {
    "original_sentence": "yes looks well",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to add Brian to appointment.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brian\"))))))))))"
  },
  {
    "original_sentence": "yes thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Does Harrah's Steak House in Reno have waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Harrah's Steak House in Reno\"))))))"
  },
  {
    "original_sentence": "Does M3 in Reno have waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"M3 in Reno\"))))))"
  },
  {
    "original_sentence": "Thank you for looking this up. Do you know if Patrizi's in Austin has waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Patrizi's in Austin\"))))))"
  },
  {
    "original_sentence": "schedule dinner for tomorrow at 6pm at home",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L))))) (Event.location_? (?= (LocationKeyphrase.apply \"home\")))))))"
  },
  {
    "original_sentence": "Make it last 2 hours",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "What meetings do I have next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "OK!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Hi, can you tell me when my dentist appointment is?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\")))))))"
  },
  {
    "original_sentence": "Can you schedule me a dentist appointment?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"dentist appointment\")))))"
  },
  {
    "original_sentence": "Yes, the Thursday appointment works.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks. Can you set a reminder for me?",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Ok thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I think that is it.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "How is the weather this Halloween",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextHolidayFromToday (Holiday.Halloween))))))"
  },
  {
    "original_sentence": "What is the seven day forecast?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (NextPeriod (toDays 7)))))"
  },
  {
    "original_sentence": "Is there going to be rain soon?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Will I need an umbrella this weekend?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeekend)))))"
  },
  {
    "original_sentence": "Will there be snow in the mountains?",
    "parse": "(Yield (WillSnow (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"the mountains\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "What will the weather be on the first?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (nextDayOfMonth (Today) 1L)))))"
  },
  {
    "original_sentence": "Is it warm enough for a short sleeve shirt this weekend?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeekend)))))"
  },
  {
    "original_sentence": "Surgery scheduled on Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Surgery\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))))))"
  },
  {
    "original_sentence": "Yes, the first.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Schedule it again for next week, too.",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "I need to schedule reading from 5 pm to 7 pm tomorrow",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"reading\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 7L)))))))))"
  },
  {
    "original_sentence": "Right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I also have the leadership conference from 9 am to 5 pm on March 9 it's at Haverford College",
    "parse": "(let (x0 (DateAtTimeWithDefaults (MD 9L (March)) (NumberAM 9L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"leadership conference\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Haverford College\"))))))))"
  },
  {
    "original_sentence": "That's right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Leave 2 hours for laundry tonight starting at 7:30 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"laundry\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (HourMinutePm 7L 30L))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "Exactly",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "How long do we have scheduled to meet with claire",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"claire\")))))))))"
  },
  {
    "original_sentence": "that's great make sure you just make a good deal",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add Kim to the meeting with Claire.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Claire\")))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))))"
  },
  {
    "original_sentence": "Looks perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need a meeting on Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))))))"
  },
  {
    "original_sentence": "Hi can u please check the day of November 25 2019?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MDY 25L (November) (Year.apply 2019L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "no thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I want to meet with Brenda's manager",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brenda\")))))))))))"
  },
  {
    "original_sentence": "Fix second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a meeting with William today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Today)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"William\")))))))))))"
  },
  {
    "original_sentence": "can you add William's manager to that?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"William\")))))))))))"
  },
  {
    "original_sentence": "book the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you please add a phone interview for me tomorrow at 1PM?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"phone interview\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "please change to \"Phone Interview with EP\"",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"Phone Interview with EP\")))))"
  },
  {
    "original_sentence": "please make it from 1PM to 2PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "yes perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "then at 2:30 can you please add \"Happy Hour with Aaron\"?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Happy Hour with Aaron\")) (Event.start_? (?= (NextTime (HourMinutePm 2L 30L))))))))"
  },
  {
    "original_sentence": "can you add a note that says \"Salt + Lime\"?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "bummer",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "that will work for now",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create an event at 2 pm for Wednesday and make the status out of office",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"event\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 2L))))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you set my status as available for today?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.showAs_? (?= (ShowAsStatus.Free))) (Today)))))"
  },
  {
    "original_sentence": "I need a staff meeting January 1 of next year",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"staff meeting\")) (Event.start_? (DateTime.date_? (?= (MDY 1L (January) (NextYear)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I'm having a party on January 1 next year.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"party\")) (Event.start_? (DateTime.date_? (?= (MDY 1L (January) (NextYear)))))))))"
  },
  {
    "original_sentence": "when is Thanksgiving next year",
    "parse": "(Yield (HolidayYear (Holiday.Thanksgiving) (NextYear)))"
  },
  {
    "original_sentence": "Remind me of my doctors appointment in an hour",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "help me with the list of people attending the staff meeting",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"staff meeting\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Okay, can you make it last an hour?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Yes. Also add Roberto as an attendee for that event",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Roberto\"))))))))))"
  },
  {
    "original_sentence": "yes. Make the staff meeting an hour earlier.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (DateTime.time (PeriodDurationBeforeDateTime (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply :duration (toHours 1))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Oh connect me to that now please.",
    "parse": "(Yield (joinEventCommand (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Please set up a meeting with Jake on Thursday at 2PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))))))))))"
  },
  {
    "original_sentence": "Great and let me know if I have any free time after that meeting.",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (RecipientAvailability (& (Event.start_? (OnDateAfterTime (DateTime.date (Event.end (^(Dynamic) item x0))) (DateTime.time (Event.end (^(Dynamic) item x0))))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true))))"
  },
  {
    "original_sentence": "Set up a 3 mile run on Sunday at 5 pm at the YMCA on Broadway.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"3 mile run\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 5L))))) (Event.location_? (?= (LocationKeyphrase.apply \"YMCA on Broadway\")))))))"
  },
  {
    "original_sentence": "Schedule movie date with Jessica at the Regal Majestic in Silver Spring, MD.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"movie date\")) (Event.location_? (?= (LocationKeyphrase.apply \"Regal Majestic in Silver Spring\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jessica\")))))))))))"
  },
  {
    "original_sentence": "When do I have events scheduled with my wife?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Anything scheduled with Katie?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Katie\"))))))) 0L))"
  },
  {
    "original_sentence": "What about next month?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))))))"
  },
  {
    "original_sentence": "Am I attending a baseball game this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"baseball game\")) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Do I have a vacation next month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"vacation\")) (FullMonthofMonth (NextMonth)))))) 0L))"
  },
  {
    "original_sentence": "Add dinner with Will's maanager for tomorrow at 8pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Will\"))))))))))))"
  },
  {
    "original_sentence": "yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok add dinner with sam's maanager",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"sam\"))))))))))))"
  },
  {
    "original_sentence": "second one,please",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Do I have a meeting with Pablo's manager on Tuesday afternoon",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Tuesday)) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Pablo\"))))))))) (Afternoon))))) 0L))"
  },
  {
    "original_sentence": "Create a goals seminar meeting on Friday at 4:00 pm at Outback.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"goals seminar meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 4L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Outback\")))))))"
  },
  {
    "original_sentence": "No it should be an hour long in duration",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "It's well",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change the restaurant to Mike's Pizza Shack.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Mike's Pizza Shack\"))))))"
  },
  {
    "original_sentence": "Change the time to 5:30 PM.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (HourMinutePm 5L 30L)))))))"
  },
  {
    "original_sentence": "Who are my reports?",
    "parse": "(Yield (FindReports (toRecipient (CurrentUser))))"
  },
  {
    "original_sentence": "Okay, can you set up a meeting with all of us on Friday morning?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Who are Dan Schoffel's underlings",
    "parse": "(Yield (FindReports (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Schoffel\")))))))"
  },
  {
    "original_sentence": "Can you set up an appointment to meet with Dan Schoffel and his reports?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Schoffel\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindReports x0))))))))"
  },
  {
    "original_sentence": "Who are my reports",
    "parse": "(Yield (FindReports (toRecipient (CurrentUser))))"
  },
  {
    "original_sentence": "What am I doing with Ana in March?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ana\")))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (March))))))"
  },
  {
    "original_sentence": "What time am I meeting with Simon thursday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Simon\"))))))))))"
  },
  {
    "original_sentence": "ok move it for 26th please",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 26L)))))))))"
  },
  {
    "original_sentence": "This is correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, who is Simon's manager?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Simon\")))))))"
  },
  {
    "original_sentence": "add this location being at my house",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"my house\"))))))"
  },
  {
    "original_sentence": "Update the bench making with Ryan this weekend to Saturday.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"bench making\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ryan\")))))))) (ThisWeekend)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Saturday)))))))))"
  },
  {
    "original_sentence": "Update the bench making with Ryan to 9 in the morning.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"bench making\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ryan\")))))))))))) (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "Schedule look for place to each lunch with Ryan after bench making.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"look for place to each lunch\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"bench making\"))))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ryan\")))))))))))"
  },
  {
    "original_sentence": "Add lunch for Saturday at 12:30 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (HourMinutePm 12L 30L))))))))"
  },
  {
    "original_sentence": "Extend lunch from 1:00 PM until 1:30 PM.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) x1 (DateAtTimeWithDefaults (DateTime.date (Event.end x0)) (NumberPM 1L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (HourMinutePm 1L 30L)))))))))"
  },
  {
    "original_sentence": "You have helped me a lot today with all my appointments, thank you very much make my life easier",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Is Curtis invited to the lunch meeting with Dee on Wednesday at 5?",
    "parse": "(Yield (allows (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Curtis\"))) (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 5L)) (& (Event.subject_? (?~= \"lunch meeting\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dee\"))))))))))))"
  },
  {
    "original_sentence": "Put down a meeting at 1PM please.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "end time is 2 to make it comfortable.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "OK THANK YOU",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Well",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please delete saturday's event at 12",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 12L)))))))))))"
  },
  {
    "original_sentence": "Great , reschedule that event for Sunday.",
    "parse": "(do (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= (Event.subject (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (DateTime.time (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))) (Event.duration_? (?= (Event.duration (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))))"
  },
  {
    "original_sentence": "Book a apoointment Saturday 11 - 12.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 11L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 12L)))))))))"
  },
  {
    "original_sentence": "Book that please",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Lets move my meeting with Kim to earlier",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?< (Event.start x0)))))))"
  },
  {
    "original_sentence": "Ok, fine thanks for your information",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "cancel the football practice on calender",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"football practice\")))))))))"
  },
  {
    "original_sentence": "Make me something a little later than that",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (OnDateAfterTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "I pick second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "When is my interview?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"interview\")))))))"
  },
  {
    "original_sentence": "What do I have the day before that?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (PeriodBeforeDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "ok any other event is there",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "Check what I have tonight.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Night))))"
  },
  {
    "original_sentence": "How about earlier in the day?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventBeforeDateTime (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "make a appointment today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Today)))))))"
  },
  {
    "original_sentence": "When am I free tomorrow?",
    "parse": "(Yield (IsFree (RecipientAvailability (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
  },
  {
    "original_sentence": "What about Friday?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Friday))))))))"
  },
  {
    "original_sentence": "okay cool",
    "parse": "(Yield (CreateCommitEventWrapper (Execute (refer (extensionConstraint (^(CreateCommitEvent) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Am I free this Weekend?",
    "parse": "(Yield (IsFree (RecipientAvailability (& (Event.start_? (DateTime.date_? (ThisWeekend))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
  },
  {
    "original_sentence": "what about Monday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Monday))))))))"
  },
  {
    "original_sentence": "who has not maybe responded to happy hour",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"happy hour\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Who has not accepted Taco Night?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Taco Night\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "And who all did not decline Pasta night?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Pasta night\")))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Change my therapy appointment for Friday from 45 minutes to 30 minutes and cancel my flight out of JFK also on Friday.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Cancel my flight from JFK on Friday and move it to Tuesday.",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"flight from JFK\")))))))"
  },
  {
    "original_sentence": "Schedule Supervisor Birthday Party for this Friday at 2 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Supervisor Birthday Party\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Make it a surprise party",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"surprise party\")))))"
  },
  {
    "original_sentence": "Great. Please invite all office contacts except for the Supervisor.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Invite Rob, Ryan, and Riley to surprise party.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"surprise party\")))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rob\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ryan\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Riley\")))))))))))"
  },
  {
    "original_sentence": "The party duration should be for one hour.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "I need help organizing lunches and events for the week.",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Set up a call with Nick at 8",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"call\")) (Event.start_? (?= (NextTime (NumberPM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nick\")))))))))))"
  },
  {
    "original_sentence": "Please remove my lunch with mom tomorrow",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"lunch with mom\"))))))))))"
  },
  {
    "original_sentence": "Yes remove it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you please add a event next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (NextWeekList))))))"
  },
  {
    "original_sentence": "First one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Who am I logged in as?",
    "parse": "(Yield (CurrentUser))"
  },
  {
    "original_sentence": "How many meetings do I have today?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "What's the latest appointment today?",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (Today) (^(Event) EmptyStructConstraint)) 1L))"
  },
  {
    "original_sentence": "Can you cancel this one?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Ok! How many meetings do I have tommorow?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "What is after that?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)))))"
  },
  {
    "original_sentence": "What time did my flight leave?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (Event.subject_? (?~= \"flight\")))))"
  },
  {
    "original_sentence": "It was delayed til 11:20",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 11L 20L)))))))"
  },
  {
    "original_sentence": "Yes, that sounds right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "woah, that's amazing thanks for your help",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you tell me my next event please",
    "parse": "(Yield (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L))"
  },
  {
    "original_sentence": "Schedule a game at around 5 PM tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"game\")) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "They work ok, but can you change it to around 6PM if possible?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (TimeAround (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "Make me an event next Tuesday at around 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Create a doctor's appointment on Thursday mid morning at 10:30.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinuteAm 10L 30L))))))))"
  },
  {
    "original_sentence": "Add Dr. Rock to this and make the location \"hospital\".",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.location_? (?= (LocationKeyphrase.apply \"hospital\"))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dr. Rock\")))))))))))"
  },
  {
    "original_sentence": "Yes that looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you make a lunch date with Charlie tomorrow at noon?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Charlie\")))))))))))"
  },
  {
    "original_sentence": "no add Joe but change the location to the radio station",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.location_? (?= (LocationKeyphrase.apply \"radio station\"))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joe\")))))))))))"
  },
  {
    "original_sentence": "Did anyone not reject going to the park?",
    "parse": "(Yield (> (size (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"going to the park\")))))) (ResponseStatusType.Declined))) 0L))"
  },
  {
    "original_sentence": "Thanks. Has anyone declined my invite to the park?",
    "parse": "(Yield (> (size (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"park\")))))) (ResponseStatusType.Declined))) 0L))"
  },
  {
    "original_sentence": "has anyone accept the team outing",
    "parse": "(Yield (> (size (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"team outing\")))))) (ResponseStatusType.Accepted))) 0L))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Can you delete my meeting on Monday?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Add a team meeting at 4 pm next Wednesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Delete any doctor appointments in january.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctor appointment\")) (FullMonthofMonth (January)))))"
  },
  {
    "original_sentence": "Please make a calendar event for April 20th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (MD 20L (April))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please make an appointment for the orthodontist at 1pm on april 20th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"appointment for the orthodontist\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 20L (April)) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I have to go to the mall with Wilma on January 1st at 6pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"go to the mall\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 1L (January)) (NumberPM 6L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wilma\")))))))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete my mall event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"mall\")))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "change my april 20th appointment to 8am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 20L (April)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you check what i did on Tuesday of last week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (DowOfWeekNew (Tuesday) (LastWeekNew)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you also note that I met with my Supervisor last Wednesday at 3pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (previousDayOfWeek (Today) (Wednesday)) (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "That was it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Yes. When else did I meet with Damon Straeter?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon Straeter\"))))))))))"
  },
  {
    "original_sentence": "Can you also add that i had a meeting with Rob on Monday morning at 9 am?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rob\")))))))))))"
  },
  {
    "original_sentence": "Can you please tell me who Josephine's manager is?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Josephine\")))))))"
  },
  {
    "original_sentence": "What about Shelly's manager?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Shelly\")))))))"
  },
  {
    "original_sentence": "Please create a meeting with Dan on Wednesday at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (Noon)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan\")))))))))))"
  },
  {
    "original_sentence": "Do you know who Dan Schoffel's boss is?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Schoffel\")))))))"
  },
  {
    "original_sentence": "Can you tell me who the supervisor for Rachel and Michelle is?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "I need to be with Abby, Jake, and Kim",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))))))"
  },
  {
    "original_sentence": "Okay confirm it. I'm arranging a conference call with Scott, Steve and Stacey today at 3:00 PM.",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"conference call\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scott\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steve\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Stacey\")))))))))))))"
  },
  {
    "original_sentence": "Looks right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks. Put a meetup at 6pm with Abby, Jake, and Kim",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"meetup\")) (Event.start_? (?= (NextTime (NumberPM 6L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))))))"
  },
  {
    "original_sentence": "Find time for Abby, Jake and Kim to buy coats. The heat was turned off by mistake in the office.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"buy coats\")) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))))))"
  },
  {
    "original_sentence": "I need to cancel all plans for tomorrow.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "OK!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "schedule bar hopping May 10 7 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"bar hopping\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 10L (May)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "What time is my concert on saturday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"concert\"))))))))"
  },
  {
    "original_sentence": "Can you tell me when it ends?",
    "parse": "(Yield (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Good Sunday I am going to Cook breakfast for family.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Cook breakfast for family\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))))))"
  },
  {
    "original_sentence": "The first one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Right after, schedule drive to Park.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"drive to Park\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Create a vacation date for next week Saturday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"vacation date\")) (Event.start_? (DateTime.date_? (?= (DowOfWeekNew (Saturday) (NextWeekList)))))))))"
  },
  {
    "original_sentence": "Those look okay but I was hoping to leave earlier in the morning.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "second one please",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "No, I want it at 6:00 pm now.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "Yes but it needs to last much longer.",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Do I have any meetings next week with anyone?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))) 0L))"
  },
  {
    "original_sentence": "Do i have any meeting with anyone this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))) 0L))"
  },
  {
    "original_sentence": "Can you Check for events with attendees for October?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (October))))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything with attendees next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything with people attending next month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything this weekend with anyone ?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.start_? (DateTime.date_? (ThisWeekend))) (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint))))))) 0L))"
  },
  {
    "original_sentence": "i need to update a calendar event",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "change doctor appointment time",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "move doctor appointment to tuesday at 1",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor appointment\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Tuesday)) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "put a new appointment in for tuesday at 1",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "The box is big and blue",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "dfujbnsnbg",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "fdhnidtngding",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "OK!",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Can you delete my appointment for tomorrow at 9 AM?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "When is the teacher conference scheduled?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"teacher conference\")))))))"
  },
  {
    "original_sentence": "Thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule the teacher conference to end at 1:30 PM",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 1L 30L)))))))"
  },
  {
    "original_sentence": "Schedule a meeting with Jacob and Lisbeth regarding the upcoming books that we need to review for print and publication for tomorrow at 5 pm to 6 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"regarding the upcoming books that we need to review for print and publication\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 6L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jacob\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lisbeth\")))))))))))))"
  },
  {
    "original_sentence": "Add Alex to that.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex\"))))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Next week I need a meeting to discuss the interns with Amanda.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"discuss the interns\")) (Event.start_? (DateTime.date_? (NextWeekList)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amanda\")))))))))))"
  },
  {
    "original_sentence": "schedule the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need to change the number of people in my party, remove paul and add Jim and Doug",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"party\")))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"paul\"))))))) (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Doug\"))))))))))))"
  },
  {
    "original_sentence": "Okay but Jim and Stacey Walker aren't coming, take them off the list.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Stacey Walker\"))))))))))))"
  },
  {
    "original_sentence": "Invite All the people I know named smith",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Could you please remove James and Sunny from the budget hearing on Thursday?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.subject_? (?~= \"budget hearing\"))))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sunny\"))))))))))))"
  },
  {
    "original_sentence": "Remove Marcus and Chris from the meeting, he has another appointment.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marcus\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chris\"))))))))))))"
  },
  {
    "original_sentence": "Can you schedule a follow up to my meeting today in one month?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"follow up\")) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"meeting\")))))))) (toMonths 1)))))))))"
  },
  {
    "original_sentence": "Add a business meeting with Lucie and Jamie at dinner time.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"business meeting\")) (Event.start_? (?= (NextTime (Dinner))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lucie\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamie\"))))))))))))"
  },
  {
    "original_sentence": "Yes, any meetings scheduled before lunch on Friday?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateBeforeTime (NextDOW (Friday)) (^(Event) EmptyStructConstraint) (Lunch))))) 0L)))"
  },
  {
    "original_sentence": "Clobber. That's odd. Remove that event.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Will the weather be nice to go to the zoo Saturday at 10 am?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 10L)))))"
  },
  {
    "original_sentence": "kids pickup at 3",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"kids pickup\")) (Event.start_? (?= (NextTime (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "OK!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "can I get a forecast for when I'll be picking them up at 3",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"picking them up\")))))))"
  },
  {
    "original_sentence": "I need to do some shopping at 4 pm so put that on the schedule as well.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"shopping\")) (Event.start_? (?= (NextTime (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Delete everything I have planned on March 1st.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "What doctor appointments do I have this month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctor appointments\")) (FullMonthofMonth (Date.month (Today))))))"
  },
  {
    "original_sentence": "The doctor's appointment will actually take about two hours.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor's appointment\")))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you put dinner one hour after the doctor appointment?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (adjustByPeriodDuration (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor appointment\")))))) (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "That is good but have dinner go until 8:00 PM at Sally's house.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.location_? (?= (LocationKeyphrase.apply \"Sally's house\"))) (Event.end_? (DateTime.time_? (?= (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "Buy tickets for two tomorrow at 1.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Buy tickets for two\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "Yes schedule that please",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok that's good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "create dinner party at 5pm tonight.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner party\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Great, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What's Karla's number?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karla\"))))))))"
  },
  {
    "original_sentence": "And what's her email?",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "And her office?",
    "parse": "(Yield (Person.officeLocation (PersonFromRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "How about Arthur's?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Arthur\"))))))"
  },
  {
    "original_sentence": "Do I have an open 2 hour window on Thursday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "The second one. Then cancel my dinner afterwards.",
    "parse": "(let (x0 (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))) x1 (Event.end (^(Dynamic) item x0))) (do (Yield x0) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x1) (Event.subject_? (?~= \"dinner\")) (DateTime.time x1)))))))))))"
  },
  {
    "original_sentence": "6PM isn't dinner anymore, it's 7PM now",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "Perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you. See if I have any lunch dates with Sam for tomorrow at 12 pm to 1 pm.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (Tomorrow) (& (Event.subject_? (?~= \"lunch dates\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\"))))) (NumberPM 12L) (NumberPM 1L))))"
  },
  {
    "original_sentence": "When is the staff meeting next week?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"staff meeting\")) (NextWeekList)))))))"
  },
  {
    "original_sentence": "I'm out of town so delete it please.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yup!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I would like to know what events I have upcoming on my calendar.",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "This meeting will need to run to 4pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "yes but let's change the start time to 2:30",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (HourMinutePm 2L 30L)))))))"
  },
  {
    "original_sentence": "Yes, and what events do I have the next Friday?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "How long does this event run?",
    "parse": "(Yield (Event.duration (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "What day is my lunch with Donna?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Donna\"))))))))))"
  },
  {
    "original_sentence": "Thanks. Are there any other lunches on my calendar?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.subject_? (?~= \"lunches\")))))) 0L))"
  },
  {
    "original_sentence": "Do I have a lunch appointment next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"lunch appointment\")) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Did you find any event called dinner appontment next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"dinner\")) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "event called dinner appontment next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner appontment\")) (Event.start_? (DateTime.date_? (NextWeekList)))))))"
  },
  {
    "original_sentence": "the first one is good",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "When is my doctor appointment?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor appointment\")))))))"
  },
  {
    "original_sentence": "change time to 2 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "add Janice Kang as my doctor",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "remove megan bowen",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "remove the name megan bowen from doctor appointment",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "add fiona mason and damon ellery to lunch",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"fiona mason\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"damon ellery\")))))))))))"
  },
  {
    "original_sentence": "change the time to 7pm - 10 pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 7L))) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 10L)))))))))"
  },
  {
    "original_sentence": "change lunch to 7 pm- 10 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 10L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "add event called \" nap\" to wednesday at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"nap\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "add event \"dinner\" to friday 6 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "add event date to tuesday 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"date\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "can i order for food",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Remind me to look up restaurants at 4PM.",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "add Dinner at Luici's at 6:00 PM tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Luici's\")))))))"
  },
  {
    "original_sentence": "Expand that to 2 hours please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "When is my next lunch date with nancy?",
    "parse": "(Yield (Event.start (FindNumNextEvent (& (Event.subject_? (?~= \"lunch date\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"nancy\"))))) 1L)))"
  },
  {
    "original_sentence": "Is her boss invited",
    "parse": "(Yield (allows (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))) (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Great, and when is my next work party with Lee?",
    "parse": "(Yield (Event.start (FindNumNextEvent (& (Event.subject_? (?~= \"work party\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lee\"))))) 1L)))"
  },
  {
    "original_sentence": "Is his boss invited?",
    "parse": "(Yield (allows (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))) (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "When is my next brunch with Brandon?",
    "parse": "(Yield (Event.start (FindNumNextEvent (& (Event.subject_? (?~= \"brunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brandon\"))))) 1L)))"
  },
  {
    "original_sentence": "Is his boss invited then?",
    "parse": "(Yield (allows (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))) (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Can you create an event for our department meeting for November 21 at 11:00 am?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"department meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 21L (November)) (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "it's at the bravern",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"bravern\"))))))"
  },
  {
    "original_sentence": "I changed the location to NERD.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"NERD\"))))))"
  },
  {
    "original_sentence": "sorry that should say strategy meeting",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"strategy meeting\")))))"
  },
  {
    "original_sentence": "Yes looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule a pitch meeting on Friday at 3:00 pm at Cambridge.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"pitch meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Cambridge\")))))))"
  },
  {
    "original_sentence": "Is anything scheduled for Thursday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "how about friday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (& (^(Date) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Friday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "How long is the conference on Monday?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"conference\"))))))))"
  },
  {
    "original_sentence": "What about the staff meeting on tuesday?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Tuesday)) (Event.subject_? (?~= \"staff meeting\"))))))"
  },
  {
    "original_sentence": "Ok, please change the conference to 10:00 am.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"conference\")))))) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "Push my lunch back an hour from the current time.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What are the current lunch break hours?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Create an event in 4 hours from now called \"afternoon run\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"afternoon run\")) (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 4)))))))))"
  },
  {
    "original_sentence": "It's well",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Set a date for dinner with dennis this Saturday at 630 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (HourMinutePm 6L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"dennis\")))))))))))"
  },
  {
    "original_sentence": "Yeah, but make it go until 7:30",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (HourMinutePm 7L 30L)))))))"
  },
  {
    "original_sentence": "That looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thanks for set the events",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "No thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add a doctor's appointment on Wednesday at 4:00 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Yes it looks fine to me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Good, and can you also add, Coutry Drive with Joey, to Saturday night at 8 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Coutry Drive\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joey\")))))))))))"
  },
  {
    "original_sentence": "Perfect, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Put a meeting on the calendar tomorrow at noon please",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon)))))))"
  },
  {
    "original_sentence": "Add Tony, Lexi, Brian, and Kelly to that please.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tony\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lexi\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brian\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kelly\")))))))))))"
  },
  {
    "original_sentence": "Excellent, thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cancel my event with Tony, Lexi, Brian, and Kelly",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tony\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lexi\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brian\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kelly\"))))))))))))"
  },
  {
    "original_sentence": "Yes, that's exactly it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Is my vet appointment next Saturday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"vet appointment\")))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything this weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))) 0L))"
  },
  {
    "original_sentence": "Do I have my review with Mike on Thursday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (& (Event.subject_? (?~= \"review\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mike\"))))))))) 0L))"
  },
  {
    "original_sentence": "Do I have a Morning Jog to 10 am on Monday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L)) (Event.subject_? (?~= \"Morning Jog\")))))) 0L))"
  },
  {
    "original_sentence": "Do I have a dentist appointment tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"dentist appointment\")))))) 0L))"
  },
  {
    "original_sentence": "create runners night on friday at 5",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"runners night\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "My bald spot is alive",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add Janice Perth to runner's night.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice Perth\"))))))))))"
  },
  {
    "original_sentence": "How many people are in my address book?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "Do you know what time my dentist appointment is?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\")))))))"
  },
  {
    "original_sentence": "Can you create an event right after the last event on my calender for 2 hours?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Event.end (FindLastEvent (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "please cancel Saturday event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Find Lincoln South Food Hall in Bellevue.",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Lincoln South Food Hall in Bellevue\")))"
  },
  {
    "original_sentence": "Can this accommodate groups?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Find Tofu 101 in Bellevue.",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Tofu 101 in Bellevue\")))"
  },
  {
    "original_sentence": "Do they accept groups?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Add to lunch sales meeting last Friday at 12:00 the location of outback.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch sales meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (previousDayOfWeek (Today) (Friday)) (NumberPM 12L))))) (Event.location_? (?= (LocationKeyphrase.apply \"outback\")))))))"
  },
  {
    "original_sentence": "Yeah, please repeat last week's ballet lesson event for this week.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceRecurring))"
  },
  {
    "original_sentence": "Ok. Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "The duration of lunch sales meeting was one hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (Event.subject_? (?~= \"lunch sales meeting\"))))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Yes, we ended up going to Logan's Steakhouse, please add that too.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.location_? (?= (LocationKeyphrase.apply \"Logan's Steakhouse\"))))))"
  },
  {
    "original_sentence": "I've got a week long training course starting on Tuesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"training course\")) (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (NextDOW (Tuesday)) (toWeeks 1))))))"
  },
  {
    "original_sentence": "Yes, schedule it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I'll be in Atlanta for a conference all day Friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"conference\")) (Event.location_? (?= (LocationKeyphrase.apply \"Atlanta\")))) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (NextDOW (Friday)))))))"
  },
  {
    "original_sentence": "Yes, please add it to the calendar.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "hello my name is Megan Bowen i need help",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "I need help with my calender",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Janice Kang have a wedding coming up",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"wedding\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice Kang\")))))))))))"
  },
  {
    "original_sentence": "yes it work may 8",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 8L (May))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "The annual BBQ is happening Saturday at 11AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"annual BBQ\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "please extend 45 minutes",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (addDurations (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint)))) (toMinutes 45)))))))"
  },
  {
    "original_sentence": "what is the weather today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "event changes look good please confirm",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Ok, thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Update annual BBQ to make it from 11:00 am to 3:30 pm on Saturday.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 11L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"annual BBQ\")))))) (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 3L 30L)))))))))"
  },
  {
    "original_sentence": "what is jims email",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jim\"))))))))"
  },
  {
    "original_sentence": "Okay change the end time of the BBQ to 4pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"BBQ\")))))) (Event.end_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Make a change to my gynecologist appointment on Friday to move to 4:00",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"gynecologist appointment\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Make it last 45 minutes.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toMinutes 45))))))"
  },
  {
    "original_sentence": "It looks right to me. Thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I am good. Thank you for your help.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a time to meet with my boss next week on Tuesday if possible.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (DowOfWeekNew (Tuesday) (NextWeekList))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Yes, pick the first one!",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Done , for meeting in particular time",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Cancel this meeting and reschedule for Monday",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Cancel the meeting!",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Do I have any meetings scheduled with Debi next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Debi\")))) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Let put a meet with doctor On next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"meet with doctor\")) (Event.start_? (DateTime.date_? (NextWeekList)))))))"
  },
  {
    "original_sentence": "Tuesday looks great. Let's do that one.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "today meet doctor",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"meet doctor\")) (Event.start_? (DateTime.date_? (?= (Today))))))))"
  },
  {
    "original_sentence": "I'd like the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you cancel my dentist appointment for Thursday and change it for Friday instead. Also set a cook timer for 1 hour.",
    "parse": "(do (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dentist appointment\")) (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)))))))))) (FenceScope))"
  },
  {
    "original_sentence": "Alright, now add an appointment after my date on the 3rd of next month for 4pm on the 4th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"date\")) (EventOnDate (MD 3L (NextMonth)) (^(Event) EmptyStructConstraint)))))))) 4L) (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Put eat with Jessie Thursday at 4pm for two hours. and then add shopping for shoes after that.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Please extend shopping for shoes another hour",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"shopping for shoes\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toHours 1))))))))"
  },
  {
    "original_sentence": "Schedule trip to Florida with Jeremy from 4/1-4/7.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (& (Event.subject_? (?= \"trip to Florida\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeremy\")))))))) (DateAndConstraint (MD 1L (toMonth 4L)) (MD 7L (toMonth 4L)))))))"
  },
  {
    "original_sentence": "is Apple Bee's a family friendly'",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Apple Bee's in Reno on Kietzke Ln\"))))))"
  },
  {
    "original_sentence": "Is Universal Studios in California family freidnyly",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Universal Studios in California\"))))))"
  },
  {
    "original_sentence": "Hey is Wild River Grille in Reno family friendly?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Wild River Grille in Reno\"))))))"
  },
  {
    "original_sentence": "What do I have scheduled on Saturday evening?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)) (Night))))"
  },
  {
    "original_sentence": "Clear out anything after 10pm.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "good work continues like this",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Saturday I am going to study from 7 to 9 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"study\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 9L)))))))))"
  },
  {
    "original_sentence": "Delete my plans for Friday.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Add a meeting to my calendar for Wednesday at noon and cancel the meeting for tomorrow at 1pm and also add a doctor appointment at 5:30 pm for one week from Friday.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "create baseball game on tuesday at 5",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"baseball game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "make it 1 hour longer",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (addDurations (toHours 1) (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint))))))))))"
  },
  {
    "original_sentence": "ting tang walla walla bing bang",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you update my first meeting on Monday to be at 10:15 am?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (FindNumNextEvent (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)) 1L)) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 10L 15L)))))))"
  },
  {
    "original_sentence": "Poptarts are tasty",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please tell me where that event is",
    "parse": "(Yield (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Nice, how long is it?",
    "parse": "(Yield (Event.duration (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Whats the date that its happening?",
    "parse": "(Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "go ahead and search for party event",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"party\"))))"
  },
  {
    "original_sentence": "When is my meeting tomorrow?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Please set up an entry for a meeting from 2:00 to 3:00 tomorrow.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L)))))))))"
  },
  {
    "original_sentence": "delete the birthday party friday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"birthday party\"))))))))))"
  },
  {
    "original_sentence": "Can you add birthday party to a week from Friday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"birthday party\")) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (NextDOW (Friday)) (toWeeks 1)))))))))"
  },
  {
    "original_sentence": "Delete my event for team meeting on Monday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"team meeting\"))))))))))"
  },
  {
    "original_sentence": "Thanks, put a new event for a make up of that meeting on Wednesday night starting at 8PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"make up of that meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "Excellent. How many meetings do I currently have on my calendar for the next 30 days?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"meetings\")) (DateAndConstraint (Today) (adjustByPeriod (Today) (toDays 30))))))"
  },
  {
    "original_sentence": "I need to use a room in Seattle tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.location_? (?= (LocationKeyphrase.apply \"Seattle\")))))))"
  },
  {
    "original_sentence": "who do I have lunch with",
    "parse": "(Yield (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))))"
  },
  {
    "original_sentence": "when is my doctor appointment?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor appointment\")))))))"
  },
  {
    "original_sentence": "what other events do i have this week",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))"
  },
  {
    "original_sentence": "where should i buy the birthday card",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"buy the birthday card\")))))))"
  },
  {
    "original_sentence": "where is the dentist",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist\")))))))"
  },
  {
    "original_sentence": "who is my dentist",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "whose birthday is it?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"birthday\"))))))"
  },
  {
    "original_sentence": "where should i buy my birthday card?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"buy my birthday card\")))))))"
  },
  {
    "original_sentence": "what do i do with barack obama",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"barack obama\"))))))"
  },
  {
    "original_sentence": "when is the coworker syncs",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"coworker syncs\")))))))"
  },
  {
    "original_sentence": "create a lunch appointment on thursday with Jeong-Ho Kim",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch appointment\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeong-Ho Kim\")))))))))))"
  },
  {
    "original_sentence": "yes june 6th 10 am",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (?= (DateAtTimeWithDefaults (MD 6L (June)) (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "set my status for DoDaDoDaDay to accepted",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"DoDaDoDaDay\"))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Tentatively accept the meeting for next Wednesday at 3 pm",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 3L)) (^(Event) EmptyStructConstraint))))) :response (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Decline the rave party with Bill tomorrow at 10 pm",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 10L)) (& (Event.subject_? (?~= \"rave party\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bill\"))))))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "ARRANGE MEETING WITH BOSS ON FRIDAY",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "1 pm is right",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "put lunch meet with ranjil",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch meet\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"ranjil\")))))))))))"
  },
  {
    "original_sentence": "have this event take place at chilis",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"chilis\"))))))"
  },
  {
    "original_sentence": "4 pm works",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "check my agenda and check what I have to do on Tuesday",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "ok!thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "ok!i tell you later.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Create a new appointment on thursday morning",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Thursday)))))))"
  },
  {
    "original_sentence": "Change it to have a 9 AM start time and I'll take that.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "Plan a dinner for Sally Tuesday at Red Lobster.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner for Sally\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))) (Event.location_? (?= (LocationKeyphrase.apply \"Red Lobster\")))))))"
  },
  {
    "original_sentence": "yellow",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need a doctor's appointment on Wednesday morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Wednesday))))))))"
  },
  {
    "original_sentence": "Hooka booka",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Delete my Dinner and Drinks from Sunday at 9 pm.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 9L)) (Event.subject_? (?~= \"Dinner and Drinks\"))))))))))"
  },
  {
    "original_sentence": "I need to talk to Melissa. What's her phone number?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Melissa\"))))))))"
  },
  {
    "original_sentence": "Great. I also need to shoot off an email to robert. What's his email?",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"robert\"))))))))"
  },
  {
    "original_sentence": "Where does he work?",
    "parse": "(Yield (Person.officeLocation (PersonFromRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Is there a number I can call Eurus at?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Eurus\"))))))))"
  },
  {
    "original_sentence": "Do I know a Mister Sloth?",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mister Sloth\")))))))"
  },
  {
    "original_sentence": "Where is his office?",
    "parse": "(Yield (Person.officeLocation (PersonFromRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "What will the weather be like for my 5k next week ?",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"5k\")) (NextWeekList)))))))"
  },
  {
    "original_sentence": "What will the weather be like at the 10k?",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"10k\")))))))"
  },
  {
    "original_sentence": "What will the weather be like at the 15k?",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"15k\")))))))"
  },
  {
    "original_sentence": "OK!",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "change my Karaoke Party on Saturday to start at 9 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"Karaoke Party\"))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 9L)))))))"
  },
  {
    "original_sentence": "yes, very good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "How did I respond to Kenneth's invitation?",
    "parse": "(Yield (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kenneth\")))))))))"
  },
  {
    "original_sentence": "Schedule a run this weekend.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"run\")) (Event.start_? (DateTime.date_? (ThisWeekend)))))))"
  },
  {
    "original_sentence": "The first one looks good.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Set up a hair cut for around noon on Thursday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"hair cut\")) (Event.start_? (DateTimeConstraint (TimeAround (Noon)) (NextDOW (Thursday))))))))"
  },
  {
    "original_sentence": "Actually make it around 6 am",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (TimeAround (NumberAM 6L)))))))"
  },
  {
    "original_sentence": "first one is good. Could you see what Events I have April 29th around 4 pm?",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (FindEventWrapperWithDefaults (EventDuringRangeDateTime (^(Event) EmptyStructConstraint) (AroundDateTime (DateAtTimeWithDefaults (MD 29L (April)) (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Hi, when is my second event next week?",
    "parse": "(Yield (FindNumNextEvent (Event.start_? (DateTime.date_? (NextWeekList))) 2L))"
  },
  {
    "original_sentence": "When is my second event next month?",
    "parse": "(Yield (Event.start (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))) 2L)))"
  },
  {
    "original_sentence": "one last question. What is my second event of next year?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullYearofYear (NextYear))) 2L))"
  },
  {
    "original_sentence": "Cancel anything I have scheduled for Friday",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Schedule a special dinner friday night",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"special dinner\")) (Event.start_? (DateTimeConstraint (Night) (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "Will it rain friday night?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTimeConstraint (Night) (NextDOW (Friday))))))"
  },
  {
    "original_sentence": "Schedule the special dinner for 8pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"special dinner\")) (Event.start_? (?= (NextTime (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "Yes but make it at 7pm instead.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "Yea, that will work.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "make it at antonio's",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"antonio's\"))))))"
  },
  {
    "original_sentence": "Has Angela texted me back yet",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Please remove my appointment on this week ?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))))))"
  },
  {
    "original_sentence": "Can you schedule Tennis with Kacey on Thursday at 7:45 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Tennis\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinuteAm 7L 45L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kacey\")))))))))))"
  },
  {
    "original_sentence": "Change the time to the late morning",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (LateMorning))))))"
  },
  {
    "original_sentence": "Make the time 10AM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "After tomorrow's events find 30 minutes for a walk",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"walk\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))))))) (Event.duration_? (?= (toMinutes 30)))))))"
  },
  {
    "original_sentence": "Change the time to 2:30pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinutePm 2L 30L)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Find 20 minutes for Watching News TV on Monday before 11 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Watching News TV\")) (Event.start_? (OnDateBeforeTime (NextDOW (Monday)) (NumberAM 11L)))) (Event.duration_? (?= (toMinutes 20)))))))"
  },
  {
    "original_sentence": "Yes 10am",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "move my meeting from friday to next monday",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))))))"
  },
  {
    "original_sentence": "Hold on a second, please reschedule.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (EventRescheduled (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Yeah that works",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "YUP, I HAVE CHANGED THE APPOINTMENT FOR YOU",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When is the soccer match with Tina this week?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"soccer match\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tina\"))))) (ThisWeek)))))))"
  },
  {
    "original_sentence": "Actually can you reschedule it?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Do I have any meetings scheduled for Friday afternoon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"
  },
  {
    "original_sentence": "yes good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "How long is the finance meeting on Tuesday?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"finance meeting\"))))))))"
  },
  {
    "original_sentence": "And the strategy meeting on Wednesday?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Wednesday)) (Event.subject_? (?~= \"strategy meeting\"))))))"
  },
  {
    "original_sentence": "Thanks for your help.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to schedule a dinner meeting on Friday evening with Bill Door. Give us two hours and put the location down for Commander's Palace.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (& (Event.subject_? (?= \"dinner meeting\")) (Event.start_? (DateTimeConstraint (Evening) (NextDOW (Friday))))) (Event.duration_? (?= (toHours 2)))) (Event.location_? (?= (LocationKeyphrase.apply \"Commander's Palace\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bill Door\")))))))))))"
  },
  {
    "original_sentence": "Let's go with the second option, please.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Do I have any meetings today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "How may I help",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "What appointments do I have tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "what's on my schedule this week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
  },
  {
    "original_sentence": "where's that happening?",
    "parse": "(Yield (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Who are my reports",
    "parse": "(Yield (FindReports (toRecipient (CurrentUser))))"
  },
  {
    "original_sentence": "Does Abby have any reports?",
    "parse": "(Yield (FindReports (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))"
  },
  {
    "original_sentence": "and who reports to Dan Schoffel ?",
    "parse": "(Yield (FindReports (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Schoffel\")))))))"
  },
  {
    "original_sentence": "and who reports to David Crim",
    "parse": "(Yield (FindReports (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David Crim\")))))))"
  },
  {
    "original_sentence": "Who are David's reports",
    "parse": "(Yield (FindReports (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David\")))))))"
  },
  {
    "original_sentence": "who is the organizer of Jazz Hands?",
    "parse": "(Yield (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Jazz Hands\")))))))"
  },
  {
    "original_sentence": "Show me my schedule for the week.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
  },
  {
    "original_sentence": "when is the next aa meeting?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"aa meeting\")) 1L)))"
  },
  {
    "original_sentence": "Great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you show me any flights I have next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"flights\")) (NextWeekList))))"
  },
  {
    "original_sentence": "oh!ok.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make a appointment for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "How many hours total did I spend with Kara this year?",
    "parse": "(FenceAggregation)"
  },
  {
    "original_sentence": "Cancel my dinner tonight, I'm getting take-out.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"dinner\"))) (Night)))))))))"
  },
  {
    "original_sentence": "Yes, please.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What do I have this week with Erin?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Erin\")))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))"
  },
  {
    "original_sentence": "Are there any events or meetings on the schedule for Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Can you please inform me if I have any appointments this afternoon.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Afternoon))))"
  },
  {
    "original_sentence": "I need to schedule a dentist appointment at 2 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (NextTime (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "yes but make it an hour",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "show me what's a-happening on my schedule",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Create an event on April 30th at 3:00 PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (MD 30L (April)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Make it last 4 hours. Call it BBQ with Fam.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.subject_? (?= \"BBQ with Fam\")) (Event.duration_? (?= (toHours 4)))))))"
  },
  {
    "original_sentence": "No, I want it to start at 2.30 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinutePm 2L 30L)))))))"
  },
  {
    "original_sentence": "its profect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you make it for 4 and a half hours instead please?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours (+ 4 0.5)))))))"
  },
  {
    "original_sentence": "buy tomorrow a ribbon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"ribbon\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "First one is good thanks.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make a appointment with my football coach on this Friday",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Schedule Football Game for next Thursday at 6:00 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Football Game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "Yes, it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you please invite John to the game also?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"game\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))))"
  },
  {
    "original_sentence": "thanks add the member",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "could you set up meeting with my son's teacher?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"meeting with my son's teacher\")))))"
  },
  {
    "original_sentence": "Can you delete all of my events on Sunday?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Can you tell me all of my events for next Sunday instead?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Search for doctor's appointment next month.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctor's appointment\")) (FullMonthofMonth (NextMonth)))))"
  },
  {
    "original_sentence": "Add a doctor's appointment on February 10th at 2 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 10L (February)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Excellent. Do I have any conflicts on that date?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you tell me when Maria Carey will be coming to California?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "okay",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Set a conference meeting tomorrow at 2 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"conference meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "ya",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks. Add a meeting with John tomorrow at 4:00 p.m.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))))"
  },
  {
    "original_sentence": "Thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "move my working lunch to an hour later",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"working lunch\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "what building is my lunch gonna be at?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))))"
  },
  {
    "original_sentence": "okay thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "heyyy",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "okay make me a meeting tomorrow morning",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Morning) (Tomorrow))))))"
  },
  {
    "original_sentence": "yeah hella",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "make another event right after that one",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "make it an hour",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "move my meeting with Ann in the winter to the Spring.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ann\")))) (SeasonWinter)))))) (Event.start_? (DateTime.date_? (SeasonSpring))))))"
  },
  {
    "original_sentence": "Confirm first option. Please make my meeting with Ann this spring at least two hours.",
    "parse": "(do (Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ann\")))) (SeasonSpring)))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "Perfect thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "okey thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I want to add a camping trip this summer",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"camping trip\")) (Event.start_? (DateTime.date_? (SeasonSummer)))))))"
  },
  {
    "original_sentence": "Do I meet with Frank this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Frank\")))) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Is there a sports event on Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"sports\")))))) 0L))"
  },
  {
    "original_sentence": "Do I have any upcoming lunch meetings this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"lunch meetings\")) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Do I have any days off this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything on the calendar with Sheila next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sheila\")))) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Delete event \"Jen's Baby Shower\"",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Jen's Baby Shower\")))))))))"
  },
  {
    "original_sentence": "Add Baby Shower to next Sunday at 5 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Baby Shower\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Add my doctor's appointment on Tuesday the 25th at 4 pm to 5 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (nextDayOfMonth (Today) 25L) (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "Show my next meeting with Mike",
    "parse": "(Yield (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mike\")))) 1L))"
  },
  {
    "original_sentence": "This looks great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Is that all for that day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (^(Event) EmptyStructConstraint) (Execute (refer (& (^(DateTime) roleConstraint (Path.apply \"end\")) (extensionConstraint (^(DateTime) EmptyStructConstraint))))))))) 0L))"
  },
  {
    "original_sentence": "can you arrange with 8.00 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "I need to see all the meetings I have after 5pm this month. Can you show me those?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventAfterDateTime (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today)))) (NextTime (NumberPM 5L)))))"
  },
  {
    "original_sentence": "Schedule a lunch for next Friday with Miriam",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Miriam\")))))))))))"
  },
  {
    "original_sentence": "Schedule a lunch next friday with Karl boon at 12 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 12L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karl boon\")))))))))))"
  },
  {
    "original_sentence": "No",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you make it 4pm?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Schedule a meeting Friday with Karl boon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karl boon\")))))))))))"
  },
  {
    "original_sentence": "Make it Saturday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "whats on my calendar for 2/25/19",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MDY 25L (toMonth 2L) (Year.apply 2019L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you add grocery shopping that day at 4 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"grocery shopping\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Yes, it looks right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "After that put get dinner ready at 5 pm that day.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"get dinner ready\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Yes get dinner ready is at 5pm, which is the correct time.",
    "parse": "(Yield (Execute (ConfirmCreateAndReturnAction (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "I'm going to need you to call Jon Snow for me",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jon Snow\"))))))))"
  },
  {
    "original_sentence": "Can you get Cersei Baratheon's phone number for me?",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cersei Baratheon\")))))))"
  },
  {
    "original_sentence": "Please call Tyrion Lannister",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tyrion Lannister\"))))))))"
  },
  {
    "original_sentence": "Can you call Baldwin DeSerra please?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Baldwin DeSerra\"))))))))"
  },
  {
    "original_sentence": "Call Tony White",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tony White\"))))))))"
  },
  {
    "original_sentence": "I need to cancel the meeting I have with Paige Ashworth for this coming Monday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\"))))))))))))"
  },
  {
    "original_sentence": "Okay, well can you add a meeting with Paige Ashworth for Tuesday at 9am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\")))))))))))"
  },
  {
    "original_sentence": "That is perfect. Thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What day was the doctor's appointment?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor's appointment\")))))))"
  },
  {
    "original_sentence": "Can you move that to the 25th?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 25L)))))))))"
  },
  {
    "original_sentence": "Do I have any client meetings scheduled for this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"client meetings\")) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "What's the second event?",
    "parse": "(Yield (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Could you book a vacation for me plus two?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"vacation for me plus two\")))))"
  },
  {
    "original_sentence": "Set up a meeting at the Anaheim convention center on Friday at 7:30 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 7L 30L)))) (Event.location_? (?= (LocationKeyphrase.apply \"Anaheim convention center\")))))))"
  },
  {
    "original_sentence": "Rename that to Hockey game",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"Hockey game\")))))"
  },
  {
    "original_sentence": "Will it be raining at that time?",
    "parse": "(Yield (IsRainy (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Reschedule the hockey game to Saturday. Will the weather still be clear?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "What are the chances of rain on saturday?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (rainPrecipProbability) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextDOW (Saturday)))))))"
  },
  {
    "original_sentence": "I need to move my board meeting to 11 am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"board meeting\")))))) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "Yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Get me a new event for tomorrow pretty please",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "The second one works, thank you",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "thanks. redo that",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "Schedule a breakfast with William on Monday at 9 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"breakfast\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 9L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"William\")))))))))))"
  },
  {
    "original_sentence": "Yes, it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please make a lunch meeting with Debbie tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Debbie\")))))))))))"
  },
  {
    "original_sentence": "Actually, cancel that request",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "I want to keep the 1 PM meeting and delete the first event on that date.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "schedule Dance Recital august 22nd at 3 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dance Recital\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 22L (August)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "The recital's getting pushed back, so cancel that please.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "What day is my sister's birthday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"sister's birthday\")))))))"
  },
  {
    "original_sentence": "What is the airspeed velocity of a fully laden swallow?",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "Do i have an event for my sister's birthday this year?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"sister's birthday\"))))) 0L))"
  },
  {
    "original_sentence": "hi, include members to attend the meeting on Monday",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Set up Team Titan Meeting for August 4th at 8 am in New York City.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Team Titan Meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 4L (August)) (NumberAM 8L))))) (Event.location_? (?= (LocationKeyphrase.apply \"New York City\")))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you cancel my next meeting following that?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (EventOnDateAfterTime (DateTime.date (Event.start x0)) (^(Event) EmptyStructConstraint) (DateTime.time (Event.start x0))) 1L))))))"
  },
  {
    "original_sentence": "Yes, please.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What is my next work ?",
    "parse": "(Yield (FindNumNextEvent (Event.subject_? (?~= \"work\")) 1L))"
  },
  {
    "original_sentence": "move my car work to 2 pm today",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"car work\")))))) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "yes 2 pm is the right time",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmUpdateAndReturnActionIntension (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "I have a car showing at 5 pm today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"car showing\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "excellent",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please reschedule my playdate with Tiffany for tomorrow @ 4:45 PM",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"playdate\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tiffany\"))))))))) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 4L 45L)))))))"
  },
  {
    "original_sentence": "ok looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make a new event pick up the green stuff",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"pick up the green stuff\")))))"
  },
  {
    "original_sentence": "the first one is great",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Mark me as Out of Office during my cruise trip next week.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"cruise trip\")) (NextWeekList)))))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thanks a bunch",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add Mark Johnson to the cruise trip as well.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"cruise trip\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark Johnson\"))))))))))"
  },
  {
    "original_sentence": "Yes, looking good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to make a dentists appointment next week.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentists appointment\")) (Event.start_? (DateTime.date_? (NextWeekList)))))))"
  },
  {
    "original_sentence": "I need it to be Thursday afternoon",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Thursday)))))))"
  },
  {
    "original_sentence": "Yes 2-2:30 pm will work",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (& (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 2L 30L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you remind me an hour ahead of my appointment",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Ok thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please search for any other meetings that I have on Tuesday.",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "What do I have going on Wednesday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "extend it till 5pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "Yes, ditch friends at 4 PM looks right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmUpdateAndReturnActionIntension (& (Event.subject_? (?= \"ditch friends\")) (Event.start_? (DateTime.time_? (?= (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "looks awesome",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Decline the meeting tomorrow at 9 with Kim for me please, and say Sorry I am busy",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"Sorry I am busy\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))) (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L)) (^(Event) EmptyStructConstraint)))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Thank you, that's perfect. Also can you decline the HR Board meeting next week for me, and tell them that \"I will be out of country at that time.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I will be out of country at that time\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"HR Board meeting\")) (NextWeekList))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "Perfect. Can you also decline the Superstore Watch Party for Thursday night?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Thursday)) (Event.subject_? (?~= \"Superstore Watch Party\"))) (Night))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "Yes it is",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please delete play chess with Ema from my schedule.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"play chess\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ema\"))))))))))))"
  },
  {
    "original_sentence": "Yep, go ahead and cancel that.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have anything planned for next Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Move brunch on saturday to sunday the same time",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"brunch\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Sunday)))))))))"
  },
  {
    "original_sentence": "looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "looks greate",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please add Bridal Shower for next Saturday as an all day event including the brunch.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"Bridal Shower\")) (NextDOW (Saturday))))))"
  },
  {
    "original_sentence": "Also block off September 2nd to 7th to help with wedding planning.",
    "parse": "(let (x0 (MD 2L (September))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"help with wedding planning\")) (Event.start_? (DateTime.date_? (?= x0)))) (Event.end_? (DateTime.date_? (?= (nextDayOfMonth x0 7L)))))))))"
  },
  {
    "original_sentence": "Tell me who organize next event",
    "parse": "(Yield (Event.organizer (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))"
  },
  {
    "original_sentence": "Me and Jake have a golf round to play Tuesday afternoon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"golf round to play\")) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Tuesday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))))))))))"
  },
  {
    "original_sentence": "Yeah either is good to me",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Cool. Could you try that last request again please?",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "Try that again",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "Please do that once more",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "When is the next dance recital",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"dance recital\")) 1L)))"
  },
  {
    "original_sentence": "When is my next meeting with mom?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Do I have any events with mom in them?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you tell me what day it is?",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "Any events for today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you search for an event under Doctor's appointment?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Doctor's appointment\"))))"
  },
  {
    "original_sentence": "What time is it?",
    "parse": "(Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "No, I need you to change the start time to 9:00 am.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "It should be an hour long.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "thanks 9AM at for",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmUpdateAndReturnActionIntension (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "When is my doctor appointment scheduled?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor appointment\"))))))"
  },
  {
    "original_sentence": "Can you cancel that please?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Thanks!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What does my monday look like?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you make that an hour long?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Perfect. What event do i have tomorrow?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "do I have anything on sunday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "What about next week?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))"
  },
  {
    "original_sentence": "I need to move my appointment with simon later in the day",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "What appointments do I have later than event with simon but on same day?",
    "parse": "(let (x0 (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"simon\"))))))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)))))"
  },
  {
    "original_sentence": "Do me a favor and postpone that until later on in the day",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (OnDateAfterTime (DateTime.date (Event.start x0)) (DateTime.time (Event.end x0))))))))"
  },
  {
    "original_sentence": "The 2nd one works well",
    "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Great, do i have anything later in theda y?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (Execute (refer (& (^(Date) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (^(Event) EmptyStructConstraint) (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Meet Jim on Tuesday at 2:00 pm at the park and Sam 2 days later for a work meeting at the same time, and another meeting with Sam next week at the same time on Thursday.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "do I have any appointment for the weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"appointment\")) (ThisWeekend))))) 0L))"
  },
  {
    "original_sentence": "Sam sent an apology replace him with jeff since he agrees to attend the costume party.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"costume party\")))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jeff\")))))))))))"
  },
  {
    "original_sentence": "it's perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "it also fine now, thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "please make a meet with my trainer",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I need to change my gym session to have Paul but Mark can't come.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"gym session\")))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paul\")))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\"))))))))))))"
  },
  {
    "original_sentence": "Add go to the gym on saturday morning",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go to the gym\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Saturday))))))))"
  },
  {
    "original_sentence": "the first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok i am ready.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "ok i will tell you after",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What events do I have on my calendar tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What else is scheduled for tomorrow?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "I'l like to have tea with Erica next Wednesday at 11:30 AM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"tea\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (HourMinuteAm 11L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Erica\")))))))))))"
  },
  {
    "original_sentence": "Add a meeting for next Wednesday at 11:30 AM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (HourMinuteAm 11L 30L)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "change title to \"Tea with Erica\"",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"Tea with Erica\")))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "change location to \"Coffeehouse Steamer\"",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Coffeehouse Steamer\"))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "change duration to 1 hour",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I'm busy this Saturday from 8AM to 4PM",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L))))) (Event.showAs_? (?= (ShowAsStatus.Busy))))))))"
  },
  {
    "original_sentence": "looks good to me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "great. thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "ok. bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "make an appointment with my mom at today 6 pm",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "make an appointment with Jerri Skinner at today 6 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 6L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jerri Skinner\")))))))))))"
  },
  {
    "original_sentence": "Set tomorrows event status to busy.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))) (Event.showAs_? (?= (ShowAsStatus.Busy))))))"
  },
  {
    "original_sentence": "That looks wrong.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Find the location of Petco in Dalton.",
    "parse": "(FencePlaces)"
  },
  {
    "original_sentence": "I need to go to Petco in Dalton today at 3 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L)))) (Event.location_? (?= (LocationKeyphrase.apply \"Petco in Dalton\")))))))"
  },
  {
    "original_sentence": "I think I am going to cancel that and schedule a trip to the vet at that time.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.subject_? (?= \"trip to the vet\")) (Event.location_? (^(LocationKeyphrase) AlwaysFalseConstraint))))))"
  },
  {
    "original_sentence": "Alright, thanks a lot.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I am good for now. Thank you very much.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Hello! Schedule a breakfast with Walter Bishop for next Friday at 6 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"breakfast\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 6L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Walter Bishop\")))))))))))"
  },
  {
    "original_sentence": "That's good. What else is that morning?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction)) x1 (^(Dynamic) item x0)) (do (Yield x0) (Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id x1)))) (EventOnDateWithTimeRange (EventOnDate (DateTime.date (Event.start x1)) (^(Event) EmptyStructConstraint)) (Morning)))))))"
  },
  {
    "original_sentence": "Schedule a volleyball game for Monday at 8 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"volleyball game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "It is. What else is scheduled for that morning?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction)) x1 (^(Dynamic) item x0)) (do (Yield x0) (Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id x1)))) (EventOnDateWithTimeRange (EventOnDate (DateTime.date (Event.start x1)) (^(Event) EmptyStructConstraint)) (Morning)))))))"
  },
  {
    "original_sentence": "do I have any meetings for the 5th?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 5L) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "can you confirm I have a meeting on the 6th?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 6L) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Change meeting today to 4pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Actually, just schedule a team meeting today at 4 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Make that an hour",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have any meetings scheduled for Friday afternoon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"
  },
  {
    "original_sentence": "Actually I meant Saturday morning",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDateWithTimeRange (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday)) (^(Event) EmptyStructConstraint)) (Morning)))))"
  },
  {
    "original_sentence": "when is kite flying",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"kite flying\")))))))"
  },
  {
    "original_sentence": "i meant the Kite Flying Date with kim",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.subject_? (?~= \"Kite Flying Date\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"kim\"))))))))"
  },
  {
    "original_sentence": "When is reading day",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"reading day\")))))))"
  },
  {
    "original_sentence": "wait i meant the one with kim in May",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"kim\")))) (FullMonthofMonth (May))))))"
  },
  {
    "original_sentence": "who me?",
    "parse": "(Yield (CurrentUser))"
  },
  {
    "original_sentence": "What do I have on the schedule beside the Lupe Fiasco show?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (negate (?~= \"Lupe Fiasco show\")))))"
  },
  {
    "original_sentence": "When will my next event be that isn't \"Team Meeting\"",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (negate (?~= \"Team Meeting\"))) 1L)))"
  },
  {
    "original_sentence": "What do I have next Monday besides work?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.subject_? (negate (?~= \"work\"))) (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Where is dance party the week of the 24th",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"dance party\")) (WeekOfDateNew (nextDayOfMonth (Today) 24L))))))))"
  },
  {
    "original_sentence": "Do I have grocery shopping scheduled this weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?= \"grocery shopping\")) (ThisWeekend))))) 0L))"
  },
  {
    "original_sentence": "Change that to 1:00.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule \"Write Emails' at 3 pm today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Write Emails'\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change the end time to 5, please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "yes it's great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "How much is chocolate ice cream at Scoops?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"chocolate ice cream at Scoops\"))))))"
  },
  {
    "original_sentence": "How much expensive is Coldstones in Woodinville?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Coldstones in Woodinville\"))))))"
  },
  {
    "original_sentence": "What is the cost of Buenos Grill in Reno?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Buenos Grill in Reno\"))))))"
  },
  {
    "original_sentence": "verify this mornings schedule",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Morning))))"
  },
  {
    "original_sentence": "Lets delete Tea Time off that",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Tea Time\")))))))))"
  },
  {
    "original_sentence": "Yes thanks!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "very good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to make another event please",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "No, I need something available on Friday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "what is today's date",
    "parse": "(Yield (Today))"
  },
  {
    "original_sentence": "Update visit to mom next month from Thursday through Sunday instead of Saturday.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"visit to mom\")) (FullMonthofMonth (NextMonth))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (DateAndConstraint (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Thursday)) (ClosestDayOfWeek (DateTime.date (Event.end x0)) (Sunday)))))))))"
  },
  {
    "original_sentence": "The second one is best",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Change visit to mom event to September 6 through September 9.",
    "parse": "(let (x0 (MD 6L (September))) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (DateAndConstraint x0 (nextMonthDay x0 (September) 9L)))))))"
  },
  {
    "original_sentence": "no,cancel this visit",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Create all day cat petting event for next Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"cat petting\")) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (NextDOW (Monday)))))))"
  },
  {
    "original_sentence": "create work meeting with Damon on tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"work meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon\")))))))))))"
  },
  {
    "original_sentence": "The first one works for me actually!",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you cancel the meeting I have planned with Jess and her Boss tomorrow?",
    "parse": "(let (x0 (PersonName.apply \"Jess\")) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))))))))))))"
  },
  {
    "original_sentence": "Yes it is.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule a meeting with Ali and her boss on Friday at 9:30 AM.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ali\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteAm 9L 30L)))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "Schedule Rap concert for Saturday at 9 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Rap concert\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 9L))))))))"
  },
  {
    "original_sentence": "Actually that'll be three hours long.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 3))))))"
  },
  {
    "original_sentence": "Could you schedule a meeting with Paige Ashworth?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\"))))))))))"
  },
  {
    "original_sentence": "Yes, the one on Wednesday works",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to add a one hour meeting with Emily to my schedule this afternoon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTimeConstraint (Afternoon) (Today))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\")))))))))))"
  },
  {
    "original_sentence": "Yes, the first one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok its good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When is my next dentist appointment?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"dentist appointment\")) 1L)))"
  },
  {
    "original_sentence": "hmm ok thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "change the timing to 3pm-4pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Cancel it please.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "When did my event in last March occur?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofPreviousMonth (March)))))) 0L))"
  },
  {
    "original_sentence": "Okay, that's good to know. When I did attend the Boat Racing Competition last September?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Boat Racing Competition\")) (FullMonthofPreviousMonth (September))))))))"
  },
  {
    "original_sentence": "Did i have anything last August?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofPreviousMonth (August)))))) 0L))"
  },
  {
    "original_sentence": "Create an event in 2020 for a high school reunion.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"high school reunion\")) (Event.start_? (DateTime.date_? (FullYearofYear (Year.apply 2020L))))))))"
  },
  {
    "original_sentence": "yes, also update my New Year's Resolutions to be sometime in 2021",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"New Year's Resolutions\")))))) (Event.start_? (DateTime.date_? (FullYearofYear (Year.apply 2021L))))))))"
  },
  {
    "original_sentence": "the first one",
    "parse": "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "That's good. Set up a event in 2022",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (FullYearofYear (Year.apply 2022L)))))))"
  },
  {
    "original_sentence": "What am I doing with Cher?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher\"))))))"
  },
  {
    "original_sentence": "Add lunch with Cher on Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher\")))))))))))"
  },
  {
    "original_sentence": "Yes, the second one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "when is Barack coming?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "When is Wade coming?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "Add pick up Wade and Barack from bus station",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pick up\")) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wade\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack\"))))))))))))"
  },
  {
    "original_sentence": "Add event pick up Wade and Barack from bus station to Thursday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pick up Wade and Barack from bus station\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday)))))))))"
  },
  {
    "original_sentence": "How do I create a new event?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Add pick up Barack and Wade to Thursday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"pick up\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday)))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wade\"))))))))))))"
  },
  {
    "original_sentence": "yes, the first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "make event 12/23/19 at 2:00pm for three hours",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MDY 23L (toMonth 12L) (Year.apply 2019L)) (NumberPM 2L)))) (Event.duration_? (?= (toHours 3)))))))"
  },
  {
    "original_sentence": "Make it \"Budget\".",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"Budget\")))))"
  },
  {
    "original_sentence": "when is my 3rd Event on friday?",
    "parse": "(Yield (Event.start (FindNumNextEvent (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) 3L)))"
  },
  {
    "original_sentence": "Where is my third event located?",
    "parse": "(Yield (Event.location (FindNumNextEvent (^(Event) EmptyStructConstraint) 3L)))"
  },
  {
    "original_sentence": "You're sure my 3rd event is happening at Yoyo Arena?",
    "parse": "(Yield (== (Event.location (FindNumNextEvent (^(Event) EmptyStructConstraint) 3L)) (LocationKeyphrase.apply \"Yoyo Arena\")))"
  },
  {
    "original_sentence": "What day is the shopping spree sale?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"shopping spree sale\")))))))"
  },
  {
    "original_sentence": "Good. And also schedule Nap Time for August 2 at 2 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Nap Time\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextMonthDay (Today) (August) 2L) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Yes, please make nap time for 3 hours instead.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 3))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Good. And also delete Late Lunch at 3 pm from the Monday after this.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (nextDayOfWeek (Today) (Monday)) (NumberPM 3L)) (Event.subject_? (?~= \"Late Lunch\"))))))))))"
  },
  {
    "original_sentence": "Please cancel my 3 o'clock on the 25th.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (nextDayOfMonth (Today) 25L) (NumberPM 3L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Yes thats the one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "put the dinner with jimmy at 9.00 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (NextTime (NumberPM 9L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jimmy\")))))))))))"
  },
  {
    "original_sentence": "Yep, it is.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "add an hour at the gym after that",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (Event.duration_? (?= (toHours 1)))) (Event.location_? (?= (LocationKeyphrase.apply \"the gym\")))))))"
  },
  {
    "original_sentence": "Where do I have dinner scheduled for tonight?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"dinner\"))) (Night)))))))"
  },
  {
    "original_sentence": "are kids allowed?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Is there a happy hour at Rocco's Italian Restaurant?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.HappyHour) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Rocco's Italian Restaurant\"))))))"
  },
  {
    "original_sentence": "How many people fit in their largest table offered?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Are there booster seats for babies at Rocco's Italian Restaurant?",
    "parse": "(FencePlaces)"
  },
  {
    "original_sentence": "Sally and Jane can't make it to the last event of October anymore.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (FindLastEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (October))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sally\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\"))))))))))))"
  },
  {
    "original_sentence": "that looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "okey thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Sally can't make it to dinner anymore but Jane can",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\")))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sally\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\")))))))))))"
  },
  {
    "original_sentence": "Jane isn't going to lunch but Sally is",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sally\")))))))))))"
  },
  {
    "original_sentence": "I want to meet with Stephanie sometime this week. When do I have time free for a lunch?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (ThisWeek)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Stephanie\")))))))))))"
  },
  {
    "original_sentence": "your choice how help with me.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have anything scheduled for tomorrow at noon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (Noon)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Add meeting with attendees at the conference on Friday at 10:00 am for 1 hour.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Can you tell me my log in name?",
    "parse": "(Yield (CurrentUser))"
  },
  {
    "original_sentence": "And who is my manager currently?",
    "parse": "(Yield (FindManager (toRecipient (CurrentUser))))"
  },
  {
    "original_sentence": "please cancel my all today appointment",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "please cancel my all today appointment",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Please cancel my afternoon appointment with Dan Schoffel.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Schoffel\")))) (EventDuringRangeTime (^(Event) EmptyStructConstraint) (Afternoon))))))))))"
  },
  {
    "original_sentence": "How many apopintments do I have this week?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))))"
  },
  {
    "original_sentence": "Please create an event for Crash Carriers on Saturday for 4 hours",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Crash Carriers\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))) (Event.duration_? (?= (toHours 4)))))))"
  },
  {
    "original_sentence": "10 am is good",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Schedule a marathon run with Mark Sunday at 8 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"marathon run\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))))))))))"
  },
  {
    "original_sentence": "Yes, but change the end time to noon.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (Noon)))))))"
  },
  {
    "original_sentence": "That's fine, can you schedle a lunch right after it is over?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (Event.end (^(Dynamic) item x0))))))))))"
  },
  {
    "original_sentence": "Oh actually, if you can give me a little time between, let's say lunch at 1?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Yeah, and could you add Jade to the event.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jade\"))))))))))"
  },
  {
    "original_sentence": "conference for work saturday 2 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"conference for work\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Make the location conference room B for that event.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"conference room B\"))))))"
  },
  {
    "original_sentence": "I had some breakfast yesterday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"breakfast\")) (Event.start_? (DateTime.date_? (?= (Yesterday))))))))"
  },
  {
    "original_sentence": "The 2nd one works.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "make my coffee time with my wife on today evening 7p.m.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "make my coffee time with my wife Monika on today evening 7p.m.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"coffee time\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 7L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Monika\")))))))))))"
  },
  {
    "original_sentence": "cool, 8:00 pm with okay",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "make a appointment tomorrow 12PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "that is right with the ending at 12 30",
    "parse": "(Yield (Execute (ConfirmCreateAndReturnAction (Event.end_? (DateTime.time_? (?= (HourMinutePm 12L 30L)))))))"
  },
  {
    "original_sentence": "I think I'm lost. Where am I at?",
    "parse": "(Yield (Here))"
  },
  {
    "original_sentence": "Delete the dress shopping trip at Newport Hills Shopping Center on Monday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (& (Event.subject_? (?~= \"dress shopping trip\")) (Event.location_? (?= (LocationKeyphrase.apply \"Newport Hills Shopping Center\"))))))))))))"
  },
  {
    "original_sentence": "Yeah is it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Well done",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Set me up a shopping trip for the day after that.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"shopping trip\")) (Event.start_? (?= (adjustByPeriodDuration (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply (toDays 1)))))))))"
  },
  {
    "original_sentence": "Make it the one from 12:30 to 1:00",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (& (Event.start_? (DateTime.time_? (?= (HourMinutePm 12L 30L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 1L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you book a conference room at Bellevue for tomorrow at 2:00 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Bellevue\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Abby and I need a room in Cambridge for a performance review.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"performance review\")) (Event.location_? (& (?= (LocationKeyphrase.apply \"Cambridge\")) (roomRequest)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "The 2nd one is the littest of them all",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "That is really good thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what will with weather be like at the Fishing Trip",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Fishing Trip\")))))))"
  },
  {
    "original_sentence": "What will the weather be like at the Retreat",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Retreat\")))))))"
  },
  {
    "original_sentence": "What will the weather be like at the Dinner Date",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Dinner Date\")))))))"
  },
  {
    "original_sentence": "what is the aveage temperature in october",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "what is the forecast for today",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "can i have the 5 day forecast",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (NextPeriod (toDays 5)))))"
  },
  {
    "original_sentence": "will it rain next week",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (NextWeekList)))))"
  },
  {
    "original_sentence": "thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you please set up appointment with my dentist on February 2nd and then next day mark the calendar for my meeting with the regional officer at headquarter?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Sorry to bother you again, but, can you please find me a Cheesecake Factory?",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Cheesecake Factory\")))"
  },
  {
    "original_sentence": "Thanks! Can you fin out if they'll take a group reservation?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Find Shirokiya in Hawaii",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Shirokiya in Hawaii\")))"
  },
  {
    "original_sentence": "are large parties okay there?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Where am I planning to meet Carla?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carla\")))))))))"
  },
  {
    "original_sentence": "Oh that makes sense, you can accept it now",
    "parse": "(Yield (EventAttendance :event (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "create work meeting on friday at 8",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"work meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need 1 hour to go hiking at Hills Park later",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"go hiking\")) (Event.duration_? (?= (toHours 1)))) (Event.location_? (?= (LocationKeyphrase.apply \"Hills Park\")))))))"
  },
  {
    "original_sentence": "When did I have a lunch with mom last year?",
    "parse": "(Yield (TimeSinceEvent (FindLastEvent (EventDuringRange (Event.subject_? (?~= \"lunch with mom\")) (FullYearofYear (LastYear))))))"
  },
  {
    "original_sentence": "Am I meeting with John anytime this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Is there anything scheduled before?",
    "parse": "(let (x0 (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateBeforeTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))) 0L)))"
  },
  {
    "original_sentence": "Do I have a meeting Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Okay can you check for Saturday now?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "What day is my 3pm staff meeting?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 3L)) (Event.subject_? (?~= \"staff meeting\"))))))))"
  },
  {
    "original_sentence": "change that meeting from 15th to 20th at 3 pm",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 15L) (^(Event) EmptyStructConstraint)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 20L)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "yeah it's great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "LOVE",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "4Pm is the start of the game.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"game\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Please delete my appointment for 4:00 Saturday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 4L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Search for events on Monday.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you find my next dental appointment?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dental appointment\"))))"
  },
  {
    "original_sentence": "What's going on next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "And?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Where is my 3pm meeting today?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 3L)) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Can you change the end time to 4:00 PM?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Yes that looks correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you help me find the location?",
    "parse": "(Yield (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Change that to 3208B please?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"3208B\"))))))"
  },
  {
    "original_sentence": "What's the day I have the lest stuff going on next week?",
    "parse": "(FenceAggregation)"
  },
  {
    "original_sentence": "make a meeting with pattinson tomorrow 8.30 am - 9.00 am",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (HourMinuteAm 8L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 9L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"pattinson\"))))))))))))"
  },
  {
    "original_sentence": "What is the weather in Concrete Washington",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Concrete Washington\"))) (?= (Now))))"
  },
  {
    "original_sentence": "confirm the meeting with pattinson",
    "parse": "(Yield (Execute (ConfirmCreateAndReturnAction (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"pattinson\"))))))))))"
  },
  {
    "original_sentence": "Update Meeting with Pattinson tommorrow at 8:30 to add location of Denny's so we can eat breakfast.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (HourMinuteAm 8L 30L)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Pattinson\"))))))))) (& (Event.subject_? (?= \"eat breakfast\")) (Event.location_? (?= (LocationKeyphrase.apply \"Denny's\")))))))"
  },
  {
    "original_sentence": "Yes that looks right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "How long has Pattinson been with the company?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "Change the location to \"Arby's\" instead.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Arby's\"))))))"
  },
  {
    "original_sentence": "Yes, but Pattinson likes Jack in the Box better.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.location_? (?= (LocationKeyphrase.apply \"Jack in the Box\"))))))"
  },
  {
    "original_sentence": "Can you update my Golf Session to be on the 3rd at 4:15 pm?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Golf Session\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 3L)) (HourMinutePm 4L 15L))))))))"
  },
  {
    "original_sentence": "tide",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Book a Summit with Tom and Jerry tomorrow at 2:30 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Summit\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 2L 30L))))) (Event.attendees_? (& (AttendeeListHasRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))) (AttendeeListHasRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jerry\"))))))))))"
  },
  {
    "original_sentence": "Change the time to 3:30",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))))))"
  },
  {
    "original_sentence": "Don't forget your colon today",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "hellp",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "what is the weather like this weekend in navarre, fl?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"navarre, fl\"))) (DateTime.date_? (ThisWeekend))))"
  },
  {
    "original_sentence": "no chance of rain?",
    "parse": "(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "is there rain next week?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (NextWeekList)))))"
  },
  {
    "original_sentence": "what is the weather in orlando, fl in january?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"orlando, fl\"))) (?= (Now))))"
  },
  {
    "original_sentence": "orlando, fl weather for january 1?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"orlando, fl\"))) (DateTime.date_? (?= (MD 1L (January))))))"
  },
  {
    "original_sentence": "Is it snowing in Denver?",
    "parse": "(Yield (IsSnowy (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Denver\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "add sales meeting tomorrow at 10 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"sales meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "nice",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "create general meeting on 7th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"general meeting\")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 7L))))))))"
  },
  {
    "original_sentence": "Please schedule general meeting to 2:00 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "very nice",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "This is great!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Hi, can you add a meeting with Hailey at lunch and ending at the end of the day on Friday please?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (Lunch))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (EndOfWorkDay))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Hailey\"))))))))))))"
  },
  {
    "original_sentence": "okay",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to add a staff meeting one hour after my team meeting.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"staff meeting\")) (Event.start_? (?= (adjustByPeriodDuration (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"team meeting\")))))) (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "yeah!thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "yeah!great thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to make an appointment with boss at 10 am next Wednesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 10L)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "work meeting after school",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"work meeting\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"school\"))))))))))))"
  },
  {
    "original_sentence": "can you please remove tristan from the meeting?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"tristan\")))))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Since the name of the meeting is \"meeting with Tristan\" and you have removed him from the event, then cancel the entire event.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"meeting with Tristan\")))))))))"
  },
  {
    "original_sentence": "Also remove Titan from that",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Titan\")))))))))))"
  },
  {
    "original_sentence": "Rachel isn't coming bowling with us today.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"bowling\"))))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rachel\")))))))))))"
  },
  {
    "original_sentence": "Can you schedule 3 hours for a concert on Saturday at 5:00 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"concert\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 5L))))) (Event.duration_? (?= (toHours 3)))))))"
  },
  {
    "original_sentence": "confirmed great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please add Taylor to that",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Taylor\"))))))))))"
  },
  {
    "original_sentence": "Yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "good job",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule Mom's Birthday for January 5 at noon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Mom's Birthday\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 5L (January)) (Noon))))))))"
  },
  {
    "original_sentence": "Delete my meetings next week.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "What events do I have for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you tell me what the second event tomorrow is and also, please take off any appointments I have on Friday afternoon.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Mark Friday as Busy.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.showAs_? (?= (ShowAsStatus.Busy))) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (NextDOW (Friday)))))))"
  },
  {
    "original_sentence": "Cancel all my Friday appointments that begin after 12 noon.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I have a lunch Sweet Potato Pam's at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch Sweet Potato Pam's\")) (Event.start_? (?= (NextTime (Noon))))))))"
  },
  {
    "original_sentence": "Schedule dinner with Erica at 6pm for 45 minutes.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (NextTime (NumberPM 6L))))) (Event.duration_? (?= (toMinutes 45)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Erica\")))))))))))"
  },
  {
    "original_sentence": "Tomorrows lunch should be for an hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"lunch\"))))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Saturday I an going to sit around and read from 10 am to 5 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"sit around and read\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "What do I have on the 5th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 5L) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "cancel the next meeting with John",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))) 1L)))))"
  },
  {
    "original_sentence": "wait, don't do it",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Hi. I need to know who manages Emily.",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\")))))))"
  },
  {
    "original_sentence": "Can I schedule an appointment with Emily on Tuesday at 1?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 1L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\")))))))))))"
  },
  {
    "original_sentence": "No. Please extend the meeting to 2:00 PM.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Good. Also please invite Sokka.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sokka\"))))))))))"
  },
  {
    "original_sentence": "Remove Emily from the list.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\")))))))))))"
  },
  {
    "original_sentence": "Add to calendar a pitch meeting with Ross and his manager on Thursday at 10:30 am.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ross\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"pitch meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinuteAm 10L 30L))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "change the pitch meeting at 10.30 am to 11.30 am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?= \"pitch meeting\")) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))))))) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 11L 30L)))))))"
  },
  {
    "original_sentence": "Change pitch meeting to start at 11:30 am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"pitch meeting\")))))) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 11L 30L)))))))"
  },
  {
    "original_sentence": "Yes but make it for an hour please.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Can you update my presentation to last an hour instead of 30 minutes.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"presentation\")))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Looks right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "On that same day I have a Dentist appointment at 9:30am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (HourMinuteAm 9L 30L))))))))"
  },
  {
    "original_sentence": "yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to cancel my meeting with Sarah tomorrow night at 5.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\"))))))))))))"
  },
  {
    "original_sentence": "Rating for Breakthrough Reno in Reno. thanks",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Breakthrough Reno in Reno\"))))))"
  },
  {
    "original_sentence": "strongly like. What about Taylor's in Loomis?",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Taylor's in Loomis\"))))))"
  },
  {
    "original_sentence": "How well is Chungas on 900 W in Salt Lake City",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Chungas on 900 W in Salt Lake City\"))))))"
  },
  {
    "original_sentence": "Could you tell me exactly when the meeting with Jack and the boss is?",
    "parse": "(let (x0 (PersonName.apply \"Jack\")) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))))))))))))"
  },
  {
    "original_sentence": "Ok Move it to 2PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "yeah, good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Yes. Also delay my meeting with Adam Rian's boss by a day.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Adam Rian\")))))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (DateTime.date (Event.start x0)) (toDays 1)))))))))"
  },
  {
    "original_sentence": "Delay it by 2 hours as well.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (?= (adjustByPeriodDuration (Execute (refer (extensionConstraint (^(DateTime) EmptyStructConstraint)))) (PeriodDuration.apply :duration (toHours 2))))))))"
  },
  {
    "original_sentence": "Remove all appointments for Friday afternoon that will occur after 2 PM.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Can you remove the first appointment I have on Friday after 2?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (EventOnDateAfterTime (NextDOW (Friday)) (^(Event) EmptyStructConstraint) (NumberPM 2L)) 1L)))))"
  },
  {
    "original_sentence": "Yes, cancel this please.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Sounds good, are there any other appoitnments left after 2PM?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (NumberPM 2L))))"
  },
  {
    "original_sentence": "I'd like you to schedule a meeting with Anne at 2pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Anne\")))))))))))"
  },
  {
    "original_sentence": "I arrange a party for my kid birthday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"party for my kid birthday\")))))"
  },
  {
    "original_sentence": "could you buy things for it",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "oh sorry...",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "arrange a lunch",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"lunch\")))))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "no problem",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "no....",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to schedule some time next month to prepare my taxes. I should probably set aside three hours",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"prepare my taxes\")) (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth))))) (Event.duration_? (?= (toHours 3)))))))"
  },
  {
    "original_sentence": "Let's go with the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need to set up a dinner at 7 pm not this friday but the one after.",
    "parse": "(let (x0 (Friday)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfWeek (NextDOW x0) x0) (NumberPM 7L)))))))))"
  },
  {
    "original_sentence": "set up an event on the 15th from 10 am to 3 pm for dinner planning",
    "parse": "(let (x0 (DateAtTimeWithDefaults (nextDayOfMonth (Today) 15L) (NumberAM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner planning\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L)))))))))"
  },
  {
    "original_sentence": "delete dentist appointment",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\")))))))))"
  },
  {
    "original_sentence": "yes and make dentist appointment March 5 at 11 am",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 5L (March)) (NumberAM 11L)))))))))"
  },
  {
    "original_sentence": "I need help with updating my meeting for tomorrow.",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Do I have an appointment with Cecelia Waller soon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cecelia Waller\"))))))) 0L))"
  },
  {
    "original_sentence": "Set up an appointment for Cecelia Waller for 9pm tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cecelia Waller\")))))))))))"
  },
  {
    "original_sentence": "Yes, this is right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Remove Wade Blakeley from my contacts list.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Update the appointment with Cecelia Waller",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "I want to schedule a party with Cher Roydon at 7pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"party\")) (Event.start_? (?= (NextTime (NumberPM 7L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher Roydon\")))))))))))"
  },
  {
    "original_sentence": "This is good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I have to add the marketing meeting to my calendar to my calendar. It starts Friday of this week at 10 am and ends at noon and is in the main conference room.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (DowOfWeekNew (Friday) (ThisWeek)) (NumberAM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"marketing meeting\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (Noon))))) (Event.location_? (?= (LocationKeyphrase.apply \"main conference room\"))))))))"
  },
  {
    "original_sentence": "I also have a team meeting that day at 3 pm lasting an hour in meeting room 2",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 3L))))) (Event.duration_? (?= (toHours 1)))) (Event.location_? (?= (LocationKeyphrase.apply \"meeting room 2\")))))))"
  },
  {
    "original_sentence": "Can you also make an event called night out with the wife starting this friday at 6 pm lasting until 8 pm showing me as busy. We will be at Anthony's Italian grill.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Send an invite to my Mom for lunch on Friday at noon at McCalister's Deli.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Can you change the meeting tomorrow from 4 to 2 pm?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Great, now can you add lunch for tomorrow at 12pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "Great, thank you!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "That will be all for now.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "On second thought, can you actually make the lunch tomorrow for an hour, so it'll be from 12 to 1pm instead?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"lunch\")))))) x1 (DateAtTimeWithDefaults (DateTime.date (Event.start x0)) (NumberPM 12L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (NumberPM 1L))))) (Event.duration_? (?= (toHours 1))))))))"
  },
  {
    "original_sentence": "change Party Time for sometime that isnt the weekend",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Party\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Yoga needs to be updaated so that it isnt on the weekend",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Yoga\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "first one is perfect",
    "parse": "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please change the football game to sometime other than the weekend",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"football game\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Am I meeting with bill on friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bill\")))))))) 0L))"
  },
  {
    "original_sentence": "Schedule Plant a Lemon Tree for Monday at 3 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Plant a Lemon Tree\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "cups knives forks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule Marathon for Sunday at 7 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Marathon\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 7L))))))))"
  },
  {
    "original_sentence": "make start time as 6.00 am",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 6L)))))))"
  },
  {
    "original_sentence": "Set aside 15 minutes for the meeting at 1.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 1L)))) (Event.duration_? (?= (toMinutes 15)))))))"
  },
  {
    "original_sentence": "First one please.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What day of the week was my sister's birthday last year?",
    "parse": "(Yield (Date.dayOfWeek (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"sister's birthday\")) (FullYearofYear (LastYear))))))))))"
  },
  {
    "original_sentence": "Where did I meet Elli for coffee last year?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"coffee\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\"))))) (FullYearofYear (LastYear))))))))"
  },
  {
    "original_sentence": "Will Dave be at the meeting today?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dave\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "What do I have schedule with Paul next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paul\")))) (NextWeekList))))"
  },
  {
    "original_sentence": "What about next month?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))))))"
  },
  {
    "original_sentence": "How about with Jane?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\"))))))"
  },
  {
    "original_sentence": "And what about Tiffany?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tiffany\"))))))"
  },
  {
    "original_sentence": "And lastly, what about Steve?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steve\"))))))"
  },
  {
    "original_sentence": "Please search for the time of dinner with ricks parents on Sunday.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Reschedule til 7 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Create event shopping with ricks mom from 4:30 to 6:30 pm on Sunday.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please update the location to Stop & Shop",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Stop & Shop\"))))))"
  },
  {
    "original_sentence": "Yep",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Put a note on the event to buy eggs.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Is there a Happy Hour in The Rack in Reno?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.HappyHour) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"The Rack in Reno\"))))))"
  },
  {
    "original_sentence": "Ok cool, does Lucky Beaver in Reno have a Happy Hour?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.HappyHour) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Lucky Beaver in Reno\"))))))"
  },
  {
    "original_sentence": "Does Casa Baeza in Truckee have happy hour?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.HappyHour) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Casa Baeza in Truckee\"))))))"
  },
  {
    "original_sentence": "Do I see Jamie today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamie\")))))))) 0L))"
  },
  {
    "original_sentence": "Okay thank you very uch",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What meetings do I have this week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
  },
  {
    "original_sentence": "Do I have a doctor's appointment next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctor's appointment\")) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Okay thanks for trying",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Cancel my dentist appointment on Friday, reschedule it for Monday, but at 3 PM not 4 PM; then cancel both current sales meetings this week and add golf with Jim at Arbor Oaks to Friday at 1 PM and cancel anything else scheduled for Friday.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "HI",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "I'm here to talk to you",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Who is the supervisor of Rachel?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rachel\")))))))"
  },
  {
    "original_sentence": "I want to Go Horseback Riding with Moira on July 23rd at 2 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Go Horseback Riding\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 23L (July)) (NumberPM 2L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Moira\")))))))))))"
  },
  {
    "original_sentence": "Add Drem to the list as well.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Drem\"))))))))))"
  },
  {
    "original_sentence": "That looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "OK",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "may i help you",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "See what's on tap for tomorrow.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Add free time at 5 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"free time\")) (Event.start_? (?= (NextTime (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "sitting on the dock by the bay at 2 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dock by the bay\")) (Event.start_? (?= (NextTime (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Change the duration to 2 hours.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "I need to meet with Crim's team",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Crim\")))))))))))"
  },
  {
    "original_sentence": "Looks good",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you add an event to meet with Kim and her team next Friday?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindTeamOf x0)))))))))"
  },
  {
    "original_sentence": "the first one will do",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Perfect, thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Modify meet with dad to fix car to 5:30 pm on Friday.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Looks good!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add buy new car for Monday at 8",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"buy new car\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add sell old car on Wednesday, April 3 to the calendar",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"sell old car\")) (Event.start_? (DateTime.date_? (?= (MD 3L (April)))))))))"
  },
  {
    "original_sentence": "I need the location for tennis practice today",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"tennis practice\"))))))))"
  },
  {
    "original_sentence": "Let's do dinner with Jesse right after.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\")))))))))))"
  },
  {
    "original_sentence": "Yeah. When do I hang out with him next, by the way?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))) 1L))))"
  },
  {
    "original_sentence": "When will Tennis Practice end?",
    "parse": "(Yield (Event.end (Execute (refer (extensionConstraint (Event.subject_? (?~= \"Tennis Practice\")))))))"
  },
  {
    "original_sentence": "What other appointments do I have tomorrow evening?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Evening)))))"
  },
  {
    "original_sentence": "Schedulre \"prepare resume\" this weekend.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"prepare resume\")) (Event.start_? (DateTime.date_? (ThisWeekend)))))))"
  },
  {
    "original_sentence": "I'm going to have a book a meeting from wednesday to friday",
    "parse": "(let (x0 (NextDOW (Wednesday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (DateAndConstraint x0 (nextDayOfWeek x0 (Friday))))))))"
  },
  {
    "original_sentence": "Yes looks great and fix it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Perfect, thanks!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Put a Napa Valley Wine Trip starting tomorrow for 18 days",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"Napa Valley Wine Trip\")) (Tomorrow) (toDays 18)))))"
  },
  {
    "original_sentence": "That's correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule my parent's visit on saturday from 08:00 to 20:00.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (HourMinuteMilitary 8L 0L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"parent's visit\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinuteMilitary 20L 0L)))))))))"
  },
  {
    "original_sentence": "Exactly.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Anything on in August?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (August)))))"
  },
  {
    "original_sentence": "Change the visit from 07 to 21.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (Event.subject_? (?~= \"visit\")))))) (& (Event.start_? (DateTime.time_? (?= (HourMilitary 7L)))) (Event.end_? (DateTime.time_? (?= (HourMilitary 21L))))))))"
  },
  {
    "original_sentence": "Look about right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Who are my reports",
    "parse": "(Yield (FindReports (toRecipient (CurrentUser))))"
  },
  {
    "original_sentence": "Please set up a meeting with them on Friday morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Friday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "10:30 is perfect for me choose that one",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (HourMinuteAm 10L 30L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Okay this time is great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "yes",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please make a basketball open court for Saturday night.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"basketball open court\")) (Event.start_? (DateTimeConstraint (Night) (NextDOW (Saturday))))))))"
  },
  {
    "original_sentence": "Actually, please move to not the weekend. I already have other plans.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "i like the game time to 5.00 to 5.30",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (& (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 5L 30L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Pencil in a Disc Golf Match with Elli for Saturday at 2 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Disc Golf Match\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 2L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\")))))))))))"
  },
  {
    "original_sentence": "No, actually the weekend doesn't work for me, can you change it to not the weekend?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "27 is ok",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.day_? (?= (Day.apply 27L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I also have a dinner prep at 6 pm on Saturday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner prep\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "but you know what the weekend will not work",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Do I have any birthdays scheduled this month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"birthdays\")) (FullMonthofMonth (Date.month (Today))))))) 0L))"
  },
  {
    "original_sentence": "How about next month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth)))))"
  },
  {
    "original_sentence": "Can you show me what I have scheduled for January 20th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 20L (January)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you schedule a dentist appointment at 2pm on that day?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Do I have anything coming up this afternoon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"
  },
  {
    "original_sentence": "Please tell me if I have anything on Friday",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Thanks, what else is on my schedule on Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Do I have something on my calendar for Thursday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "it seemed very good all to continue",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Hi, what is the rating for FEAST restaurant?",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"FEAST restaurant\"))))))"
  },
  {
    "original_sentence": "What about Breakthrough Reno in Reno? How is that place rated?",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Breakthrough Reno in Reno\"))))))"
  },
  {
    "original_sentence": "How is Haru in Reno rated? I think it's nearby",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Haru in Reno\"))))))"
  },
  {
    "original_sentence": "Add professional development on Friday from 8:00 AM until 12:00 PM.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"professional development\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 12L)))))))))"
  },
  {
    "original_sentence": "Add 30 min.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (addDurations (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint)))) (toMinutes 30)))))))"
  },
  {
    "original_sentence": "How do I find appointments I've scheduled in the future?",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Do I have an upcoming dentist appointment?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\"))))) 0L))"
  },
  {
    "original_sentence": "How do I create an appointment in my calendar?",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "What services can you provide?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "How is the weather today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "I'm in Houston, Texas",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"Houston, Texas\")))))))"
  },
  {
    "original_sentence": "Is there a chance of rain?",
    "parse": "(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "What do I have on the calendar for today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you create an appointment for today?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Today)))))))"
  },
  {
    "original_sentence": "Can you rename it to Dentist Appointment",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"Dentist Appointment\")))))"
  },
  {
    "original_sentence": "yes but Can you please change the time to 3:30pm to 4:15pm?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 4L 15L))))))))"
  },
  {
    "original_sentence": "please confirm",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Hi, I need to cancel the doctor appointment I have on Monday at 2pm then I need to add, \"See Lawyer\" for Tuesday at 3pm please.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Let me know an hour in advance.",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "remind me to call my mom in an hour",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Can you tell me if I have a meeting with sally today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"sally\")))))))) 0L))"
  },
  {
    "original_sentence": "Can you schedule a meeting with Sally at 4:30pm today?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (HourMinutePm 4L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sally\")))))))))))"
  },
  {
    "original_sentence": "put business meeting on monday with my team",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"business meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "select second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "meeting with Abby's team",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "Let's put the first option on my schedule.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "gym meet at 9pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"gym meet\")) (Event.start_? (?= (NextTime (NumberPM 9L))))))))"
  },
  {
    "original_sentence": "I ate dinner with Jake last monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTime.date_? (?= (previousDayOfWeek (Today) (Monday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))))))))))"
  },
  {
    "original_sentence": "Before that, Do I have any meetings with Jake?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))"
  },
  {
    "original_sentence": "there was a company wide meeting last Monday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"company wide meeting\")) (Event.start_? (DateTime.date_? (?= (previousDayOfWeek (Today) (Monday)))))))))"
  },
  {
    "original_sentence": "Yes!",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add swim lesson at 6pm next monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"swim lesson\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "The swim lesson will be 45 minutes.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toMinutes 45))))))"
  },
  {
    "original_sentence": "schedule an overall managers meeting on Sunday before the 8am prayer meeting",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"overall managers meeting\")) (Event.start_? (?= (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"prayer meeting\")) (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 8L)) (^(Event) EmptyStructConstraint)))))))))))))"
  },
  {
    "original_sentence": "look great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a meeting with Nicholas on Wednesday before 2 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (?< (NumberPM 2L)) (NextDOW (Wednesday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nicholas\")))))))))))"
  },
  {
    "original_sentence": "The 2nd one please.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need a meeting with Jim tomorrow at 11:30 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinuteAm 11L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))))))))))"
  },
  {
    "original_sentence": "Can we actually cancel the meeting tomorrow?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Can you update studying until 1 am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"studying\")))))) (Event.end_? (DateTime.time_? (?= (NumberAM 1L)))))))"
  },
  {
    "original_sentence": "Yes, this looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Ok!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Change the date of the team building fiasco to the next day",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"team building fiasco\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (DateTime.date (Event.start x0)) (toDays 1)))))))))"
  },
  {
    "original_sentence": "Yes that looks correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "now schedule my long afternoon siesta on tomorrow afternoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"long afternoon siesta\")) (Event.start_? (DateTimeConstraint (Afternoon) (Tomorrow)))))))"
  },
  {
    "original_sentence": "Please put the second option on the calendar please.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you extend that to an hour?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "What events do I have on the 3rd?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 3L) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can we move the 3rd one a day later?",
    "parse": "(let (x0 (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 3L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (DateTime.date (Event.start x0)) (toDays 1)))))))))"
  },
  {
    "original_sentence": "Yes, looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "The second event will last for two hours. Please update my calendar.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "show the tomorrow events on calender",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "How about thursday?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (& (^(Date) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Thursday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "How about Friday?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (& (^(Date) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Friday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "And how about saturday?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (& (^(Date) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Saturday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "ok! thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Not sure if I have a meeting.",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"meeting\"))))"
  },
  {
    "original_sentence": "List my events this weekend.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "Block out titled conference from the 3rd of next month to the 6th.",
    "parse": "(let (x0 (MD 3L (NextMonth))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"conference\")) (DateAndConstraint x0 (nextDayOfMonth x0 6L)))))))"
  },
  {
    "original_sentence": "That is perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I'll be in Barcelona next week for 3 days",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.location_? (?= (LocationKeyphrase.apply \"Barcelona\"))) (adjustByPeriod (Today) (toWeeks 1)) (toDays 3)))))"
  },
  {
    "original_sentence": "That is it for sure.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Who organized my next meeting?",
    "parse": "(Yield (Event.organizer (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))"
  },
  {
    "original_sentence": "What time is the meeting in Los Angeles next week?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.location_? (?= (LocationKeyphrase.apply \"Los Angeles\"))) (NextWeekList)))))))"
  },
  {
    "original_sentence": "what time is the meeting in CA",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (?= (LocationKeyphrase.apply \"CA\"))))))))"
  },
  {
    "original_sentence": "Do I have anything else in CA?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \"CA\"))))))) 0L))"
  },
  {
    "original_sentence": "Where is my Experience Magic event located?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Experience Magic\")))))))"
  },
  {
    "original_sentence": "Is there anything else at Disneyland?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Disneyland\"))))))) 0L))"
  },
  {
    "original_sentence": "Where is the Wizarding World of Harry Potter event located?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Wizarding World of Harry Potter\")))))))"
  },
  {
    "original_sentence": "Do I have anything else in Orlando?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Orlando\"))))))) 0L))"
  },
  {
    "original_sentence": "when was Easter '95",
    "parse": "(Yield (HolidayYear (Holiday.Easter) (Year.apply 95L)))"
  },
  {
    "original_sentence": "Thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add Snowball fight in 2027",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Snowball fight\")) (Event.start_? (DateTime.date_? (FullYearofYear (Year.apply 2027L))))))))"
  },
  {
    "original_sentence": "1st would work best. When is my Tennis Match in 2031",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Tennis Match\")) (FullYearofYear (Year.apply 2031L)))))))))"
  },
  {
    "original_sentence": "Can you tell me when Andy is free to meet with me this weekend?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "What events do I have with Andy this weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Andy\")))) (ThisWeekend))))"
  },
  {
    "original_sentence": "Actually I meant Adam Anderson.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Adam Anderson\"))))))"
  },
  {
    "original_sentence": "Not that Adam. Adam McDermott",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Adam McDermott\"))))))"
  },
  {
    "original_sentence": "Please update that to have Andy",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Andy\"))))))))))"
  },
  {
    "original_sentence": "Please show my status as busy from 1pm to 3pm today.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Today) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L))))) (Event.showAs_? (?= (ShowAsStatus.Busy))))))))"
  },
  {
    "original_sentence": "Thanks, what is on my schedule on Tuesday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Do I have any lunch meetings tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"lunch meetings\")))))) 0L))"
  },
  {
    "original_sentence": "remind me to call customer service for my amazon kindle tomorrow at 2 pm with i think its gonna take like an hour",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"call customer service for my amazon kindle\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "oh wait, i think i fixed it cancel that",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "make a appointment tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "second",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Ok!, Good Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "please make a meet with my doctor Henry",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Henry\"))))))))))"
  },
  {
    "original_sentence": "Can you pick the second one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "and the date for today ?",
    "parse": "(Yield (Today))"
  },
  {
    "original_sentence": "Fat bird dirt tube garden pyramind",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "hollow cats can't meow",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "Shabbbadeedoobahdo",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "Any events this month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today))))))"
  },
  {
    "original_sentence": "ok I need House Cleaning to be from 3 pm- 7 pm on July 29",
    "parse": "(let (x0 (DateAtTimeWithDefaults (MD 29L (July)) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"House Cleaning\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 7L)))))))))"
  },
  {
    "original_sentence": "rainbow unicorns",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule Brush The Horse for 1 hour on Saturday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Brush The Horse\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Set the second one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "This looks great thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is the weather in Paris today",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Paris\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "Can you schedule dinner on my calendar at 7pm that day for an hour?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 7L))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "I need to add a birthday party for tomorrow at 3:00 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"birthday party\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "That goes to 8 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "Fishing trip this weekend, Friday to Tuesday",
    "parse": "(let (x0 (NextDOW (Friday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"Fishing trip\")) (DateAndConstraint x0 (nextDayOfWeek x0 (Tuesday))))))))"
  },
  {
    "original_sentence": "That looks like a good time",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you add recover from party from January 1 to the 5th?",
    "parse": "(let (x0 (MD 1L (January))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"recover from party\")) (DateAndConstraint x0 (nextDayOfMonth x0 5L)))))))"
  },
  {
    "original_sentence": "Yeah that is correct, thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Perfect! Thanks!!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Hello! I need to make an event from 5 p.m - 6 pm. on January 2.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (MD 2L (January)) (NumberPM 5L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 6L)))))))))"
  },
  {
    "original_sentence": "Can you tell me what meetings I have on December 30?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 30L (December)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "let's cancel it.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Reschedule th meeting to the first Monday of January.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (DowOfWeekNew (Monday) (NumberWeekOfMonth 1L (January)))))))))"
  },
  {
    "original_sentence": "Create a conference event with scot hanson, fiona mason, and cornelio hernandez on thursday from 4-7pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"conference\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 7L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"scot hanson\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"fiona mason\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"cornelio hernandez\")))))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a meeting with Dan Bauman, Teresa Love, and Terry Bradshaw to determine the appropriate response we should give to Opathy Company.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"determine the appropriate response we should give to Opathy Company\")) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Bauman\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Teresa Love\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Terry Bradshaw\"))))))))))))"
  },
  {
    "original_sentence": "The second one will work for me.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "schedule a meeting with Mark and Carl Wednesday to discuss sales before 12 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"discuss sales\")) (Event.start_? (OnDateBeforeTime (NextDOW (Wednesday)) (NumberPM 12L)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carl\"))))))))))))"
  },
  {
    "original_sentence": "The second one works best for me.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need a meeting on July 16th in the afternoon with Chuck and Leslie to discuss new interns",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"discuss new interns\")) (Event.start_? (DateTimeConstraint (Afternoon) (MD 16L (July))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chuck\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Leslie\"))))))))))))"
  },
  {
    "original_sentence": "I need to know the weather at the Turkey Trot",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Turkey Trot\")))))))"
  },
  {
    "original_sentence": "Will it snow during breakfast tomorrow?",
    "parse": "(Yield (WillSnow (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"breakfast\")))))))))"
  },
  {
    "original_sentence": "what will the weather be for throwing up breakfast ?",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"throwing up breakfast\")))))))"
  },
  {
    "original_sentence": "Find me 45 minutes on Saturday to visit Jane at Ohio State university",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.duration_? (?= (toMinutes 45))) (Event.location_? (?= (LocationKeyphrase.apply \"Ohio State university\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\")))))))))))"
  },
  {
    "original_sentence": "The July 24th is right. Is it going to be sunny?",
    "parse": "(let (x0 (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 24L (July))))) (refer (^(Dynamic) ActionIntensionConstraint))))) (do (Yield x0) (Yield (IsSunny (WeatherForEvent (^(Dynamic) item x0))))))"
  },
  {
    "original_sentence": "it's okay",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you tell me if there is a chance of rain for that event?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (rainPrecipProbability) (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "What eents do I have for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Help in making an appointment with the staff tomorrow at 11 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L)))) (Event.attendees_? (AttendeeListHasPeople (FindReports (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "What time is my brunch with the team tomorrow at Red Robin's?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (& (Event.location_? (?= (LocationKeyphrase.apply \"Red Robin's\"))) (Event.attendees_? (AttendeeListHasPeopleAnyOf (FindTeamOf (toRecipient (CurrentUser)))))) (EventOnDate (Tomorrow) (Event.subject_? (?~= \"brunch\")))))))))"
  },
  {
    "original_sentence": "Where is my dinner tonight?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"dinner\"))) (Night)))))))"
  },
  {
    "original_sentence": "Is it family friendly?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Is there a full service bar available?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Delete the events on Thursday.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Add a meeting with Jim tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))))))))))"
  },
  {
    "original_sentence": "Schedule job interview for Wednesday at 8:30 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"job interview\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (HourMinuteAm 8L 30L))))))))"
  },
  {
    "original_sentence": "The job interview will be at least 2 hours.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"job interview\")))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Add Update Resume for Tuesday at 6:30 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Update Resume\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (HourMinutePm 6L 30L))))))))"
  },
  {
    "original_sentence": "That appointment is gonna be 2 hours at home.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.duration_? (?= (toHours 2))) (Event.location_? (?= (LocationKeyphrase.apply \"at home\")))))))"
  },
  {
    "original_sentence": "ok!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Am I having lunch with Percy, Elli, or Jennifer tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (orConstraint (orConstraint (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Percy\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer\")))))))))) 0L))"
  },
  {
    "original_sentence": "What do I have going on with David Lax or any of his team this weekend?",
    "parse": "(let (x0 (PersonName.apply \"David Lax\")) (Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (orConstraint (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasPeopleAnyOf (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))) (ThisWeekend)))))"
  },
  {
    "original_sentence": "Can we move that meeting to the 4th",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 4L)))))))))"
  },
  {
    "original_sentence": "It works.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great and do I have a lunch with anyone from Jennifer's team?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasPeopleAnyOf (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer\")))))))))))) 0L))"
  },
  {
    "original_sentence": "When is my dinner at Applebee's?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.location_? (?= (LocationKeyphrase.apply \"Applebee's\")))))))))"
  },
  {
    "original_sentence": "Oh my bad, I meant my dinner at Applebees with Kim. It should be next week.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (& (Event.location_? (?= (LocationKeyphrase.apply \"Applebees\"))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))) (EventDuringRange (Event.subject_? (?~= \"dinner\")) (NextWeekList))))))"
  },
  {
    "original_sentence": "Ok cool thank you, and for this weekend when is my Book signing?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Book signing\")) (ThisWeekend)))))))"
  },
  {
    "original_sentence": "No, search for the movie screening on Sunday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Sunday)) (Event.subject_? (?~= \"movie screening\"))))))"
  },
  {
    "original_sentence": "Can you look for the TV Show Screening next week?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"TV Show Screening\")) (NextWeekList))))))"
  },
  {
    "original_sentence": "No sorry, I meant the TV show remake in April",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.subject_? (?~= \"TV show remake\")) (FullMonthofMonth (April))))))"
  },
  {
    "original_sentence": "make a appointment for today evening",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Evening) (Today))))))"
  },
  {
    "original_sentence": "Can I have the bottom option?",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Am I going to attend a Seminar with Alex next Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (& (Event.subject_? (?~= \"Seminar\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex\"))))))))) 0L))"
  },
  {
    "original_sentence": "Do I have a meeting Monday morning?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)) (Morning))))) 0L))"
  },
  {
    "original_sentence": "Do I have any doctors appointments on Thursday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.subject_? (?~= \"doctors appointments\")))))) 0L))"
  },
  {
    "original_sentence": "Change my meeting with Ben to 3 pm instead.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ben\")))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "hold on",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Change that to 2:30pm to 3",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (& (Event.start_? (DateTime.time_? (?= (HourMinutePm 2L 30L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I'd like to make a meeting next Tuesday in the morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Tuesday)))))))"
  },
  {
    "original_sentence": "wait please",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "I'm back. Make those be earlier please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "I should check with Ben really quick and see which will be better.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add a meeting with Jenny at 4pm tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jenny\")))))))))))"
  },
  {
    "original_sentence": "Perfect, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "what is the weather going to be like Friday in MEsa AZ",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"MEsa AZ\"))) (DateTime.date_? (?= (NextDOW (Friday))))))"
  },
  {
    "original_sentence": "thanks, can you schedule a beach day with John on saturday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"beach day\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))))"
  },
  {
    "original_sentence": "The bottom one!",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "WHEN WAS THE PIRATES LAST WIN?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "What day was the pirates game?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (Event.subject_? (?~= \"pirates game\"))))))))"
  },
  {
    "original_sentence": "I remember that game lasted until 5. Please update.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "Yes, and add Dab to that, I went with him",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dab\"))))))))))"
  },
  {
    "original_sentence": "That looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add an event called Concert on Saturday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Concert\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))))))"
  },
  {
    "original_sentence": "second one, but make it an hour",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "done",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add Concert to Saturday at 7 PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Concert\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Looks right to me, thankyou.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What time is my meeting with Diana on Friday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Diana\"))))))))))"
  },
  {
    "original_sentence": "Can you move it to one hour later?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "no the meeting with Diana on Friday",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "OK!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you put going to the fair on Saturday from 1 pm to 6 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"going to the fair\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 6L)))))))))"
  },
  {
    "original_sentence": "I want to schedule a meeting called review for early friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"review\")) (Event.start_? (DateTimeConstraint (Early) (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "Both look good. and then can we make a Hunting Trip for early Saturday.",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Hunting Trip\")) (Event.start_? (DateTimeConstraint (Early) (NextDOW (Saturday)))))))))"
  },
  {
    "original_sentence": "Ok!",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need to set up dogsitting for early Saturday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dogsitting\")) (Event.start_? (DateTimeConstraint (Early) (NextDOW (Saturday))))))))"
  },
  {
    "original_sentence": "what's on my calendar for tuesday morning",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) (Morning))))"
  },
  {
    "original_sentence": "Also I want to schedule a lunch with Jim at Chili's on Tuesday from 12:00 pm to 1:00 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 12L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 1L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Chili's\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\"))))))))))))"
  },
  {
    "original_sentence": "Yes, could you add Evelyn to that as well?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Evelyn\"))))))))))"
  },
  {
    "original_sentence": "Do I have anything scheduled next week with Liz?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Liz\")))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))) 0L))"
  },
  {
    "original_sentence": "What about with Martha?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Martha\"))))))"
  },
  {
    "original_sentence": "What do I have scheduled otherwise on the 9th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 9L) (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "What about with Donna?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Donna\")))))))"
  },
  {
    "original_sentence": "Do I have anything with her this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Can you make me an appointment on Wednesday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday))))))))"
  },
  {
    "original_sentence": "I'll take either.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you make a meeting sometime after 4 tomorrow?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?> (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "second one was perfect",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Good but can you also add, dinner with Andre at 7 pm tomorrow as well?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 7L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Andre\")))))))))))"
  },
  {
    "original_sentence": "Am I seeing the eye doctor on Tuesday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"eye doctor\")))))) 0L))"
  },
  {
    "original_sentence": "Is that the only thing I have scheduled?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))) 0L))"
  },
  {
    "original_sentence": "out of the office friday at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L)))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
  },
  {
    "original_sentence": "At 7 pm I am going to the festival so put that on the schedule.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"going to the festival\")) (Event.start_? (?= (NextTime (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "OK!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "If there is anything planned at 1 pm on Friday, cancel it.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 1L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "who is in charge of the fashion show?",
    "parse": "(Yield (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"fashion show\")))))))"
  },
  {
    "original_sentence": "If I don't have any conflicts, schedule grocery shopping for 3pm to 5pm on Monday.",
    "parse": "(FenceConditional)"
  },
  {
    "original_sentence": "I'm going wine tasting with Cornelio Hernandez on Friday night",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"wine tasting\")) (Event.start_? (DateTimeConstraint (Night) (NextDOW (Friday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cornelio Hernandez\")))))))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "I'm going with Barack Obama instead",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\"))))))"
  },
  {
    "original_sentence": "When is the George Strait Concert?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"George Strait Concert\")))))))"
  },
  {
    "original_sentence": "Can you tell me when it ends?",
    "parse": "(Yield (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Thank you. Can you set up another meeting with Janet sometime this week?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (ThisWeek))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janet\")))))))))))"
  },
  {
    "original_sentence": "The first one works best.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok.. i think this one works great.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "ok thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Set up an appointment for 7am on Tuesday with Champ and David and set up an appointment for 8am on Tuesday with Mary and Bill.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "can you add Dan's birthday to my calender?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"Dan's birthday\")))))"
  },
  {
    "original_sentence": "it's on the 9th of July",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (MD 9L (July))))))))"
  },
  {
    "original_sentence": "set a reminder please",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "add an event",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Create a new appointment tomorrow at 6am for running, than one right after for showering, then a 1 hour appointment for commute. I have a staff meeting for an hour at 9 and then I've got a 10pm call with the vendor for 15 minutes, followed by a 45 minute meeting with my boss to go over the vendor call. Lunch at 12 for an hour and then from 2 to 3 I'm talking to Bob from accounting in the conference room. 5pm commute for 30 minutes and 30 minutes for dinner followed by 2 hours of relaxing.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I need to change dinner tomorrow night to next Tuesday.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (Event.subject_? (?~= \"dinner\"))) (Night)))))) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))))))"
  },
  {
    "original_sentence": "tbh",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule Mall Day with Sarah on July 31st at 1 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Mall Day\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 31L (July)) (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\")))))))))))"
  },
  {
    "original_sentence": "HOW IS WHAT",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Cancel dinner plans",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\")))))))))"
  },
  {
    "original_sentence": "do i have any plans tomorrow at 8 am",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "that is all",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add Bob too the 1400 meeting on wednesday",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Wednesday)) (HourMinuteMilitary 14L 0L)) (^(Event) EmptyStructConstraint)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\"))))))))))"
  },
  {
    "original_sentence": "That looks ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cool, can you put yoga at 1500 friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"yoga\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteMilitary 15L 0L))))))))"
  },
  {
    "original_sentence": "Yes it is.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "YES",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "could you order hamburger for me?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Put get go out for burgers on the schedule at 1 pm today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go out for burgers\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "I need to pick up flowers today at 4p m.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pick up flowers\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Put a dinner date with George on my schedule for tomorrow at 6pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"George\")))))))))))"
  },
  {
    "original_sentence": "It should be an hour longer.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "What time do I pick up Aunt Sue from the airport tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"pick up Aunt Sue from the airport\")))))"
  },
  {
    "original_sentence": "Set an appointment for Airport tomorrow at 12 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Airport\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "That should be set till one and after that put family time on the schedule for the rest of the day.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "What's on my calendar",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Make a new one for one week from now for lunch with Mary",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (Today) (toWeeks 1)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\")))))))))))"
  },
  {
    "original_sentence": "Add her to my address book",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Create an event for one week for lunch",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (Today) (toWeeks 1)))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Cancel it, I just got a call saying its cancelled",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "YEs",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do me a favor and undo that",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Am I going to be meeting with Ashe on Tuesday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ashe\")))))))) 0L))"
  },
  {
    "original_sentence": "Do I have a doctor appointment in June?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctor appointment\")) (FullMonthofMonth (June)))))) 0L))"
  },
  {
    "original_sentence": "What about in July?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (July))))))"
  },
  {
    "original_sentence": "Do I have a meeting with Jacob tomorrow at 12 noon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (Noon)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jacob\")))))))) 12L))"
  },
  {
    "original_sentence": "How about anything at all with Jacob next Monday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jacob\")))))))) 0L))"
  },
  {
    "original_sentence": "Please see if I have anything scheduled on February 5th at 10 am.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (MD 5L (February)) (NumberAM 10L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "at 11 am I have a lunch I am going to so put that on the calendar.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (NextTime (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "Can you add another lunch for thursday next week, same time?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"another lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (DowOfWeekNew (Thursday) (NextWeekList)) (DateTime.time (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))))"
  },
  {
    "original_sentence": "Can you add another lunch for Saturday at the same time but lasting 1 hour?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"another lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (DateTime.time (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "What do I have going on tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Let's go ahead and cancel that",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What do I have going on next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "Change the second one to \"lunch at home.\"",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Event.subject_? (?= \"lunch at home\")))))"
  },
  {
    "original_sentence": "I have a dr appointment next Thursday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dr appointment\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday)))))))))"
  },
  {
    "original_sentence": "no, it is 2 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete all events after tomorrow at 5 PM.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Ok put Family dinner date on the schedule from 5 pm to 6:30 pm",
    "parse": "(let (x0 (NextTime (NumberPM 5L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Family dinner date\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 6L 30L)))))))))"
  },
  {
    "original_sentence": "If there isn't anything scheduled Saturday I am going to put exercise on the calendar from 1 to 2 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"exercise\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 2L)))))))))"
  },
  {
    "original_sentence": "delete the all events on tommorrow",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "LOOK FOR ANY EVENT TOMORROW MORNING 8.00 AM",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "To arrange",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "The Event.It's look good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "delete my today events",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "what is this place",
    "parse": "(Yield (Here))"
  },
  {
    "original_sentence": "fine, yes",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When do I go to dinner with Jamie?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamie\"))))))))))"
  },
  {
    "original_sentence": "Does the attendee list include his boss?",
    "parse": "(Yield (allows (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))) (Execute (refer (extensionConstraint (^((List Attendee)) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "When do me and Janine get together?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janine\")))))))))"
  },
  {
    "original_sentence": "Is her boss invited too?",
    "parse": "(Yield (allows (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))) (Execute (refer (extensionConstraint (^((List Attendee)) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "decline the next meeting",
    "parse": "(Yield (EventAttendance :event (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "do not do that",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "I need to cancel my presentation tomorrow.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"presentation\"))))))))))"
  },
  {
    "original_sentence": "No don't cancel anymore.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "I'd like the change the time from 9-11",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "hold on just one minute.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "That looks good, please set it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "make me a meeting with Abby",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))))))"
  },
  {
    "original_sentence": "sorry give me a second to ask her",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "The 10 am works best for her",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "cancel that shopping part of the title",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "I need to fly to Turkey.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"fly to Turkey\")))))"
  },
  {
    "original_sentence": "I need to go on Aug 23rd",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 23L (August))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Sorry, now I want to cancel that",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "If you can cancel that, it would be great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What day did I start my vacation last year?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"vacation\")) (FullYearofYear (LastYear))))))))"
  },
  {
    "original_sentence": "When did I wed my wife last year?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"wed my wife\")) (FullYearofYear (LastYear)))))))"
  },
  {
    "original_sentence": "Can you tell me when Slipknot is coming to Oregon?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Schedule Slipknot concert for January 3 at 8pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Slipknot concert\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 3L (January)) (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "Can you tell me the last time I went to a concert?",
    "parse": "(Yield (Event.start (FindLastEvent (EventBeforeDateTime (Now) (Event.subject_? (?~= \"concert\"))))))"
  },
  {
    "original_sentence": "When was my last meeting with Jordan?",
    "parse": "(Yield (Event.start (FindLastEvent (EventBeforeDateTime (Now) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jordan\"))))))))"
  },
  {
    "original_sentence": "What's my Schedule on friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Do I have events Saturday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "What about Sunday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Sunday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "cancel the presentation materials on calender",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"presentation materials\")))))))))"
  },
  {
    "original_sentence": "Yes that's correct",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Is Kabsal coming to Lunch tomorrow at the Palanaeum?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \"Palanaeum\"))) (EventOnDate (Tomorrow) (Event.subject_? (?~= \"Lunch\"))))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kabsal\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Can you ask them if they'd like to come?",
    "parse": "(Yield (ForwardEventWrapper (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Yes, please do.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Great. Can you check if mom is incliuded in the meeting tomorrow?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "put meeting with rongila",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"rongila\"))))))))))"
  },
  {
    "original_sentence": "jhipkllk",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "what is climate",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "tell me the weather of new york",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"new york\"))) (?= (Now))))"
  },
  {
    "original_sentence": "it's raining?",
    "parse": "(Yield (IsRainy (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "When is Dentist appointment?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Dentist appointment\")))))))"
  },
  {
    "original_sentence": "Can you schedule a doctor appointment on February 8th at 8 am?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 8L (February)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "thank you!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When is my next doctor appointment?",
    "parse": "(Yield (FindNumNextEvent (Event.subject_? (?~= \"doctor appointment\")) 1L))"
  },
  {
    "original_sentence": "Find Bar of America in Truckee.",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Bar of America in Truckee\")))"
  },
  {
    "original_sentence": "Is it good for groups?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "how about the Thai Delicacy in Truckee?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Thai Delicacy in Truckee\"))))))"
  },
  {
    "original_sentence": "Please add baby show to my calendar on Sunday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"baby show\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))))))"
  },
  {
    "original_sentence": "yes 1pm is perfect",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (EventAtTime (^(Event) EmptyStructConstraint) (NumberPM 1L)) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Perfect, thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you please search for events with baby in them?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"baby\"))))"
  },
  {
    "original_sentence": "Can you change it so it goes from 1pm to 3pm?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) x1 (DateAtTimeWithDefaults (DateTime.date (Event.start x0)) (NumberPM 1L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (NumberPM 3L)))))))))"
  },
  {
    "original_sentence": "Please create meeting on 1/1/19 from 1pm to 3pm",
    "parse": "(let (x0 (MDY 1L (toMonth 1L) (Year.apply 2019L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults x0 (NumberPM 1L)))) (Event.end_? (?= (DateAtTimeWithDefaults x0 (NumberPM 3L)))))))))"
  },
  {
    "original_sentence": "Make an appointment with my mom",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Show me any appointments I have in the next two weeks with My Mom.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Please look up Jane Smith in my address book.",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane Smith\")))))))"
  },
  {
    "original_sentence": "Can you show me any meetings with Jane Smith I have this next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane Smith\")))) (NextWeekList))))"
  },
  {
    "original_sentence": "Great, can you cancel that event please.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "What events do I have planned for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Cancel work in recording studio on Sunday from 2:00 to 4:00 pm.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 2L)) (Event.subject_? (?~= \"work in recording studio\"))))))))))"
  },
  {
    "original_sentence": "Yup!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add dinner with brother on Saturday evening",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "OK Add dinner with my brother John on Saturday evening",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTimeConstraint (Evening) (NextDOW (Saturday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))))"
  },
  {
    "original_sentence": "The 2nd one works.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "great job",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Set an appointment up with my real estate agent.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Please tell me who all has not accepted my event on Sunday yet",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "who has not possibly accepted the happy hour",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"happy hour\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Who has not declined the happy hour?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"happy hour\")))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "I wanna meet with my manager at today 7 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 7L)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "I wanna meet with alex at today 7 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 7L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"alex\")))))))))))"
  },
  {
    "original_sentence": "I have to cancel the meeting tomorrow afternoon and move it to next Monday.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Afternoon)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (nextDayOfWeek (DateTime.date (Event.start x0)) (Monday)))))))))"
  },
  {
    "original_sentence": "Move it to my last slot of the day, actually.",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "Can you set the meeting to 5 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "When is my last piano practice on Friday?",
    "parse": "(Yield (Event.start (FindLastEvent (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"piano practice\"))))))"
  },
  {
    "original_sentence": "When is my last day of work?",
    "parse": "(Yield (Event.start (FindLastEvent (Event.subject_? (?~= \"work\")))))"
  },
  {
    "original_sentence": "I need a new appointment for thursday evening with Billy",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Evening) (NextDOW (Thursday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Billy\")))))))))))"
  },
  {
    "original_sentence": "What time is my doctors appointment?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctors appointment\")))))))"
  },
  {
    "original_sentence": "The second one will work",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "That looks good, yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "schedule dinner after this.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "maybe...",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Yea it is actually.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please change dinner with Billy Idol and Daemon Straeter to Brunch with Green Day at 11AM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Billy Idol\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Daemon Straeter\")))))))))) (& (& (Event.subject_? (?= \"Brunch\")) (Event.start_? (DateTime.time_? (?= (NumberAM 11L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Green Day\")))))))))))"
  },
  {
    "original_sentence": "breakfast at 10 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"breakfast\")) (Event.start_? (?= (NextTime (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "I have a test before 4 pm Tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"test\")) (Event.start_? (OnDateBeforeTime (NextDOW (Tuesday)) (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "9-10AM is breakfast time.",
    "parse": "(let (x0 (NextTime (NumberAM 9L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"breakfast time\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 10L)))))))))"
  },
  {
    "original_sentence": "That looks good for now",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need a tooth extraction before Saturday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"tooth extraction\")) (Event.start_? (DateTime.date_? (?< (NextDOW (Saturday)))))))))"
  },
  {
    "original_sentence": "Show my next meeting.",
    "parse": "(Yield (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L))"
  },
  {
    "original_sentence": "Can you change the time to 5pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "Yes, looks fine.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Is Riley invited to my Retirement Party?",
    "parse": "(Yield (allows (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Riley\"))) (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Retirement Party\"))))))))"
  },
  {
    "original_sentence": "Forward it to him.",
    "parse": "(Yield (ForwardEventWrapper (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "create meeting on monday at 4",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "4 am",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))) (intension (NumberAM 4L)))))"
  },
  {
    "original_sentence": "baby sitting tuesday night",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"baby sitting\")) (Event.start_? (DateTimeConstraint (Night) (NextDOW (Tuesday))))))))"
  },
  {
    "original_sentence": "the work is correct",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "the second is correct",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Yes, and mark me as out of office.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "mark me out of office tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (Tomorrow))))))"
  },
  {
    "original_sentence": "create thanksgiving at moms",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"thanksgiving\")) (Event.location_? (?= (LocationKeyphrase.apply \"moms\")))))))"
  },
  {
    "original_sentence": "What day is Memorial Day on in 2024?",
    "parse": "(Yield (HolidayYear (Holiday.MemorialDay) (Year.apply 2024L)))"
  },
  {
    "original_sentence": "When is arbor day in 2020?",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "What is the date for Mother's Day next year?",
    "parse": "(Yield (HolidayYear (Holiday.MothersDay) (NextYear)))"
  },
  {
    "original_sentence": "Tell me the date of Labor Day 2024.",
    "parse": "(Yield (HolidayYear (Holiday.LaborDay) (Year.apply 2024L)))"
  },
  {
    "original_sentence": "Set up a hike at Yellowstone on Tuesday for 2 hours",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"hike\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))) (Event.duration_? (?= (toHours 2)))) (Event.location_? (?= (LocationKeyphrase.apply \"Yellowstone\")))))))"
  },
  {
    "original_sentence": "Decline my meeting Friday with Carl",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carl\")))) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "yes but say that I can't make it due to a prior commitment.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(RespondComment) AlwaysTrueConstraint)) (intension (RespondComment.apply \"I can't make it due to a prior commitment\")))))"
  },
  {
    "original_sentence": "Actually, refine that comment so it says \"I can't make it, due to a prior commitment.\"",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(RespondComment) AlwaysTrueConstraint)) (intension (RespondComment.apply \"I can't make it, due to a prior commitment.\")))))"
  },
  {
    "original_sentence": "Actually, that comment should say that I can't make it due to a prior commitment to see my family in Greece.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(RespondComment) AlwaysTrueConstraint)) (intension (RespondComment.apply \"I can't make it due to a prior commitment to see my family in Greece\")))))"
  },
  {
    "original_sentence": "can you put find out about tonya's move tomorrow at 3 pm and we havent talked awhile so i want to ease in to that conversation so make it for 2 hours.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"find out about tonya's move\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "can you put buy book for tonya tomorrow at 2 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"buy book for tonya\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "okay delete that i dont want to look weird.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Arrange a meeting of Friday before the lunch at 2:00 PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add a meeting with Abby to the calendar for Thursday at 4.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule an event with Paul tomorrow at 3.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paul\")))))))))))"
  },
  {
    "original_sentence": "Do I have an event today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Do I have any eye exams coming up next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"eye exams\")) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Good, I hate those. Do I see my foot doctor soon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"foot doctor\"))))) 0L))"
  },
  {
    "original_sentence": "Okay, do I have any other doctor's appointments next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctor's appointment\")) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "What about this weekend?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend)))))"
  },
  {
    "original_sentence": "Will it rain on my parade on friday?",
    "parse": "(Yield (WillRain (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"parade\")))))))))"
  },
  {
    "original_sentence": "what will the weather be like for presentation on Saturday?",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"presentation\"))))))))"
  },
  {
    "original_sentence": "Will it be warm for skiing?",
    "parse": "(Yield (IsHot (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"skiing\"))))))))"
  },
  {
    "original_sentence": "Does The Western in Nashville do takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"The Western in Nashville\"))))))"
  },
  {
    "original_sentence": "Does Lampost in Reno have takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Lampost in Reno\"))))))"
  },
  {
    "original_sentence": "does the Stone House Cafe in Reno do takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Stone House Cafe in Reno\"))))))"
  },
  {
    "original_sentence": "Does the Rita's Italian Ice in Reno have takeout?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Rita's Italian Ice in Reno\"))))))"
  },
  {
    "original_sentence": "Who are the attendees for Ashley's wedding?",
    "parse": "(Yield (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Ashley's wedding\")))))))"
  },
  {
    "original_sentence": "Add Jill to Ashley's Wedding please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Ashley's Wedding\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jill\"))))))))))"
  },
  {
    "original_sentence": "What events do I have with Jill next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jill\")))) (NextWeekList))))"
  },
  {
    "original_sentence": "And with Ashley?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ashley\")))))))"
  },
  {
    "original_sentence": "What meetings do I have with Ashley coming up?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ashley\"))))))"
  },
  {
    "original_sentence": "when is my meeting with Karen's manager?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\")))))))))))))"
  },
  {
    "original_sentence": "gppd",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "Schedule a meeting with my Doctor today",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Set up a meeting called reviews with Cheyenne's manager on friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"reviews\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cheyenne\"))))))))))))"
  },
  {
    "original_sentence": "second one please",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "when do I meet with Alex's manager",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex\")))))))))))))"
  },
  {
    "original_sentence": "Can you call Janet for me right now?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janet\"))))))))"
  },
  {
    "original_sentence": "I need to get in touch with Lynn.",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lynn\"))))))))"
  },
  {
    "original_sentence": "Is Lynns birthday this month?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "Call Karen",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\"))))))))"
  },
  {
    "original_sentence": "Could you pull up the number for Shania Twain?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Shania Twain\"))))))))"
  },
  {
    "original_sentence": "When is my lunch scheduled for tomorrow?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"lunch\"))))))))"
  },
  {
    "original_sentence": "yeah that is right..",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Reschedule my dinner with Chang",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chang\"))))))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "first one looks good",
    "parse": "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Actually I'm going to need to reschedule that for later in the week.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (LateDateRange (WeekOfDateNew (DateTime.date (Event.start x0))))))))))"
  },
  {
    "original_sentence": "please tell me what is upcoming around 4 pm tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRangeDateTime (^(Event) EmptyStructConstraint) (AroundDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L))))))"
  },
  {
    "original_sentence": "Let's make that a dinner and start around 7 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTime.time_? (TimeAround (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Either one works. Let's make the soccer practice this Saturday start around 9am",
    "parse": "(do (Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"soccer practice\")) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 9L)))))))))"
  },
  {
    "original_sentence": "Schedule a team meeting at 9:00 AM on Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "Im Dirty Dan",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need a meeting with bob when he gets finished with his last meeting on friday",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "Make a new meeting with Bob on Friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))))))))"
  },
  {
    "original_sentence": "when I put your symptoms into the computer it says you might have network connectivity issues",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I will like to search more about getting a job that give you opportunity to work at home.",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "why is that?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "I will like to go visit my boyfriend in California this weekend can you update my calender for that?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"visit my boyfriend\")) (Event.start_? (DateTime.date_? (ThisWeekend)))) (Event.location_? (?= (LocationKeyphrase.apply \"California\")))))))"
  },
  {
    "original_sentence": "oh what is on my calender on the weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "searching for easter egg day",
    "parse": "(Yield (NextHolidayFromToday (Holiday.Easter)))"
  },
  {
    "original_sentence": "what kind of question can you answer me?",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "can you help me create this month calender?",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "what is my schedule ?",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "update something on calender",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "I will like to go fishing tomorrow at 5:00 PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go fishing\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Yes ! Thank You!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "alright ! sound great! I appreciate...",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "And I will like to go to Ocean Buffet after Fishing tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Ocean Buffet\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"Fishing\")))))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "great!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "am i done?",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "How long is the programme?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"programme\")))))))"
  },
  {
    "original_sentence": "Add an appointment immediately after for dinner. Make it one hour.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "How many events do I have with Bob over the next three weeks?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))) (NextPeriod (toWeeks 3)))))))"
  },
  {
    "original_sentence": "How many events do I have with Emily next month?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\")))) (FullMonthofMonth (NextMonth)))))))"
  },
  {
    "original_sentence": "Delete my breakfast meeting for Thursday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.subject_? (?~= \"breakfast meeting\"))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change the breakfast meeting to next Friday morning.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "create meeting on friday at 5",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "that looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "change appointment at 6.00 pm - 6.30 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 6L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 6L 30L))))))))"
  },
  {
    "original_sentence": "have this ending at 7",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can I see tomorrow's meeting with boss?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Add Ross to this meeting and have it at 1",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ross\")))))))))))"
  },
  {
    "original_sentence": "Can you make me an event for Tuesday at 2pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Yes, this works for me. What else do I have this week?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (^(Dynamic) item x0))))) (Event.start_? (DateTime.date_? (ThisWeek))))))))"
  },
  {
    "original_sentence": "Can you make a new appointment for the doctors next Tuesday?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I would like to set an appoinment titled dinner date on Thursday at 6:00 PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner date\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "That's fine",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add emily to my last appointment",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (FindLastEvent (^(Event) EmptyStructConstraint))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"emily\"))))))))))"
  },
  {
    "original_sentence": "Make me a meeting tonight with called \"Blitzed Borderlands Breezeway\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Blitzed Borderlands Breezeway\")) (Event.start_? (DateTimeConstraint (Night) (Today)))))))"
  },
  {
    "original_sentence": "Oh shoot, what's the weather gonna be like for golf tomorrow?",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"golf\"))))))))"
  },
  {
    "original_sentence": "Awesome, so we've got that event confirmed tonight right?",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTimeConstraint (Night) (Today))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "GReat thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "when is the grand anniversary party",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"grand anniversary party\")))))))"
  },
  {
    "original_sentence": "Make an event for 3 pm tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Wait a minute for me",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "that looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "actually make that end at 4 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "yes,please update me",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "im going to a town tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"going to a town\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "ill ask hold a sec",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "I'll choose the 1 pm one.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "busy the whole of February. no meetings",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Do I have anything scheduled in February?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (February)))))) 0L))"
  },
  {
    "original_sentence": "tell me what I am doing tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Ok. Schedule gym time at 8pm for 1 hour.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"gym\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 8L))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Add an appointment at 8 am on Tuesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "please remind me on the activity today afternoon",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Do I have anything scheduled for this coming weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))) 0L))"
  },
  {
    "original_sentence": "What about next weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekend))))"
  },
  {
    "original_sentence": "Can you delete everything on my calendar in January?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Please schedule a meeting with Tina tomorrow at 11 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tina\")))))))))))"
  },
  {
    "original_sentence": "Hello, what do I have on my agenda for today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Okay. Can you schedule a 10 minute meeting with Emily Braun to discuss this weeks hiring event please?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"discuss this weeks hiring event\")) (Event.duration_? (?= (toMinutes 10)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily Braun\")))))))))))"
  },
  {
    "original_sentence": "Why am i not able to do that?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "How may you help?",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "What is the weather like in Dallas today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Dallas\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "What is the temperature",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "What is today's date",
    "parse": "(Yield (Today))"
  },
  {
    "original_sentence": "will today be sunny in Dallas",
    "parse": "(Yield (IsSunny (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Dallas\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "thank you. good bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is my third event tomorrow?",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) 3L))"
  },
  {
    "original_sentence": "What is the location for my third event tomorrow?",
    "parse": "(Yield (Event.location (FindNumNextEvent (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) 3L)))"
  },
  {
    "original_sentence": "When does my third event tomorrow start?",
    "parse": "(Yield (Event.start (FindNumNextEvent (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) 3L)))"
  },
  {
    "original_sentence": "Create pragarism debate tonight",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pragarism debate\")) (Event.start_? (DateTimeConstraint (Night) (Today)))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "No",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is scheduled for next Tuesday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Please move my first event to 2:00 PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "That is better.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Something came up. Delete the first event on August 27.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (EventOnDate (MD 27L (August)) (^(Event) EmptyStructConstraint)) 1L)))))"
  },
  {
    "original_sentence": "yea thats it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "cancel the dentist appointment",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\")))))))))"
  },
  {
    "original_sentence": "Delete my meeting on Monday afternoon",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)) (Afternoon)))))))))"
  },
  {
    "original_sentence": "That's correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "8 day visit from in-laws. They arrive next Tuesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"visit from in-laws\")) (NextDOW (Tuesday)) (toDays 8)))))"
  },
  {
    "original_sentence": "Yes that is perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I am leaving for the beach on October 17th and will be gone for 5 days.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"leaving for the beach\")) (MD 17L (October)) (toDays 5)))))"
  },
  {
    "original_sentence": "Yes please add this to the calendar.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need a hiking trip in the mountains January 1 for 3 days.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \"mountains\"))) (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"hiking trip\")) (MD 1L (January)) (toDays 3))))))"
  },
  {
    "original_sentence": "What is on monday",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Who am I logged in as?",
    "parse": "(Yield (CurrentUser))"
  },
  {
    "original_sentence": "Send this information to Susan",
    "parse": "(Yield (ForwardEventWrapper (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Susan\"))))))))"
  },
  {
    "original_sentence": "It's ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what is my next week events in my calender",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "what do I have going on in March with attendees?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (March))))))"
  },
  {
    "original_sentence": "is there anything in February with attendees?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (February))))))) 0L))"
  },
  {
    "original_sentence": "Oh, that's frustrating. Okay. Can you see if I have any meetings that include other people on March 28th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint))) (EventOnDate (MD 28L (March)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "what do i have planned on saturday march 9th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 9L (March)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "That's probably going to go to 6 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "Hi I need help adding an event to my calender.",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "I would like to create an event",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "I would like to create an event for April 20th, 5 PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (MD 20L (April)) (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What time is my kid's birthday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"kid's birthday\")))))))"
  },
  {
    "original_sentence": "Is my meeting with Jill at applebees?",
    "parse": "(Yield (== (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jill\")))) (Now)))))) (LocationKeyphrase.apply \"applebees\")))"
  },
  {
    "original_sentence": "Make a change to my next meeting to start at 4",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I've changed \"dental appintment\"to be at 4:00PM",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dental appintment\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "It was \"dental appointment\". I am a bad speller.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make the dental appointment 45 minutes.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dental appointment\")))))) (Event.duration_? (?= (toMinutes 45))))))"
  },
  {
    "original_sentence": "How many meetings do I have with Johnson this month?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Johnson\")))) (FullMonthofMonth (Date.month (Today))))))))"
  },
  {
    "original_sentence": "Cancel my singing lesson next Friday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"singing lesson\"))))))))))"
  },
  {
    "original_sentence": "Can you reschedule it for Thursday?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Thursday)))))))))"
  },
  {
    "original_sentence": "book 2 hours for work picnic tomorrow at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"work picnic\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "Yes book that please",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have a study date at Starbucks this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"study date\")) (Event.location_? (?= (LocationKeyphrase.apply \"Starbucks\")))) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "set up a luncheon at Pizza Ranch next Monday at 12 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"luncheon\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 12L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Pizza Ranch\")))))))"
  },
  {
    "original_sentence": "That is exactly correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "what will the weather be like then?",
    "parse": "(Yield (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "when is my meeting at the Hyatt Regency?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (?= (LocationKeyphrase.apply \"Hyatt Regency\"))))))))"
  },
  {
    "original_sentence": "Make a appoinment foe tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"foe\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "select first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Change \"foe\" to doctor",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"foe\")))))) (Event.subject_? (?= \"doctor\")))))"
  },
  {
    "original_sentence": "Yeah but make it 2 hours.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Is Lee Gu busy tomorrow?",
    "parse": "(Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lee Gu\")))))))) false))"
  },
  {
    "original_sentence": "Please add a meeting with Lee Gu tomorrow at 3:00 PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lee Gu\")))))))))))"
  },
  {
    "original_sentence": "YEs",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please add dinner with Adam Wallen next Wednesday night at 6:00 PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 6L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Adam Wallen\")))))))))))"
  },
  {
    "original_sentence": "Great thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please remove my meeting with Lee Gu tomorrow.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lee Gu\"))))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please remove dinner with Adam next week",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Adam\"))))) (NextWeekList)))))))))"
  },
  {
    "original_sentence": "Please remove dinner with Adam Wallen",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Adam Wallen\"))))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "could you please reschedule my Doctor's appointment to Friday morning?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Doctor's appointment\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTimeConstraint (Morning) (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday))))))))"
  },
  {
    "original_sentence": "Hey, can you mark down a meeting with Elizabeth for 4 pm tomorrow afternoon?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elizabeth\")))))))))))"
  },
  {
    "original_sentence": "It's ok. Extend the time until 5:00 PM.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "Add Nigel Thornberry to the meeting",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nigel Thornberry\"))))))))))"
  },
  {
    "original_sentence": "Extend it to 5:30.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (HourMinutePm 5L 30L)))))))"
  },
  {
    "original_sentence": "Change the location to the Rain forest",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Rain forest\"))))))"
  },
  {
    "original_sentence": "remove the sales meeting on Friday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"sales meeting\"))))))))))"
  },
  {
    "original_sentence": "Sure is. Thanks. After deleting that I need you to search for all of next weeks scheduled events that include one or more of my co-workers please.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasPeopleAnyOf (FindTeamOf (toRecipient (CurrentUser))))))))"
  },
  {
    "original_sentence": "put the sports session at tomorrow 8.00 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"sports session\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Can you update it to reflect an hour?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Can you make it 8 to 10?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Create an event every Monday night with Gianna",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "put dinner with sunny and mia",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"sunny\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"mia\"))))))))))))"
  },
  {
    "original_sentence": "Make it all day Wednesday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Wednesday))))))"
  },
  {
    "original_sentence": "Yes, but change the subject to Dinner Party.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"Dinner Party\")))))"
  },
  {
    "original_sentence": "It should be an all day event.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.isAllDay_? (?= true)))))"
  },
  {
    "original_sentence": "Cancel the meeting with Ann's boss",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ann\")))))))))))))))"
  },
  {
    "original_sentence": "I want to meet with Emmanuel and Anderson 2 pm at Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emmanuel\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Anderson\"))))))))))))"
  },
  {
    "original_sentence": "its great thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "that's perfect",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add Ann to my meeting with Emmanuel and Anderson",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emmanuel\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Anderson\"))))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ann\"))))))))))"
  },
  {
    "original_sentence": "put a meeting with my driver tomorrow",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Delete the team meeting on Monday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"team meeting\"))))))))))"
  },
  {
    "original_sentence": "Can you tell me what appointments I have next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "What is the other one?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "I think both should be about 90 minutes long.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Create meeting with Larry at 11am Tuesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 11L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Larry\")))))))))))"
  },
  {
    "original_sentence": "Looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have any meeting next week with sam?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"sam\")))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))) 0L))"
  },
  {
    "original_sentence": "add a meeting with sam on Wednesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"sam\")))))))))))"
  },
  {
    "original_sentence": "The bottom one please.",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you change my dental appointment tomorrow to start at 4 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"dental appointment\"))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need a meeting to talk about the performance appraisal process with my boss at 8am on Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"performance appraisal process\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Do I have anything on Friday at 9pm with my boss, Mary?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\")))) (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 9L)) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "Can you create a new event with mary on july 11th at 10pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 11L (July)) (NumberPM 10L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"mary\")))))))))))"
  },
  {
    "original_sentence": "It should be an hour long",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "That looks good to me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What time is my doctor's appointment next Tuesday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"doctor's appointment\"))))))))"
  },
  {
    "original_sentence": "change doctor's appointment at aug 7",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "put meeting with doctor on aug 7",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Add Dr. James to this event",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dr. James\"))))))))))"
  },
  {
    "original_sentence": "that looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "goodbye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "farewell",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I hope you enjoyed the shpw",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Give me some pictures of Emily Wilson. She looks like a fox",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "come on, don't hold out on me",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "w0w",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "set up a meeting with Emily Wilson",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily Wilson\"))))))))))"
  },
  {
    "original_sentence": "gj0joi4na;ereajfrbgs;uoerwijgtusoiawkrajgtsjarepjgtjaresjgjgtre",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "Please update my 8.25 am appointment on saturday to start at 9.45 am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Saturday)) (HourMinuteAm 8L 25L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 9L 45L)))))))"
  },
  {
    "original_sentence": "Really? Oh well, create an appointment on saturday for 9.45 am please",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (HourMinuteAm 9L 45L)))))))"
  },
  {
    "original_sentence": "extend the meeting to 3 hours",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 3))))))"
  },
  {
    "original_sentence": "yes, make it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hello, Is it supposed to rain this weekend?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeekend)))))"
  },
  {
    "original_sentence": "Can you tell me what the temperature will be?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Can you also tell me the humidity?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (humidity) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "ok, thanks anyways.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what time is my doctors appointment?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctors appointment\")))))))"
  },
  {
    "original_sentence": "schedule a doctors appointment.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"doctors appointment\")))))"
  },
  {
    "original_sentence": "Show me as working elsewhere all day Monday",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "when will summer begin?",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "actually, what do I have this weekned?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "change brunch to start at 11:30 am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"brunch\")))))) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 11L 30L)))))))"
  },
  {
    "original_sentence": "change brunch to 11:30 am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"brunch\")))))) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 11L 30L)))))))"
  },
  {
    "original_sentence": "Schedule a brunch for 11:30 am tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"brunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinuteAm 11L 30L))))))))"
  },
  {
    "original_sentence": "i want to meet alice's manager tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"alice\"))))))))))))"
  },
  {
    "original_sentence": "cancel the meeting",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Make a appointment tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "the appointment 10.00 am -10",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Let me get back to you in a minute.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "that looks perfect, thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do the one at 1 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Hold on one second.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Please schedule a run on my calendar tomorrow at 8:00am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"run\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "no, add 30 minutes",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (addDurations (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint)))) (toMinutes 30)))))))"
  },
  {
    "original_sentence": "that is not what i wanted",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Cancel run on Friday at 8:00 am.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 8L)) (Event.subject_? (?~= \"run\"))))))))))"
  },
  {
    "original_sentence": "cancel friendship circle next Saturday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"friendship circle\"))))))))))"
  },
  {
    "original_sentence": "I want a Movie Night scheduled for tomorrow at 8 pm with Harold.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Movie Night\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harold\")))))))))))"
  },
  {
    "original_sentence": "Looks good. Who is Harold's manager?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harold\"))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "cancel this movie night",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"movie night\")))))))))"
  },
  {
    "original_sentence": "Add concert with Stephanie to my calendar on June 6th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"concert\")) (Event.start_? (DateTime.date_? (?= (MD 6L (June)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Stephanie\")))))))))))"
  },
  {
    "original_sentence": "Set the time for 4:30PM to 7PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (HourMinutePm 4L 30L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "No I don't like it",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Schedule a Concert Rehearsal practice tomorrow with Alicia, Brad, and John.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Concert Rehearsal practice\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alicia\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brad\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))))))"
  },
  {
    "original_sentence": "No, that's not it!",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "When is my meeting on Saturday with Alan?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alan\"))))))))))"
  },
  {
    "original_sentence": "Okay, then the day after that, can you put down that I need to drive down to San Jose to look at an SUV at 11am?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"drive down to San Jose to look at an SUV\")) (Event.start_? (?= (DateAtTimeWithDefaults (adjustByPeriod (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (toDays 1)) (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "It looks good to me",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Put me in a lunch meeting next year",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (DateTime.date_? (FullYearofYear (NextYear))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "i need a concert for 2024",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"concert\")) (Event.start_? (DateTime.date_? (FullYearofYear (Year.apply 2024L))))))))"
  },
  {
    "original_sentence": "The first option works best",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Postpone my 2021 all hands meeting to 2022",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullYearofYear (Year.apply 2021L))))))) (Event.start_? (DateTime.date_? (FullYearofYear (Year.apply 2022L)))))))"
  },
  {
    "original_sentence": "Is there anything I have to do between Sally's birthday party and Jacob's basketball game?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBetweenEvents (^(Event) EmptyStructConstraint) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Sally's birthday party\"))))) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Jacob's basketball game\"))))))))) 0L))"
  },
  {
    "original_sentence": "yes",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Change the Date from 19 Dec to 20 Dec",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (Event.start_? (DateTime.date_? (?= (MD 19L (December))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestMonthDayToDate (Day.apply 20L) (December) (DateTime.date (Event.start x0))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What's on my schedule between going to sleep and waking up on December 11?",
    "parse": "(let (x0 (MD 11L (December))) (Yield (FindEventWrapperWithDefaults (EventBetweenEvents (^(Event) EmptyStructConstraint) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate x0 (Event.subject_? (?~= \"going to sleep\")))))) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate x0 (Event.subject_? (?~= \"waking up\"))))))))))"
  },
  {
    "original_sentence": "Can you tell me how many times I went to the doctor last month?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctor\")) (FullMonthofLastMonth))))))"
  },
  {
    "original_sentence": "I'd like to cancel that.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Absolutely.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Does Haru in Reno serve a full bar?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Haru in Reno\"))))))"
  },
  {
    "original_sentence": "Check if Sweet Tooth Cafe in Skagway has a bar please",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Sweet Tooth Cafe in Skagway\"))))))"
  },
  {
    "original_sentence": "Does Hy-Yee in Skiatook have a full bar?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Hy-Yee in Skiatook\"))))))"
  },
  {
    "original_sentence": "set up a meeting with my Jake Farm's manager",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake Farm\")))))))))))"
  },
  {
    "original_sentence": "The second one is better thanks",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Let's make meeting with Jake's manager until 11:30AM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))))))))))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 11L 30L)))))))"
  },
  {
    "original_sentence": "On what days am I traveling?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"traveling\"))))"
  },
  {
    "original_sentence": "Add traveling to Thursday all day",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"traveling\")) (NextDOW (Thursday))))))"
  },
  {
    "original_sentence": "Do I have any lunch plans this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"lunch\")) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "set up a lunch for 12pm on wednesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "It's not my diet",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule Veal Dinner for Tuesday at 9 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Veal Dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 9L))))))))"
  },
  {
    "original_sentence": "have veal pick up before this event",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"veal pick up\")) (Event.end_? (?= (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Make dinner plans with John for Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner plans\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))))"
  },
  {
    "original_sentence": "What do I have tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "The last one will need to be moved to 1:30 PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath (BottomResult))) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 1L 30L)))))))"
  },
  {
    "original_sentence": "That works.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What do I have planned on Thursday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "I need to move the second option to the next day.",
    "parse": "(let (x0 (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply (toDays 1)))))))))"
  },
  {
    "original_sentence": "Can you push back my meeting with Kim to be on Jan 20th?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))) (Event.start_? (DateTime.date_? (?= (MD 20L (January))))))))"
  },
  {
    "original_sentence": "I also need the meeting to take place at 11AM instead.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "I think it will last longer than this. Have it end at 12:00 AM.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberAM 12L)))))))"
  },
  {
    "original_sentence": "cancel the meeting",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "nevermind don't cancel it, keep the changes",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Add a lunh with my mom tomorrow",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Add to the calendar a party planning meeting with Jan tomorrow evening.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"party planning meeting\")) (Event.start_? (DateTimeConstraint (Evening) (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jan\")))))))))))"
  },
  {
    "original_sentence": "Do I have anything this evening?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Evening))))) 0L))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is happening on Thursday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Change the first one to Egg White Omelet Breakfast.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 1L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Event.subject_? (?= \"Egg White Omelet Breakfast\")))))"
  },
  {
    "original_sentence": "That is right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great, can you also have the third event last 3 hours.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 3L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Event.duration_? (?= (toHours 3))))))"
  },
  {
    "original_sentence": "Hi I need help with my calendar",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Ok, do I have any upcoming events with Barack Obama?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\"))))))) 0L))"
  },
  {
    "original_sentence": "Ok, do I have any lunches coming up?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunches\"))))) 0L))"
  },
  {
    "original_sentence": "Could you show me how to sync a friend?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you show me how to add en event to my calendar",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "What about a doctor's appointment?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor's appointment\"))))"
  },
  {
    "original_sentence": "Ok! Perfect",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Yes I was wondering if I could send information about one of the events on my calendar to a friend",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "That's perfect, thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "That's it!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I have a meeting with Greg on Monday at 1 pm lasting until 2 pm and that will be in conference room 2",
    "parse": "(FenceConferenceRoom)"
  },
  {
    "original_sentence": "I also have a meeting with Jim on Tuesday in Conference room 1 at 3 pm until 3:45 pm and I need to be shown as out of the office for that",
    "parse": "(FenceConferenceRoom)"
  },
  {
    "original_sentence": "What do I have in conference room 2 next week",
    "parse": "(FenceConferenceRoom)"
  },
  {
    "original_sentence": "What do I have that's not in conference room 2 next week",
    "parse": "(FenceConferenceRoom)"
  },
  {
    "original_sentence": "What's the weather going to be like at that time?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (?= (Execute (refer (extensionConstraint (^(DateTime) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "What am I doing next time there's a full moon?",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "When do I get to sleep in?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"sleep in\")))))))"
  },
  {
    "original_sentence": "Haha no, nope, change that to like 8.30",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 8L 30L)))))))"
  },
  {
    "original_sentence": "better, yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I'd like to book seats for 2 to Hawaii this Thursday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"seats for 2\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday)))))) (Event.location_? (?= (LocationKeyphrase.apply \"Hawaii\")))))))"
  },
  {
    "original_sentence": "Can you tell me when my last meeting was with the CEO?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "When wa sthe last meeting with Jeff",
    "parse": "(Yield (Event.start (FindLastEvent (EventBeforeDateTime (Now) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeff\"))))))))"
  },
  {
    "original_sentence": "Was the meting last week or this week?",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "When did I last meet with Tom?",
    "parse": "(Yield (Event.start (FindLastEvent (EventBeforeDateTime (Now) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\"))))))))"
  },
  {
    "original_sentence": "Did I have anything with Amy that day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\")))))))) 0L))"
  },
  {
    "original_sentence": "Will I be seeing Kim, Jake, and Watts tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Watts\"))))))))) 0L))"
  },
  {
    "original_sentence": "Please set up a meeting with Abby, Jake , and Kim",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))))))"
  },
  {
    "original_sentence": "The second one is fine. Cancel the conference call with Greg, Peter, and Emily",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"conference call\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Greg\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Peter\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\"))))))))))))))"
  },
  {
    "original_sentence": "That is dope",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "i am in meetong",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (Now))))))"
  },
  {
    "original_sentence": "looks greats",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok done",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Out of the office friday afternoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Friday)))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
  },
  {
    "original_sentence": "Make it from 1 pm to 5 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Add event for monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))))))"
  },
  {
    "original_sentence": "Yes thank you",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Meeting with fiona next tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"fiona\")))))))))))"
  },
  {
    "original_sentence": "1 pm",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Remove my even with damon",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"damon\")))))))))))"
  },
  {
    "original_sentence": "Add Damon to my schedule for next monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon\")))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you help me remove an appointment scheduled for this month",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today)))))))))))"
  },
  {
    "original_sentence": "Can you tell me if I can schedule a appointment tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "The Bonsai Show is tomorrow at 11 am to 8 pm, set myself to Busy",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Bonsai Show\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 8L))))) (Event.showAs_? (?= (ShowAsStatus.Busy))))))))"
  },
  {
    "original_sentence": "Actually I just checked their home page. It might be raining. So change that to Tentative.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.showAs_? (?= (ShowAsStatus.Tentative))))))"
  },
  {
    "original_sentence": "Hmm... just clear that status",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.showAs_? (^(ShowAsStatus) AlwaysFalseConstraint)))))"
  },
  {
    "original_sentence": "Cool. That's it",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I do not want Mike and Jason to attend the event",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mike\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jason\"))))))))))))"
  },
  {
    "original_sentence": "It looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, I also need to change my lunch on Friday since Alex and Laura will be going instead of Jimothy",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"lunch\"))))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Laura\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jimothy\"))))))))))))"
  },
  {
    "original_sentence": "Great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "And make the Board meeting without Ann and Beth.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Board meeting\")))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ann\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Beth\"))))))))))))"
  },
  {
    "original_sentence": "I forgot what time my meeting with Jane was next Tuesday, can you tell me when it was?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\"))))))))))"
  },
  {
    "original_sentence": "I have a lunch booked with Craig on Wednesday, can you add it to my calendar?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Craig\")))))))))))"
  },
  {
    "original_sentence": "What's Wilson's response to lunch, please?",
    "parse": "(Yield (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wilson\"))))))))"
  },
  {
    "original_sentence": "Two weekends from now, I will be busy with a bachelorette party all weekend.",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "Can you make sure my schedule is clear two weekends from now?",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "I'll be off work for 3 days from tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"off work\")) (Tomorrow) (toDays 3)))))"
  },
  {
    "original_sentence": "yes right okay",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "How long is lunch today?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"lunch\"))))))))"
  },
  {
    "original_sentence": "And dinner?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"dinner\")))))"
  },
  {
    "original_sentence": "How many events do I have with Keith this week?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Keith\")))) (ThisWeek))))))"
  },
  {
    "original_sentence": "What about with Sarah?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\"))))))"
  },
  {
    "original_sentence": "Can you add \"coffee with Sarah\" as an event for Friday morning?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"coffee with Sarah\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "Change the customer satisfaction meeting from Jims office to my office and send an alert of the change",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"customer satisfaction meeting\")) (Event.location_? (?= (LocationKeyphrase.apply \"Jims office\")))))))) (Event.location_? (?= (LocationKeyphrase.apply \"my office\"))))))"
  },
  {
    "original_sentence": "Oops I meant change my Customer Review.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (Event.subject_? (?~= \"Customer Review\")))))"
  },
  {
    "original_sentence": "Can you update my Feed the Dog event to be tomorrow?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Feed the Dog\")))))) (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "I meant the one in May",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (May))))))"
  },
  {
    "original_sentence": "Yes good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hey so can we change the D&D Night to be next week.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"D&D Night\")))))) (Event.start_? (DateTime.date_? (NextWeekList))))))"
  },
  {
    "original_sentence": "hold on I meant to say A&W Night",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.subject_? (?= \"A&W Night\")))))"
  },
  {
    "original_sentence": "What do you have for me today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Add lunch with dad Friday for 30 minutes at 12:30 pm.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "yes",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "The correct time should be 12:30 pm to 1:00 pm.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) x1 (DateAtTimeWithDefaults (DateTime.date (Event.start x0)) (HourMinutePm 12L 30L))) (do (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (NumberPM 1L))))))) (Yield x1)))"
  },
  {
    "original_sentence": "I want you to cancel all weekdays events from 3pm-5pm.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Can you tell me where Sam Jackson will performing this weekend?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Do I have anything scheduled on the third week of January?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NumberWeekOfMonth 3L (January)))))) 0L))"
  },
  {
    "original_sentence": "Eh, I'm gonna be out of the office. Cancel that.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "That's great. Now what is scheduled in February?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (February)))))"
  },
  {
    "original_sentence": "I would like to block off 3 hours tomorrow at 7:30 pm for a basketball game at the American Airlines Center.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"basketball game\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 7L 30L))))) (Event.duration_? (?= (toHours 3)))) (Event.location_? (?= (LocationKeyphrase.apply \"American Airlines Center\")))))))"
  },
  {
    "original_sentence": "Tell me what year Sue will be coming to visit.",
    "parse": "(Yield (Date.year (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sue\")))))))))))"
  },
  {
    "original_sentence": "What year is my vacation going to be starting in again?",
    "parse": "(Yield (Date.year (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"vacation\")))))))))"
  },
  {
    "original_sentence": "What was the year Mark and I went to Paris?",
    "parse": "(Yield (Date.year (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (& (Event.subject_? (?~= \"Paris\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))))))))))))"
  },
  {
    "original_sentence": "Could you make a study session on March 19 on the same year as my graduate college event?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"study session\")) (Event.start_? (DateTime.date_? (?= (MDY 19L (March) (Date.year (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"graduate college\"))))))))))))))))"
  },
  {
    "original_sentence": "choose the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "dentist appointment this week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (DateTime.date_? (ThisWeek)))))))"
  },
  {
    "original_sentence": "Wait one second",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "dentist appointment",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 2L (October))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Maybe the first one would be better.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Yes. that one is right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "cancel the appointment",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Just a second.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "yup cancel it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create appointment at 10am tomorrow with Jack",
    "parse": "(do (^(Event) EmptyStructConstraint) (do (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jack\")))))) (do (Path.apply \"attendees\") (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 10L))))))))))"
  },
  {
    "original_sentence": "yep!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks. Make appointment with Jill at Hilltop at 11am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))) (Event.location_? (?= (LocationKeyphrase.apply \"Hilltop\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jill\")))))))))))"
  },
  {
    "original_sentence": "the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "When is my meeting with Rex next week?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rex\")))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))))))"
  },
  {
    "original_sentence": "What is on my calendar tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Please add an event called coffee tomorrow at 8 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"coffee\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Han",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Han\")))))))"
  },
  {
    "original_sentence": "Leia",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Leia\")))))))"
  },
  {
    "original_sentence": "Luke",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Luke\")))))))"
  },
  {
    "original_sentence": "Chewy",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chewy\")))))))"
  },
  {
    "original_sentence": "Darth Vader",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Darth Vader\")))))))"
  },
  {
    "original_sentence": "can you change the the meeting with Jahn last month it was not supposed to happen?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jahn\")))) (FullMonthofLastMonth)))))))))"
  },
  {
    "original_sentence": "Yes, please update that it was on August 21.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (previousMonthDay (Today) (August) 21L)))))))"
  },
  {
    "original_sentence": "ooops I meant with Jah, not jahn",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jah\")))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jahn\"))))))))))))"
  },
  {
    "original_sentence": "No it should be an hour long",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Yes that looks right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create a new dentist appointment next week on monday morning",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (DateTimeConstraint (Morning) (DowOfWeekNew (Monday) (NextWeekList))))))))"
  },
  {
    "original_sentence": "No, it's at 9AM.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^((Constraint Time)) roleConstraint (Path.apply \"start\")) (^(Time) ConstraintTypeIntension)) (intension (?= (NumberAM 9L))))))"
  },
  {
    "original_sentence": "Can you make my play date a bit earlier in the day?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"play date\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (OnDateBeforeTime (DateTime.date (Event.start x0)) (DateTime.time (Event.start x0))))))))"
  },
  {
    "original_sentence": "Make it later please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "The former one please and thank you.",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "The 12:30 one. Please.",
    "parse": "(Yield (Execute (ChooseUpdateEventFromConstraint (Event.start_? (DateTime.time_? (?= (HourMinutePm 12L 30L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "what is the weather in Fayetteville NC",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Fayetteville NC\"))) (?= (Now))))"
  },
  {
    "original_sentence": "when will the weather get hotter then 57",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "is there rain in the next few days in Greenville NC",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Greenville NC\"))) (DateTime.date_? (NextPeriod (toDays 3))))))"
  },
  {
    "original_sentence": "What is Calf weather like today",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Calf\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "Fayetteville NC",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"Fayetteville NC\")))))))"
  },
  {
    "original_sentence": "I am done , thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a dentists appointment at 8:00 am on Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentists appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Elongate it to 9AM",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "I need a meeting that is after lunch",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (OnDateAfterTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Lunch))))))"
  },
  {
    "original_sentence": "I changed my mine. I want it earlier than the first suggested time so that I can go to have lunch with Ann.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "The last one",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "none",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I would like you to place an appointment for tomorrow at 9AM and name staff meeting",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"staff meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "yes, thank you for your help",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "today in meeting",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Add a meeting for today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Today)))))))"
  },
  {
    "original_sentence": "The afternoon one.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (Afternoon))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need a hair appointment late morning Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"hair appointment\")) (Event.start_? (DateTimeConstraint (LateMorning) (NextDOW (Monday))))))))"
  },
  {
    "original_sentence": "I'll take the first.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Did Frank respond to my invitation?",
    "parse": "(Yield (AttendeeResponseStatus (AttendeeFromEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Frank\"))))))))"
  },
  {
    "original_sentence": "Awesome, how about Steven?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steven\"))))))"
  },
  {
    "original_sentence": "OK. Any idea if Bobbo has responded?",
    "parse": "(Yield (AttendeeResponseStatus (AttendeeFromEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bobbo\"))))))))"
  },
  {
    "original_sentence": "Did I accept the Friendsgiving invitation?",
    "parse": "(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Friendsgivings\"))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "yyes",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have any meetings scheduled past 4:30 pm on Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (NextDOW (Friday)) (^(Event) EmptyStructConstraint) (HourMinutePm 4L 30L))))) 0L))"
  },
  {
    "original_sentence": "Schedule Bar on Friday at 6 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Bar\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "Yep, perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Set the location to Burnt Rd.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Burnt Rd\"))))))"
  },
  {
    "original_sentence": "Can you locate Ceol in Reno for me?",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Ceol in Reno\")))"
  },
  {
    "original_sentence": "Is this place good for groups?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Find Combo Restaurant in Bellevue.",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Combo Restaurant in Bellevue\")))"
  },
  {
    "original_sentence": "Will they accommodate a small group of around 7 people.",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "pick up my daughter at 11 at her school",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"pick up my daughter\")) (Event.start_? (?= (NextTime (NumberAM 11L))))) (Event.location_? (?= (LocationKeyphrase.apply \"her school\")))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please add take daughter to dentist at 11:45",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"take daughter to dentist\")) (Event.start_? (?= (NextTime (HourMinuteAm 11L 45L))))))))"
  },
  {
    "original_sentence": "Add get ice cream for daughter at 12:45 PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"get ice cream for daughter\")) (Event.start_? (?= (NextTime (HourMinutePm 12L 45L))))))))"
  },
  {
    "original_sentence": "Can you check if I have anything on my calendar the evening of February 28?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (MD 28L (February)) (^(Event) EmptyStructConstraint)) (Evening))))"
  },
  {
    "original_sentence": "please make a meet with my partner c linden on tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"c linden\")))))))))))"
  },
  {
    "original_sentence": "wait let me take a nap",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "the first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "please change the meeting 10.30 am - 11.00 am utc",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "put lunch meeting with james?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch meeting\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"james\")))))))))))"
  },
  {
    "original_sentence": "Who is james manager?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"james\")))))))"
  },
  {
    "original_sentence": "Add him to the meeting please.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "That is too early for lunch. When are James and Dan available at 1130am?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 11L 30L)))))))"
  },
  {
    "original_sentence": "Call Barack Obama.",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\"))))))))"
  },
  {
    "original_sentence": "Meet Barack Obama tomorrow at 10.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 10L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\")))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Set an appointment for the chiropractor on March 13th at 9:00am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"chiropractor\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 13L (March)) (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "I only need 20 minutes for that though.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toMinutes 20))))))"
  },
  {
    "original_sentence": "good thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add my dentist appointment to my calendar for April 5th at 8:00am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 5L (April)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "confimred",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thanks for your help",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "no need for your help on this time",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I've got so many meetings and deadlines leading up to a deadline on April 2nd. Can you help?",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "I want to schedule a hike for 3pm tomorrow at Palmer Park.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"hike\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Palmer Park\")))))))"
  },
  {
    "original_sentence": "What is the weather going to be like for my hike at Palmer Park tomorrow?",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \"Palmer Park\"))) (EventOnDate (Tomorrow) (Event.subject_? (?~= \"hike\")))))))))"
  },
  {
    "original_sentence": "Now put on my calendar yoga at Pompano Beach for Sunday at 7 am; will it be warm then?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"yoga\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 7L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Pompano Beach\")))))))"
  },
  {
    "original_sentence": "Set up Exotic Dinner for 6 pm on July 29th at EPCOT.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Exotic Dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 29L (July)) (NumberPM 6L))))) (Event.location_? (?= (LocationKeyphrase.apply \"EPCOT\")))))))"
  },
  {
    "original_sentence": "Yes those look great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "that looks good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What will the weather be like?",
    "parse": "(Yield (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Thanks, now can you create an event at the Lincoln Memorial for Saturday at 3 pm called \"sight seeing\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"sight seeing\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 3L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Lincoln Memorial\")))))))"
  },
  {
    "original_sentence": "Do you see any teacher's meetings?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"teacher's meetings\"))))"
  },
  {
    "original_sentence": "Then what meetings do I have this week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"meetings\")) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))"
  },
  {
    "original_sentence": "Put lunch with Pam on Thursday the 7th at 1pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 7L) (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Pam\")))))))))))"
  },
  {
    "original_sentence": "Can you make that to 2 pm?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Add dinner with mom at 7",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "That is going to 8 pm.",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Do I have any meetings right now?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (Now) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Can you change the location my our road trip to the hot springs and make it last only 8 hours please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"our road trip to the hot springs\")))))) (Event.duration_? (?= (toHours 8))))))"
  },
  {
    "original_sentence": "Looks perfect to me",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "make an appointment with mavi at today 7 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 7L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"mavi\")))))))))))"
  },
  {
    "original_sentence": "Actually change the time to between 5 and 7",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Good for now",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "It's Very Well",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "change my 3 pm meeting to sometime between 6 and 10 pm tonight",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Today) (NumberPM 6L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 3L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTimeAndConstraint x0 (TimeAfterDateTime x0 (NumberPM 10L))))))))"
  },
  {
    "original_sentence": "Do I have a meeting with Abby tomorrow",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "Is there a lunch conference scheduled for Saturday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"lunch conference\")))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything planned for New Years eve?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextHolidayFromToday (Holiday.NewYearsEve)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Do I have a meeting with Craig next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Craig\")))) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Did I schedule a vet appointment?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"vet appointment\"))))) 0L))"
  },
  {
    "original_sentence": "Do I have an event with Abby tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))) 0L))"
  },
  {
    "original_sentence": "Do I have a meeting with Claire on Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Claire\")))))))) 0L))"
  },
  {
    "original_sentence": "Is Jimbo joining me for lunch on Saturday?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"lunch\")))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jimbo\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Do I have a wine festival to go to with Deb this weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"wine festival\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Deb\"))))) (ThisWeekend))))) 0L))"
  },
  {
    "original_sentence": "Hello I need help with my calendar",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "I need you to show me my schedule for next week",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "I need you to create some new events for next week",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Create an event for next week Lunch with Barack Obama.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Lunch\")) (Event.start_? (DateTime.date_? (NextWeekList)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\")))))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Search for Doctor's appointment next week",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Doctor's appointment\")) (NextWeekList))))"
  },
  {
    "original_sentence": "Add a doctor's appointment next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (DateTime.date_? (NextWeekList)))))))"
  },
  {
    "original_sentence": "May 21st",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 21L (May))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Show me coworker syncs",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"coworker syncs\"))))"
  },
  {
    "original_sentence": "Add Coworker syncs with Jerri Skinner, Fiona Mason May 22nd at 2 pm to 4 pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (MD 22L (May)) (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Coworker syncs\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jerri Skinner\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fiona Mason\")))))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add Lunch with Page Ashworth on May 23rd at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 23L (May)) (NumberPM 3L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Page Ashworth\")))))))))))"
  },
  {
    "original_sentence": "Add Lunch with Paige Ashworth May 23rd at 3 PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 23L (May)) (NumberPM 3L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\")))))))))))"
  },
  {
    "original_sentence": "Good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Show me lunch with Barack Obama",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\")))))))"
  },
  {
    "original_sentence": "Change the time to 12 noon to 1 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Change the time on Lunch with Barack Obama to Noon",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\"))))))))) (Event.start_? (DateTime.time_? (?= (Noon)))))))"
  },
  {
    "original_sentence": "change end time to 1 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Show me my calendar for next week",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "Cancel my meeting with Jackie today.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jackie\"))))))))))))"
  },
  {
    "original_sentence": "Add Jackie's skip to the list of attendees.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jackie\"))))))))))))"
  },
  {
    "original_sentence": "Jackie's skip cannot make it either. Please cancel the meeting.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Reschedule that same meeting with Jackie's skip and Dan Schoffel the first week next month.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.date_? (NumberWeekOfMonth 1L (NextMonth)))) (Event.attendees_? (& (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jackie\")))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Schoffel\"))))))))))))"
  },
  {
    "original_sentence": "When is the meeting with James and Jame's skip?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\"))) (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jame\")))))))))))))))"
  },
  {
    "original_sentence": "Can you tell me where and when my appointment with Batman will be?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Batman\")))))))) (do (Yield (Event.location x0)) (Yield (Event.start x0))))"
  },
  {
    "original_sentence": "Okay thanks for trying.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you find me an hour free around noon this week to have lunch with my wife?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I have dinner on sunday at 5pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Can you mark that as busy?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.showAs_? (?= (ShowAsStatus.Busy))))))"
  },
  {
    "original_sentence": "Can you tell me where Sam Jackson will performing this weekend?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Do I have anything scheduled on the third week of January?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NumberWeekOfMonth 3L (January)))))) 0L))"
  },
  {
    "original_sentence": "Eh, I'm gonna be out of the office. Cancel that.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Look at my schedule and give me the starting time of the office meeting next week.",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"office meeting\")) (NextWeekList)))))))"
  },
  {
    "original_sentence": "add another meeting at 1:00 pm after that one",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (TimeAfterDateTime (Execute (refer (extensionConstraint (^(DateTime) EmptyStructConstraint)))) (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "What is on my schedule for that Saturday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "create a $40 dinner date tonight",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"$40 dinner date\")) (Event.start_? (DateTimeConstraint (Night) (Today)))))))"
  },
  {
    "original_sentence": "The second one will work.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Great, please also add Bars & Music at 10:00 pm tonight as well.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Bars & Music\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 10L))))))))"
  },
  {
    "original_sentence": "Great, thanks!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When is my %Meeting?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"%Meeting\")))))))"
  },
  {
    "original_sentence": "When is Martha's birthday party?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Martha's birthday party\")))))))"
  },
  {
    "original_sentence": "Reschedule it for Friday at the same time.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add that Michelle is going to the birthday party too.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Michelle\"))))))))))"
  },
  {
    "original_sentence": "Looks great!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When is my appointment with Julie today?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Julie\"))))))))))"
  },
  {
    "original_sentence": "ok.. thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please add Emily to my meeting with Julie.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\"))))))))))"
  },
  {
    "original_sentence": "Ok thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thanks, please email that to everyone",
    "parse": "(FenceSwitchTabs)"
  },
  {
    "original_sentence": "When is my next event with Jacob",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jacob\"))))))) 1L)))"
  },
  {
    "original_sentence": "What is on the calendar for tonight?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Night))))"
  },
  {
    "original_sentence": "Add dinner with Jen at 6.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (NextTime (NumberPM 6L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jen\")))))))))))"
  },
  {
    "original_sentence": "Yes, but it should last for 1 hour.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "get rid of meeting after work",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"meeting after work\")))))))))"
  },
  {
    "original_sentence": "Do I have any meetings tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Make a meeting called \"Updates\" at 1:25 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Updates\")) (Event.start_? (?= (NextTime (HourMinutePm 1L 25L))))))))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add date for Friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"date\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "Hello is my boss organizing this next event on my calendar",
    "parse": "(Yield (== (Event.organizer (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)) (FindManager (toRecipient (CurrentUser)))))"
  },
  {
    "original_sentence": "Is my manager the one organizing the Company picnic?",
    "parse": "(Yield (== (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Company picnic\")))))) (FindManager (toRecipient (CurrentUser)))))"
  },
  {
    "original_sentence": "Josephine",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Josephine\")))))))"
  },
  {
    "original_sentence": "Ryleigh",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ryleigh\")))))))"
  },
  {
    "original_sentence": "Make a appointment to night 8PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "Yes, but this if for the Spaghetti Factory and I'm wondering if they have large reservation tables available.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Where will I be eating lunch this Saturday?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"lunch\"))))))))"
  },
  {
    "original_sentence": "Who will also be at that lunch?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Ok forward it to Daniel and Dana",
    "parse": "(Yield (ForwardEventWrapper (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (append (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Daniel\")))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dana\"))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hi I would like to create an event with Paige Ashworth",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\"))))))))))"
  },
  {
    "original_sentence": "Yes May 9, Thu",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I would also like to create an event with Barack Obama",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\"))))))))))"
  },
  {
    "original_sentence": "Yes May 9, Thu",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need to update my meeting with Paige Ashworth",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "I need to remove my meeting with paige ashworth",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"paige ashworth\")))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I would like to search for my meeting with Barack Obama",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\"))))))"
  },
  {
    "original_sentence": "Remove this event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I want to plan a night jog for Saturday Night",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"night jog\")) (Event.start_? (DateTimeConstraint (Night) (NextDOW (Saturday))))))))"
  },
  {
    "original_sentence": "no, make it so it doesn't start on the weekend",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Yes and add buy running shoes this weekend",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"buy running shoes\")) (Event.start_? (DateTime.date_? (ThisWeekend))))))))"
  },
  {
    "original_sentence": "I would prefer it to not be on the weekend",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "yes the 24th. Can you schedule a Hockey Game for sunday?",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.day_? (?= (Day.apply 24L))))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Hockey Game\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday))))))))))"
  },
  {
    "original_sentence": "please make it not on the weekend",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Hi, can you please check what time my soccer practice is?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"soccer practice\")))))))"
  },
  {
    "original_sentence": "all right. Add 5pm every Wednesday for soccer practice.",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "Then add 5pm for coming wednesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "Looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "change the duration to 1 hour",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "actually it is Thursday, not wednesday",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Thursday)))))))))"
  },
  {
    "original_sentence": "yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "perfect",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "that is it. thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "bye!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is the forecast for tomorrow",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "when is the next rain expected?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "is it going to rain tomorrow?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "what will the weather be during the Dodger game?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "what is the 5 day forecast",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (NextPeriod (toDays 5)))))"
  },
  {
    "original_sentence": "is it snowing in Minneapolis",
    "parse": "(Yield (IsSnowy (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Minneapolis\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "when is daylight savings? will the weather change then?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "are there any rain days in the next 10 days",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (NextPeriod (toDays 10))))))"
  },
  {
    "original_sentence": "what is the weather tomorrow at the beach",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "What about venice beach?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(LocationKeyphrase) roleConstraint (Path.apply \"place\")) (extensionConstraint (^(LocationKeyphrase) AlwaysTrueConstraint))) (intension (LocationKeyphrase.apply \"venice beach\")))))"
  },
  {
    "original_sentence": "is there any ozone warning this week",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "how much smog is there this week?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "is the forecast average for this time of year",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "what are the records for tomorrow",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "what is the record high for LA on Oct 24",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Do you know when an earthquake is coming",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "does weather cause earthquakes",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Who has RSVP to the party?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"party\")))))) (ResponseStatusType.None)))"
  },
  {
    "original_sentence": "Who has accepted the Lupe Fiasco concert invite?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Lupe Fiasco concert\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "did anyone not accept the Santana concert at the Gorge?",
    "parse": "(Yield (> (size (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Santana concert\")) (Event.location_? (?= (LocationKeyphrase.apply \"Gorge\")))))))) (ResponseStatusType.Accepted))) 0L))"
  },
  {
    "original_sentence": "Change car shopping to be in the PM",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"car shopping\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (ConvertTimeToPM (DateTime.time (Event.start x0))))))))))"
  },
  {
    "original_sentence": "That looks good. Now update Cow Hopping to be in the AM",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Cow Hopping\")))))) (do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (ConvertTimeToAM (DateTime.time (Event.start x0)))))))))))"
  },
  {
    "original_sentence": "Make my Coffee Date on the 30th happen in the AM",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 30L) (Event.subject_? (?~= \"Coffee Date\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (ConvertTimeToAM (DateTime.time (Event.start x0))))))))))"
  },
  {
    "original_sentence": "Yes, Thank you, then could you move the Game Time from 7 am to PM.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberAM 7L)) (Event.subject_? (?~= \"Game Time\"))))))) (do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (ConvertTimeToPM (DateTime.time (Event.start x0)))))))))))"
  },
  {
    "original_sentence": "Create meeting with Patrick on Sunday at 9 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Patrick\")))))))))))"
  },
  {
    "original_sentence": "add donald trump to this",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"donald trump\"))))))))))"
  },
  {
    "original_sentence": "yes meeting is very useful discuss with planing my business",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "change the time to 8pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "yes that is fine but it's on august 28 not july",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.date_? (?= (MD 28L (August))))))))"
  },
  {
    "original_sentence": "When will it be warmest this weekend in Paris?",
    "parse": "(Yield (WhenProperty (temperature) (WeatherQuantifier.Max) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Paris\"))) (DateTime.date_? (ThisWeekend)))))"
  },
  {
    "original_sentence": "Great! Can you schedule a run for me at that time?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"run\")) (Event.start_? (?= (Execute (refer (extensionConstraint (^(DateTime) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "the customer actually expects you to wave the magic wand & fulfil their wishes which is not possible most ...",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Yes. I want to schedule two appointments this week.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "OK. Make an appointment for Wednesday at 3:30 PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (HourMinutePm 3L 30L)))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add another appointment for Friday, 3:30 PM start time.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 3L 30L)))))))"
  },
  {
    "original_sentence": "Looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks! That's all for now.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "League of Legends should be 2 hours and at 15h",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"League of Legends\")))))) (& (Event.start_? (DateTime.time_? (?= (HourMilitary 15L)))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "No I want time at 1515",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (HourMinuteMilitary 15L 15L)))))))"
  },
  {
    "original_sentence": "yup!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "what is my appointment with scot hanson?",
    "parse": "(Yield (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"scot hanson\")))))))))"
  },
  {
    "original_sentence": "can you create one",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "yes the first one and that is for a lunch",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "change that appointment to lunch",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"lunch\")))))"
  },
  {
    "original_sentence": "correct",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "what do i have with cher roydon",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"cher roydon\"))))))"
  },
  {
    "original_sentence": "create meeting for tomorrow at 5pm-6pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 6L)))))))))"
  },
  {
    "original_sentence": "it's for a meeting",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "change appointment to meeting",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Decline my lunch with Justin on Wednesday.",
    "parse": "(EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Justin\")))) (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint)))))) :response (ResponseStatusType.Declined) :sendResponse (RespondShouldSend.apply false))"
  },
  {
    "original_sentence": "Accept my meeting with James on Tuesday but say I'll be out of the office.",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I'll be out of the office\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\")))))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Yes that is ok.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Decline the skating party invite.",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"skating party\"))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "What events do I have on Tuesday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "I need you to add Teft, Rock, and Lopen to the 2nd one",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Teft\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rock\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lopen\")))))))))))"
  },
  {
    "original_sentence": "That looks good to me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Move the third event to 3:15 PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 3L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 15L)))))))"
  },
  {
    "original_sentence": "yeah.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ewwkfje fkejfoejfkldfwls",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "nice this",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "yes",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "Make a meeting with Kim's team",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))))))"
  },
  {
    "original_sentence": "The frst one. Will Elli Parker be on call with me this weekend?",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli Parker\")))) (EventDuringRange (Event.subject_? (?~= \"on call\")) (ThisWeekend)))))) 0L)))"
  },
  {
    "original_sentence": "send message to Elli asking if she is on call this weekend",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\"))))))))"
  },
  {
    "original_sentence": "yep",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "who is on my team",
    "parse": "(Yield (FindTeamOf (toRecipient (CurrentUser))))"
  },
  {
    "original_sentence": "Tell me what I have on my schedule for Friday.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What is the other event?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Do I have anything else after 3:00 P.M.",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDateAfterTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint) (NumberPM 3L)))))) 0L))"
  },
  {
    "original_sentence": "Can you mark me as Out of Office after 3 PM?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?> (NextTime (NumberPM 3L)))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
  },
  {
    "original_sentence": "Put on my calendar a morning appointment with my eye doctor on Friday.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "then look for my doctor",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Eye doctor appointment for friday evening.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"eye doctor appointment\")) (Event.start_? (DateTimeConstraint (Evening) (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "I'll take the later one at 5:30 pm",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (HourMinutePm 5L 30L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Do I have anything going on tomorrow night?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Night))))) 0L))"
  },
  {
    "original_sentence": "I want to meet up with Amy on Saturday morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Saturday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\")))))))))))"
  },
  {
    "original_sentence": "yes you can join george along with them",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"george\"))))))))))"
  },
  {
    "original_sentence": "Top one please",
    "parse": "(Yield (Execute (ChooseCreateEvent (TopResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "good job thank you emily",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what about the weather in ohio now?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"ohio\"))) (?= (Now))))"
  },
  {
    "original_sentence": "delete my manicure last wednesday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Wednesday)) (Event.subject_? (?~= \"manicure\"))))))))))"
  },
  {
    "original_sentence": "Please change the time to 6:30 PM",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 6L 30L)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please search for \"Manicure\" events in July",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Manicure\")) (FullMonthofMonth (July)))))"
  },
  {
    "original_sentence": "Were there any \"Manicure\" events in June as well?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Manicure\")) (FullMonthofMonth (June)))))) 0L))"
  },
  {
    "original_sentence": "Do I have a hair appointment tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"hair appointment\")))))) 0L))"
  },
  {
    "original_sentence": "okay when meeting start",
    "parse": "(Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Do I have a breakfast meeting with John next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"breakfast meeting\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Is there anything with John at all scheduled?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))) 0L))"
  },
  {
    "original_sentence": "Do I have a meeting on Saturday with Sheila?",
    "parse": "(do (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sheila\"))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sheila\")))) (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))) 0L)))"
  },
  {
    "original_sentence": "Do I have anything tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "What about this week?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))"
  },
  {
    "original_sentence": "Cool can I join Games Night?",
    "parse": "(Yield (joinEventCommand (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?= \"Games Night\"))))))))"
  },
  {
    "original_sentence": "Show all of my grocery shops next month",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"grocery shop\")) (FullMonthofMonth (NextMonth)))))"
  },
  {
    "original_sentence": "thanks, how about workouts?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"workouts\")))))"
  },
  {
    "original_sentence": "And do I have any chiropractor appointments next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"chiropractor appointments\")) (NextWeekList))))"
  },
  {
    "original_sentence": "can you arrange with 10.00 Am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "yes I will do the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Block May 1 - 7 as vacation.",
    "parse": "(let (x0 (MD 1L (May))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"vacation\")) (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (DateAndConstraint x0 (nextDayOfMonth x0 7L))))))))"
  },
  {
    "original_sentence": "Block out my calendar for the rest of the week, please.",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "can we set up something tomorrow between 6 and 10 pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 10L)))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "add running on Saturday morning",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"running\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Saturday))))))))"
  },
  {
    "original_sentence": "first one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "When is Ground Hog Day",
    "parse": "(Yield (NextHolidayFromToday (Holiday.GroundhogDay)))"
  },
  {
    "original_sentence": "Set up breakfast for early tomorrow?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"breakfast\")) (Event.start_? (DateTimeConstraint (Early) (Tomorrow)))))))"
  },
  {
    "original_sentence": "The second one. Schedule golf early next sunday",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"golf\")) (Event.start_? (DateTimeConstraint (Early) (NextDOW (Sunday)))))))))"
  },
  {
    "original_sentence": "Lemme get an Event for early in the day on Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Early) (NextDOW (Monday)))))))"
  },
  {
    "original_sentence": "create an event at 10.30AM and show status as BUSY",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"event\")) (Event.start_? (?= (NextTime (HourMinuteAm 10L 30L))))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))"
  },
  {
    "original_sentence": "Can you schedule a lunch at 12 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (NextTime (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "Include a coffee date on friday between 7 and 9pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"coffee date\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 9L)))))))))"
  },
  {
    "original_sentence": "It's perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Okay, now can you also delete the appointment I have day after tomorrow between 1 and 4 pm?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (DateTimeConstraint (TimeToTime (NumberPM 1L) (NumberPM 4L)) (adjustByPeriod (Tomorrow) (toDays 1)))))))))))"
  },
  {
    "original_sentence": "can you arrange with 3.00 PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "can you arrange with 3.30 PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))))))"
  },
  {
    "original_sentence": "What was my longest meeting last week?",
    "parse": "(FenceAggregation)"
  },
  {
    "original_sentence": "What was my earliest meeting last week?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (LastWeekNew)) 1L))"
  },
  {
    "original_sentence": "Is there anything after that?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))) 0L)))"
  },
  {
    "original_sentence": "Could you find me my last event with Joseph?",
    "parse": "(Yield (FindLastEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joseph\"))))))"
  },
  {
    "original_sentence": "What did I do on Monday of last week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (DowOfWeekNew (Monday) (LastWeekNew)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "uwu can u shwow me my cawendar mr pwesident",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Do I have any parties planned in 2020?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"parties\")) (FullYearofYear (Year.apply 2020L)))))) 0L))"
  },
  {
    "original_sentence": "Is my D&D presentation in 2023?",
    "parse": "(Yield (== (Date.year (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"D&D presentation\")))))))) (Year.apply 2023L)))"
  },
  {
    "original_sentence": "When was my D&D presentation last year?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"D&D presentation\")) (FullYearofYear (LastYear))))))))"
  },
  {
    "original_sentence": "I want to have lunch with Juill, jamie and bill",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Juill\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jamie\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bill\"))))))))))))"
  },
  {
    "original_sentence": "Yes, schedule lunch for Friday.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Put a meeting with Ben, Jill, and Parker in room 403 for 4PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (NextTime (NumberPM 4L)))) (Event.location_? (?= (LocationKeyphrase.apply \"room 403\")))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ben\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jill\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Parker\"))))))))))))"
  },
  {
    "original_sentence": "That is good .",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "change the time to 5pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "Schedule a meeting with bob between 1-5 for 45 minutes on friday",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTimeAndConstraint x0 (TimeAfterDateTime x0 (NumberPM 5L)))) (Event.duration_? (?= (toMinutes 45)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bob\"))))))))))))"
  },
  {
    "original_sentence": "Please , change meeting time",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Actually, make it 30 minutes starting at 3:30.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))) (Event.duration_? (?= (toMinutes 30)))))))"
  },
  {
    "original_sentence": "I need to help manage my calendar because I have a deadline coming up.",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Do I have any meetings on my calendar today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Cancel that event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "i sure make everything on time be ready",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you remove my calendar invite for tomorrow?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Okay, can you create a calendar event for 04/12?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventOnDate (MD 12L (toMonth 4L)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Can you search for my calendar events?",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "What can you do?",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Can you tell me what the weather is?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (?= (Now))))"
  },
  {
    "original_sentence": "I would like to add an event starting at 1 pm on April 28th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (MD 28L (April)) (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "confirmed thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "make it end at 2:30",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 2L 30L)))))))"
  },
  {
    "original_sentence": "That's perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "what events do I have this weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "Can you cancel that event please?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Please remove bbq with Ed on the first day of summer.",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "Can you add a fall bbq to the calendar?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"bbq\")) (Event.start_? (DateTime.date_? (SeasonFall)))))))"
  },
  {
    "original_sentence": "The second one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you add thanksgiving to my calendar this fall?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"thanksgiving\")) (Event.start_? (DateTime.date_? (SeasonFall)))))))"
  },
  {
    "original_sentence": "The 2nd one will work.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "When is my next meeting with Karen?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\")))) 1L)))"
  },
  {
    "original_sentence": "When do I see Allen next?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Allen\")))) 1L)))"
  },
  {
    "original_sentence": "Regarding Alex Jones, when's our next meeting?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex Jones\")))) 1L)))"
  },
  {
    "original_sentence": "When is my next meeting with Joe?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joe\")))) 1L)))"
  },
  {
    "original_sentence": "When is my next meeting I have with Elaine?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elaine\")))) 1L)))"
  },
  {
    "original_sentence": "I need to update my meeting to the morning sometime next week.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (NextWeekList))))))"
  },
  {
    "original_sentence": "The first option.",
    "parse": "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Great, thanks! Also please push my meeting with Kenny back two hours tomorrow.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kenny\")))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply :duration (toHours 2)))))))))"
  },
  {
    "original_sentence": "Looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to delay the food volunteer event with Erin to sometime in December.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"food volunteer\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Erin\"))))))))) (Event.start_? (DateTime.date_? (FullMonthofMonth (December)))))))"
  },
  {
    "original_sentence": "Hi, Please remove next week's game from the calendar. I don't think I'll be too interested in watching it anymore.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"game\")) (NextWeekList)))))))))"
  },
  {
    "original_sentence": "Yes, please cancel the game on Monday at 11:00 pm since I will no longer be interested in watching it.",
    "parse": "(Yield (Execute (ConfirmDeleteAndReturnAction (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 11L)))))))"
  },
  {
    "original_sentence": "Thanks , add to schedule watch big bang series finale on Thursday at 8:00 pm for 1 hour since I do not want to miss that.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"watch big bang series finale\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 8L))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "This is good, please add to my schedule every night for two weeks",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceRecurring))"
  },
  {
    "original_sentence": "Can you add Karen and Jan to this event?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jan\")))))))))))"
  },
  {
    "original_sentence": "Where is my meeting with John on Wednesday at the end of the day?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Wednesday)) (EndOfWorkDay)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))))"
  },
  {
    "original_sentence": "Cool, can you make a Pizza event for this Friday at the end of the day.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Pizza\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (EndOfWorkDay))))))))"
  },
  {
    "original_sentence": "Yes, that is great! Please schedule.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add in Time for a Sandwich on Friday at the end of the day",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Time for a Sandwich\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (EndOfWorkDay))))))))"
  },
  {
    "original_sentence": "create running day on monday at 3",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"running day\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Yes this looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you very much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make an event for Monday at 3pm for Lunch",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Let's postpone it to a day from now.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply (toDays 1))))))))"
  },
  {
    "original_sentence": "I need to set up an appointment for 6 months and 2 days from today at 2 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (adjustByPeriod (Today) (addPeriods (toMonths 6) (toDays 2))) (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "defer the meeting jane today",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "please create a management retreat all next week.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"management retreat\")) (NextWeekList)))))"
  },
  {
    "original_sentence": "Looks perfection",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I will be out of office all of next week. I'll be in Brooklyn",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.location_? (?= (LocationKeyphrase.apply \"Brooklyn\"))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))) (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (NextWeekList))))))"
  },
  {
    "original_sentence": "exactly",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I will be away on a work trip from Dec 3rd to Dec 7th",
    "parse": "(let (x0 (MD 3L (December))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"work trip\")) (DateAndConstraint x0 (nextMonthDay x0 (December) 7L)))))))"
  },
  {
    "original_sentence": "Hello! I'd like to remove the five boxes of freeze-dried goods moving event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"five boxes of freeze-dried goods moving\")))))))))"
  },
  {
    "original_sentence": "actually I mean to remove the fresh goods moving event thats next saturday instead",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.subject_? (?~= \"fresh goods moving\")) (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "No thank you satisfy me by abolishing my date this weekend because I am staying in",
    "parse": "(do (DoNotConfirm) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"date\")) (ThisWeekend))))))))))"
  },
  {
    "original_sentence": "Wait no, I meant to cancel my tv marathon next Monday instead",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"tv marathon\"))))))"
  },
  {
    "original_sentence": "No actually it is an 8 hour tv marathon on Thursday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Thursday)) (& (Event.subject_? (?~= \"tv marathon\")) (Event.duration_? (?= (toHours 8))))))))"
  },
  {
    "original_sentence": "I wanna meet my dad at today 7 PM",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Where is my dinner with Dad?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Where is my dinner on sunday?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"dinner\"))))))))"
  },
  {
    "original_sentence": "Will I be able to order an alcoholic drink while at Rain City Burgers?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Rain City Burgers\"))))))"
  },
  {
    "original_sentence": "Do they have outdoor seating?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.OutdoorDining) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Remind to get pizza with the boys Sunday morning for the Super Bowl.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Do I have any events scheduled for tomorrow afternoon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything between lunch and enjoy the sun tomorrow?",
    "parse": "(let (x0 (Tomorrow)) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBetweenEvents (^(Event) EmptyStructConstraint) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate x0 (Event.subject_? (?~= \"enjoy the sun\")))))) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate x0 (Event.subject_? (?~= \"lunch\")))))))))) 0L)))"
  },
  {
    "original_sentence": "What is the second event?",
    "parse": "(Yield (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "What event happens after lunch tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (Tomorrow) (^(Event) EmptyStructConstraint) (Lunch))))"
  },
  {
    "original_sentence": "extend enjoy the sun to end at 4 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"enjoy the sun\")))))) (Event.end_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Make a Turkey Day Party with Kims team and remove Abby from it",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Turkey Day Party\")) (Event.attendees_? (& (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kims\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))))"
  },
  {
    "original_sentence": "This will work. Also add an all hands meeting for tomorrow with Schoffel's team and include Jake",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"all hands meeting\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (& (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Schoffel\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))))))))))))"
  },
  {
    "original_sentence": "Lets add Abby's team and remove Jesse",
    "parse": "(Yield (RecipientWithNameLike (Execute (ReviseConstraint (refer (^((Constraint Recipient)) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))))) (PersonName.apply \"Jesse\")))"
  },
  {
    "original_sentence": "2nd one is good",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Create a timer for Thursday next week",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "make an appointment my lawyer today",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "His name is Jesse. Find free time later in the day.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (OnDateAfterTime (Today) (DateTime.time (Now)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\")))))))))))"
  },
  {
    "original_sentence": "Make that later",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?> (Execute (refer (extensionConstraint (^(DateTime) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Can that be earlier?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?< (Execute (refer (extensionConstraint (^(DateTime) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "second is free",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Am I free on Tuesday?",
    "parse": "(Yield (IsFree (RecipientAvailability (& (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
  },
  {
    "original_sentence": "Lovely. What about next week?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (NextWeekList))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (CreateCommitEventWrapper (Execute (refer (extensionConstraint (^(CreateCommitEvent) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "When can Jake and I meet on monday?",
    "parse": "(Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (& (AttendeeListHasRecipient (toRecipient (CurrentUser))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))))) true))"
  },
  {
    "original_sentence": "what about next week",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (NextWeekList))))))"
  },
  {
    "original_sentence": "Show all of my meetings with Natalie coming up",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Natalie\"))))))"
  },
  {
    "original_sentence": "Make a appointment to tomorrow 4PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "That looks very good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, now show me all doctor appointments next month.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctor appointments\")) (FullMonthofMonth (NextMonth)))))"
  },
  {
    "original_sentence": "when is the next one?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "I need to add lunch with Robert on Thursday at 11AM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberAM 11L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Robert\")))))))))))"
  },
  {
    "original_sentence": "Yes this looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, can you also cancel the sales meeting right after?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (Event.subject_? (?~= \"sales meeting\")) (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))))"
  },
  {
    "original_sentence": "Yes please cancel this",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cancel the pizza party please",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"pizza party\")))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have any appointments tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Mark tomorrow as \"Free\".",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "I need you to tell me what Dave Pensado's email address is, if you can.",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dave Pensado\"))))))))"
  },
  {
    "original_sentence": "good thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "please update my all events in my calender",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you get me Matthew's phone number?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Matthew\"))))))))"
  },
  {
    "original_sentence": "Did Salim confirm attendance to the house party",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"house party\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Salim\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Good can you tell me if Jeff got the party invite?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"party\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeff\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Did james say yes or no to the sales call?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"sales call\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"james\")))))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"james\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Will Sarah be at the meeting on Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\")))))))) 0L))"
  },
  {
    "original_sentence": "Will John be at the office party?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"office party\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Can you delete my meeting on Monday?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "I need to create an event. Create 3pm meeting with Chuck at Starbucks on Thursday December 19th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 19L (December)) (NumberPM 3L)))) (Event.location_? (?= (LocationKeyphrase.apply \"Starbucks\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chuck\")))))))))))"
  },
  {
    "original_sentence": "No that's wrong. Put that event on Wednesday, not Thursday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday))))))))"
  },
  {
    "original_sentence": "Set a meeting for the 28th at 11am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 28L) (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Extend Monday's meeting on the 28th by half of an hour.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 28L) (^(Event) EmptyStructConstraint)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toHours 0.5))))))))"
  },
  {
    "original_sentence": "ok\\",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Remind me about my karate lesson Tuesday night at 7 PM",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Schedule a meet with Chris on Tuesday for 12-2 PM",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 12L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 2L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chris\"))))))))))))"
  },
  {
    "original_sentence": "That'll work.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "2-4PM is down time with janice.",
    "parse": "(let (x0 (NextTime (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"down time\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"janice\"))))))))))))"
  },
  {
    "original_sentence": "I'll like this.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "okay choose the best time",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "what if u showed me schedule week this one",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
  },
  {
    "original_sentence": "Add mani-pedi at 2 on sunday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"mani-pedi\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "I need coffee",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "create a coffee session on sunday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"coffee session\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))))))"
  },
  {
    "original_sentence": "tea",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Delete meeting at 1 pm on Tuesday with Charles",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 1L)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Charles\"))))))))))))"
  },
  {
    "original_sentence": "Start the sonic fan fiction meeting at 4.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"sonic fan fiction meeting\")) (Event.start_? (?= (NextTime (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "That looks just perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Oh, actually, can you make it go from 4 to 5:30 instead?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 4L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 5L 30L)))))))))"
  },
  {
    "original_sentence": "Perfect.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "at 6 is my furry convention.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"furry convention\")) (Event.start_? (?= (NextTime (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "book an appointment with Carlos's manager today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Today)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carlos\"))))))))))))"
  },
  {
    "original_sentence": "no can you have anything else",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Create an appointment with Carlos's manager for tomorrow at 3 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carlos\"))))))))))))"
  },
  {
    "original_sentence": "looks okay",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have a meetring on Thursday",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Make an event at 06h23 called \"Military Time\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Military Time\")) (Event.start_? (DateTime.time_? (?= (HourMinuteMilitary 6L 23L))))))))"
  },
  {
    "original_sentence": "the first one please",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I can't make that time actually, push it back 1 hours",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "Actually I can make it, nevermind",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Set up a vacation for September 15 to Universal Studios.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"vacation\")) (Event.start_? (DateTime.date_? (?= (MD 15L (September)))))) (Event.location_? (?= (LocationKeyphrase.apply \"Universal Studios\")))))))"
  },
  {
    "original_sentence": "delete sunday meeting",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "nah dont",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Do I have any meetups next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"meetups\")) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Actually, I need to know about this week.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))"
  },
  {
    "original_sentence": "Got it, thanks!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please schedule a lunch meeting with Pam tomorrow at lunch time.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Lunch))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Pam\")))))))))))"
  },
  {
    "original_sentence": "No it was a dinner meeting at 6",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.subject_? (?= \"dinner meeting\")) (Event.start_? (DateTime.time_? (?= (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "um, yeah, but let's make it an hour and a half.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours (+ 1 0.5)))))))"
  },
  {
    "original_sentence": "Is Sally and Greg invited to the meeting today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sally\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Greg\"))))))))) 0L))"
  },
  {
    "original_sentence": "hello i need some calendar help",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "I have an event with Damon Ellery ?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon Ellery\"))))))) 0L))"
  },
  {
    "original_sentence": "lets do May 17",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (MD 17L (May))))))))"
  },
  {
    "original_sentence": "how does my monday look",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Cher Roydon appointment",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher Roydon\"))))))))))"
  },
  {
    "original_sentence": "Thursday will work",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Paige Ashworth",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\")))))))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have free time on Friday around 1300",
    "parse": "(Yield (IsFree (RecipientAvailability (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteMilitary 13L 0L)))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
  },
  {
    "original_sentence": "Block off a period of time from 1230 to 1530 as free time please",
    "parse": "(let (x0 (NextTime (HourMinuteMilitary 12L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"free time\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinuteMilitary 15L 30L)))))))))"
  },
  {
    "original_sentence": "perfect and add pick up kids at 16:00",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pick up kids\")) (Event.start_? (?= (NextTime (HourMinuteMilitary 16L 0L)))))))))"
  },
  {
    "original_sentence": "Yes, I need it pushed back to 1700 though.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinuteMilitary 17L 0L)))))))"
  },
  {
    "original_sentence": "Yes looks good, but needs to end at 6.3",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (HourMinutePm 6L 3L)))))))"
  },
  {
    "original_sentence": "Can you move my dinner plan to around 8pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\")))))) (Event.start_? (DateTime.time_? (TimeAround (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "Can you find me some free time around 4?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.time_? (TimeAround (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Can you delete that one thing I had on Friday around 6 pm",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRangeDateTime (^(Event) EmptyStructConstraint) (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 6L)))))))))))"
  },
  {
    "original_sentence": "hi, can you help me schedule a meeting",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "No, I need it to start at 1pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "The bottom one but make it last an hour",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "thanks 1PM at for me",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Look very well",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Where is my meeting with Dave?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dave\")))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need that meeting to be 9 AM instead of PM",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "No, change the time to 8 am.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "I need Meeting with Dave to start at 8.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "Make a beach trip with Abby all day on Sunday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))) (EventAllDayOnDate (Event.subject_? (?= \"beach trip\")) (NextDOW (Sunday)))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make an all day event tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (^(Event) EmptyStructConstraint) (Tomorrow)))))"
  },
  {
    "original_sentence": "Change appointment to Soccer and trunk or treat, all day",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.subject_? (?= \"Soccer and trunk or treat\")) (Event.isAllDay_? (?= true))))))"
  },
  {
    "original_sentence": "Looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you schedule a meeting with Tina tomorrow at 3 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tina\")))))))))))"
  },
  {
    "original_sentence": "Yes thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you delete that?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Is Tina in my address book?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "ah... yeah, delete it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Yes bot, this is correct. Thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "There isn't you've been very helpful. bye now",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need a breakfast meeting with Ike tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"breakfast meeting\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ike\")))))))))))"
  },
  {
    "original_sentence": "Add get a haircut to my schedule at the Mall of America tomorrow at 11:45 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"get a haircut\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinuteAm 11L 45L))))) (Event.location_? (?= (LocationKeyphrase.apply \"the Mall of America\")))))))"
  },
  {
    "original_sentence": "Thats great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Will it be raining out when I get my hair cut?",
    "parse": "(Yield (WillRain (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"hair cut\"))))))))"
  },
  {
    "original_sentence": "Show me the website for the Pizza Party tomorrow.",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"Pizza Party\"))))))))))))"
  },
  {
    "original_sentence": "show me the website for the Breakfast on Sunday",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"Breakfast\"))))))))))))"
  },
  {
    "original_sentence": "Show me the website for the Home Depot in Federal Way",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"the Home Depot in Federal Way\"))))))"
  },
  {
    "original_sentence": "I need a room for a sales meeting.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"sales meeting\")) (Event.location_? (roomRequest))))))"
  },
  {
    "original_sentence": "Looks fantastic",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I will be in Bellevue tomorrow with Abby. Can you get us a room",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Bellevue\")) (roomRequest)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "Looks really good",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need to meet my team in a room at NERD for Sat at 11 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 11L)))) (Event.location_? (& (?= (LocationKeyphrase.apply \"NERD\")) (roomRequest)))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "How long is the baby shower this week?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"baby shower\")) (ThisWeek)))))))"
  },
  {
    "original_sentence": "What about my ultrasound?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"ultrasound\")))))"
  },
  {
    "original_sentence": "Change that to 5 hours. I'm having a litter",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 5))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thanks!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I am very busy",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to make an appointment with Cher Roydon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher Roydon\"))))))))))"
  },
  {
    "original_sentence": "The first one will work",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Actually, I have to fly to a business meeting with Karl Boon at that time",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"business meeting\")) (Event.start_? (?= (Execute (refer (extensionConstraint (^(DateTime) EmptyStructConstraint))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karl Boon\")))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "No, remove Megan Bowen",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "I also need a team meeting with everyone on my team",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team meeting\")) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Look up everyone at set up a meeting",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I am busy, hurry up",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Will I have soccer practice this month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"soccer practice\")) (FullMonthofMonth (Date.month (Today))))))) 0L))"
  },
  {
    "original_sentence": "Can you make an event for Monday at 4pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Yes this looks much better",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you very much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "DO I have a meeting on friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Can you schedule a budgeting meeting at 3 pm on Thursday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"budgeting meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Change it to go from 2 pm to 3 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Good morning. I'd like to know who the supervisor of Brian T is.",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brian T\")))))))"
  },
  {
    "original_sentence": "When am I meeting with Molly and her boss?",
    "parse": "(let (x0 (PersonName.apply \"Molly\")) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))))))))))))"
  },
  {
    "original_sentence": "Who is Molly's manager?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Molly\")))))))"
  },
  {
    "original_sentence": "looks ok, thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "add donald trump to this meeting also",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"donald trump\"))))))))))"
  },
  {
    "original_sentence": "Schedule a welcome home party on March 26 at 2 pm for 2 hours.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"welcome home party\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 26L (March)) (NumberPM 2L))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "Yup.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "what's the last meeting i have today",
    "parse": "(Yield (FindLastEvent (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "haha oh boy! is it at the place I think it is?",
    "parse": "(Yield (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "yayyyyy, can ya tell me whereabouts my first meeting is the day after",
    "parse": "(Yield (Event.location (FindNumNextEvent (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint)) 1L)))"
  },
  {
    "original_sentence": "get rid of my dinner event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\")))))))))"
  },
  {
    "original_sentence": "Yep, that's it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add dinner with Amy on Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\")))))))))))"
  },
  {
    "original_sentence": "How about the second one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Wait, that's dinner at 1PM, can you move it closer to dinner time?",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Could you put bike riding with Jim on my calendar for today at 3 pm till the end of the day?",
    "parse": "(let (x0 (NextTime (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"bike riding\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (EndOfWorkDay))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\"))))))))))))"
  },
  {
    "original_sentence": "Perfect. Can you also see where my friday event is taking place? Its at the end of the work day.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (EndOfWorkDay)) (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Cool, lets make BBQ Party for this Friday at the end of work day.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"BBQ Party\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (EndOfWorkDay))))))))"
  },
  {
    "original_sentence": "Put on schedule movie date with wife on Friday at 5:00 pm.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Ok... add \"Date night with Meghan\" at 5.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Date night with Meghan\")) (Event.start_? (?= (NextTime (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Is Meghan listed as my wife?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "Oh I'll check later then.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Actually Date night with Meghan looks right to me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "and book brunch on Sunday morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"brunch\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Sunday))))))))"
  },
  {
    "original_sentence": "Change the name from brunch to lunch.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"lunch\")))))"
  },
  {
    "original_sentence": "Pause ploease.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "I'd like to search for a work calendar event",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"work\"))))"
  },
  {
    "original_sentence": "Can you make a calendar event for wedding this Saturday from 12pm to 6pm?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 12L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"wedding\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 6L)))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "lunch date Sunday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch date\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))))))"
  },
  {
    "original_sentence": "second one is good",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please tell m e who has responded that they tentativley accept that they will come to my anniversary party?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"anniversary party\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "So for the Parks and Games for this weekend who might have accepted it.",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Parks and Games\")) (ThisWeekend)))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "I wasn't sure if anyone was still considering the Park Meeting this Friday. Is anyone a maybe?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"Park Meeting\"))))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Push my today meeting to Friday mid morning",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTimeConstraint (Morning) (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday))))))))"
  },
  {
    "original_sentence": "can you schedule a meeting with Howard after lunch Wednesday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (OnDateAfterTime (NextDOW (Wednesday)) (Lunch))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Howard\")))))))))))"
  },
  {
    "original_sentence": "Hi, please cancel the appointment with my daughter's pediatrician from 3-4pm today and then make a new appointment at the office in Atlanta for next Monday from 1-2pm. Please add my husband to the invite.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Can you add a doctors appointment for Saturday at 9 am?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctors appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "The appointment will be open ended.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Jon and Tina should be at my 1:00 Thursday marketing meeting.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"marketing meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 1L))))))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jon\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tina\")))))))))))"
  },
  {
    "original_sentence": "Yes, that's great, add Paul also please.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paul\"))))))))))"
  },
  {
    "original_sentence": "i want to be free all day tomorrow, please delete all the activities on my calendar",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Defer the meeting with Alex Han today by 2 hour.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))) (do (^(Event) EmptyStructConstraint) (do (Path.apply \"attendees\") (do (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex Han\"))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply :duration (toHours 2))))))))))))"
  },
  {
    "original_sentence": "it's supposed to be 12-2",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "delete dentist appointment tomorrow for me",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"dentist appointment\"))))))))))"
  },
  {
    "original_sentence": "Yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "How cold is it going to be in New York tomorrow?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"New York\"))) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "What's the likelihood of rain?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (rainPrecipProbability) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "What will the weather be like in New York Friday morning?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"New York\"))) (DateTimeConstraint (Morning) (NextDOW (Friday)))))"
  },
  {
    "original_sentence": "Great schedule a walk in the park at 8 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"walk\")) (Event.start_? (?= (NextTime (NumberAM 8L))))) (Event.location_? (?= (LocationKeyphrase.apply \"the park\")))))))"
  },
  {
    "original_sentence": "Is it going to be nice and warm? I need to decide on what to wear.",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Who are my reports",
    "parse": "(Yield (FindReports (toRecipient (CurrentUser))))"
  },
  {
    "original_sentence": "Who are Abby's direct reports",
    "parse": "(Yield (FindReports (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))"
  },
  {
    "original_sentence": "Rosenfield's reports",
    "parse": "(Yield (FindReports (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rosenfield\")))))))"
  },
  {
    "original_sentence": "Are you sure there isn't some sort of error?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Who are Jesse Rosenfeld's reports?",
    "parse": "(Yield (FindReports (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse Rosenfeld\")))))))"
  },
  {
    "original_sentence": "Is Dennis attending the meeting later today?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventForRestOfToday (^(Event) EmptyStructConstraint))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dennis\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Thanks. Is Ben going to make it to the meeting?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ben\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Is Jen attending the baby shower?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"baby shower\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jen\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "put on the baby shower at 12.00am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"baby shower\")))))) (Event.start_? (DateTime.time_? (?= (NumberAM 12L)))))))"
  },
  {
    "original_sentence": "Good. Is Deborah going to make it to the baby shower too?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"baby shower\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Deborah\")))))))) (ResponseStatusType.Accepted))))"
  },
  {
    "original_sentence": "Thanks. Is Laura coming to Thanksgiving dinner next month?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Thanksgiving dinner\")) (FullMonthofMonth (NextMonth)))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Laura\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Did you invite Tig Trager to the Outward Bound experience next August?",
    "parse": "(Yield (allows (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tig Trager\"))) (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Outward Bound experience\")) (FullMonthofMonth (August)))))))))"
  },
  {
    "original_sentence": "Yeah It's good to have outward bound experience",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please change the title to The Experience.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"The Experience\")))))"
  },
  {
    "original_sentence": "This is fine.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Was Tom added to the invite, if not, please include him.",
    "parse": "(FenceConditional)"
  },
  {
    "original_sentence": "can you tell about my appointment",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Do I have an appointments this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Schedule a dinner on Saturday at 7 pm and The Meal and Deal.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 7L))))) (Event.location_? (?= (LocationKeyphrase.apply \"The Meal and Deal\")))))))"
  },
  {
    "original_sentence": "Do I have anything on my schedule tomorrow evening?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Evening))))) 0L))"
  },
  {
    "original_sentence": "I need to make it in the afternoon.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (Afternoon))))))"
  },
  {
    "original_sentence": "change the time in to 3 in the afternoon",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "yes!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Block my calendar on Tuesday and Thursday this week from 1 to 5. Subject is downtime.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I'm having super secret downtime next Tuesday from 1 to 5.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"super secret downtime\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "Can you make super secret downtime be on Wednesday?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Wednesday))))))))"
  },
  {
    "original_sentence": "Looks good. Please add.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please cancel not secret open party",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"not secret open party\")))))))))"
  },
  {
    "original_sentence": "I need to know who my direct supervisor is.",
    "parse": "(Yield (FindManager (toRecipient (CurrentUser))))"
  },
  {
    "original_sentence": "What is his e-mail address?",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "I have amnesia and I forgot my name.",
    "parse": "(Yield (CurrentUser))"
  },
  {
    "original_sentence": "What is my phone number?",
    "parse": "(Yield (Person.phoneNumber (CurrentUser)))"
  },
  {
    "original_sentence": "Thank you for giving me to phone number.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what day is martin luther king day",
    "parse": "(Yield (NextHolidayFromToday (Holiday.MLKDay)))"
  },
  {
    "original_sentence": "Delete all appointments for next week. I deserve a vacation!",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Can you schedule a spa date for me and Ulga on Thursday afternoon, let's say 3pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"spa date\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 3L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ulga\")))))))))))"
  },
  {
    "original_sentence": "Yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add a hour lunch before the spa date",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (PeriodDurationBeforeDateTime (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"spa date\")))))) (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "I want a meeting with Karen and her boss.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))))))))"
  },
  {
    "original_sentence": "Remove Dan, We don't need him",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan\")))))))))))"
  },
  {
    "original_sentence": "Add Dan Schoffel back actually.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Schoffel\"))))))))))"
  },
  {
    "original_sentence": "wednesday please",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "By the way, when is my appointment with Stephanie and her boss?",
    "parse": "(let (x0 (PersonName.apply \"Stephanie\")) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))))))))))))"
  },
  {
    "original_sentence": "Put a meeting on my calendar with Emelia, Parker, Caleb and Rylan on Tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emelia\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Parker\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Caleb\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rylan\"))))))))))))"
  },
  {
    "original_sentence": "The second option will work better for me.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Actually, I need to extend that by an hour.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toHours 1))))))))"
  },
  {
    "original_sentence": "Works for me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Block off 45 minutes for gym time at Bally Total Fitness tomorrow evening at 7pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"gym time\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 7L))))) (Event.duration_? (?= (toMinutes 45)))) (Event.location_? (?= (LocationKeyphrase.apply \"Bally Total Fitness\")))))))"
  },
  {
    "original_sentence": "What will the weather be like tomorrow evening?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTimeConstraint (Night) (Tomorrow))))"
  },
  {
    "original_sentence": "Detroit",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"Detroit\")))))))"
  },
  {
    "original_sentence": "I'm going to be in London next Wednesday for a Conference.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Conference\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday)))))) (Event.location_? (?= (LocationKeyphrase.apply \"London\")))))))"
  },
  {
    "original_sentence": "put dinner meet withreliya",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner meet\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"reliya\")))))))))))"
  },
  {
    "original_sentence": "I think the first one would be preferable.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "well",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you schedule a Festival with Josh, Jamie, Liz, and Parker for the 21st?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Festival\")) (Event.start_? (DateTime.date_? (?= (MD 21L (Date.month (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Josh\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamie\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Liz\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Parker\"))))))))))))"
  },
  {
    "original_sentence": "It's going to last 8 hours.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 8))))))"
  },
  {
    "original_sentence": "create football game monday at 2-5",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"football game\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "hi, remove my event tomorrow",
    "parse": "(Yield (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Is there anything else on my calendar for tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "Add a new event for thursday called x-rays and then add another event for friday morning called doctors appointment located at the medical center",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "rag da da",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "purple dogs fly",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "lopapalsodplaspsa",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "Set up a brunch between my morning call and 2pm appointment",
    "parse": "(let (x0 (DateTimeAndConstraintBetweenEvents (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"morning call\"))))) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (^(Event) EmptyStructConstraint) (NumberPM 2L))))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"brunch\")) (Event.start_? x0)) (Event.end_? x0))))))"
  },
  {
    "original_sentence": "The first one is good. Is there anything between the 2PM appointment and my dinner with Ron?",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (FindEventWrapperWithDefaults (EventBetweenEvents (^(Event) EmptyStructConstraint) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (^(Event) EmptyStructConstraint) (NumberPM 2L))))) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ron\"))))))))))))"
  },
  {
    "original_sentence": "Do I have something scheduled in between golf lessons and the homecoming parade?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBetweenEvents (^(Event) EmptyStructConstraint) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"golf lessons\"))))) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"homecoming parade\"))))))))) 0L))"
  },
  {
    "original_sentence": "What's between my breakfast with Elli and my golf game with Kim?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventBetweenEvents (^(Event) EmptyStructConstraint) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"breakfast\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\")))))))) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"golf game\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))))))"
  },
  {
    "original_sentence": "Will I have anything next Wednesday between the meeting with Abby and dinner?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBetweenEvents (^(Event) EmptyStructConstraint) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\"))))))))) 0L))"
  },
  {
    "original_sentence": "Plan an event with Connor on April 19 at 5pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MDY 19L (April) (Year.apply 2019L)) (NumberPM 5L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Connor\")))))))))))"
  },
  {
    "original_sentence": "Change the time to be one hour after my Lunch date with Grace.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (adjustByPeriodDuration (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Lunch date\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Grace\"))))))))) (PeriodDuration.apply :duration (toHours 1))))))))"
  },
  {
    "original_sentence": "Please change it to 1 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Yea, that is right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks , it's very well",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "check out on the arrival of a shipment before leaving office",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Set a reminder a 4 pm to check on the shipment arrival.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"check on the shipment arrival\")) (Event.start_? (?= (NextTime (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "I am no longer available to go to the museum today.",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"go to the museum\"))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Actually I can go.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(ResponseStatusType) AlwaysTrueConstraint)) (intension (ResponseStatusType.Accepted)))))"
  },
  {
    "original_sentence": "Yeah, go to the museum, but also send a message saying that I can't stay for long.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(RespondComment) AlwaysTrueConstraint)) (intension (RespondComment.apply \"I can't stay for long\")))))"
  },
  {
    "original_sentence": "Actually, amend that message to say that I can't stay for long, but I can stay longer if it's possible to reschedule.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(RespondComment) AlwaysTrueConstraint)) (intension (RespondComment.apply \"I can't stay for long, but I can stay longer if it's possible to reschedule\")))))"
  },
  {
    "original_sentence": "Do I have anything at around 8 tonight?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRangeDateTime (^(Event) EmptyStructConstraint) (AroundDateTime (DateAtTimeWithDefaults (Today) (NumberPM 8L))))))) 0L))"
  },
  {
    "original_sentence": "Can you make me an event next monday at around 4",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Yes, schedule the second one/. Now delete that one thing I had around noon Saturday",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRangeDateTime (^(Event) EmptyStructConstraint) (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Saturday)) (Noon))))))))))))"
  },
  {
    "original_sentence": "create football game for friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"football game\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "Make it for the late afternoon",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (LateAfternoon))))))"
  },
  {
    "original_sentence": "Set up a meeting for 4:30 this Saturday at Hermann Park.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (HourMinutePm 4L 30L)))) (Event.location_? (?= (LocationKeyphrase.apply \"Hermann Park\")))))))"
  },
  {
    "original_sentence": "Yes schedule that please",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Will there be any rain during then?",
    "parse": "(Yield (WillRain (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Alright, good to know then",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I've got a concert with a friend at the Crystal Ballroom in Portland.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Can you cancel my meeting with Abby this afternoon at 2 pm?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"abby\")))) (EventAtTime (^(Event) EmptyStructConstraint) (NumberPM 2L))))))))))"
  },
  {
    "original_sentence": "Sorry it is tomorrow afternoon.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Afternoon)))))"
  },
  {
    "original_sentence": "Yes, please cancel this.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to cancel the cookie bake sale with Allen on Friday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Allen\")))) (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"cookie bake sale\")))))))))))"
  },
  {
    "original_sentence": "Sorry I meant with Aaron.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Aaron\"))))))"
  },
  {
    "original_sentence": "Please reschedule my 1 o'clock appointment",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 1L)) (^(Event) EmptyStructConstraint)))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Can you change my appointment?",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Who has not responded to the charity car wash event?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"charity car wash\")))))) (ResponseStatusType.None)))"
  },
  {
    "original_sentence": "which people did not respond to the kickoff invite?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"kickoff\")))))) (ResponseStatusType.None)))"
  },
  {
    "original_sentence": "Of all the individuals invited to the monthly work meetup, who has not responded to the invite?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"monthly work meetup\")))))) (ResponseStatusType.None)))"
  },
  {
    "original_sentence": "no thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What events do I have for tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Let's cancel that please.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "yes thats the one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Good, look up any morning meetings next Tuesday.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) (Morning))))"
  },
  {
    "original_sentence": "What time is mt Dr.'s Appointment on Thursday",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.subject_? (?~= \"mt Dr.'s Appointment\"))))))))"
  },
  {
    "original_sentence": "Make a lunch with Kristen Clifford",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kristen Clifford\")))))))))))"
  },
  {
    "original_sentence": "May 17 works best",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 17L (May))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make a co workers party with Barack Obama",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"co workers party\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\")))))))))))"
  },
  {
    "original_sentence": "May 16 works best",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 16L (May))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need a date available for a birthday party with Wade Blakeley",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Put Fine arts with Wade Blakeley on Tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Fine arts\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wade Blakeley\")))))))))))"
  },
  {
    "original_sentence": "May21 works best",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Cher Roydon has a date with me can you put it on the calendar for Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher Roydon\")))))))))))"
  },
  {
    "original_sentence": "MAy 20 works best",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 20L (May))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What time is my appointment with carla?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"carla\")))))))))"
  },
  {
    "original_sentence": "change the meeting 4.00 pm - 4.30 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 4L 30L))))))))"
  },
  {
    "original_sentence": "Yes it looks right, thanks!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you make this meeting repeat every week?",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "What events do I have tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "When is my next meeting with Katie next week? Please search.",
    "parse": "(Yield (Event.start (FindNumNextEvent (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Katie\")))) (NextWeekList)) 1L)))"
  },
  {
    "original_sentence": "When am I meeting next with Erica?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Erica\")))) 1L)))"
  },
  {
    "original_sentence": "What is my next thing with Ingrid?",
    "parse": "(Yield (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ingrid\")))) 1L))"
  },
  {
    "original_sentence": "When is the first time I am meeting with Larry?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Larry\")))) 1L)))"
  },
  {
    "original_sentence": "thanks!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Set up a lunch meeting with Perter",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch meeting\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Perter\")))))))))))"
  },
  {
    "original_sentence": "The second one will work fine.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Block off three hours starting at 11 am on the 15th with Kylie and Jennifer to discuss the new cosmetics line at Walmart.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (& (Event.subject_? (?= \"discuss the new cosmetics line\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 15L) (NumberAM 11L))))) (Event.duration_? (?= (toHours 3)))) (Event.location_? (?= (LocationKeyphrase.apply \"Walmart\")))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kylie\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer\"))))))))))))"
  },
  {
    "original_sentence": "Yes that works, can't wait",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have anything else with Kylie after that?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) x1 (Event.end x0)) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x1) (& (Event.id_? (negate (?= (Event.id x0)))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kylie\"))))) (DateTime.time x1))))) 0L)))"
  },
  {
    "original_sentence": "Add coffee with Josh for tomorrow at 10am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"coffee\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 10L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Josh\")))))))))))"
  },
  {
    "original_sentence": "make it from 10 til 11",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "Great also schedule my lunch after this",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (Event.end (^(Dynamic) item x0))))))))))"
  },
  {
    "original_sentence": "I need to schedule lunch after coffee on Saturday at 11:00 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 11L)) (Event.subject_? (?~= \"coffee\")))))))))))))"
  },
  {
    "original_sentence": "Schedule Lunch on Saturday at 11:00 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "yup",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "yes,change time to calendar",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "OK CREATE A FILE AND NAME IT AS PERSONAL EVENTS",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "OK",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to schedule a meeting with Tara and her manager.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tara\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))))))))"
  },
  {
    "original_sentence": "I need to meet with Patricia Conners sometime next week. Give me Wednesday at 2 PM if my calendar is clear for that time.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "You got it",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add John to that meeting as well please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))))"
  },
  {
    "original_sentence": "Perfect.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What do I call to reach Pablanos in Evans?",
    "parse": "(Yield (Place.phoneNumber (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Pablanos in Evans\"))))))"
  },
  {
    "original_sentence": "I want to get in touch with the Greene Inn in LA. What is their number?",
    "parse": "(Yield (Place.phoneNumber (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Greene Inn in LA\"))))))"
  },
  {
    "original_sentence": "Can you get me the phone number for Queen Street Cafe & Grill in Hawaii?",
    "parse": "(Yield (Place.phoneNumber (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Queen Street Cafe & Grill in Hawaii\"))))))"
  },
  {
    "original_sentence": "the car show will be all day on wednesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"car show\")) (NextDOW (Wednesday))))))"
  },
  {
    "original_sentence": "That's great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I have do eat dinner all day on monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"eat dinner\")) (NextDOW (Monday))))))"
  },
  {
    "original_sentence": "change it to tuesday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Tuesday))))))))"
  },
  {
    "original_sentence": "What events do I have scheduled for today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Reschedule that for friday, same time",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Friday)) (DateTime.time (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))))"
  },
  {
    "original_sentence": "Change the meeting with Jimmy to 2:30 pm on Friday.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jimmy\")))))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 2L 30L)))))))"
  },
  {
    "original_sentence": "Delete event for family dinner at 6pm today.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 6L)) (Event.subject_? (?~= \"family dinner\"))))))))))"
  },
  {
    "original_sentence": "When is my meeting with Janet?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janet\")))))))))"
  },
  {
    "original_sentence": "What do I have scheduled after my meeting with Janet?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janet\")))))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date (Event.start x0)) (^(Event) EmptyStructConstraint) (DateTime.time (Event.end x0))))))"
  },
  {
    "original_sentence": "When is my last meeting tomorrow?",
    "parse": "(Yield (Event.start (FindLastEvent (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "change the end time as 4 PM",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "make a new time for apointemnt",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"apointemnt\")))))"
  },
  {
    "original_sentence": "fix the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make an event to the baskball game on Tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"baskball game\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))))))"
  },
  {
    "original_sentence": "decline my invitation to tonight's dinner, and say \"i won't be able to make it\"",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"i won't be able to make it\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Night)))))) :response (ResponseStatusType.Declined) :sendResponse (RespondShouldSend.apply true)))"
  },
  {
    "original_sentence": "Accept the johnson proposal and tell them I will accept all terms.",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I will accept all terms.\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"johnson proposal\"))))) :response (ResponseStatusType.Accepted) :sendResponse (RespondShouldSend.apply true)))"
  },
  {
    "original_sentence": "Yes, perfect!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Okay, decline the invitation to dinner, and send a message that I am sick.",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I am sick\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\"))))) :response (ResponseStatusType.Declined) :sendResponse (RespondShouldSend.apply true)))"
  },
  {
    "original_sentence": "Schedule a meeting with the Supervisors every 12 days for the next two months at 3:50 pm.",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "What is scheduled for tomorrow morning",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Morning))))"
  },
  {
    "original_sentence": "Is my trip to Jamaica in January?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"trip to Jamaica\")) (FullMonthofMonth (January)))))) 0L))"
  },
  {
    "original_sentence": "Do you know if I have anything with Steve next monday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steve\")))))))) 0L))"
  },
  {
    "original_sentence": "Do I have lunch scheduled with Mary next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\"))))) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Do I have lunch scheduled with Mary the following week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\"))))) (WeekOfDateNew (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toWeeks 1))))))) 0L))"
  },
  {
    "original_sentence": "Is it going to rain tomorrow at my Musical",
    "parse": "(Yield (WillRain (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Musical\")) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "What is the weather going to be like for the marathon on saturday?",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"marathon\"))))))))"
  },
  {
    "original_sentence": "What is the chance of rain on Saturday during walk.",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (rainPrecipProbability) (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"walk\")))))))))"
  },
  {
    "original_sentence": "I know I have some meetings with Alexandra tomorrow. Can you tell me when and where those meetings are?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alexandra\")))) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "I meant Jesse",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\"))))))"
  },
  {
    "original_sentence": "What else do I have with Jesse?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\")))))))"
  },
  {
    "original_sentence": "And what about Sarah?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\"))))))"
  },
  {
    "original_sentence": "Do I have anything else with Sarah at all?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\")))))))) 0L))"
  },
  {
    "original_sentence": "create baseball game on tuesday at 5",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"baseball game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "yep the baseball game is right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Have baseball game end at 7 PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"baseball game\")))))) (Event.end_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "Is the baseball game the last thing on my schedule on Tuesday?",
    "parse": "(let (x0 (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"baseball game\")))))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) (DateTime.time x0))))) 0L)))"
  },
  {
    "original_sentence": "At the end of the day on Friday, schedule Unwind with Margaritas.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Unwind with Margaritas\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (EndOfWorkDay))))))))"
  },
  {
    "original_sentence": "tomorrow appointment cancel immediately",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "yes please",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thank you kindly",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "thanks that is all for now",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Delete concert event for this month.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"concert\")) (FullMonthofMonth (Date.month (Today)))))))))))"
  },
  {
    "original_sentence": "Please set up a meeting with Janice next Thursday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice\")))))))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you make it at 3pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "ok,that jun 20 is ok to me",
    "parse": "(Yield (Execute (ConfirmCreateAndReturnAction (Event.start_? (DateTime.date_? (?= (MD 20L (June))))))))"
  },
  {
    "original_sentence": "do you fix appointment in another day",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "check mails every day in the office",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "Can you set my status to busy today at 4 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 4L)))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))"
  },
  {
    "original_sentence": "what the change made in it.",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "What is on my schedule this evening?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Evening))))"
  },
  {
    "original_sentence": "great add a movie event at 6:30",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"movie\")) (Event.start_? (?= (NextTime (HourMinutePm 6L 30L))))))))"
  },
  {
    "original_sentence": "make it 6:30 - 8:30 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (HourMinutePm 6L 30L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 8L 30L))))))))"
  },
  {
    "original_sentence": "looks good, what time is Tom coming in tomorrow for the meeting?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))))))))"
  },
  {
    "original_sentence": "And what time is the meeting with Tom?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))))))"
  },
  {
    "original_sentence": "Let's make a schedule for 4 today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Running late. Push it off to 2 hours later.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Good. Name it dinner with Sanders.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"dinner with Sanders\")))))"
  },
  {
    "original_sentence": "dinner with scouts is exactly what I was looking for",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Good. Now add lunch with Rick and the boys tomorrow.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Can you find any meetings scheduled between 2 and 5 pm next Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (NextDOW (Friday)) (^(Event) EmptyStructConstraint) (NumberPM 2L) (NumberPM 5L))))"
  },
  {
    "original_sentence": "Book a team meeting one hour after our planning meeting on Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (?= (adjustByPeriodDuration (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "I think so",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create Marketing Planning meeting before team meeting but after the product mock up meeting.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Marketing Planning meeting\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"product mock up meeting\"))))))))) (Event.end_? (?= (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"team meeting\"))))))))))))"
  },
  {
    "original_sentence": "Correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hi there, can you add a filmmaking workshop on this Saturday at 11 am?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"filmmaking workshop\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "Yes, but it will last for an hour",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Change the Meeting Time of Filmmaking.",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "i want to change the time for the meeting filmmaking workshop from 12pm to 2 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.subject_? (?~= \"filmmaking workshop\")) (NumberPM 12L)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Hi, can you help me figure out when I'm next meeting with Allen?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Allen\")))) 1L)))"
  },
  {
    "original_sentence": "thanks for allocated for my schedule",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Yes, can you tell me when my next meeting with Mark is scheduled?",
    "parse": "(Yield (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))) 1L))"
  },
  {
    "original_sentence": "Cancel my meeting with mark",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"mark\")))))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "create reading time tonight",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"reading time\")) (Event.start_? (DateTimeConstraint (Night) (Today)))))))"
  },
  {
    "original_sentence": "create 1 hour reading time tonight",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"reading time\")) (Event.start_? (DateTimeConstraint (Night) (Today)))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "between 7:00 pm and 8:00 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "no thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have any meetings today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Do I have any events at all on my calendar today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Do I have any tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Univite Terry from Billboard meeting",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Billboard meeting\")))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Terry\")))))))))))"
  },
  {
    "original_sentence": "cancel the next meeting with billings",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"billings\")))) 1L)))))"
  },
  {
    "original_sentence": "No. Disinvite billings since he can't come.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"billings\")))))))))))"
  },
  {
    "original_sentence": "ok thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you schedule the meeting tomorrow 9:30 AM also.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinuteAm 9L 30L)))))))"
  },
  {
    "original_sentence": "Please add an appointment with Dr. Smith to my caldendar",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dr. Smith\"))))))))))"
  },
  {
    "original_sentence": "the bottom one",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Great, now do I have anything scheduled after that on the same day?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))) 0L)))"
  },
  {
    "original_sentence": "Cancel my doctor's appointment next Monday and reschedule it for next month on the 15th at 2pm and then schedule me to pick up Katie afterwards from 3-4pm",
    "parse": "(let (x0 (MD 15L (NextMonth)) x1 (DateAtTimeWithDefaults x0 (NumberPM 3L))) (do (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"doctor's appointment\"))))))) (Event.start_? (?= (DateAtTimeWithDefaults x0 (NumberPM 2L))))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"pick up Katie\")) (Event.start_? (?= x1))) (Event.end_? (?= (TimeAfterDateTime x1 (NumberPM 4L))))))))))"
  },
  {
    "original_sentence": "make my 6pm last for 3 hours",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 6L)) (^(Event) EmptyStructConstraint)))))) (Event.duration_? (?= (toHours 3))))))"
  },
  {
    "original_sentence": "When is my dinner with Sophi?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sophi\"))))))))))"
  },
  {
    "original_sentence": "How long will it last?",
    "parse": "(Yield (Event.duration (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "What about my lunch?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"lunch\")))))"
  },
  {
    "original_sentence": "change the time for lunch at 12.00 pm - 2.00 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "what my 2 event this week",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)) 2L))"
  },
  {
    "original_sentence": "Where did my second Event happen on February 29 2020?",
    "parse": "(Yield (Event.location (FindNumNextEvent (EventOnDate (MDY 29L (February) (Year.apply 2020L)) (^(Event) EmptyStructConstraint)) 2L)))"
  },
  {
    "original_sentence": "where is my second event on tuesday?",
    "parse": "(Yield (Event.location (FindNumNextEvent (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) 2L)))"
  },
  {
    "original_sentence": "Going camping at Yosemite for 2 days starting on Saturday.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Tell me the restaurant I am having dinner at tonight",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"dinner\"))) (Night)))))))"
  },
  {
    "original_sentence": "DO they have a bar there?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Can the restaurant seat large parties?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Is the dress code casual for Brussels?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Brussels\"))))))"
  },
  {
    "original_sentence": "Is there a place outside to sit and eat?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.OutdoorDining) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "get rid of soccer event on Sunday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"soccer\"))))))))))"
  },
  {
    "original_sentence": "Do I have enough time after my staff meeting to run and get a coffee?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "I'd like to know this moment's time",
    "parse": "(Yield (Now))"
  },
  {
    "original_sentence": "Will you be able to delete the date I setup with my girlfriend?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I have a meeting tomorrow morning at 10 am, it will last an hour",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 10L)))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "No",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you add that it will be in the conference room please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (roomRequest)))))"
  },
  {
    "original_sentence": "I see that, thank y ou. What does 04:00 mean?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Would you add dinner with Joyce at 7pm tomorrow night at Red Robin's",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 7L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Red Robin's\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joyce\")))))))))))"
  },
  {
    "original_sentence": "Ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Is there a performance review today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"performance review\")))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything with Abby soon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))) 0L))"
  },
  {
    "original_sentence": "Do I have a baseball game with Kim coming up Saturday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (& (Event.subject_? (?~= \"baseball game\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))) 0L))"
  },
  {
    "original_sentence": "Are we having lunch with Kim on Monday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))) 0L))"
  },
  {
    "original_sentence": "Am I having dinner with Donna on Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Donna\"))))))))) 0L))"
  },
  {
    "original_sentence": "Can you make a Saturday conference that is scheduled for all day?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"conference\")) (NextDOW (Saturday))))))"
  },
  {
    "original_sentence": "Yes, looks great, thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Put an all day date with Monica for Sunday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"date\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Monica\")))))))) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (NextDOW (Sunday)))))))"
  },
  {
    "original_sentence": "That looks great, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you cancel my all day Band Practice on Saturday?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.isAllDay_? (?= true))))))))))"
  },
  {
    "original_sentence": "What time is my dentis appointment?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentis appointment\")))))))"
  },
  {
    "original_sentence": "Ok check with the name as Dental appointment.",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Dental appointment\"))))"
  },
  {
    "original_sentence": "How long is my dentist appointment next week?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"dentist appointment\")) (NextWeekList)))))))"
  },
  {
    "original_sentence": "What about the hair appointment?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"hair appointment\")))))"
  },
  {
    "original_sentence": "please extend one hour",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toHours 1))))))))"
  },
  {
    "original_sentence": "Block off thursday through next wednesday for vacation",
    "parse": "(let (x0 (NextDOW (Thursday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"vacation\")) (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (DateAndConstraint x0 (nextDayOfWeek x0 (Wednesday)))))))))"
  },
  {
    "original_sentence": "I need Ariel removed from today's concert performance.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"concert performance\"))))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ariel\")))))))))))"
  },
  {
    "original_sentence": "I don't want Tom to be invited to the event.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))))))))"
  },
  {
    "original_sentence": "yeah k",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you schedule a meeting with Alex on tomorrow 10:30 AM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinuteAm 10L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex\")))))))))))"
  },
  {
    "original_sentence": "Nevermind, take alex off that meeting.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"alex\")))))))))))"
  },
  {
    "original_sentence": "Hey, can you tell me what Jenna's email is?",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jenna\"))))))))"
  },
  {
    "original_sentence": "What's her phone number?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "What is her fax number?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "Ok Create a meeting in the afternoon on Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Monday)))))))"
  },
  {
    "original_sentence": "Yes, the second one works.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Aren't I going skiing tomorrow with Kevin, Ross, Kim, and Jared?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kevin\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ross\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jared\"))))) (EventOnDate (Tomorrow) (Event.subject_? (?~= \"skiing\"))))))) 0L))"
  },
  {
    "original_sentence": "Thanks, can you update that to end at 5:00 PM?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "Thanks. And when is my next lunch at the Charity committee center with Jake, Jesse, Abby and Kim?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (& (Event.subject_? (?~= \"lunch\")) (Event.location_? (?= (LocationKeyphrase.apply \"Charity committee center\")))) (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))))))"
  },
  {
    "original_sentence": "Could you delete that?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes cancel.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Search event",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Create",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "April 9",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 9L (April))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Create event",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "April 8",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 8L (April))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Update event",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Update",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Search",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Who accepted the meeting with my manager?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Great, that's good news. Who has declined my Kickboxing Match on next Tuesday?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"Kickboxing Match\"))))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "I want to add a meeting with tommy's boss next Thursday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"tommy\"))))))))))))"
  },
  {
    "original_sentence": "Is there anything later in the day?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Do I have any other events for Thursday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "I want a meeting with Greg on Friday at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (Noon)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Greg\")))))))))))"
  },
  {
    "original_sentence": "arrange anthor timeing to meeting whit greg",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"greg\"))))))))))"
  },
  {
    "original_sentence": "book 4 hours for interviews",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"interviews\")) (Event.duration_? (?= (toHours 4)))))))"
  },
  {
    "original_sentence": "Create an event for 6 AM tomorrow: \"Print flight tickets\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Print flight tickets\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 6L))))))))"
  },
  {
    "original_sentence": "Schedule flight the day after that at 7 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"flight\")) (Event.start_? (?= (DateAtTimeWithDefaults (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Is there going to be anything going on this morning?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Morning))))) 0L))"
  },
  {
    "original_sentence": "meeting between 2 and 5 pm next Friday",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "Actually can you wait a minute.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Okay, that is perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "okay that is great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "i'm going to the mall tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"going to the mall\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "what is the weather today",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "ok sorry, the first event will be best",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I will going to the mall.",
    "parse": "(Yield (Execute (ConfirmCreateAndReturnAction (Event.subject_? (?= \"going to the mall\")))))"
  },
  {
    "original_sentence": "Can you find any meetings scheduled between 2 and 5 pm next Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (NextDOW (Friday)) (^(Event) EmptyStructConstraint) (NumberPM 2L) (NumberPM 5L))))"
  },
  {
    "original_sentence": "Reschedule one-one with Alan for Thursday morning.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.isOneOnOne_? (?= true)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alan\"))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTimeConstraint (Morning) (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Thursday))))))))"
  },
  {
    "original_sentence": "When is my 1-1 with Alan",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.isOneOnOne_? (?= true)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alan\"))))))))))"
  },
  {
    "original_sentence": "ok but set the starting time at 9.00 am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "It ends at 11.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "ok then fix the meeting",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to change my dinner date tonight form 8pm to 6pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"dinner date\"))) (Night)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "No it should only be 30 minutes",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toMinutes 30))))))"
  },
  {
    "original_sentence": "OK, Move my dinner date tonight down to 10:00pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberPM 10L)))))))"
  },
  {
    "original_sentence": "Who is my last meeting with friday?",
    "parse": "(Yield (Event.attendees (FindLastEvent (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Ohh! It's well",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you move the HR Meeting forward a day?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"HR Meeting\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (DateTime.date (Event.start x0)) (toDays 1)))))))))"
  },
  {
    "original_sentence": "Yep it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, also change the start time to 3:30pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))))))"
  },
  {
    "original_sentence": "What is the weather in seattle?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"seattle\"))) (?= (Now))))"
  },
  {
    "original_sentence": "Is it raining in miami?",
    "parse": "(Yield (IsRainy (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"miami\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "What is the chance of snow in Vancouver?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (snowPrecipProbability) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Vancouver\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "How humid is it in Charlotte",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (humidity) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Charlotte\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "What is the humidity in Boston",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (humidity) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Boston\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "How much wind is there in Los angeles?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (windSpeed) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Los angeles\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "What is the weather in Salt Lake City?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Salt Lake City\"))) (?= (Now))))"
  },
  {
    "original_sentence": "What is the low in Kansas City?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Kansas City\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "HOw long is dinner tomorrow?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"dinner\"))))))))"
  },
  {
    "original_sentence": "And on friday?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (& (^(Date) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Friday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "cancel the today events on calender",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Cancel the first event.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 1L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "yes!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need an appointment",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is my travel schedule this week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"travel\")) (ThisWeek))))"
  },
  {
    "original_sentence": "Please make a work retreat to last from Friday the 10th of December to Sunday the 12th of December",
    "parse": "(let (x0 (MD 12L (December))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"work retreat\")) (DateAndConstraint x0 (nextMonthDay x0 (December) 12L)))))))"
  },
  {
    "original_sentence": "That looks fantastic",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "make it on dec 11",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (MD 11L (December))))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Make an event From DEcember 12 to December 16",
    "parse": "(let (x0 (MD 12L (December))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (DateAndConstraint x0 (nextMonthDay x0 (December) 16L)))))))"
  },
  {
    "original_sentence": "Tell me what I have on my calendar for next Saturday with Adam and Luna.",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Adam\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Luna\"))))) (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "I'm sorry. What did you just say?",
    "parse": "(RepeatAgent)"
  },
  {
    "original_sentence": "Thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I want to make a doctor appointment next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor appointment\")) (Event.start_? (DateTime.date_? (NextWeekList)))))))"
  },
  {
    "original_sentence": "12pm please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "Oh, Monday please",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "That's great! Thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make me something to do at the end of work today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (?= (EndOfWorkDay)) (Today))))))"
  },
  {
    "original_sentence": "That works, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make me a office dinner party at the end of work today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"office dinner party\")) (Event.start_? (DateTimeConstraint (?= (EndOfWorkDay)) (Today)))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Where is the Team Dinner happening on Friday at the end of the day?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (EndOfWorkDay)) (Event.subject_? (?~= \"Team Dinner\"))))))))"
  },
  {
    "original_sentence": "yes ,sir",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "yes,update my calendar evets",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Can you add a lunch with Julia, Juiles and Julie?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Julia\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Juiles\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Julie\"))))))))))))"
  },
  {
    "original_sentence": "REMOVE JULIA AND ADD JULY",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"JULIA\")))))))))))"
  },
  {
    "original_sentence": "The first one is the best",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Hi",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "can you give me the last week weather report in Los Angeles.",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Los Angeles\"))) (DateTime.date_? (LastWeekNew))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Hello what i the weather like today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "What is the weather forecast for tomorrow?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "What is the weather like in Las Vegas?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Las Vegas\"))) (?= (Now))))"
  },
  {
    "original_sentence": "What is the weather like in Binghamton NY",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Binghamton NY\"))) (?= (Now))))"
  },
  {
    "original_sentence": "What is the 5 day forecast?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (NextPeriod (toDays 5)))))"
  },
  {
    "original_sentence": "When is sunset?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunsetTime) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "Add to my calendar tonight 8pm meet Ron for dinner",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Delete my fall event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (SeasonFall)))))))))"
  },
  {
    "original_sentence": "Actually don't delete that",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you tell me what the weather is like right now?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (?= (Now))))"
  },
  {
    "original_sentence": "How is this weekends weather looking like",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (NextWeekend))))"
  },
  {
    "original_sentence": "Will it rain today?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "How about this weekend?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint DateTime)) roleConstraint (Path.apply \"time\")) (intension (DateTime.date_? (ThisWeekend))))))"
  },
  {
    "original_sentence": "Will it rain this weekend?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeekend)))))"
  },
  {
    "original_sentence": "How about next week?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint DateTime)) roleConstraint (Path.apply \"time\")) (intension (DateTime.date_? (NextWeekList))))))"
  },
  {
    "original_sentence": "Will it rain tomorrow?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "Schedule a dinner date with Alicia for 6 pm this evening",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 6L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alicia\")))))))))))"
  },
  {
    "original_sentence": "Cork lift street.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "nice",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "that's it",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "cancel this event and all today",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Update my schedule that I will have meetings with Abby for the rest of the day.",
    "parse": "(let (x0 (Now)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (EndOfWorkDay))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))))))))"
  },
  {
    "original_sentence": "It's really good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Outstanding, thank you so much!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Create an event called phone conference from 3:30 PM until the end of the day.",
    "parse": "(let (x0 (HourMinutePm 3L 30L) x1 (NextTime x0)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"phone conference\")) (Event.start_? (?= x1))) (Event.end_? (?= (DateAtTimeWithDefaults (adjustByPeriod (DateTime.date x1) (toDays 1)) x0))))))))"
  },
  {
    "original_sentence": "The first option would work the best for me. add conference from 10 am monday until end of the work day",
    "parse": "(let (x0 (Monday) x1 (NextDOW x0)) (do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"conference\")) (DateAndConstraint x1 (nextDayOfWeek x1 x0))))))))"
  },
  {
    "original_sentence": "Make an event to go to picnic on Friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go to picnic\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "Schedule a 2 hour meeting on Wednesday with Polly",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday))))) (Event.duration_? (?= (toHours 2)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Polly\")))))))))))"
  },
  {
    "original_sentence": "First one is look good",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I'd like to have a team meeting tomorrow between 1:00 PM and 4:00 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (DateTimeAndConstraint (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L)) (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "we need 45 minutes, start it at 1",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toMinutes 45)))))))"
  },
  {
    "original_sentence": "No it should be an hour",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "I would like to have a room booked for tomorrow.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Can you set up a lunch meeting on Monday for me?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))))))"
  },
  {
    "original_sentence": "Just forget about it",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Where do I go for Dinner tomorrow?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"Dinner\"))))))))"
  },
  {
    "original_sentence": "No, I need to cancel that.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Are any games scheduled in the spring",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"games\")) (SeasonSpring))))) 0L))"
  },
  {
    "original_sentence": "Please add an event for summer.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (SeasonSummer))))))"
  },
  {
    "original_sentence": "No, are there any other times?",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "I want the 2nd appointment.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Schedule a singing competition this fall.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"singing competition\")) (Event.start_? (DateTime.date_? (SeasonFall)))))))"
  },
  {
    "original_sentence": "Please accept the invitation to accept the invitation and say invitation accepted.",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"invitation accepted\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"accept the invitation\"))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "yes that is great thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please accept the Party at Elton John's house.",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Party at Elton John's house\"))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Yes you are right, Can you also accept the Office monthly meeting",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Office monthly meeting\"))))) :response (ResponseStatusType.Accepted))))"
  },
  {
    "original_sentence": "hii",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "where is the survey",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "I need to move my lunch meeting back an hour.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch meeting\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "Make a Press Conference later than 5 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Press Conference\")) (Event.start_? (OnDateAfterTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "fix the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make it an hour earlier",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (PeriodDurationBeforeDateTime (Event.start x0) (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "Make that later actually",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Put a meeting with Jane on my calendar today from 2:30 to 3.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Today) (HourMinutePm 2L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\"))))))))))))"
  },
  {
    "original_sentence": "Actually can can you modify my meeting with Jane today to add a extra 15 minutes?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\"))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toMinutes 15))))))))"
  },
  {
    "original_sentence": "I need to make an appointment to review my emails at 8 am on Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"appointment to review my emails\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "See if you can book a table at Ruth's Chris.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Hey, put movies on friday at 3 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"movies\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "wait put lunch and a movie instead.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"lunch and a movie\")))))"
  },
  {
    "original_sentence": "Can you find all my meetings during last february?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofPreviousMonth (February)))))) 0L))"
  },
  {
    "original_sentence": "Did I do anything last March?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofPreviousMonth (March)))))) 0L))"
  },
  {
    "original_sentence": "Did I have anything in the last Jan?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofPreviousMonth (January)))))) 0L))"
  },
  {
    "original_sentence": "Schedule an oil change that isn't during the weekend.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"oil change\")) (Event.start_? (DateTime.date_? (ThisWeekend)))))))"
  },
  {
    "original_sentence": "Either works for me! Could you also put me down for a tire rotation sometime next week that isn't on the weekend",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"tire rotation\")) (Event.start_? (& (DateTime.date_? (NextWeekList)) (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend)))))))))))"
  },
  {
    "original_sentence": "Tuesday works, also i need to add an event not during the weekend called House Jams",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"House Jams\")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))))"
  },
  {
    "original_sentence": "i need to also have a Spa Day but not over the weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Spa Day\")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend)))))))))"
  },
  {
    "original_sentence": "Can you find any upcoming events with Yamato?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Yamato\"))))))"
  },
  {
    "original_sentence": "Hold on a moment while I figure out what else I need from you.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Ok, I think I'm done for now. Bye!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Find out if I have any appointment this Friday evening",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) (Evening))))"
  },
  {
    "original_sentence": "Anything for Saturday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Where is my lunch on Saturday?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"lunch\"))))))))"
  },
  {
    "original_sentence": "Set the lunch on Saturday to be at mom's",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"lunch\"))))))) (Event.location_? (?= (LocationKeyphrase.apply \"mom's\"))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change the location of the Family Road Trip from Phoenix to Chicago.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Family Road Trip\")) (Event.location_? (?= (LocationKeyphrase.apply \"Phoenix\")))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Chicago\"))))))"
  },
  {
    "original_sentence": "Can you change it shows that the Family Game Night is Chicago but it should be South Bend?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Family Game Night\")) (Event.location_? (?= (LocationKeyphrase.apply \"Chicago\")))))))) (Event.location_? (?= (LocationKeyphrase.apply \"South Bend\"))))))"
  },
  {
    "original_sentence": "Change trivia location to Mills Creek Brewery.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"trivia\")))))) (Event.location_? (?= (LocationKeyphrase.apply \"Mills Creek Brewery\"))))))"
  },
  {
    "original_sentence": "Do you know if Blue Hill in New York is good for groups?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Blue Hill in New York\"))))))"
  },
  {
    "original_sentence": "Find me a Panda Express in Truckee",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Panda Express in Truckee\")))"
  },
  {
    "original_sentence": "Is it good for groups?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Make a meeting at Stanford University with my boss at 5PM today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 5L)))) (Event.location_? (?= (LocationKeyphrase.apply \"Stanford University\")))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "it's right good thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Will it be hot that day?",
    "parse": "(Yield (IsHot (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Will we see wind that day?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (IsWindy (WeatherQueryApi (AtPlace (FindPlace (Event.location x0))) (DateTime.date_? (?= (DateTime.date (Event.start x0))))))))"
  },
  {
    "original_sentence": "Where is the lunch today?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"lunch\"))))))))"
  },
  {
    "original_sentence": "What time does it end?",
    "parse": "(Yield (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Ok what about the meeting with Lisa?",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Schedule a 4 pm PowerPoint Presentation on Thursday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"PowerPoint Presentation\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Open calendar and add \"Dinner tomorrow @ 7pm with Tyler\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 7L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tyler\")))))))))))"
  },
  {
    "original_sentence": "it's all very well continuous to determine",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Is Blue Coyote in Truckee casual?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Blue Coyote in Truckee\"))))))"
  },
  {
    "original_sentence": "Does Wild River Grille in Reno a casual dress code?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Wild River Grille in Reno\"))))))"
  },
  {
    "original_sentence": "Ok is the dress code in Ceol in Reno casual?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Ceol in Reno\"))))))"
  },
  {
    "original_sentence": "Set a meeting tomorrow at 11 am as Working Elsewhere.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L)))) (Event.showAs_? (?= (ShowAsStatus.WorkingElsewhere)))))))"
  },
  {
    "original_sentence": "Make a 2 hour meeting this afternoon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Afternoon) (Today))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "There is going to be a parade this weekend. I want to go with the family.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "looks great and iam metting next week set remainder",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "10 am is is exactly correct",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Which day did that 10 Am appointment get marked down as?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"appointment\")) (Event.start_? (DateTime.time_? (?= (NumberAM 10L))))))))))"
  },
  {
    "original_sentence": "So I have a question about the weather?",
    "parse": "(WeatherPleasantry)"
  },
  {
    "original_sentence": "Please help me with the weather",
    "parse": "(WeatherPleasantry)"
  },
  {
    "original_sentence": "What different weather patterns are there?",
    "parse": "(WeatherPleasantry)"
  },
  {
    "original_sentence": "Make me an event tomorrow at 4 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 4L)))))))"
  },
  {
    "original_sentence": "I meant PM.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (ConvertTimeToPM (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))))))))))))"
  },
  {
    "original_sentence": "looks great! I also need to schedule a dinner party for 6 tomorrow",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner party\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L)))))))))"
  },
  {
    "original_sentence": "oh i meant AM, because I have dinner in the morning",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (ConvertTimeToAM (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))))))))))))"
  },
  {
    "original_sentence": "Yes, thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make me a business lunch tomorrow at 3 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"business lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Can we actually change that to be AM?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (ConvertTimeToAM (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))))))))))))"
  },
  {
    "original_sentence": "What event is happening right now?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (Now) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Cancel the event right now",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (Now) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "yes thats the right one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What do I have in 44 hours?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 44))) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Cancel the first event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 1L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "How many events do I have this month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today))))))"
  },
  {
    "original_sentence": "change my lunch on Wednesday at 12pm to Thursday at 12pm please.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 12L)) (Event.subject_? (?~= \"lunch\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Thursday)) (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "Do I have any other lunch appointments scheduled?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.subject_? (?~= \"lunch\")))))) 0L))"
  },
  {
    "original_sentence": "ok thank you very much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you set the duration of lunch with Alyce to only one hour please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alyce\"))))))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "it sounds very good what you have done",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I will be sleeping in a NERD tomorrow, can you get me a room?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"sleeping\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.location_? (& (?= (LocationKeyphrase.apply \"NERD\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "Looks legit",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I want to get a room at Bellevue to work on production presentation at 3 tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"work on production presentation\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Bellevue\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "That is amazing",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I also need a room in Seattle for my Dentist Exams tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Dentist Exams\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Seattle\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "Add a meeting for Monday between 9-12",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 9L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 12L)))))))))"
  },
  {
    "original_sentence": "Make the time 8AM-1PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "Schedule that",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great, and can you also add that I need to stop at my realtor's office between 2 and 4 pm on next Wednesday?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"stop by my realtor's office\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L)))))))))"
  },
  {
    "original_sentence": "Yeah, and can you add stop by Trader Joe's an hour after that as well?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"stop by Trader Joe's\")) (Event.start_? (?= (adjustByPeriodDuration (Event.end (^(Dynamic) item x0)) (PeriodDuration.apply :duration (toHours 1)))))))))))"
  },
  {
    "original_sentence": "Who's invited to my graduation party next year?",
    "parse": "(Yield (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"graduation party\")))))))"
  },
  {
    "original_sentence": "I want to have a team meeting on June 14th next year.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (DateTime.date_? (?= (MDY 14L (June) (NextYear)))))))))"
  },
  {
    "original_sentence": "cancel my meeting on Tuesday please",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Actually cancel the meeting on Wednesday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Wednesday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "That's the one! Yes cancel it, please.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "please put the business dinner with williams",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"business dinner\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"williams\"))))))))))"
  },
  {
    "original_sentence": "Can you change it to be with Meg?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Meg\"))))))))))"
  },
  {
    "original_sentence": "What events do I have on my calendar that is not in Las Vegas?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \"Las Vegas\"))))))"
  },
  {
    "original_sentence": "Do you have any other events that are not in Tokyo?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \"Tokyo\"))))))) 0L))"
  },
  {
    "original_sentence": "Do I have any Events that aren't in Reno today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \"Reno\"))))))) 0L))"
  },
  {
    "original_sentence": "Can you tell me who said maybe to the Brunch on Sunday?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"Brunch\"))))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "who have tentatively accepted Beach Day",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Beach Day\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Who may come to Happy Hour",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Happy Hour\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Set an alert to check on Becca tomorrow at 4.",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Check on becca today at 4PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Check on becca\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add Alex to that meeting.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex\"))))))))))"
  },
  {
    "original_sentence": "Do I have any events after check on Becca?",
    "parse": "(let (x0 (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"check on Becca\"))))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (EventOnDate (DateTime.date x0) (^(Event) EmptyStructConstraint)) x0)))) 0L)))"
  },
  {
    "original_sentence": "Hey lets make a meeting with my team tomorrow from 1 till end of work day.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (EndOfWorkDay))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser))))))))))"
  },
  {
    "original_sentence": "Yes, then Wednesday, I have a meeting that will run from 3 thought the end of the work day.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"run\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 3L))))) (Event.end_? (DateTime.time_? (?= (EndOfWorkDay)))))))))"
  },
  {
    "original_sentence": "That looks correct. Add in a Movie Night on Thursday at the end of the day",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Movie Night\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (EndOfWorkDay)))))))))"
  },
  {
    "original_sentence": "set up a meeting with kristen clifford saturday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"kristen clifford\")))))))))))"
  },
  {
    "original_sentence": "no can you change it to 1 am",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 1L)))))))"
  },
  {
    "original_sentence": "yes than kyou",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "delete the evening party on saturday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"evening party\"))))))))))"
  },
  {
    "original_sentence": "Oh, then, look for party.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (Event.subject_? (?~= \"party\")))))"
  },
  {
    "original_sentence": "On second thought, it should be the late dinner.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (Event.subject_? (?~= \"late dinner\")))))"
  },
  {
    "original_sentence": "Yeah, that's the one.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cancel my meeting with Jesse tomorrow",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\"))))))))))))"
  },
  {
    "original_sentence": "Mark 2-3 as lunch with Alex",
    "parse": "(let (x0 (NextTime (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex\"))))))))))))"
  },
  {
    "original_sentence": "When is my foot appointment?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"foot appointment\"))))))"
  },
  {
    "original_sentence": "Schedule an appointment with the podiatrist on March 2.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I think on, second thought, that I need it to be an hour instead and then can you also add, Go to Insurance Demo with Kim on Sunday the 3rd at 7pm.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Need Thursday to Sunday blocked off on my calendar for a funeral I am traveling to.",
    "parse": "(let (x0 (NextDOW (Thursday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"funeral\")) (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (DateAndConstraint x0 (nextDayOfWeek x0 (Sunday)))))))))"
  },
  {
    "original_sentence": "Yes please add.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please add an event to my calendar titled wake on October 23rd at 4:30pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"wake\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 23L (October)) (HourMinutePm 4L 30L))))))))"
  },
  {
    "original_sentence": "Yes, sadly I must go.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Looks great thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you add coffee shop meeting to my calendar tomorrow at 10 am lasting for 45 minutes at Starbucks",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"coffee shop meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 10L))))) (Event.duration_? (?= (toMinutes 45)))) (Event.location_? (?= (LocationKeyphrase.apply \"Starbucks\")))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add a meeting with Tim at 330pm today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (HourMinutePm 3L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\")))))))))))"
  },
  {
    "original_sentence": "In the winter, Jake and I wanted to get wasted on OJ",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"get wasted on OJ\")) (Event.start_? (DateTime.date_? (SeasonWinter)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))))))))))"
  },
  {
    "original_sentence": "Jake broke his leg, let's do it in summer instead",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (SeasonSummer))))))"
  }
]