[
  {
    "original_sentence": "Do I have any events in the spring?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (SeasonSpring))))) 0L))"
  },
  {
    "original_sentence": "Summer>",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (SeasonSummer)))))"
  },
  {
    "original_sentence": "Set up a meeting with Barack Obama",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\"))))))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Change it to 7pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "add appointment with doctor harris today evening",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Evening) (Today))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"doctor harris\")))))))))))"
  },
  {
    "original_sentence": "The 2nd one time is ok for me.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Let's add Jake to the meeting.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))))))"
  },
  {
    "original_sentence": "Yes, lake Harris know.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceSpecify))"
  },
  {
    "original_sentence": "Cancel meeting with doctor harris.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"doctor harris\")))))))))))"
  },
  {
    "original_sentence": "lunch with cecelia and cornelio at 1:00 on the 25th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 25L) (NumberPM 1L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"cecelia\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"cornelio\"))))))))))))"
  },
  {
    "original_sentence": "meet damon for lunch at noon on april 12th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 12L (April)) (Noon))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"damon\")))))))))))"
  },
  {
    "original_sentence": "search lunch",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\"))))"
  },
  {
    "original_sentence": "call barack at 12:00 on April 18th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"call\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 18L (April)) (NumberPM 12L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"barack\")))))))))))"
  },
  {
    "original_sentence": "Good!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "remove call barack from my calendar",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"call barack\")))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "lunch with wade at 2:00 on March 28th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 28L (March)) (NumberPM 2L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"wade\")))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "create meeting on monday at 8",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Send an invite to Matt to attend a late dinner after the appointment the 29th at 8pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"late dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 29L) (NumberPM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Matt\")))))))))))"
  },
  {
    "original_sentence": "Correct",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change the time to 9pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 9L)))))))"
  },
  {
    "original_sentence": "I need to know if I am busy between the 5th 12pm and the 6th 12pm.",
    "parse": "(let (x0 (nextDayOfMonth (Today) 5L)) (Yield (FindEventWrapperWithDefaults (EventDuringRangeDateTime (^(Event) EmptyStructConstraint) (DateTimeAndConstraint (DateAtTimeWithDefaults x0 (NumberPM 12L)) (DateAtTimeWithDefaults (nextDayOfMonth x0 6L) (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "oh thank you for information",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "schedule a hair appt for 2 days from today at 1",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"hair appt\")) (Event.start_? (?= (DateAtTimeWithDefaults (adjustByPeriod (Today) (toDays 2)) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "It will take 2 hours for my hair",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "thank you very much for planning everything, you make my life easier",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "How long is the new project event?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"new project\")))))))"
  },
  {
    "original_sentence": "Yes and please add Jake",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))))))"
  },
  {
    "original_sentence": "No, move it to next Thursday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday))))))))"
  },
  {
    "original_sentence": "Thats perfect thanks!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What will tomorrow's weather be like in Reno?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Reno\"))) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "I am in Wyoming.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"Wyoming\")))))))"
  },
  {
    "original_sentence": "I don't care about Virginia. I want to know the weather in Wyoming.",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Wyoming\"))) (?= (Now))))"
  },
  {
    "original_sentence": "How does the weather look in Wyoming for the weekend?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Wyoming\"))) (DateTime.date_? (ThisWeekend))))"
  },
  {
    "original_sentence": "That's really cold at night, but the day looks great. How certain are you of this weather?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Is there a chance it will rain in Wyoming this weekend?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Wyoming\"))) (DateTime.date_? (ThisWeekend)))))"
  },
  {
    "original_sentence": "That's great! Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I am planning a vacation to California in December. What is the weather like there?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "I have the information I need. Good bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what is scheduled for thursday",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "I meant friday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "When is the board meeting?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"board meeting\")))))))"
  },
  {
    "original_sentence": "Do I have a board meeting on Nov 4?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 4L (November)) (Event.subject_? (?~= \"board meeting\")))))) 0L))"
  },
  {
    "original_sentence": "Okay, then can you change my appointment from Nov 1 to Nov 4 at the same time.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 1L (November)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.date_? (?= (MD 4L (November))))))))"
  },
  {
    "original_sentence": "I need it to be an hour.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Schedule a lunch with Patrick for Monday at 1 pm. What time is my appointment with Sharon tomorrow?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Schedule lunch with Patrick for Monday at 1 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Patrick\")))))))))))"
  },
  {
    "original_sentence": "What's my last lunch of the day tomorrow?",
    "parse": "(Yield (FindLastEvent (EventOnDate (Tomorrow) (Event.subject_? (?~= \"lunch\")))))"
  },
  {
    "original_sentence": "change the lunch time at 10.00 am - 10.30 am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))))))"
  },
  {
    "original_sentence": "When is the last staff lunch this week?",
    "parse": "(Yield (Event.start (FindLastEvent (EventDuringRange (Event.subject_? (?~= \"staff lunch\")) (ThisWeek)))))"
  },
  {
    "original_sentence": "Remove meeting with Bob this week.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))) (ThisWeek)))))))))"
  },
  {
    "original_sentence": "What other meetings do I have scheduled this week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))"
  },
  {
    "original_sentence": "I'm not sure if I need to block out an hour for the meeting.",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Put dinner on my schedule for tomorrow at 7pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "i will come day after tomorrow",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I am going to the gym tonight?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"gym\"))) (Night))))) 0L))"
  },
  {
    "original_sentence": "I need to move my meet with Boris to next week",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Boris\")))))))) (Event.start_? (DateTime.date_? (NextWeekList))))))"
  },
  {
    "original_sentence": "That bottom one works",
    "parse": "(Yield (Execute (ChooseUpdateEvent (BottomResult) (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Push the project meeting with Tim to sometime in December.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"project meeting\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\"))))))))) (Event.start_? (DateTime.date_? (FullMonthofMonth (December)))))))"
  },
  {
    "original_sentence": "The second one works best.",
    "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please move the office retreat to next month",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"office retreat\")))))) (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth)))))))"
  },
  {
    "original_sentence": "Cancel shopping with mom last Saturday",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Delete last Saturday's shopping trip!",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Saturday)) (Event.subject_? (?~= \"shopping trip\"))))))))))"
  },
  {
    "original_sentence": "Yes, thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete last week's flight to Houston",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"flight to Houston\")) (LastWeekNew)))))))))"
  },
  {
    "original_sentence": "Yeah. I stayed home.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "please add Paige Ashworth, Cher Roydon, Jerri Skinner, Fiona Mason, Cecelia Waller, Wade Blakeley, Damon Ellery, Karl Boon, Jeong-Ho Kim, Janice Kang, Scot Hanson, Barack Obama, Cornelio Hernandez, Kristen Clifford to a budget meeting at 3 p.m tommorow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"budget meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))) (Event.attendees_? (& (& (& (& (& (& (& (& (& (& (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher Roydon\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jerri Skinner\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fiona Mason\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cecelia Waller\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wade Blakeley\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon Ellery\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karl Boon\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeong-Ho Kim\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice Kang\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scot Hanson\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cornelio Hernandez\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kristen Clifford\"))))))))))))"
  },
  {
    "original_sentence": "Add Paige Ashworth to a meeting at 3 pm tommorow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\")))))))))))"
  },
  {
    "original_sentence": "add Cher Roydon to the same meeting at 3 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher Roydon\")))))))))))"
  },
  {
    "original_sentence": "Add Jerri Skinner and Fiona Mason to the meeting too",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jerri Skinner\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fiona Mason\")))))))))))"
  },
  {
    "original_sentence": "add Cecelia Waller, Wade Blakeley, Damon Ellery, Karl Boon and Jeong-Ho Kim to the meeting",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cecelia Waller\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wade Blakeley\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon Ellery\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karl Boon\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeong-Ho Kim\")))))))))))"
  },
  {
    "original_sentence": "reschedule my 3pm meeting to 4pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 3L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "What does my schedule look like on Thursday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Do I have anything after?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))) 0L)))"
  },
  {
    "original_sentence": "Add an event called \"New Meeting Time\" to today at 4 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"New Meeting Time\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Thanks. Also schedule time for \"Follow Up\" immediately after the meeting.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Follow Up\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Do I have a meeting with Frank next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Frank\")))) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please reschedule my lunch with Maria for later.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Maria\"))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?> (DateTime.time (Event.start x0)))))))))"
  },
  {
    "original_sentence": "Choose the second one and make it two hours longer.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Pick the second option.",
    "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Yeah, good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I would like to add Hiking to my calendar for Sunday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Hiking\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))))))"
  },
  {
    "original_sentence": "nothing",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "i plan to visit lyndsi on 12/1 of the following year.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MDY 1L (toMonth 12L) (Year.apply 2020L)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lyndsi\")))))))))))"
  },
  {
    "original_sentence": "Yes add it to the calendar.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have any appointments this afternoon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"
  },
  {
    "original_sentence": "Ok can I cancel it?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "yes this one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thanks for that",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Who is Jason's boss?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jason\")))))))"
  },
  {
    "original_sentence": "I need to make a meeting with Dan two days from now.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply (toDays 2))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan\")))))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok arrange it",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you tell me who Damon's manager is?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon\")))))))"
  },
  {
    "original_sentence": "Put family reunion on the calendar for Sunday afternoon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"family reunion\")) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Sunday))))))))"
  },
  {
    "original_sentence": "hold on a first",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Let's go with the first one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "hold on a second",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I want you to change it to the following day. Wait, I need to talk to Sarah who just came in to my room. Okay, please change the family reunion to the day after tomorrow at the same time.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"family reunion\")))))) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (Tomorrow) (toDays 1))))))))"
  },
  {
    "original_sentence": "Hold on a minute.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Yes it is.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Book breakfast tomorrow with John at 6am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"breakfast\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 6L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))))"
  },
  {
    "original_sentence": "Delete event Soccer practice January 3",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 3L (January)) (Event.subject_? (?~= \"Soccer practice\"))))))))))"
  },
  {
    "original_sentence": "Excellent. What other Soccer practices do I have over the next month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Soccer practices\")) (FullMonthofMonth (NextMonth)))))"
  },
  {
    "original_sentence": "Can you add boxing practice Feburary 1st at 1pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"boxing practice\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 1L (February)) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "I have a date for dinner with at 8 pm on the 4th of February that needs to be put on my calendar too.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"date for dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 4L (February)) (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "Reschedule the dinner date to February 14th for 2 hour.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.date_? (?= (MD 14L (February))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "OK",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what's me schedule lookin like matey?",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Add Ron to list.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"list\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ron\"))))))))))"
  },
  {
    "original_sentence": "Yes. Add Kathy and John to this event as well.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kathy\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))))"
  },
  {
    "original_sentence": "Yes, but remove Kathy and add Jean to the event.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kathy\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jean\")))))))))))"
  },
  {
    "original_sentence": "Yeah",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Sarah birthday?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Sarah birthday\"))))))"
  },
  {
    "original_sentence": "Please see what time my meeting with Wilson is for today.",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wilson\"))))))))))"
  },
  {
    "original_sentence": "OK DONE",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "add an event for birthday party saturday at 1 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"birthday party\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "no it should end at 4 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "yeah good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "At what time am I buying snacks on Sunday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"buying snacks\"))))))))"
  },
  {
    "original_sentence": "Reschedule that please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "The first one is good. Please reschedule grocery shopping to tomorrow afternoon",
    "parse": "(do (Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"grocery shopping\")))))) (& (Event.start_? (DateTimeConstraint (Afternoon) (Tomorrow))) (EventRescheduled (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Yes, use the second one.",
    "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can we move the staff meeting to Tuesday?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"staff meeting\")))))) (EventSometimeOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "make me a meeting with abby from now until the end of the day",
    "parse": "(let (x0 (Now)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (EndOfWorkDay))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))))))))"
  },
  {
    "original_sentence": "It's great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hi please schedule my meeting with Abby that ends at the end of the day",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.end_? (DateTime.time_? (?= (EndOfWorkDay)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "It's good! Can you also make me a meeting on sunday from 4 pm until the end of the day",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 4L))) (do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (EndOfWorkDay))))))))))"
  },
  {
    "original_sentence": "Add dinner with Julie on Thursday at 8PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Julie\")))))))))))"
  },
  {
    "original_sentence": "Id like to set up a meeting tomorrow with Tyler at 2 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tyler\")))))))))))"
  },
  {
    "original_sentence": "Can you change the location of my meeting tomorrow to the conference room on the 3rd floor instead of my office?",
    "parse": "(FenceConferenceRoom)"
  },
  {
    "original_sentence": "Change the time to 12pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "No, add bill, tim and simon to that",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bill\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"tim\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"simon\")))))))))))"
  },
  {
    "original_sentence": "Let's add Jason to it too.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jason\"))))))))))"
  },
  {
    "original_sentence": "Yeah",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When is New Years?",
    "parse": "(Yield (NextHolidayFromToday (Holiday.NewYearsDay)))"
  },
  {
    "original_sentence": "Who do I have dinner with tomorrow?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"dinner\"))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "make it 30 minutes longer",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toMinutes 30))))))))"
  },
  {
    "original_sentence": "No, I want it to start at 7:30 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (HourMinutePm 7L 30L)))))))"
  },
  {
    "original_sentence": "Can you change the start time of dinner to 7:30 pm?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\")))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 7L 30L)))))))"
  },
  {
    "original_sentence": "Change the end time to 9pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 9L)))))))"
  },
  {
    "original_sentence": "Hi, can you please schedule a meeting with \"El Camino Trailer Park\" at 3pm for this coming Friday the 15th, but move the Dr.'s appointment I had then to Monday at 4pm instead please?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Do I have any other appointments on Monday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "its ok . i will manage it",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have any other appointments on Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "its ok can you please check once again",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "Am I free Tomorrow at noon",
    "parse": "(Yield (IsFree (RecipientAvailability (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon)))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
  },
  {
    "original_sentence": "Set my status to Busy for tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.showAs_? (?= (ShowAsStatus.Busy))) (Tomorrow)))))"
  },
  {
    "original_sentence": "No, cancel all my appointments and mark me busy all day",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Add run for 630 tomorrow morning",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"run\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinuteAm 6L 30L))))))))"
  },
  {
    "original_sentence": "change run to walk and then add it",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"walk\")))))"
  },
  {
    "original_sentence": "Everything looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I approve",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Create an event for Triathlon on the 15th of June.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Triathlon\")) (Event.start_? (DateTime.date_? (?= (MD 15L (June)))))))))"
  },
  {
    "original_sentence": "Can you list all the lunches I have scheduled for next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"lunches\")) (NextWeekList))))"
  },
  {
    "original_sentence": "Do I have any meetings scheduled?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))) 0L))"
  },
  {
    "original_sentence": "Thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Now, who am I meeting on June 9?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 9L (June)) (^(Event) EmptyStructConstraint)))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Can you invite scot hanson to that?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"scot hanson\"))))))))))"
  },
  {
    "original_sentence": "Perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When is my dentist appointment again?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\")))))))"
  },
  {
    "original_sentence": "Can you move that to 9 AM please?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I already called the dentist to reschedule that.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have any events with Obama?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Obama\"))))))) 0L))"
  },
  {
    "original_sentence": "Great. Invite Scot to that as well please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scot\"))))))))))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks again. I'm all done.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I'll be at the Buffet on Friday, accept it and say I\"m willing to carpool if anyone is interested\"",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"m willing to carpool if anyone is interested\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"Buffet\")))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Good news I can now make it to the birthday party saturday please update this.",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (ClosestDayOfWeek (Today) (Saturday)) (Event.subject_? (?~= \"the birthday party\")))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "No",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Mark on the calendar for a Dinner Date with Marsha on Friday at 8pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Dinner Date\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marsha\")))))))))))"
  },
  {
    "original_sentence": "yes this looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please add presentation for the next day at 9 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?~= \"presentation\")) (Event.start_? (?= (DateAtTimeWithDefaults (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "That is correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Awesome, but delete my event after that one.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (EventAfterDateTime (^(Event) EmptyStructConstraint) (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) 1L)))))"
  },
  {
    "original_sentence": "I need to create a coffee meeting tomorrow at 10am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"coffee meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Change the duration to 1 hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Can you mark off 3-5 PM today as busy?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Today) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.showAs_? (?= (ShowAsStatus.Busy))))))))"
  },
  {
    "original_sentence": "Can you do the same for tomorrow from 3-5",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please set an out of the office from 10am - 1pm on Monday while I am at my gyno appointment.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"gyno appointment\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 1L))))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))))))))"
  },
  {
    "original_sentence": "yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Clear out anything after that.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Just set my status as out of office the rest of the day.",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "How much sleep should I get for tomorrow?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Will you make an appointment at 6 pm tomorrow until 8 pm at Frank's and then make a 1 hour appointment afterwards called drive home.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Thank you. Please remind me again tomorrow.",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Make a meeting in Conference Room 2 with Amanda at 9 am tomorrow and change my meeting with Jeff to be 2 hours earlier.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Put Game of Thrones Netflix Binge for Saturday from 4 pm to 9 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Game of Thrones Netflix Binge\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 9L)))))))))"
  },
  {
    "original_sentence": "Hold on. I need to go get the door.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "I'm back. Can you change that to 4 hours?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 4))))))"
  },
  {
    "original_sentence": "What do I have on my schedule for Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "How expensive is Copacabana Cafe in Seattle?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Copacabana Cafe in Seattle\"))))))"
  },
  {
    "original_sentence": "And can you tell me how expensive Don Lucho's Restaurant & Food Truck in Seattle is?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Don Lucho's Restaurant & Food Truck in Seattle\"))))))"
  },
  {
    "original_sentence": "Can you check how expensive Novilhos Brazilian Steak House in Bellevue is?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Novilhos Brazilian Steak House in Bellevue\"))))))"
  },
  {
    "original_sentence": "Can you create an event 3 hours after my hike ends called shower?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"shower\")) (Event.start_? (?= (adjustByPeriodDuration (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"hike\")))))) (PeriodDuration.apply :duration (toHours 3)))))))))"
  },
  {
    "original_sentence": "Let's make it 15 minutes long.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toMinutes 15))))))"
  },
  {
    "original_sentence": "Perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "can you change it for evening after 4p.m.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?> (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Can you add shower to sometime after 4pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"shower\")) (Event.start_? (OnDateAfterTime (Today) (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Anything in the morning tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Morning))))"
  },
  {
    "original_sentence": "How about in the afternoon on the same day?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDateWithTimeRange (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)) (Afternoon)))))"
  },
  {
    "original_sentence": "Do I have anything for the next day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything schedule Saturday afternoon with David?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Saturday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David\"))))) (Afternoon))))) 0L))"
  },
  {
    "original_sentence": "Do I have lunch schedule for next Thursday with John?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))) (EventOnDate (NextDOW (Thursday)) (Event.subject_? (?~= \"lunch\"))))))) 0L))"
  },
  {
    "original_sentence": "Tell me who Hagrid's manager is",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Hagrid\")))))))"
  },
  {
    "original_sentence": "I need to add to calendar a meeting with Dan Schoffel on Tuesday at 10 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 10L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Schoffel\")))))))))))"
  },
  {
    "original_sentence": "What's dan's boss's name?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"dan\")))))))"
  },
  {
    "original_sentence": "Is there anyone who hasn't declined the invite to the Festival of Lights ?",
    "parse": "(Yield (> (size (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Festival of Lights\")))))) (ResponseStatusType.Declined))) 0L))"
  },
  {
    "original_sentence": "can you cancel my next upcoming meeting?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))))"
  },
  {
    "original_sentence": "actually I've changed my mind. Don't cancel",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Set an event tomorrow Call Ricky about the date at 1 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Call Ricky about the date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "Yes, perfect. What do I have on my calendar for 2pm?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 2L)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "ok tomorrow at 2:30 pm events",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 2L 30L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Do I have any events in September 2020? I'm trying to plan a retreat vacation.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (September) (Year.apply 2020L)))))"
  },
  {
    "original_sentence": "Alright cool, Can you then make an Event with Kim for January 2021",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventDuringRange (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))) (FullMonthofMonth (January) (Year.apply 2021L))))))"
  },
  {
    "original_sentence": "Schedule it for January 4th. Then what do I have going on in August of 2021?",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 4L (January))))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (August) (Year.apply 2021L))))))"
  },
  {
    "original_sentence": "Schedule a doctors appointment for August 2025",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctors appointment\")) (Event.start_? (DateTime.date_? (FullMonthofMonth (August) (Year.apply 2025L))))))))"
  },
  {
    "original_sentence": "Schedule the second one. Also, what events are in my calendar during July 2020?",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (July) (Year.apply 2020L))))))"
  },
  {
    "original_sentence": "Reserve two rooms for Thrusday in Santa Fa",
    "parse": "(FenceConferenceRoom)"
  },
  {
    "original_sentence": "set the alarm on thrusday for reserve rooms",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Book a room for thursday at 11",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberAM 11L)))) (Event.location_? (roomRequest))))))"
  },
  {
    "original_sentence": "Yes, set that",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make a new event and call it \"50th Anniversary!\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"50th Anniversary!\")))))"
  },
  {
    "original_sentence": "Wednesday will be fine.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Actually I need to change the name to \"51st Anniversary!\"",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"51st Anniversary!\")))))"
  },
  {
    "original_sentence": "Chanage the name to \"Super Awesome 52st Anniversary\"",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.subject_? (?= \"Super Awesome 52st Anniversary\")))))"
  },
  {
    "original_sentence": "Do I have anything not in Bellevue?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \"Bellevue\"))))))) 0L))"
  },
  {
    "original_sentence": "Do I have gymnastics not in Spokane?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"gymnastics\")) (Event.location_? (negate (?= (LocationKeyphrase.apply \"Spokane\")))))))) 0L))"
  },
  {
    "original_sentence": "is there anything not in washington?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \"washington\"))))))) 0L))"
  },
  {
    "original_sentence": "Delete the tonight dinner plan",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"dinner plan\"))) (Night)))))))))"
  },
  {
    "original_sentence": "Yes that is exactly what I wanted you to cancel, thank you.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule me for a #Wine Party Saturday night please.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"#Wine Party\")) (Event.start_? (DateTimeConstraint (Night) (NextDOW (Saturday))))))))"
  },
  {
    "original_sentence": "The first one works, but make the end time 10:00.",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 10L))))))))"
  },
  {
    "original_sentence": "Schedule a Wine & Cheese get together on the 27th, at 12:00 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Wine & Cheese get together\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 27L) (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "Can you go ahead and forward my pub crawl to Dan Schoffel?",
    "parse": "(Yield (ForwardEventWrapper (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"pub crawl\"))))) (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Schoffel\"))))))))"
  },
  {
    "original_sentence": "Actually, rename it to Erin Go Bragh and schedule it for April 20th",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.subject_? (?= \"Erin Go Bragh\")) (Event.start_? (DateTime.date_? (?= (MD 20L (April)))))))))"
  },
  {
    "original_sentence": "Perfect. Schedule it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete the staff meeting that was scheduled for tomorrow.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"staff meeting\"))))))))))"
  },
  {
    "original_sentence": "OK",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you, what is on my calendar for Friday after 1 PM?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (NextDOW (Friday)) (^(Event) EmptyStructConstraint) (NumberPM 1L))))"
  },
  {
    "original_sentence": "Can you add lunch with Gertie on Friday at 1:00 PM at Gloria's.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 1L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Gloria's\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Gertie\")))))))))))"
  },
  {
    "original_sentence": "change the timing to 2pm - 2.30 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 2L 30L))))))))"
  },
  {
    "original_sentence": "Delete all events for today afternoon",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Ok Set a date for dinner fro 7 pm to 9 pm.",
    "parse": "(let (x0 (NextTime (NumberPM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"date for dinner\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 9L)))))))))"
  },
  {
    "original_sentence": "yeah that's it",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Nothing else that's it",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add a dinner with the family on Tuesday at 6:00 p.m., on the closest Outback restaurant in Atlanta",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Do I have anything booked for the evening of Feb 5th?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (MD 5L (February)) (^(Event) EmptyStructConstraint)) (Night))))) 0L))"
  },
  {
    "original_sentence": "Who oversees Trey and Andy?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Trey\")))))))"
  },
  {
    "original_sentence": "Tell me who to contact as the supervisor of Janet?",
    "parse": "(do (Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janet\"))))))) (Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Andy\"))))))))"
  },
  {
    "original_sentence": "Set up a conference with Janet , Trey and Dan Schoffel to discuss safety issues at their company on Wednesday at 10 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"discuss safety issues\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 10L))))) (Event.location_? (?= (LocationKeyphrase.apply \"their company\")))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janet\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Trey\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Schoffel\"))))))))))))"
  },
  {
    "original_sentence": "Yes that looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thanks for your help see you soon",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What's on my calendar this Thursday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Make a lunch date with my wife for thursday",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Schedule coffee with Marina on Friday at 8 AM at the Starbucks near my house.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"coffee\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 8L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Starbucks near my house\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marina\")))))))))))"
  },
  {
    "original_sentence": "Where is my lunch meeting Friday?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch meeting\")) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Add Isabel Ringing to that lunch meeting if you haven't already.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Isabel Ringing\"))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you tell me what time my dinner is with Patricia?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Patricia\"))))))))))"
  },
  {
    "original_sentence": "ok fine thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "iam metting next week set alaram",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "I want to meet with Adam next week.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Adam\")))))))))))"
  },
  {
    "original_sentence": "first one ok",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I will be in Kirkland, but not on the weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))) (Event.location_? (?= (LocationKeyphrase.apply \"Kirkland\")))))))"
  },
  {
    "original_sentence": "Yes, the second one works perfect. Could you also put moving out on the calandar for me sometime before the weekend?",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"moving out\")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))))"
  },
  {
    "original_sentence": "Yes, either of those will work! Could you fit in a jump rope challenge but not this weekend. sooner.",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"jump rope challenge\")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))))"
  },
  {
    "original_sentence": "Book 1 hour between 7pm and 10pm for coffee",
    "parse": "(let (x0 (NextTime (NumberPM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"coffee\")) (Event.start_? (DateTimeAndConstraint x0 (TimeAfterDateTime x0 (NumberPM 10L))))) (Event.duration_? (?= (toHours 1))))))))"
  },
  {
    "original_sentence": "make it 45 minutes.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toMinutes 45))))))"
  },
  {
    "original_sentence": "Yes I want 8:30-9:15 pm",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (& (Event.start_? (DateTime.time_? (?= (HourMinutePm 8L 30L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 9L 15L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "cancel it and reschedule for next week at the same time",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Okay, nevermind, just please add a dinner with Aidan a half hour after the coffee on the 12th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (adjustByPeriodDuration (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 12L) (Event.subject_? (?~= \"coffee\"))))))) (PeriodDuration.apply :duration (toHours 0.5)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Aidan\")))))))))))"
  },
  {
    "original_sentence": "I need you to put down cracking open a cold one with the boys for January 31st from 5 pm to 10 pm at Revel.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Oh, wait. That's a Thursday? My bad. Can you actually move that to Friday instead, please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Friday))))))))"
  },
  {
    "original_sentence": "I'm also going to want to add leaving work early on the 1st at 2 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"leaving work early\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 1L) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Can you actually make that end at 5 pm instead. And mark me as out of the office for that time so no one tries to contact me.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.end_? (DateTime.time_? (?= (NumberPM 5L)))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
  },
  {
    "original_sentence": "Great, so what all do I have scheduled on February 1st now?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 1L (February)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "And what's the status for that one set to?",
    "parse": "(Yield (Event.showAs (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Great, so what's the other event?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Great. I think that's all I need. Thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I'd like to see Bobby for breakfast tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"breakfast\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bobby\")))))))))))"
  },
  {
    "original_sentence": "What is bobby's email?",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bobby\"))))))))"
  },
  {
    "original_sentence": "the first breakfast plz",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Yes. What meetings do I have on Friday?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "make the exit last for 2 hours",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"exit\")))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Let me check.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Yep, that's it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to set up a meeting with Dave around 1 PM tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dave\")))))))))))"
  },
  {
    "original_sentence": "Can you make me a Press Conference with my team at around 7 tomorrow evening?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Press Conference\")) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 7L))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Can we actually reschedule that to be around 3 pm next tuesday instead?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Do I have a workshop meeting tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"workshop meeting\")))))) 0L))"
  },
  {
    "original_sentence": "Put on the schedule a meeting for PTA fundraiser on Monday at 7:00 pm for 1 hour.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"PTA fundraiser\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 7L))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "yeah looks pretty well",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "add an hour longer",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toHours 1))))))))"
  },
  {
    "original_sentence": "looks perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What do I have scheduled today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "add dinner party with jack today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner party\")) (Event.start_? (DateTime.date_? (?= (Today))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jack\")))))))))))"
  },
  {
    "original_sentence": "is there waiter service available in Blue Coyote in Truckee?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Blue Coyote in Truckee\"))))))"
  },
  {
    "original_sentence": "Great! Does Homeroom in Oakland have waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Homeroom in Oakland\"))))))"
  },
  {
    "original_sentence": "Okay, I'll get in touch with them. Can you tell me if Sqirl in Los Angeles has waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Sqirl in Los Angeles\"))))))"
  },
  {
    "original_sentence": "Am i free on Friday",
    "parse": "(Yield (IsFree (RecipientAvailability (& (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
  },
  {
    "original_sentence": "Ok! let's do the one at 1 pm",
    "parse": "(Yield (CreateCommitEventWrapper (Execute (refer (extensionConstraint (CreateCommitEvent.data_? (EventSpec.start_? (DateTime.time_? (?= (NumberPM 1L))))))))))"
  },
  {
    "original_sentence": "Yes, I'll take that one.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When will Abby have free time next Tuesday?",
    "parse": "(Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))) false))"
  },
  {
    "original_sentence": "Choose the one at 10 am",
    "parse": "(Yield (CreateCommitEventWrapper (Execute (refer (extensionConstraint (CreateCommitEvent.data_? (EventSpec.start_? (DateTime.time_? (?= (NumberAM 10L))))))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Good, now show if Jake has free time",
    "parse": "(Yield (RecipientAvailability (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))) false))"
  },
  {
    "original_sentence": "2nd one please",
    "parse": "(Yield (CreateCommitEventWrapper (Execute (refer (& (^(CreateCommitEvent) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(CreateCommitEvent) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What time is my apointment?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Make a 4PM appointment.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "NO",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Add an Appointment for April 29th starting at 1 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (MD 29L (April)) (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "nope",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Find me a room for a group meeting with Josh and Brandon. It will be on Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"group meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.location_? (roomRequest))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Josh\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brandon\"))))))))))))"
  },
  {
    "original_sentence": "Lets go with the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Schedule a meeting with Katie at a conference room in City Center, please.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (& (?= (LocationKeyphrase.apply \"City Center\")) (roomRequest))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Katie\")))))))))))"
  },
  {
    "original_sentence": "The 23rd is the best day.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.day_? (?= (Day.apply 23L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What time is my meeting tomorrow?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Can you move that to 4 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Almost, I just need you to extend the meeting by 15 minutes so it's from 4 to 4:45 please.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (& (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 4L 45L))))))))"
  },
  {
    "original_sentence": "Can you update the event on Tuesday?",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "When will I be going to school with Joan, Lisa, Bart and Homer?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"going to school\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joan\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lisa\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bart\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Homer\")))))))))))"
  },
  {
    "original_sentence": "Can you add billy to that?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"billy\"))))))))))"
  },
  {
    "original_sentence": "Lily, Steve, Erma and John also want to join. Please update the event.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lily\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steve\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Erma\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))))"
  },
  {
    "original_sentence": "Yes. When will I be skipping school with Jonah, Andy, Jessie and Celia?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"skipping school\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jonah\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Andy\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jessie\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Celia\"))))))))))))"
  },
  {
    "original_sentence": "Cancel skip school on Friday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"skip school\"))))))))))"
  },
  {
    "original_sentence": "did anybody not accepted the interview to support me?",
    "parse": "(Yield (> (size (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"interview\")))))) (ResponseStatusType.Accepted))) 0L))"
  },
  {
    "original_sentence": "Can you invite Karen?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\"))))))))))"
  },
  {
    "original_sentence": "Please remove Joel from the list.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joel\")))))))))))"
  },
  {
    "original_sentence": "Take Joel off the invite list for Interview.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Interview\")))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joel\")))))))))))"
  },
  {
    "original_sentence": "Try meeting with Joel last week.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joel\")))) (LastWeekNew))))"
  },
  {
    "original_sentence": "Schedule a team meeting for Wednesday at 7:00 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 7L))))))))"
  },
  {
    "original_sentence": "It will be 2 hours.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "That looks good to me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "cancel the meeting with joshes",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"joshes\")))))))))))"
  },
  {
    "original_sentence": "Yes, perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Will I attend John's birthday party?",
    "parse": "(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Abby's birthday party\"))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Did I accept the annual fishing trip?",
    "parse": "(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"annual fishing trip\"))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Have I accepted wednesday's thing?",
    "parse": "(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Make an appointment for plastic surgery in 2021.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"plastic surgery\")) (Event.start_? (DateTime.date_? (FullYearofYear (Year.apply 2021L))))))))"
  },
  {
    "original_sentence": "The first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Schedule something for my taxes next year.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"my taxes\")) (Event.start_? (DateTime.date_? (FullYearofYear (NextYear))))))))"
  },
  {
    "original_sentence": "When was my surgery last year?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"surgery\")) (FullYearofYear (LastYear))))))))"
  },
  {
    "original_sentence": "Mel",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mel\")))))))"
  },
  {
    "original_sentence": "Emily",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\")))))))"
  },
  {
    "original_sentence": "When is Dragon Training with Jon, Dani, and Tyrion?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Dragon Training\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jon\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dani\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tyrion\"))))))))))"
  },
  {
    "original_sentence": "Change the time to 10am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "When is Princess Training with Kate, Megan and Diana?",
    "parse": "(do (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Princess Training\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kate\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Megan\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Diana\"))))))))) (Yield (Event.start (Execute (refer (^(Event) ActionIntensionConstraint))))))"
  },
  {
    "original_sentence": "What day is my lunch with amanda, ryan and michael smith?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"amanda\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"ryan\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"michael smith\")))))))))))"
  },
  {
    "original_sentence": "do i have any other event on the same day",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "How often am I doing brunch this month?",
    "parse": "(FenceAggregation)"
  },
  {
    "original_sentence": "What events do I have with Oscar this month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Oscar\")))) (FullMonthofMonth (Date.month (Today))))))"
  },
  {
    "original_sentence": "What about next month?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))))))"
  },
  {
    "original_sentence": "What about next week?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))"
  },
  {
    "original_sentence": "Ok. Are there any next month?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))))))"
  },
  {
    "original_sentence": "meet with Candy and bala",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Candy\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bala\")))))))))))"
  },
  {
    "original_sentence": "the top one would works well",
    "parse": "(Yield (Execute (ChooseCreateEvent (TopResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok! thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please add Connie to my meeting with Candy and bala.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Candy\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bala\"))))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Connie\"))))))))))"
  },
  {
    "original_sentence": "Yes schedule that",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have a meeting with Karen today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\")))) (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "Schedule one for 4:15 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (HourMinutePm 4L 15L)))) (Execute (refer (^(Event) ConstraintTypeIntension)))))))"
  },
  {
    "original_sentence": "Create an event called \"Group Project\" that starts today at 1 PM and lasts till Saturday at 1 PM.",
    "parse": "(let (x0 (Today)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Group Project\")) (Event.start_? (?= (DateAtTimeWithDefaults x0 (NumberPM 1L))))) (Event.end_? (?= (DateAtTimeWithDefaults (nextDayOfWeek x0 (Saturday)) (NumberPM 1L)))))))))"
  },
  {
    "original_sentence": "Can you make an appointment at 2 pm on Friday for teeth?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"teeth\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "What appointments do I have next weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"appointments\")) (NextWeekend))))"
  },
  {
    "original_sentence": "What is going on on my calendar this afternoon?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Afternoon))))"
  },
  {
    "original_sentence": "Can you change the board meeting to a 45 minute appointment?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"board meeting\")))))) (Event.duration_? (?= (toMinutes 45))))))"
  },
  {
    "original_sentence": "add \"coaching with Brian\" at 10 am today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"coaching with Brian\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hi. I need to make a doctors appointment for Wednesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctors appointment\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday)))))))))"
  },
  {
    "original_sentence": "Actually meant book club",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"book club\")))))"
  },
  {
    "original_sentence": "No, I'm sick, I think I meant take a book to Doctor's Office",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"take a book to Doctor's Office\")))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Yes, schedule the one at 1PM!",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Delete my doctors appointment for 3pm on Friday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L)) (Event.subject_? (?~= \"doctors appointment\"))))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Reschedule brunch with Marsha today to sometime next Thursday.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"brunch\"))))))) (EventSometimeOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "The first option would be good with me.",
    "parse": "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Schedule a lunch meeting with Bob for Friday at 11 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 11L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))))))))"
  },
  {
    "original_sentence": "yes right okay",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create an event for me",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "No",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you make it 5 PM?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "Make an event",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "No, change time",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Make an event",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "No, change the date",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Please schedule an event",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Schedule a meeting with Megan Bowen",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Megan Bowen\"))))))))))"
  },
  {
    "original_sentence": "Create an event with Megan Bowen",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Megan Bowen\"))))))))))"
  },
  {
    "original_sentence": "Schedule a meeting with Paige Ashworth",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\"))))))))))"
  },
  {
    "original_sentence": "No",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Schedule a meeting with Paige Ashworth",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\"))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Create a meeting with Sunny on Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sunny\")))))))))))"
  },
  {
    "original_sentence": "the first one works",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you change the duration of that to one hour?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Yes thanks. It's perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "cancel the next meeting with Thomas",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Thomas\")))) 1L)))))"
  },
  {
    "original_sentence": "I need an event 2 days after the next full moon in the morning",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "what is the weather going to be like thursday?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextDOW (Thursday))))))"
  },
  {
    "original_sentence": "Schedule a Star Viewing past 8 but before midnight tomorrow.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Star Viewing\")) (Event.start_? (DateTimeAndConstraint x0 (TimeAfterDateTime x0 (Midnight)))))))))"
  },
  {
    "original_sentence": "keep 10pm",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks. Can you do something else for me?",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "What's the weather going to be like for Saturday's soccer match?",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"soccer match\"))))))))"
  },
  {
    "original_sentence": "Can you add Jesse and his team to the Racing Event?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Racing Event\")))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindTeamOf x0))))))))"
  },
  {
    "original_sentence": "Looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you list who is on my team?",
    "parse": "(Yield (FindTeamOf (toRecipient (CurrentUser))))"
  },
  {
    "original_sentence": "Sounds good. Who is on Kim's team?",
    "parse": "(Yield (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))"
  },
  {
    "original_sentence": "Please add Kim's team to the Racing Event as well.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Racing\")))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))))))"
  },
  {
    "original_sentence": "What event do I have this next week with Barack Obama?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\")))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))"
  },
  {
    "original_sentence": "Okay. What co-worker events do I have?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"co-worker events\"))))"
  },
  {
    "original_sentence": "Can you show me just the co-worker sync events?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"co-worker sync\"))))"
  },
  {
    "original_sentence": "Ok. How about events labeled only sync?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Okay. I would like to create a new event with Barack Obama.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\"))))))))))"
  },
  {
    "original_sentence": "Yes, lets do the event on June 5th",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 5L (June))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I would like to modify the time for my dentist appointment",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Ok. Can I modify any events?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "What lunches do I have for the calendar?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunches\"))))"
  },
  {
    "original_sentence": "Okay. Can I make a new lunch event for Tuesday the 4th?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 4L))))))))"
  },
  {
    "original_sentence": "Yes, the one at 1:00pm",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "what is my chatID?",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Make a 7 day event with tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (Tomorrow) (toDays 7)))))"
  },
  {
    "original_sentence": "Looks so good thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, show me the rest of the week",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
  },
  {
    "original_sentence": "create a new event that will last this whole week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (ThisWeek)))))"
  },
  {
    "original_sentence": "I need that goes straight from this next Monday to Friday.",
    "parse": "(let (x0 (NextDOW (Monday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (DateAndConstraint x0 (nextDayOfWeek x0 (Friday))))))))"
  },
  {
    "original_sentence": "Mark meeting with Jeff Monday at 4pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeff\")))))))))))"
  },
  {
    "original_sentence": "That's fine. Cancel the Meeting with Dave before that",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Event.start (^(Dynamic) item x0)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dave\"))))))))))))))"
  },
  {
    "original_sentence": "Can you cancel all of my meetings from Monday to Friday?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "my love agree my lover",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Change weekend with the bro's to Sept. 1-3",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"weekend with the bro's\")))))) (& (Event.start_? (DateTime.date_? (?= (MD 1L (September))))) (Event.end_? (DateTime.date_? (?= (MD 3L (September)))))))))"
  },
  {
    "original_sentence": "Perfect!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cancel the All Day Orientation Session on the 2nd of September.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 2L (September)) (& (Event.subject_? (?~= \"Orientation Session\")) (Event.isAllDay_? (?= true)))))))))))"
  },
  {
    "original_sentence": "could you actually make my team lunch to start sometime tomorrow?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"team lunch\")))))) (EventSometimeOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "The first one is better. We need to move the team meeting to sometime on the 23rd.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"team meeting\")))))) (do (Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (EventSometimeOnDate (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 23L)) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "i need to move Dinner tomorrow sometime",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Dinner\")))))) (EventSometimeOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "When did I go on a date last month?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"date\")) (FullMonthofLastMonth)))))))"
  },
  {
    "original_sentence": "Did I go on a date last week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"date\")) (LastWeekNew))))) 0L))"
  },
  {
    "original_sentence": "cancel this movie",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (Event.subject_? (?~= \"movie\")))))))))"
  },
  {
    "original_sentence": "When did I got to the Dentist last?",
    "parse": "(Yield (Event.start (FindLastEvent (EventBeforeDateTime (Now) (Event.subject_? (?~= \"Dentist\"))))))"
  },
  {
    "original_sentence": "What did I do last Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "create football game on sunday at 3",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"football game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Yes, please schedule the game.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "No I've changed my mind, cancel that football game.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"football game\")))))))))"
  },
  {
    "original_sentence": "No, never mind, go ahead and keep that.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Schedule a Rugby Practice tomorrow at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Rugby Practice\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))))))"
  },
  {
    "original_sentence": "What do i have at the end of the day?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (EndOfWorkDay)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you schedule a meeting for 4 through end of day?",
    "parse": "(let (x0 (NextTime (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (EndOfWorkDay)))))))))"
  },
  {
    "original_sentence": "Confirm that this is what you're looking to do.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have anything at the end of the day on Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (EndOfWorkDay)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "do I have any appointment tomorrow after 3pm?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (Tomorrow) (^(Event) EmptyStructConstraint) (NumberPM 3L))))) 0L))"
  },
  {
    "original_sentence": "Add dinner and drinks with Amanda at 7:30 PM tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner and drinks\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 7L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amanda\")))))))))))"
  },
  {
    "original_sentence": "Make it 2 hours long and then we're good",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I would like to create a reminder for a day in March.",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "I would like to create a date in my calendar.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"date\")))))"
  },
  {
    "original_sentence": "Set up Quick Lunch for Thursday at 1 pm at Subway.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Quick Lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 1L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Subway\")))))))"
  },
  {
    "original_sentence": "its called fast food only quick lunch time to save office hours",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"fast food\")))))"
  },
  {
    "original_sentence": "change it to fat lunch",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"fat lunch\")))))"
  },
  {
    "original_sentence": "make end time at 2.00 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "That looks correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule breakfast tomorrow at the local Tim Horton's at 7am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"breakfast\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 7L))))) (Event.location_? (?= (LocationKeyphrase.apply \"the local Tim Horton's\")))))))"
  },
  {
    "original_sentence": "I want to make an event at Disney World next Saturday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))) (Event.location_? (?= (LocationKeyphrase.apply \"Disney World\")))))))"
  },
  {
    "original_sentence": "I need to schedule a dinner event this Wednesday with Austin at 9PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeFromDowConstraint (?= (Wednesday)) (NumberPM 9L))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Austin\")))))))))))"
  },
  {
    "original_sentence": "may 1 looks prefect fix that one",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 1L (May))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please , cancel the all appointments on May 1",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Can you cancel my meeting with Austin?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Austin\")))))))))))"
  },
  {
    "original_sentence": "Need to put a trip for Friday to Saturday put on calendar for convention.",
    "parse": "(let (x0 (NextDOW (Friday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"trip\")) (DateAndConstraint x0 (nextDayOfWeek x0 (Saturday))))))))"
  },
  {
    "original_sentence": "That is great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I will be gone for a Dental Convention all of next week.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"Dental Convention\")) (NextWeekList)))))"
  },
  {
    "original_sentence": "I'd like to add that.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Pumpkin Picking from Thursday until Monday.",
    "parse": "(let (x0 (NextDOW (Thursday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \"Pumpkin Picking\")) (DateAndConstraint x0 (nextDayOfWeek x0 (Monday))))))))"
  },
  {
    "original_sentence": "What time is my final exam?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"final exam\")))))))"
  },
  {
    "original_sentence": "Delete it",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes thats the right one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Kaww",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "Can you make an event for Thursday for dinner at 5pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "create event",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "april 8",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 8L (April))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "update",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "search event",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "delete",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you schedule a BBQ for the weekend?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"BBQ\")) (Event.start_? (DateTime.date_? (ThisWeekend)))))))"
  },
  {
    "original_sentence": "Can you change the date to not be on the weekend?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "The second one, and make a Dinner Date for Sunday at 7pm",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dinner Date\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 7L)))))))))"
  },
  {
    "original_sentence": "make it for not on the weekend",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "make a gymnastics session for Sunday at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"gymnastics session\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "I can't do that time, so let's change it to not be on the weekend",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Plan a dinner date that cannot be on the weekend.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend)))))))))"
  },
  {
    "original_sentence": "MM YES DINNER DATE IS 23. Now can you put me down for an oil change anytime that isnt on the weekend?",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.day_? (?= (Day.apply 23L))))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"oil change\")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))))"
  },
  {
    "original_sentence": "the top one. I also need a car check not on the weekend",
    "parse": "(do (Yield (Execute (ChooseCreateEvent (TopResult) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"car check\")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))))"
  },
  {
    "original_sentence": "Alright,just need to go over the timing. What's the last thing on the calendar for Friday?",
    "parse": "(Yield (FindLastEvent (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "And what's the first thing on my calendar Friday?",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) 1L))"
  },
  {
    "original_sentence": "Hello. Create a meeting with the HR.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"meeting with the HR\")))))"
  },
  {
    "original_sentence": "Yes the one on May 3rd.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 3L (May))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "That works out just fine",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you create an event for tomorrow at 6pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "No it does not look right to me",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Anything going on right now?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (Now) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Update the meeting with Jared's manager so it's 1pm today",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jared\")))))))))))) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Yes set that",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "when is my meeting with Dan's manager?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan\")))))))))))))"
  },
  {
    "original_sentence": "schedule a meeting with Jared's manager asap",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jared\")))))))))))"
  },
  {
    "original_sentence": "The second meeting works best.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What is the weather today",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "what is the weather tomorrow",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "is it going to rain?",
    "parse": "(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "what are the wind speeds",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (windSpeed) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "when is sunset",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunsetTime) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "when is sunrise",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunriseTime) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "what is the weather for this weekend?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeekend))))"
  },
  {
    "original_sentence": "Am I free on saturday?",
    "parse": "(Yield (IsFree (RecipientAvailability (& (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
  },
  {
    "original_sentence": "Go with the one at 1 pm",
    "parse": "(Yield (CreateCommitEventWrapper (Execute (refer (extensionConstraint (CreateCommitEvent.data_? (EventSpec.start_? (DateTime.time_? (?= (NumberPM 1L))))))))))"
  },
  {
    "original_sentence": "Yes please, also am i free next month",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (IsFree (RecipientAvailability (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth)))) true))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (CreateCommitEventWrapper (Execute (refer (extensionConstraint (^(CreateCommitEvent) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "yes, also am i free in December",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (FullMonthofMonth (December)))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (CreateCommitEventWrapper (Execute (refer (extensionConstraint (^(CreateCommitEvent) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "What's the next available timeslot to meet with the manager of Justin Bieber?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "ITS OK",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to meet with the manager Justin Bieber tomorrow sometime for 2 hours",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.duration_? (?= (toHours 2)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Justin Bieber\"))))))))))))"
  },
  {
    "original_sentence": "Create a meeting in the afternoon on Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Monday)))))))"
  },
  {
    "original_sentence": "second one is perfect",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have anything this eening?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Evening))))) 0L))"
  },
  {
    "original_sentence": "Yeah it's great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Is the chance of rain higher in Houston, London, or Paris?",
    "parse": "(FenceComparison)"
  },
  {
    "original_sentence": "Do I have any appointments at 2pm today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 2L)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Cancel it please.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a lunch with Jen for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jen\")))))))))))"
  },
  {
    "original_sentence": "Can you add an appointment with Jen at noon tomorrow?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jen\")))))))))))"
  },
  {
    "original_sentence": "When my meeting at Starbucks?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (?= (LocationKeyphrase.apply \"Starbucks\"))))))))"
  },
  {
    "original_sentence": "ok whats its time",
    "parse": "(Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "great! 5 is perfect",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have anything else scheduled for that day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "schedule mark meeting at 11",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"mark meeting\")) (Event.start_? (?= (NextTime (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "Delete work meeting December 28th 9am",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (MD 28L (December)) (NumberAM 9L)) (Event.subject_? (?~= \"work meeting\"))))))))))"
  },
  {
    "original_sentence": "Excellent, if there is nothing else on my calendar that day put me down for Out of Office.",
    "parse": "(FenceConditional)"
  },
  {
    "original_sentence": "Can you create an event for a meeting with Dave and Mike tomorrow at 12:30 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 12L 30L)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dave\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mike\"))))))))))))"
  },
  {
    "original_sentence": "Yes that is good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you please add Amy and Dan to this event",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan\")))))))))))"
  },
  {
    "original_sentence": "yes but make the meeting end at 2 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "I have confirmed it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule moms birthday on august 2020",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"moms birthday\")) (Event.start_? (DateTime.date_? (FullMonthofMonth (August) (Year.apply 2020L))))))))"
  },
  {
    "original_sentence": "Let's make it on August 3rd.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (MD 3L (August)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "The first one works great. Also can you make a Snow board event for February 2021.",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Snow board\")) (Event.start_? (DateTime.date_? (FullMonthofMonth (February) (Year.apply 2021L)))))))))"
  },
  {
    "original_sentence": "Schedule the event on Tuesday. Also, do I have any parties in April 2020?",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"parties\")) (FullMonthofMonth (April) (Year.apply 2020L))))))))"
  },
  {
    "original_sentence": "Could you make an Camping event in March 2021",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventDuringRange (Event.subject_? (?= \"Camping\")) (FullMonthofMonth (March) (Year.apply 2021L))))))"
  },
  {
    "original_sentence": "That looks good. Also while you're at it delete my snow board trip in feb 2021",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"snow board\")) (FullMonthofMonth (February) (Year.apply 2021L)))))))))))"
  },
  {
    "original_sentence": "What time is it here?",
    "parse": "(Yield (Now))"
  },
  {
    "original_sentence": "What time is my team meeting tomorrow morning?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (Event.subject_? (?~= \"team meeting\"))) (Morning)))))))"
  },
  {
    "original_sentence": "Can you make that an hour long?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Is there anything else scheduled for that day",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "what about the next day?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Please schedule a doctor appointment for next tuesday at 8am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Dinner for 2 tonight at 8.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dinner for 2\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "Add adam to the event.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"adam\"))))))))))"
  },
  {
    "original_sentence": "Create a dinner event this Saturday night.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTimeConstraint (Night) (NextDOW (Saturday))))))))"
  },
  {
    "original_sentence": "Actually can you give me options not on the weekend?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "yes, Friday works.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I would like to add Shoe Shining for Saturday please",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Shoe Shining\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))))))"
  },
  {
    "original_sentence": "Actually the weekend is not good so we need to change it.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Please add Saturday Family Dinner at 6:45 Pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Family Dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (HourMinutePm 6L 45L))))))))"
  },
  {
    "original_sentence": "Ya so this weekend is a no go so change it.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "I got invited to the celebration but I need you to decline it and tell them we are not friends no moe.",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"we are not friends no moe\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"the celebration\"))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Yes, then send another decline to Mary and tell her I can't make the meeting on Wednesday, I have a pot luck to go to.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I have a pot luck to go to\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (Event.organizer_? (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\"))))))))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "Yes agent, thank you for the speedy response. Also decline lunch on Friday and mention that I'm too popular that day.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I'm too popular that day\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"lunch\")))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "I want to schedule a meeting with Cher on Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher\")))))))))))"
  },
  {
    "original_sentence": "Second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "time is 1:30 PM",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "yes",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to remove an event for thursday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "how is my planner next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "Hi,can you give the information about the tourist place of CA?",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "its fine, Thankyou",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "No Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Thankyou",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you see if I have any appointments booked for next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "Make a dinner appointment with Thelma for 5:30 pm Thursday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinutePm 5L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Thelma\")))))))))))"
  },
  {
    "original_sentence": "Please put dinner appointment to go for 2 hours.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "At 7 pm schedule time for reading till 8 pm.",
    "parse": "(let (x0 (NextTime (NumberPM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"reading\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 8L)))))))))"
  },
  {
    "original_sentence": "What's the name of my performance review's organizer?",
    "parse": "(Yield (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"performance review\")))))))"
  },
  {
    "original_sentence": "Hello, can you help me with a reservation?",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Block out a time that I can medidate today but not too close to bedtime.",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "Schedule a meeting with Doug for tomorrow at 8pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 8L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Doug\")))))))))))"
  },
  {
    "original_sentence": "Yeah, but can you also add Fiona and Darby to it?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fiona\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Darby\")))))))))))"
  },
  {
    "original_sentence": "This looks good!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "yeah, thanks for your response",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Will Candace be at this meeting?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Candace\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "good",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Let's put down soccer practice after lunch tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"soccer practice\")) (Event.start_? (OnDateAfterTime (Tomorrow) (Lunch)))))))"
  },
  {
    "original_sentence": "Keep the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Do I have anything after that?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))) 0L)))"
  },
  {
    "original_sentence": "okay, thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I want to add Shop for Groceries an hour after Soccer Practice.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Shop for Groceries\")) (Event.start_? (?= (adjustByPeriodDuration (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Soccer Practice\")))))) (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "Can you add an 11am doctor's appointment for next Tuesday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "It looks great, thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "move Monday's 1 pm to 4 pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 1L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime x0 (^(Event) EmptyStructConstraint)))))) (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L)))))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "very very good.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What's the price of Taco's Jalisco in Truckee?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Taco's Jalisco in Truckee\"))))))"
  },
  {
    "original_sentence": "How do I contact them?",
    "parse": "(Yield (Place.phoneNumber (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Is Fool's Errand in Cambridge costly?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Fool's Errand in Cambridge\"))))))"
  },
  {
    "original_sentence": "Is Pinocchio's Pizza in Cambridge costly?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Pinocchio's Pizza in Cambridge\"))))))"
  },
  {
    "original_sentence": "whos on kim possibles team",
    "parse": "(Yield (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"kim\")))))))"
  },
  {
    "original_sentence": "please make meet with kim possible team on tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"kim possible\"))))))))))))"
  },
  {
    "original_sentence": "Let's schedule the first one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make the Meeting a hour long.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Great. Who is on Jesse's team?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\"))))))))"
  },
  {
    "original_sentence": "Where is my staff meeting?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"staff meeting\")))))))"
  },
  {
    "original_sentence": "Do I have anything else there?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))) 0L))"
  },
  {
    "original_sentence": "Where is my Racing event located?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Racing\")))))))"
  },
  {
    "original_sentence": "Do I have anything else at the Indy 500 Track.",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Indy 500 Track\"))))))) 0L))"
  },
  {
    "original_sentence": "When is my staff meeting in Tokyo?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"staff meeting\")) (Event.location_? (?= (LocationKeyphrase.apply \"Tokyo\")))))))))"
  },
  {
    "original_sentence": "Do I have any other events in Tokyo?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Tokyo\"))))))) 0L))"
  },
  {
    "original_sentence": "What's on my calendar for today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Cancel one please.",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Do I have lunch scheduled for today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"lunch\")))))) 0L))"
  },
  {
    "original_sentence": "Is my dinner with Amanda today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amanda\"))))))))) 0L))"
  },
  {
    "original_sentence": "Do I have a vocal lesson on Tuesday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"vocal lesson\")))))) 0L))"
  },
  {
    "original_sentence": "Reminder to call Dr.Shatner at 2:00 pm",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "why did not remider?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Create a meeting with Dr.Shatner on 2.00 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dr.Shatner\")))))))))))"
  },
  {
    "original_sentence": "Change the meeting end time to 3 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "cancel it please",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "How long is the sales training next Tuesday?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"sales training\"))))))))"
  },
  {
    "original_sentence": "How about the furniture sale?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"furniture sale\")))))"
  },
  {
    "original_sentence": "Okay, thanks. How long am I scheduled to volunteer for on Saturday?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"volunteer\"))))))))"
  },
  {
    "original_sentence": "That's the one. Can you change that to four hours for me?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 4))))))"
  },
  {
    "original_sentence": "Good. And also please change the duration for next week's volunteer work.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceSpecify))"
  },
  {
    "original_sentence": "I have a manager meeting on Tuesday at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"manager meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "That is perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "OK THANK YOU",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "thanks for your but i don't need your help on this time",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Hi, what time is the big game this weekend?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"big game\")) (ThisWeekend)))))))"
  },
  {
    "original_sentence": "I meant the football playoffs on Monday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Monday)) (Event.subject_? (?~= \"football playoffs\"))))))"
  },
  {
    "original_sentence": "When is the Patrick Mahomes game on the following week?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Patrick Mahomes game\")) (WeekOfDateNew (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toWeeks 1)))))))))"
  },
  {
    "original_sentence": "i meant the Happy Death Day in May",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.subject_? (?~= \"Happy Death Day\")) (FullMonthofMonth (May))))))"
  },
  {
    "original_sentence": "When is my picnic",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"picnic\")))))))"
  },
  {
    "original_sentence": "Can you find my Food Network Taping in June?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Food Network Taping\")) (FullMonthofMonth (June)))))))"
  },
  {
    "original_sentence": "cancel the meeting with James this Friday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\"))))))))))))"
  },
  {
    "original_sentence": "sounds good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you schedule me a meeting with Kori?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kori\"))))))))))"
  },
  {
    "original_sentence": "yes march 18th is perfect",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 18L (March))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you also put meeting with Milo at 9 on Friday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Milo\")))))))))))"
  },
  {
    "original_sentence": "Put me down for a meeting with abby tomorrow from noon until the end of the day",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (Noon))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (EndOfWorkDay))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"abby\"))))))))))))"
  },
  {
    "original_sentence": "change the time for meeting with abby at 1.00 pm - 6.00 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "nice",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "make that 9-10:30",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))))))"
  },
  {
    "original_sentence": "Yes, please. Also I will be Trying out for the San Francisco 49ers at the end of the day tomorrow.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Trying out for the San Francisco 49ers\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (EndOfWorkDay)))))))))"
  },
  {
    "original_sentence": "Could you make an Event on Friday from 10 am till the end of the work Day and Call it Happy fun time.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Happy fun time\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (EndOfWorkDay)))))))))"
  },
  {
    "original_sentence": "Can you setup a meeting with Kristen Clifford today at 1 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberAM 1L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kristen Clifford\")))))))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you extend meeting from 1-130 to 1-2?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Do I have any appointments tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Do I have any events Friday Nov 8?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 8L (November)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "ok!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have any appointments next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "what about in three weeks?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (WeekOfDateNew (adjustByPeriod (Today) (toWeeks 3)))))))"
  },
  {
    "original_sentence": "Please schedule a one hour meeting with Kayla from sales about the shipment tomorrow at 2 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"sales about the shipment\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kayla\")))))))))))"
  },
  {
    "original_sentence": "do I have anything going on in the winter time?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (SeasonWinter))))) 0L))"
  },
  {
    "original_sentence": "what about fall?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (SeasonFall)))))"
  },
  {
    "original_sentence": "Add a four hour event called golfing to my calendar on Sunday starting at 7 a.m.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"golfing\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 7L))))) (Event.duration_? (?= (toHours 4)))))))"
  },
  {
    "original_sentence": "Can you put horse riding lessons on the schedule for Sunday from 9:30 am to 10:30 am. It's at Woodhaven Stable.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Sunday)) (HourMinuteAm 9L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"horse riding lessons\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinuteAm 10L 30L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Woodhaven Stable\"))))))))"
  },
  {
    "original_sentence": "yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "add board meeting tomorrow morning at 8 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"board meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "is mary invited to my dinner party on friday?",
    "parse": "(Yield (allows (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"mary\"))) (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"dinner party\")))))))))"
  },
  {
    "original_sentence": "Forward it to her",
    "parse": "(Yield (ForwardEventWrapper (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Yes please",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create meeting with Mary",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\"))))))))))"
  },
  {
    "original_sentence": "The second one works great",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "set up a lunch date at the Darien Taco Bell tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch date\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.location_? (?= (LocationKeyphrase.apply \"Darien Taco Bell\")))))))"
  },
  {
    "original_sentence": "Set the 2nd one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "It's good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "no thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please schedule a meeting with Jason Jones tomorrow at 4:00 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jason Jones\")))))))))))"
  },
  {
    "original_sentence": "Add Tyler, Jackson, and Carrie to that.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tyler\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jackson\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carrie\")))))))))))"
  },
  {
    "original_sentence": "Yes, that will work.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What day am I meeting with Karen, Jim, Kyle and Kayla?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kyle\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kayla\"))))))))))"
  },
  {
    "original_sentence": "Move the Meeting with Karen, Jim, Kyle and Kayla to Friday at 2:00 pm.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kyle\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kayla\"))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "is this what you want to me team?",
    "parse": "(Yield (FindTeamOf (toRecipient (CurrentUser))))"
  },
  {
    "original_sentence": "Delete my meeting with my team tomorrow",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser))))))))))))"
  },
  {
    "original_sentence": "I meant the meeting with David Lax's team",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (alwaysTrueConstraintConstraint (^((List Attendee)) AlwaysTrueConstraint))) (intension (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David Lax\")))))))))))"
  },
  {
    "original_sentence": "Yes cancel this meeting instead.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you cancel the work lunch with Kim after this?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (& (Event.subject_? (?~= \"work lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))) (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))))"
  },
  {
    "original_sentence": "I need to add a board meeting next thursday at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"board meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Yea, looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Show me my calendar for this weekend",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "buy a cat for my daughter next week",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Please add a calendar item called shop for a cat, for next Tuesday at 1:00.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"shop for a cat\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "What is the website for moody's in waltham?",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"moody's in waltham\"))))))"
  },
  {
    "original_sentence": "What is the website for Fogo de Chao in Cupertino?",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Fogo de Chao in Cupertino\"))))))"
  },
  {
    "original_sentence": "Flavors of India in Reno. Website?",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Flavors of India in Reno\"))))))"
  },
  {
    "original_sentence": "when is national sibling's day",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "Can I count on a snowday tomorrow in Boston?",
    "parse": "(Yield (WillSnow (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Boston\"))) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "why can not you help me?",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Is it going to snow in Boston tomorrow?",
    "parse": "(Yield (WillSnow (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Boston\"))) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "What's the weather suppose to be like for Boston?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Boston\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "Will there be good weather in New York any time next week?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"New York\"))) (DateTime.date_? (NextWeekList))))"
  },
  {
    "original_sentence": "What is the current weather?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (?= (Now))))"
  },
  {
    "original_sentence": "what is the weather look like over the weekend",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeekend))))"
  },
  {
    "original_sentence": "when is percipitation most likely over the weekend",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "what will be the low over the weekend",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeekend)))))"
  },
  {
    "original_sentence": "what day will be the coldest day in the next week",
    "parse": "(Yield (WhenProperty (temperature) (WeatherQuantifier.Min) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (NextWeekList)))))"
  },
  {
    "original_sentence": "what is the current pressure?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (pressure) (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))"
  },
  {
    "original_sentence": "explain relative humidity",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "what is the relative humidity",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "how far are you able to predict the weather?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "when are we likely to get snow?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "what does the weather looklike for the next month",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "hi, i want a free day tomorrow, cancel all my commitment",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "What time is my event tomorrow",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "No, that's no good, cross it off.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "No don't cancel that just yet. Can you move it to 4 PM?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "No make it last 2 hours please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "set dinner meeting tomorrow at 8 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "Dinner will be about 2 hours",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "show me as busy until tomorrow at 2pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (Now))) (Event.end_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))"
  },
  {
    "original_sentence": "Remove Adam from my next week's vacation",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"vacation\")) (NextWeekList)))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Adam\")))))))))))"
  },
  {
    "original_sentence": "Yes but I also need Jessica to be uninvite from Vacation.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jessica\")))))))))))"
  },
  {
    "original_sentence": "Please uninvite everyone except me from Vacation.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Vacation\")))))) (Event.attendees_? (^((List Attendee)) AlwaysFalseConstraint)))))"
  },
  {
    "original_sentence": "It looks correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Set a meeting on 12:40 PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (HourMinutePm 12L 40L)))))))"
  },
  {
    "original_sentence": "hey bot!",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "what up with this weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "The next?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "do I have anything happening now?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (Now) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Add my team to a event tomorrow at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "make that end at 5 pm instead",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "Who is Abby's manager?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))"
  },
  {
    "original_sentence": "That works perfectly",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make another meeting with just Abby and Jesse, no Dan",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\")))))))))))"
  },
  {
    "original_sentence": "Hold up a minute.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "The first one works best",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you see if you can uninvite Amy and Ben from this week's meeting?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ben\"))))))))))))"
  },
  {
    "original_sentence": "Remove Laura from the list of attendees for the event.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Laura\")))))))))))"
  },
  {
    "original_sentence": "I would like you to remove Laura from the Talk on May 3.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 3L (May)) (Event.subject_? (?~= \"Talk\"))))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Laura\")))))))))))"
  },
  {
    "original_sentence": "i told you to remove laura from the talk. check it again.",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "Find me a meeting event.",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Can you please create an event for me?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Make an event on Friday at 8 pm called Sam's Party.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Sam's Party\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "Make an all day meeting with my team",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.isAllDay_? (?= true)) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Friday would work great.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What is my next all day event",
    "parse": "(Yield (FindNumNextEvent (Event.isAllDay_? (?= true)) 1L))"
  },
  {
    "original_sentence": "Can you extend that to Saturday?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.end_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Saturday)))))))))"
  },
  {
    "original_sentence": "Looks fantastic",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Not sure if I have a meeting.",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Can you schedule a meeting with my boss two Tuesdays from today at 3:00 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (nextDayOfWeek (NextDOW (Tuesday)) (Tuesday))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Will Frank be attending the rodeo next Saturday?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.location_? (?= (LocationKeyphrase.apply \"rodeo\"))))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Frank\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Can Nick make the basktetball game on saturday?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"basktetball game\")))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nick\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Will Kim be at our honeymoon?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"honeymoon\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "fantastic! is frank attending the rodeo",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"rodeo\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"frank\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Well done! can nick attend the rodeo",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"nick\"))))))))))"
  },
  {
    "original_sentence": "what is my 3rd event tomorrow?",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) 3L))"
  },
  {
    "original_sentence": "When is my 3rd event tomorrow?",
    "parse": "(Yield (Event.start (FindNumNextEvent (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) 3L)))"
  },
  {
    "original_sentence": "where is my 3 Event at",
    "parse": "(Yield (Event.location (FindNumNextEvent (^(Event) EmptyStructConstraint) 3L)))"
  },
  {
    "original_sentence": "I need to meet with Calvin around 4 pm Wednesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (TimeAround (NumberPM 4L)) (NextDOW (Wednesday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Calvin\")))))))))))"
  },
  {
    "original_sentence": "Please schedule the first choice, agent. I appreciate it. Also, set up a Job Interview with Nancy on next Monday at around 10 am.",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Job Interview\")) (Event.start_? (DateTimeConstraint (TimeAround (NumberAM 10L)) (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nancy\"))))))))))))"
  },
  {
    "original_sentence": "Hmm can you make it start around 11 am?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (TimeAround (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "When and what time is Liam's birthday party?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Liam's birthday party\")))))))"
  },
  {
    "original_sentence": "Schedule a dinner with Amanda at 8:00 PM on Saturday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amanda\")))))))))))"
  },
  {
    "original_sentence": "Create a luncheon for Sunday from 2 to 3 pm with Jennie's family.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "On what day was my birthday last year?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "Last year, when did I have a pizza party with Tina?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (& (Event.subject_? (?~= \"pizza party\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tina\")))))))))))"
  },
  {
    "original_sentence": "Was there a pizza party with Matt last year?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"pizza party\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Matt\"))))) (FullYearofYear (LastYear)))))) 0L))"
  },
  {
    "original_sentence": "Can you create an event called celebration festivities on Saturday from 7 to 10 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"celebration festivities\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 10L)))))))))"
  },
  {
    "original_sentence": "Tell me what events I have planned on Sunday.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Sunday I am going to be having a breakfast at 11 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"breakfast\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "What time is my meeting tomorrow AM?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "my meeting tomorrow AM",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Schedule public relations meeting at 3pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"public relations meeting\")) (Event.start_? (?= (NextTime (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Good, and can you also tell me when my next meeting with HR is this week?",
    "parse": "(Yield (FindNumNextEvent (& (Event.subject_? (?~= \"Meeting with HR\")) (Event.start_? (DateTime.date_? (ThisWeek)))) 1L))"
  },
  {
    "original_sentence": "add an additional 30 minutes to that meeting",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toMinutes 30))))))))"
  },
  {
    "original_sentence": "When is my last day of ballet?",
    "parse": "(Yield (Event.start (FindLastEvent (Event.subject_? (?~= \"ballet\")))))"
  },
  {
    "original_sentence": "that looks good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "that will be all for now thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When is my last suit fitting for the conference?",
    "parse": "(Yield (Event.start (FindLastEvent (Event.subject_? (?~= \"suit fitting for the conference\")))))"
  },
  {
    "original_sentence": "change the suit fitting for the conference at 11.30 am - 12.00 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"suit fitting for the conference\")))))) (& (Event.start_? (DateTime.time_? (?= (HourMinuteAm 11L 30L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "Accept the labbing invite and say Snake is difficult",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"Snake is difficult\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"labbing\"))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "It's ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please accept the Oscars Afterparty.",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Oscars Afterparty\"))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Yes, please. Also accept the Celebrity Party please.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Celebrity Party\"))))) :response (ResponseStatusType.Accepted))))"
  },
  {
    "original_sentence": "Create an event called \"Dentist Appointment\" for December 18th at 2:00 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dentist Appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 18L (December)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "What else is scheduled on the 18th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (previousDayOfMonth (Today) 18L) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you add dinner with family at 5 pm on that day.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner with family\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "What time is the club opening?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Make an event for hanging out with co-workers from 6-8pm tomorrow",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"hanging out\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 8L))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser))))))))))"
  },
  {
    "original_sentence": "Make an event for meetup at bar from 6-8pm tomorrow",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"meetup\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 8L))))) (Event.location_? (?= (LocationKeyphrase.apply \"bar\"))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to get groceries on Saturday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"get groceries\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))))))"
  },
  {
    "original_sentence": "no schedule it for a day not on the weekend",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Schedule some me time this weekend.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"me time\")) (Event.start_? (DateTime.date_? (ThisWeekend)))))))"
  },
  {
    "original_sentence": "I actually need that to not be on the weekend",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "yes of course good. I also need a staff meeting on Sunday morning",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"staff meeting\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Sunday)))))))))"
  },
  {
    "original_sentence": "actually not on the weekend",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (negate (ThisWeekend)))))))"
  },
  {
    "original_sentence": "create a camp meeting event tonight",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"camp meeting\")) (Event.start_? (DateTimeConstraint (Night) (Today)))))))"
  },
  {
    "original_sentence": "make it between 8 pm and 11pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 11L))))))))"
  },
  {
    "original_sentence": "create a camp meeting event between 8 pm and 11pm",
    "parse": "(let (x0 (NextTime (NumberPM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"camp meeting\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 11L)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "tank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "no thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "change Listen to podcast to not be on the weekend",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Listen to podcast\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "The second one is good.",
    "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Move my event for buying a new cell phone to be sometime not on the weekend",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"buying a new cell phone\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "OK, thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Move clothes shopping to not the weekend",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"clothes shopping\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "WE NEED A CAB TO REACH BEACH",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "why not",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Please add a lunch date for the current time tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (DateTime.time (Now)))))))))"
  },
  {
    "original_sentence": "yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change the time to 8pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "Change the time to 9pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberPM 9L)))))))"
  },
  {
    "original_sentence": "Yes, perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have anything planned for this Thursday at noon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Thursday)) (Noon)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "When was Thanksgiving last year?",
    "parse": "(Yield (HolidayYear (Holiday.Thanksgiving) (LastYear)))"
  },
  {
    "original_sentence": "When was the birthday celebration last year?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"birthday celebration\")) (FullYearofYear (LastYear))))))))"
  },
  {
    "original_sentence": "Remove lunch with Dad for next week.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Do I have lunch with dad scheduled?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "When is my next thing with Jerry and his team",
    "parse": "(let (x0 (PersonName.apply \"Jerry\")) (Yield (Event.start (FindNumNextEvent (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))) 1L))))"
  },
  {
    "original_sentence": "cancel my demonstration with Kim and her supervisor today",
    "parse": "(let (x0 (PersonName.apply \"Kim\")) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (& (Event.subject_? (?~= \"demonstration\")) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))))))))))))))))"
  },
  {
    "original_sentence": "Yea get rid of it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Perfect, thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "no good work thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to schedule a three hour meeting this afternoon with Susie.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.duration_? (?= (toHours 3))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Susie\")))))))))))"
  },
  {
    "original_sentence": "is Charlie Palmer Steak House in Reno casual?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Charlie Palmer Steak House in Reno\"))))))"
  },
  {
    "original_sentence": "Is the Nine-O in Bellevue casual?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Nine-O in Bellevue\"))))))"
  },
  {
    "original_sentence": "Is the Twisted Fork in Reno a casual dress restaurant?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Casual) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Twisted Fork in Reno\"))))))"
  },
  {
    "original_sentence": "Search my calendar for any doctor's appointments for May 2019.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctor's appointment\")) (FullMonthofMonth (May)))))"
  },
  {
    "original_sentence": "I want to make a meeting on Friday with Mark at 1 pm to 5 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\"))))))))))))"
  },
  {
    "original_sentence": "Going to Japan tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Going to Japan\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "Actually, I need to schedule it for a little bit later in the day.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "2:30 ones",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (HourMinutePm 2L 30L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Add \"Eat some Za\" to tomorrow at 6 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Eat some Za\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "laats groot",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule Eating Sushi for tomorrow at 3 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Eating Sushi\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "asfp rake",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make an appointment with john tonight at 7pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 7L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"john\")))))))))))"
  },
  {
    "original_sentence": "Can you schedule the meeting with Alex on tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex\")))))))))))"
  },
  {
    "original_sentence": "The bottom one works for me thanks. Can you do something else for me?",
    "parse": "(do (Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint))))) (PleasantryCalendar))"
  },
  {
    "original_sentence": "Thank you. Set up meeting with Alice for Tuesday at 9",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alice\")))))))))))"
  },
  {
    "original_sentence": "absolutely",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you add Alex to the meeting with Alice?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alice\")))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex\"))))))))))"
  },
  {
    "original_sentence": "I need to get the kids to school this morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"get the kids to school\")) (Event.start_? (DateTimeConstraint (Morning) (Today)))))))"
  },
  {
    "original_sentence": "The first one will be good.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I guess I need to add pick them up this afternoon too!",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pick them up\")) (Event.start_? (DateTimeConstraint (Afternoon) (Today)))))))"
  },
  {
    "original_sentence": "The second one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Nicole is no longer with the company, uninvite her from all events.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "remove Nicole from my meeting tomorrow",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nicole\")))))))))))"
  },
  {
    "original_sentence": "Find my next lunch date with rebecca that doesn't include mom",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Ok, find my next lunch date that doesn't include Lori.",
    "parse": "(Yield (FindNumNextEvent (& (Event.subject_? (?~= \"lunch date\")) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lori\"))))))))) 1L))"
  },
  {
    "original_sentence": "Find events without Karen please.",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\"))))))))))"
  },
  {
    "original_sentence": "Please schedule a meeting with Joe Smith at 5pm tomorrow for campaign planning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"campaign planning\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joe Smith\")))))))))))"
  },
  {
    "original_sentence": "That looks great, thank you!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "schedule a team meeting to discuss shift bids Friday morning sometime between 9 am and 11 am",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 9L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team meeting to discuss shift bids\")) (Event.start_? (DateTimeAndConstraint x0 (TimeAfterDateTime x0 (NumberAM 11L)))))))))"
  },
  {
    "original_sentence": "I think the first one will work best for me.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "After my team meeting to discuss shift bids, I need to go out for drinks with Bill, Ted, and My wife Becky at the local pub on 5th at 12.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"go out for drinks\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 5L) (NumberPM 12L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bill\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ted\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Becky\"))))))))))))"
  },
  {
    "original_sentence": "Has pam scheduled with me this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"pam\")))) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Do I have any meetings this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Do I have any doctors appointments this month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctors appointments\")) (FullMonthofMonth (Date.month (Today))))))) 0L))"
  },
  {
    "original_sentence": "how about next month?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))))))"
  },
  {
    "original_sentence": "Do I have anything with Terry on Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Terry\")))))))) 0L))"
  },
  {
    "original_sentence": "How long has it been since my last dentist appointment? And my last doctor's appointment?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "When was my last dentist appointment",
    "parse": "(Yield (Event.start (FindLastEvent (EventBeforeDateTime (Now) (Event.subject_? (?~= \"dentist appointment\"))))))"
  },
  {
    "original_sentence": "What about my doctor's appointment?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"doctor's appointment\")))))"
  },
  {
    "original_sentence": "what about optometrist?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"optometrist\")))))"
  },
  {
    "original_sentence": "when is my next dermatology appointment?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"dermatology appointment\")) 1L)))"
  },
  {
    "original_sentence": "What am I doing on 2/1/2019 at 3 PM?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (MDY 1L (toMonth 2L) (Year.apply 2019L)) (NumberPM 3L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Schedule weight lifting for tomorrow morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"weight lifting\")) (Event.start_? (DateTimeConstraint (Morning) (Tomorrow)))))))"
  },
  {
    "original_sentence": "When is my meeting with Joe?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joe\")))))))))"
  },
  {
    "original_sentence": "When is my dinner with Nancy?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nancy\"))))))))))"
  },
  {
    "original_sentence": "Add a doctor appointment to my schedule on Saturday at 5 pm for 3 hours",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"doctor appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 5L))))) (Event.duration_? (?= (toHours 3)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Sorry, can you change the duration to 4 hours?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 4))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please set up a lunch meeting at Milano's for Friday at 12pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 12L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Milano's\")))))))"
  },
  {
    "original_sentence": "Can you set up a meeting with Sam next Tuesday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\")))))))))))"
  },
  {
    "original_sentence": "Sorry mistake. Set up a meeting with Fiona Mason next Tuesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fiona Mason\")))))))))))"
  },
  {
    "original_sentence": "No. I need it to be after 2:30.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (HourMinutePm 2L 30L)))))))"
  },
  {
    "original_sentence": "Yes the first one and thank you!",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "That is great!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Thanks for all your help.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please book a meeting for tomorrow with Sarah's manager.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\"))))))))))))"
  },
  {
    "original_sentence": "Please use the bottom one.",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "no thanks i will remind you later",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "When is my Brainstorming meeting with my boss?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Brainstorming meeting\")) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))))"
  },
  {
    "original_sentence": "Can you change my meeting to an hour earlier.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (?= (PeriodDurationBeforeDateTime (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply :duration (toHours 1))))))))"
  },
  {
    "original_sentence": "what is the exact date and time of my doctor appointment?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor appointment\")))))))"
  },
  {
    "original_sentence": "When is my dentist appointment scheduled>",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\")))))))"
  },
  {
    "original_sentence": "How about orthodontist appointments?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"orthodontist appointments\")))))"
  },
  {
    "original_sentence": "And the next one?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "IS there a lunch schedule after the dentist?",
    "parse": "(let (x0 (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist\"))))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (Event.subject_? (?~= \"lunch\")) (DateTime.time x0))))) 0L)))"
  },
  {
    "original_sentence": "When is the event \"Interview with @twitterhandle\" happening again?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Interview with @twitterhandle\")))))))"
  },
  {
    "original_sentence": "What about the Ben & Jerry's Ice Cream?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"Ben & Jerry's Ice Cream\")))))"
  },
  {
    "original_sentence": "The #Pool#Party is tomorrow at 5 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"#Pool#Party\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Please accept my sales meeting and say that I'm gonna make a big sale",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I'm gonna make a big sale\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"sales meeting\"))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Yes i will accept. Now I need you to accept my rage day and say I'm bringing Mountain Dew",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I'm bringing Mountain Dew\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"rage day\"))))) :response (ResponseStatusType.Accepted))))"
  },
  {
    "original_sentence": "Yes, that's good. Accept my Trip to the Library and tell the organizer that I have a lot of books to return.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I have a lot of books to return.\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Trip to the Library\"))))) :response (ResponseStatusType.Accepted))))"
  },
  {
    "original_sentence": "Update my 9 am meeting to include Jan on Friday.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 9L)) (^(Event) EmptyStructConstraint)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jan\"))))))))))"
  },
  {
    "original_sentence": "Correct",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "NO",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have anything at 1 today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 1L)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Move that event to this saturday",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))))))"
  },
  {
    "original_sentence": "Can you please schedule a luncheon tomorrow with Bob.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"luncheon\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))))))))"
  },
  {
    "original_sentence": "Yes, 1:00 pm works for the luncheon",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you also schedule a two hour Press Conference on the 17th sometime after 2 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Press Conference\")) (Event.start_? (OnDateAfterTime (nextDayOfMonth (Today) 17L) (NumberPM 2L)))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "The first one please",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I'd also like to schedule a two hour Luncheon at the Hilton to discuss Summer Plan's with the Sales Team at 12:00 pm next Thursday.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "delete tomorrow's first event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (List.apply (take (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))) 1L) 0L)))))"
  },
  {
    "original_sentence": "Is there anything else there tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Schedule a meeting at 2 pm for work.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"work\")) (Event.start_? (?= (NextTime (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "reject sara barr's conference invitation",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"conference\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"sara barr\")))))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Great thank y ou very much.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you tell me the weather for this date?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Can you delete any conference meeting this week?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"conference meeting\")) (ThisWeek)))))))))"
  },
  {
    "original_sentence": "What day is halloween on",
    "parse": "(Yield (NextHolidayFromToday (Holiday.Halloween)))"
  },
  {
    "original_sentence": "put the the meeting with john",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"john\"))))))))))"
  },
  {
    "original_sentence": "The first one works better",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thank you very much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When is Memorial Day in 2025?",
    "parse": "(Yield (HolidayYear (Holiday.MemorialDay) (Year.apply 2025L)))"
  },
  {
    "original_sentence": "Find out date night restaurants",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "What will the weather be like in San Francisco during the 5th of September?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"San Francisco\"))) (DateTime.date_? (?= (MD 5L (September))))))"
  },
  {
    "original_sentence": "Will it be the same on the 6th?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(Date) roleConstraint (Path.apply \"time\")) (extensionConstraint (^(Date) EmptyStructConstraint))) (intension (nextDayOfMonth (Today) 6L)))))"
  },
  {
    "original_sentence": "Will there be any rain on the 6th?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (nextDayOfMonth (Today) 6L))))))"
  },
  {
    "original_sentence": "Tell me what I have set up for Friday afternoon?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) (Afternoon))))"
  },
  {
    "original_sentence": "Please add Kim to the appointment.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))))"
  },
  {
    "original_sentence": "Sweet",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Perfect, thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make a appointment for tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Create weekly reminder for meeting with boss.",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "Remind me to follow-up with my son's teacher on Monday.",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Schedule lunch with my parents tomorrow",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I AM FINE",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I want to go swimming tomorrow afternoon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go swimming\")) (Event.start_? (DateTimeConstraint (Afternoon) (Tomorrow)))))))"
  },
  {
    "original_sentence": "nevermind, don't do it",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Make me a new event tomorrow called \"I Suck at Naming Things\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"I Suck at Naming Things\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "second",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "make me an event at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Wait a minute please",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "yes it is good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Perfect! Thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you move my end of work day meeting to tomorrow at end of work day?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (EndOfWorkDay)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (EndOfWorkDay)))))))"
  },
  {
    "original_sentence": "Great! Can you also set up a meeting with Jake for Friday at noon through the end of day?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (Noon))) (do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (EndOfWorkDay))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))))))))))))"
  },
  {
    "original_sentence": "That looks good! Delete the Training Session I have with Elli on Monday at the end of the day please.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Monday)) (EndOfWorkDay)) (& (Event.subject_? (?~= \"Training Session\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\"))))))))))))))"
  },
  {
    "original_sentence": "Make an event for Friday through sunday",
    "parse": "(let (x0 (NextDOW (Friday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (DateAndConstraint x0 (nextDayOfWeek x0 (Sunday))))))))"
  },
  {
    "original_sentence": "Call it a business trip to see the big client.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"business trip to see the big client\")))))"
  },
  {
    "original_sentence": "Perfect. Make an all day event the day after called Meetings",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"Meetings\")) (adjustByPeriod (DateTime.date (Event.start (^(Dynamic) item x0))) (toDays 1))))))))"
  },
  {
    "original_sentence": "Yeah, okay. I'm not going to be in the office all of Monday.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (NextDOW (Monday)))))))"
  },
  {
    "original_sentence": "please can you make another all day event tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (^(Event) EmptyStructConstraint) (NextDOW (Tuesday))))))"
  },
  {
    "original_sentence": "Get Sue on the phone please.",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Add to the calendar a party planning meeting with Jan tomorrow evening.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"party planning meeting\")) (Event.start_? (DateTimeConstraint (Evening) (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jan\")))))))))))"
  },
  {
    "original_sentence": "The 2nd one works great",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you add shopping with Sue after party planning?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"shopping\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sue\")))))))))))"
  },
  {
    "original_sentence": "This looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add a dinner with Fiona Mason on 9/11",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTime.date_? (?= (MD 11L (toMonth 9L)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fiona Mason\")))))))))))"
  },
  {
    "original_sentence": "No, 7 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "search for all meetings",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Add a lunch at noon today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (Noon))))))))"
  },
  {
    "original_sentence": "No",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "its already 7 pm",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "no",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I have a beef eaters anonymous meeting tonight",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"beef eaters anonymous meeting\")) (Event.start_? (DateTimeConstraint (Night) (Today)))))))"
  },
  {
    "original_sentence": "Set reminder to cancel car insurance for the last day of this month at 5 and set reminder the next day at half 5 to set up standing order with new insurance company.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "add dinner date on Friday at 7 and movies at 9 and Saturday yard work at 10 am.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Add a meeting at 1 pm with Mark.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))))))))))"
  },
  {
    "original_sentence": "I have a birthday party for Rachel on Saturday from 6pm to 11pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 6L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"birthday party for Rachel\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 11L)))))))))"
  },
  {
    "original_sentence": "Yup",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please book the pep rally at WKHS on Saturday, April 27th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"pep rally\")) (Event.start_? (DateTime.date_? (?= (MD 27L (April)))))) (Event.location_? (?= (LocationKeyphrase.apply \"WKHS\")))))))"
  },
  {
    "original_sentence": "The second one would be nice.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Also Book a Meeting with Angela and Jonas on Thursday at 11:45am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinuteAm 11L 45L)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Angela\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jonas\"))))))))))))"
  },
  {
    "original_sentence": "That looks great, can you book lunch after too?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (Event.end (^(Dynamic) item x0))))))))))"
  },
  {
    "original_sentence": "I'd like to book the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I don't have to go to my meeting tomorrow so I want to delete the event.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "What do you show on my schedule for Thursday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Book a 2 hour meeting with Lori and Kim on Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))) (Event.duration_? (?= (toHours 2)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lori\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))))))"
  },
  {
    "original_sentence": "1-3 is good",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "yeah!great.thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to meet with Joanne tomorrow after lunch but before 3 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (Lunch))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeAndConstraint x0 (TimeAfterDateTime x0 (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joanne\"))))))))))))"
  },
  {
    "original_sentence": "The 2nd one works.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Hey make a meeting with my team but exclude Kim.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))))))"
  },
  {
    "original_sentence": "Set another meeting with my team tomorrow afternoon and include Bill Jeffcoat.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Afternoon) (Tomorrow))) (Event.attendees_? (& (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bill Jeffcoat\"))))))))))))"
  },
  {
    "original_sentence": "Go with number two. but remove Abby from it.",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))))))))"
  },
  {
    "original_sentence": "Set up Paddleboarding at Lady Bird Lake on Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Paddleboarding\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.location_? (?= (LocationKeyphrase.apply \"Lady Bird Lake\")))))))"
  },
  {
    "original_sentence": "change the paddleboarding timing to start at 2 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "yes, looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Now, how will the weather be while I am paddleboarding?",
    "parse": "(Yield (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "when is my next event",
    "parse": "(Yield (Event.start (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))"
  },
  {
    "original_sentence": "Will it rain that day?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Can you swap my 3:00 and my 4:00 meeting?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Please make a meeting with Jen on Sunday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jen\")))))))))))"
  },
  {
    "original_sentence": "those times won't work.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "the bottom one is ok. fix it.",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Yes it seems fine",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "when do I see Destin?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Destin\")))))))))"
  },
  {
    "original_sentence": "Do you see any meetings the rest of this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "oh well ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "How long is the planning committee meeting this week?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"planning committee meeting\")) (ThisWeek)))))))"
  },
  {
    "original_sentence": "And tomorrow? Is there one?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "How many events do I have with Beth over the next month?",
    "parse": "(let (x0 (Today)) (Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Beth\")))) (DateAndConstraint x0 (adjustByPeriod x0 (toMonths 1)))))))))"
  },
  {
    "original_sentence": "Decline my monday meeting and say that I won't be in the office that day",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I won't be in the office that day\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Perfect. Now decline the invite to go to Europe and say that I will be in China curing corona",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I will be in china curing corona\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"go to Europe\"))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "Decline my invitation to the NFL Draft and say I'm going to play one more year at Nevada!",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I'm going to play one more year at Nevada!\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"NFL Draft\"))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Make me a meeting with Jennifer, her boss, Elli, and his boss",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer\"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1)))))))))"
  },
  {
    "original_sentence": "Please set up a meeting next week with the following people: Mary, her boss, James and his boss",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mary\"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1))))))))))"
  },
  {
    "original_sentence": "Will I be having dinner with Hans, his boss , Fenny and her boss anytime this week?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Hans\"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fenny\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTime.date_? (ThisWeek)))) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1))))))))))"
  },
  {
    "original_sentence": "Would you schedule a painting project for Monday of next week around 4 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"painting project\")) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (DowOfWeekNew (Monday) (NextWeekList)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "either one, i also need a Pool Day on Sunday around 11 am",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Pool Day\")) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 11L)))))))))"
  },
  {
    "original_sentence": "ok!",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you make me a meeting around 7 next thursday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "which year does our Mturk contract ends?",
    "parse": "(Yield (Date.year (DateTime.date (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Mturk contract\")))))))))"
  },
  {
    "original_sentence": "Can we put \"renewal of mturk contract\" on for January 12 2022",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"renewal of mturk contract\")) (Event.start_? (DateTime.date_? (?= (MDY 12L (January) (Year.apply 2022L)))))))))"
  },
  {
    "original_sentence": "The first one is good.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have any other events January 12th 2022?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (MDY 12L (January) (Year.apply 2022L)) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "Who accepted going to the mall ?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"going to the mall\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Who has declined the invite to go bowling?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"go bowling\")))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Who has declined the invite to go to the chiropractor",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"go to the chiropractor\")))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "What day is Carlos' birthday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Carlos' birthday\")))))))"
  },
  {
    "original_sentence": "Can you delete my meetings and appointments on Friday?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Add an appointment pleaae",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "I want to add an appointment at 1 pm tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Change the date for Raul's meeting to 17th",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Raul\")))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 17L)))))))))"
  },
  {
    "original_sentence": "Looks great!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "cancel the lunch meeting before the meeting with Raul",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Raul\")))))))) (Event.subject_? (?~= \"lunch meeting\"))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you schedule Pick up Alex from Daycare in that time slot instead?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Pick up Alex from Daycare\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Execute (refer (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "When is the appointment that I scheduled with Kim?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))))"
  },
  {
    "original_sentence": "alright thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "when is the appointment that I scheduled with Jesse?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\")))))))))"
  },
  {
    "original_sentence": "Do I have any other appointments on Friday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "Do I have any other appointments on Thursday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "Please schedule a dentist appointment for Friday at 9 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "Change the duration to one hour, and set the location to 555 Main Street, Jacksboro, TN.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.duration_? (?= (toHours 1))) (Event.location_? (?= (LocationKeyphrase.apply \"555 Main Street, Jacksboro, TN\")))))))"
  },
  {
    "original_sentence": "Could you also schedule a teacher's meeting at 3 PM on Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"teacher's meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Make that a 2-hour meeting",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Does Black Cock Brewery in Rosewell have a website?",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Black Cock Brewery in Rosewell\"))))))"
  },
  {
    "original_sentence": "Is there a website for Lampost Pizza in Reno?",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Lampost Pizza in Reno\"))))))"
  },
  {
    "original_sentence": "I'm looking for the Website for Big Water Grille in Incline Village",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Big Water Grille in Incline Village\"))))))"
  },
  {
    "original_sentence": "Remind me to call dad at 0400",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"call dad\")) (Event.start_? (?= (NextTime (HourMinuteMilitary 4L 0L))))))))"
  },
  {
    "original_sentence": "Input on my calendar \"call Dad at 0400\".",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"call Dad at 0400\")))))"
  },
  {
    "original_sentence": "The 2nd one is good for me.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Call Dad at 04:00",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Switch call Dad to 13.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"call Dad\")))))) (Event.start_? (DateTime.time_? (?= (HourMilitary 13L)))))))"
  },
  {
    "original_sentence": "when is my next meeting with Ben's Manager",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ben\")))))))) 1L)))"
  },
  {
    "original_sentence": "Okay",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What about my next meeting with Jack's manager?",
    "parse": "(Yield (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jack\")))))))) 1L))"
  },
  {
    "original_sentence": "when is my meeting with Tim's manager?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\")))))))))))))"
  },
  {
    "original_sentence": "Yes, that is the meeting. Thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Is there a reason why you cancelled all my appointments?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "I just need to know why all my appointments are gone.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to schedule lunch with Paige Ashworth",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\")))))))))))"
  },
  {
    "original_sentence": "Wednesday at 1:00pm",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTimeFromDowConstraint (?= (Wednesday)) (NumberPM 1L))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Schedule doctor's appointment with Jeong",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeong\")))))))))))"
  },
  {
    "original_sentence": "jeong ho-kim",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jeong ho-kim\")))))))"
  },
  {
    "original_sentence": "Co-worker sync with Jerri",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Co-worker sync\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jerri\")))))))))))"
  },
  {
    "original_sentence": "Will it rain in San Antonio today?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"San Antonio\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "When will it rain next in San Antonio?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "what are my events next month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth)))))"
  },
  {
    "original_sentence": "okay lets go to it. I accept it",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Can you delete my Figure Skating Lesson on the 4th?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 4L) (Event.subject_? (?~= \"Skating Lesson\"))))))))))"
  },
  {
    "original_sentence": "Clams don't feel okay in hands.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Moo moo",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Castle storm but yeah whatevs.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "i would like to meet carol on tomorrow 9p.m.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"carol\")))))))))))"
  },
  {
    "original_sentence": "yes ok that right time",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "meeting to today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Today)))))))"
  },
  {
    "original_sentence": "3 pm would be the best",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make a appointment for today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Today)))))))"
  },
  {
    "original_sentence": "How do I create calendar events?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Create a calendar event",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Search for calendar event",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Remove calendar events",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Remove appointment for tomorrow",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Search for appointments",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Do I have any meetings this afternoon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"
  },
  {
    "original_sentence": "Where is it taking place?",
    "parse": "(Yield (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Am I hanging out with anyone tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"hanging out\")))))) 0L))"
  },
  {
    "original_sentence": "What about this weekend?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend)))))"
  },
  {
    "original_sentence": "Is there anything with Jon next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jon\")))) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Change my appointment from 5pm to 7",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "yyouo fasdf",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "Schedule Destroy Kings Landing for next Tuesday at 1 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Destroy Kings Landing\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "Single",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please add Jon and Samuel to this event.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jon\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Samuel\")))))))))))"
  },
  {
    "original_sentence": "how many meetings are remaining for me this week",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))))"
  },
  {
    "original_sentence": "How about the week after next?",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "When do I see Gavin next?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Gavin\")))) 1L)))"
  },
  {
    "original_sentence": "Cancel my meeting with Gavin and make a meeting with George instead",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Ok please separate the requests",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add bill to my department meeting",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"department meeting\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bill\"))))))))))"
  },
  {
    "original_sentence": "Can you add Larry and Zach",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Larry\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Zach\")))))))))))"
  },
  {
    "original_sentence": "No I just remembered Larry is out of town",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Schedule a Hair Dying session with Emily on Saturday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Hair Dying session\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\")))))))))))"
  },
  {
    "original_sentence": "I don't like either of them",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Make a doctor appointment on Tuesday, jog in the afternoon and pick up my daughter from school.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "schedule a conference call Tuesday at 11 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"conference call\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "okey",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "great make a meeting with Taylor for Friday morning",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Friday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Taylor\")))))))))))"
  },
  {
    "original_sentence": "Can you add simon to that meeting too and give me more dates?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"simon\"))))))))))"
  },
  {
    "original_sentence": "I want it to be from 10 am to 11 am.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "Delete my events tomorrow.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Show me my events tomorrow.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Schedule a meeting with Kayla tomorrow at 4:30 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 4L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kayla\")))))))))))"
  },
  {
    "original_sentence": "Looks great, have it followed by dinner with her at 5:30.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceAttendee))"
  },
  {
    "original_sentence": "Which is hotter? Atlanta, Los Angeles, or Houston?",
    "parse": "(FenceComparison)"
  },
  {
    "original_sentence": "What's the weather like in Austin right now?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Austin\"))) (?= (Now))))"
  },
  {
    "original_sentence": "I want to close some time off to read, so set an event \"Me time\" showing as Out Of Office. Start it at 2pm tomorrow and have it last 4 hours.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Me time\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.duration_? (?= (toHours 4)))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
  },
  {
    "original_sentence": "Great, clear my calendar for Friday too please.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Search meeting with Anna.",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Anna\"))))))"
  },
  {
    "original_sentence": "What time is the meeting at",
    "parse": "(Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Thanks that's all I needed to know.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "yeah,sure",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Move workout with Jennie to 7:00 to 8:00 pm on Friday.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"workout\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennie\")))))))) x1 (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)) (NumberPM 7L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (NumberPM 8L)))))))))"
  },
  {
    "original_sentence": "I want it to end 20 min later.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "schedule store visits tomorrow and set my status as working elsewhere",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"store visits\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.showAs_? (?= (ShowAsStatus.WorkingElsewhere)))))))"
  },
  {
    "original_sentence": "do the first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need it to be longer though. I will be doing store visits all day and will be working elsewhere.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.showAs_? (?= (ShowAsStatus.WorkingElsewhere))) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (DateTime.date (Event.start x0))))))))"
  },
  {
    "original_sentence": "What day was my wife's birthday last year?",
    "parse": "(Yield (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"wife's birthday\")) (FullYearofYear (LastYear)))))))))"
  },
  {
    "original_sentence": "Did I go to Scotland last year?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"go to Scotland\")) (FullYearofYear (LastYear)))))) 0L))"
  },
  {
    "original_sentence": "when the marathon jumping race starts?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"marathon jumping race\")))))))"
  },
  {
    "original_sentence": "You'd better schedule a hard-core warm up for a half hour before that.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"hard-core warm up\")) (Event.start_? (?= (PeriodDurationBeforeDateTime (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply :duration (toHours 0.5)))))))))"
  },
  {
    "original_sentence": "Yeah, that's right up my alley. Cheers!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cool, now add mountain biking trip o tthe 7th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"mountain biking trip\")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 7L))))))))"
  },
  {
    "original_sentence": "Let's put the second one on the schedule.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Add study time at 8 tonight",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"study time\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "add 30 minutes to study time",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"study time\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toMinutes 30))))))))"
  },
  {
    "original_sentence": "looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add coffee with Annie at 8 am at the Starbucks near my house to tomorrow's calendar.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"coffee\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L))))) (Event.location_? (?= (LocationKeyphrase.apply \"the Starbucks near my house\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Annie\")))))))))))"
  },
  {
    "original_sentence": "Actually change that to 9:00.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "Looks right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add phone bill due for the 13th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"phone bill due\")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 13L))))))))"
  },
  {
    "original_sentence": "What appointment in this week ?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
  },
  {
    "original_sentence": "I need a one on one meeting with Billy next week sometime",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.isOneOnOne_? (?= true))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Billy\")))))))))))"
  },
  {
    "original_sentence": "The second one please.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Cancel Billy, Keep Megan for the meeting",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Billy\")))))))))))"
  },
  {
    "original_sentence": "yeah well",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What breakfast meetings do I have with Sam on Monday.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (& (Event.subject_? (?~= \"breakfast meetings\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\"))))))))"
  },
  {
    "original_sentence": "I meant with Frankie",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Frankie\"))))))"
  },
  {
    "original_sentence": "Thanks, can you add dinner with Michelle on Sunday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Michelle\")))))))))))"
  },
  {
    "original_sentence": "Lets go with the event at 1pm",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you add my birthday party for this SUnday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"birthday party\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))))))"
  },
  {
    "original_sentence": "How may I help",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "List my events for tomorrow.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Create for me an event tomorrow with name attend a match from 1:00 to 2 pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"attend a match\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 2L)))))))))"
  },
  {
    "original_sentence": "change the meeting",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Is a Dance Recital scheduled for the 5th?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 5L) (Event.subject_? (?~= \"Dance Recital\")))))) 0L))"
  },
  {
    "original_sentence": "Is there anything else scheduled that day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))) 0L))"
  },
  {
    "original_sentence": "Do I have a meeting with Pam today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Pam\")))))))) 0L))"
  },
  {
    "original_sentence": "Do I have any events Thursay?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "train station 4 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"train station\")) (Event.start_? (?= (NextTime (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "I am going to dinner at 5:30 after the train station.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"going to dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (HourMinutePm 5L 30L))))))))"
  },
  {
    "original_sentence": "Dinner will be about 2 hours",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you tell me when it will rain again?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Can you remove the meeting with Frank for May 5th?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 5L (May)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Frank\"))))))))))))"
  },
  {
    "original_sentence": "the conference is now to be held in December.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"conference\")))))) (Event.start_? (DateTime.date_? (FullMonthofMonth (December)))))))"
  },
  {
    "original_sentence": "Yes, make it for two hours please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Lets go with the time for the second",
    "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Yeah it's good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Push back the awards banquet to sometime in December.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"awards banquet\")))))) (Event.start_? (DateTime.date_? (FullMonthofMonth (December)))))))"
  },
  {
    "original_sentence": "I need to book reservations for dinner.",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "can you give me later evening times?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I need evening reservations for a birthday party for 8 people.",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "whats my name",
    "parse": "(Yield (CurrentUser))"
  },
  {
    "original_sentence": "Can you schedule a meeting with the of directors next week?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Kindly schedule a meeting with Anthony next week.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Anthony\")))))))))))"
  },
  {
    "original_sentence": "Sorry for the confusion,i mean Damon.",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Please help out then with the calendar.",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "How is my schedule next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "Can you schedule a meeting with Damon on Tuesday next week?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (DowOfWeekNew (Tuesday) (NextWeekList))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon\")))))))))))"
  },
  {
    "original_sentence": "No.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Make it at 10 am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "Okay, thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Nothing at the moment.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Have a good day.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Cancel my lunch meeting.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch meeting\")))))))))"
  },
  {
    "original_sentence": "Please create a lunch date for every friday at 12 PM for a year with Meg",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "Please delete the lunch meeting event that is currently on my calendar for next Tuesday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"lunch meeting\"))))))))))"
  },
  {
    "original_sentence": "Make a appointment tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Yes that looks just about right",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Add staff meeting on Monday at 7:30 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"staff meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (HourMinuteAm 7L 30L))))))))"
  },
  {
    "original_sentence": "Please extend that staff meeting for two hours.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hi! What events do I have with Paige Ashworth this week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\")))) (ThisWeek))))"
  },
  {
    "original_sentence": "Put in an event on Tuesday at 3 PM for lunch with my coworker Paige Ashworth",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 3L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\")))))))))))"
  },
  {
    "original_sentence": "yes! can you also add a movie date with Barack Obama at 7:00 PM that night until 9 PM?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction)) x1 (DateAtTimeWithDefaults (DateTime.date (Event.start (^(Dynamic) item x0))) (NumberPM 7L))) (do (Yield x0) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"movie date\")) (Event.start_? (?= x1))) (Event.end_? (?= (TimeAfterDateTime x1 (NumberPM 9L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barack Obama\")))))))))))))"
  },
  {
    "original_sentence": "PERFECT! do I have any upcoming events with Janice Kang?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice Kang\")))))))"
  },
  {
    "original_sentence": "Janice Kang is my doctor. I have an appointment with her on Thursday at 2:30 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinutePm 2L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice Kang\")))))))))))"
  },
  {
    "original_sentence": "change the name of the event to doctors appointment",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"doctors appointment\")))))"
  },
  {
    "original_sentence": "perfect! thank you so much!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "that sounds great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "There is nothing else!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "what is the weather like in Chicago?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Chicago\"))) (?= (Now))))"
  },
  {
    "original_sentence": "when will it rain?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "when will it rain in chicago",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "what is the shape of the earth?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "what is the weather like in Tulsa?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Tulsa\"))) (?= (Now))))"
  },
  {
    "original_sentence": "Please set my calendar as on vacation for the month of December 2019.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "update my Bowling on Friday to last for 3 hours",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"Bowling\"))))))) (Event.duration_? (?= (toHours 3))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I'm having dinner with Jessica tomorrow night.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTimeConstraint (Night) (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jessica\")))))))))))"
  },
  {
    "original_sentence": "please check again",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "Do that once more.",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "Please schedule the one at 10 PM",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Schedule a wine tasting with Mark tomorrow at 2.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"wine tasting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))))))))))"
  },
  {
    "original_sentence": "I need to be with Abby tomorrow earlier than 7 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (?< (NumberPM 7L)) (Tomorrow))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "Is there anything a little later in the day?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Am I free earlier in the day?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Earlier please, preferably before noon.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?< (Noon)))))))"
  },
  {
    "original_sentence": "I want to meet with Johnson at 2 Pm Friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Johnson\")))))))))))"
  },
  {
    "original_sentence": "Yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you make the meeting with Johnson last for one hour?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Johnson\")))))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Yes. That's right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you make an event for work meeting from 10am-12pm on Monday?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"work meeting\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 12L)))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is the current temperature in Miami?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Miami\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "When is it supposed to rain in Philadelphia?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "When does the sunset today in Altoona, PA?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunsetTime) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Altoona, PA\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "What will the temperature be on Halloween night for Tampa, FL?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Tampa, FL\"))) (DateTimeConstraint (Night) (NextHolidayFromToday (Holiday.Halloween))))))"
  },
  {
    "original_sentence": "I can buy a champagne tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"buy a champagne\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "Just schedule shopping tomorrow at 5.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"shopping\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "What's going on now?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (Now) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Ok, then put shoe shopping on my calendar now",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"shoe shopping\")) (Event.start_? (?= (Now)))))))"
  },
  {
    "original_sentence": "sure does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Nice, check my events now again",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (Now) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "hi",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "what is the weather tonight",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTimeConstraint (Night) (Today))))"
  },
  {
    "original_sentence": "tomorrow?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint DateTime)) roleConstraint (Path.apply \"time\")) (intension (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "next thursday evening?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint DateTime)) roleConstraint (Path.apply \"time\")) (intension (DateTimeConstraint (Evening) (NextDOW (Thursday)))))))"
  },
  {
    "original_sentence": "when will it be sunny next",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "what is todays average temperature",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Average) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "do I need to do a survey?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "search for events with \"meeting\" in the title",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Can you delete that for me?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Add a staff meeting march 3rd starting at 9am t",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"staff meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 3L (March)) (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "Please enter dinner with Mom this coming Saturday at 7 PM.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Please enter dinner with Angela for Saturday at 7 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 7L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Angela\")))))))))))"
  },
  {
    "original_sentence": "What do I have scheduled for Saturday morning?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)) (Morning))))"
  },
  {
    "original_sentence": "Schedule hiking with Angela then.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "change dinner to 8 pm for 1 hour",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\")))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "change dinner with megan on Sat to 8 - 9 pm",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"megan\"))))))))) x1 (DateAtTimeWithDefaults (DateTime.date (Event.start x0)) (NumberPM 8L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (NumberPM 9L)))))))))"
  },
  {
    "original_sentence": "Do I have a one-one scheduled for Peter?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.isOneOnOne_? (?= true)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Peter\")))))))) 0L))"
  },
  {
    "original_sentence": "Move that to the next day",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (DateTime.date (Event.start x0)) (toDays 1)))))))))"
  },
  {
    "original_sentence": "That is correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When is my next 1-1 with Mark?",
    "parse": "(Yield (Event.start (FindNumNextEvent (& (Event.isOneOnOne_? (?= true)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\"))))) 1L)))"
  },
  {
    "original_sentence": "Cancel it.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Can you tell me my second event scheduled next Saturday please",
    "parse": "(Yield (FindNumNextEvent (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))) 2L))"
  },
  {
    "original_sentence": "When is my second event on friday?",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) 2L))"
  },
  {
    "original_sentence": "Can you find my second Event next april?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (April))) 2L))"
  },
  {
    "original_sentence": "create soccer game on sunday at 12",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"soccer game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "Can you change the time to 11am",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))) (intension (NumberAM 11L)))))"
  },
  {
    "original_sentence": "Looks good, thanks!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "No, that won't work, it has to be 2 hours long.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "No, cancel that soccer game altogether.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "How long does that last",
    "parse": "(Yield (Event.duration (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "That needs to last 14 days",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (DateTime.date (Event.start x0)) (toDays 14))))))"
  },
  {
    "original_sentence": "that looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "schedule a dinner party next year",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner party\")) (Event.start_? (DateTime.date_? (FullYearofYear (NextYear))))))))"
  },
  {
    "original_sentence": "Actually postpone the dinner to 2022",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (FullYearofYear (Year.apply 2022L)))))))"
  },
  {
    "original_sentence": "Either of those is fine. When did my Soccer Game happen last year?",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Soccer Game\")) (FullYearofYear (LastYear)))))))))"
  },
  {
    "original_sentence": "Put in my calendar tomorrow at 12pm: Coffee at starbucks with Donald, Tiffany, Rebecca, Nick, and Buddy.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Coffee at starbucks\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 12L))))) (Event.location_? (?= (LocationKeyphrase.apply \"starbucks\")))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Donald\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tiffany\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rebecca\"))))))) (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nick\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Buddy\")))))))))))))"
  },
  {
    "original_sentence": "Rebecca canceled but add Luisa to the event.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rebecca\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Luisa\")))))))))))"
  },
  {
    "original_sentence": "That is perfect!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When am I going racing with Nick, Marton, Debbie, and Steve?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"racing\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nick\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marton\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Debbie\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steve\")))))))))))"
  },
  {
    "original_sentence": "Add racing event with Nick, Milton, Debbie and Steve for tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"racing event\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nick\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Milton\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Debbie\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steve\"))))))))))))"
  },
  {
    "original_sentence": "When was my meeting with Rachel and her boss last year?",
    "parse": "(let (x0 (PersonName.apply \"Rachel\")) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullYearofYear (LastYear))))))))))"
  },
  {
    "original_sentence": "Did I have a vacation last year?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"vacation\")) (FullYearofYear (LastYear)))))))"
  },
  {
    "original_sentence": "Did I Visit the Liberty Bell last year?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Visit the Liberty Bell\")) (FullYearofYear (LastYear)))))) 0L))"
  },
  {
    "original_sentence": "When did we hire our new employees last year?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"hire new employees\")) (FullYearofYear (LastYear))))))))"
  },
  {
    "original_sentence": "Can you reschedule my dinner date at 9 pm?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 9L)) (Event.subject_? (?~= \"dinner date\"))))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Second one",
    "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Okay, and could you rename it to breakfast date?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"breakfast date\")))))"
  },
  {
    "original_sentence": "That is perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When is the concert this weekend with Jamie?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"concert\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamie\"))))) (ThisWeekend)))))))"
  },
  {
    "original_sentence": "will it be sunny in jamaca tomorrow ?",
    "parse": "(Yield (IsSunny (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"jamaca\"))) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "will it rain in milwaukee next week ?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"milwaukee\"))) (DateTime.date_? (NextWeekList)))))"
  },
  {
    "original_sentence": "will it rain in paris next week ?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"paris\"))) (DateTime.date_? (NextWeekList)))))"
  },
  {
    "original_sentence": "Tell me what will happen next Tuesday",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What time is my meeting with Ben?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ben\")))))))))"
  },
  {
    "original_sentence": "Great, can you add that I need to stop by the audio store two hours after the ending of that?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"stop by the audio store\")) (Event.start_? (?= (adjustByPeriodDuration (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply :duration (toHours 2)))))))))"
  },
  {
    "original_sentence": "yep thats right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Put look online for audio products 15 minutes before audio store",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"look online for audio products\")) (Event.start_? (?= (PeriodDurationBeforeDateTime (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply :duration (toMinutes 15)))))))))"
  },
  {
    "original_sentence": "What's the weather going to be like for the second event?",
    "parse": "(Yield (WeatherForEvent (FindNumNextEvent (^(Event) EmptyStructConstraint) 2L)))"
  },
  {
    "original_sentence": "What is my second event tomorrow?",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) 2L))"
  },
  {
    "original_sentence": "When is my 2nd Event friday?",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) 2L))"
  },
  {
    "original_sentence": "I need to reschedule my nail appointment to be on Monday afternoon.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"nail appointment\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTimeConstraint (Afternoon) (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Monday))))))))"
  },
  {
    "original_sentence": "please change the appointment 4.00 pm - 4.30 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (& (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 4L 30L))))))))"
  },
  {
    "original_sentence": "thanks!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you schedule a meeting with client at 3 pm on Monday.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Change the duration to 1 hour and set my status as Busy.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.duration_? (?= (toHours 1))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))"
  },
  {
    "original_sentence": "Thursday night schedule dinner at 5 pm at The Grill and Chill Sandwiches and Seafood.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 5L))))) (Event.location_? (?= (LocationKeyphrase.apply \"The Grill and Chill Sandwiches and Seafood\")))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "hi",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "I need you to cancel any lunch appointments next month and schedule an appointment to get my tonsils removed the first Tuesday of February at 9 am, which will mean that I cannot make any appointments that day.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Schedule a trip to the ice cream parlor the next day and another trip to get meds from the pharmacy.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "What's the weather for my meeting next Friday?",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "what is the weather like at my 1 pm meeting",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))))"
  },
  {
    "original_sentence": "Will it be raining on my spring shopping?",
    "parse": "(Yield (IsRainy (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"spring shopping\"))))))))"
  },
  {
    "original_sentence": "what about the meet with Gary on webcast?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Gary\"))))))))"
  },
  {
    "original_sentence": "Where is the Interview going to take place at?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Interview\")))))))"
  },
  {
    "original_sentence": "Where is the last meeting on Jan 7th?",
    "parse": "(Yield (Event.location (FindLastEvent (EventOnDate (MD 7L (January)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "List the events I have this weekend.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "What is the other event that I have this weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend)))))"
  },
  {
    "original_sentence": "Add an event on my calendar for Monday from 3 PM - 5 PM.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "I want you to change the event's subject to take an Uber to uncle's house.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"take an Uber to uncle's house\")))))"
  },
  {
    "original_sentence": "How long will it take?",
    "parse": "(Yield (Event.duration (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Can you add a past meeting on the 13th to my calendar?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (previousDayOfMonth (Today) 13L)))))))"
  },
  {
    "original_sentence": "I like the second option.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you add the football game i went to yesterday to the calandar",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"football game\")) (Event.start_? (DateTime.date_? (?= (Yesterday))))))))"
  },
  {
    "original_sentence": "no the game was 3 hours long and started at 7pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))) (Event.duration_? (?= (toHours 3)))))))"
  },
  {
    "original_sentence": "please cancel my football game tomorrow",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"football game\"))))))))))"
  },
  {
    "original_sentence": "When is my next meeting with Chris from sales?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chris\")))) 1L)))"
  },
  {
    "original_sentence": "Add lunch with Chris from Sales to my calendar on Monday at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (Noon))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chris\")))))))))))"
  },
  {
    "original_sentence": "Yes that sounds right to me",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please change the lunch with Chris 12:00 PM to 1:00 PM",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chris\")))))))) x1 (DateAtTimeWithDefaults (DateTime.date (Event.start x0)) (NumberPM 12L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (NumberPM 1L)))))))))"
  },
  {
    "original_sentence": "yes thats great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Did I put down a location for my dance recital on the 1st?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 1L) (Event.subject_? (?~= \"dance recital\"))))))))"
  },
  {
    "original_sentence": "That's actually been moved to the New Orleans Ballet Theatre. Can you update the schedule?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"the New Orleans Ballet Theatre\"))))))"
  },
  {
    "original_sentence": "I think so. Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great. Do I have anything else scheduled for the 1st?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (nextDayOfMonth (Today) 1L) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Great. Can you add a recital day brunch for that day at 10:30 am until 12:30 pm at the Ruby Slipper.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (HourMinuteAm 10L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"recital day brunch\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 12L 30L))))) (Event.location_? (?= (LocationKeyphrase.apply \"the Ruby Slipper\"))))))))"
  },
  {
    "original_sentence": "Perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What year was Lebron James born?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "Block off three hours on Wednesday night at 6:00 pm for Basketball game.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Basketball game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 6L))))) (Event.duration_? (?= (toHours 3)))))))"
  },
  {
    "original_sentence": "That's exactly right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I am going out for appetizers after the game so put that on the schedule.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"going out for appetizers\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"game\"))))))))))))"
  },
  {
    "original_sentence": "That's good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "create a meeting this Friday with my team for 3-4pm titled \"how to make the office great again\", and invite my team to it",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Switch the times of my two afternoon meetings tomorrow and add a new meeting on Friday with Jim at Loui's BBQ at 12 pm.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Move my meeting with Brian later in the day after 3 pm please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brian\")))))))) (Event.start_? (DateTime.time_? (?> (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Grab that later one",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Can we do the second one, but actually make it a little later?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I like the second one",
    "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Yes, but make it a little later.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Look up the date and time of my meeting with Shana Stinson",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Shana Stinson\")))))))))"
  },
  {
    "original_sentence": "Delete all my old schedules.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "When do I see Robert?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Robert\")))))))))"
  },
  {
    "original_sentence": "Do I have anything with Pam that day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Pam\")))))))) 0L))"
  },
  {
    "original_sentence": "Ok these conflict can I change the time of the meeting with Robert",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Delete my meeting with Robert.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Robert\")))))))))))"
  },
  {
    "original_sentence": "Add a meeting with Paul for Wednesday at breakfast time.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (Breakfast)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paul\")))))))))))"
  },
  {
    "original_sentence": "Can you change the meeting to 1PM instead of 8:00 to 8:30?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Yes but its at 12",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "No, make it for breakfast",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (Breakfast)))))))"
  },
  {
    "original_sentence": "that looks perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule a group presentation around breakfast on Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"group presentation\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (Breakfast))))))))"
  },
  {
    "original_sentence": "What's happening next month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth)))))"
  },
  {
    "original_sentence": "I need to put aside some time to watch the Bachelor tomorrow evening.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"watch the Bachelor\")) (Event.start_? (DateTimeConstraint (Evening) (Tomorrow)))))))"
  },
  {
    "original_sentence": "Do the second one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Do I have an appointment with Emily?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\"))))))) 0L))"
  },
  {
    "original_sentence": "Schedule an appointment with Emily for clothes shopping on Thursday from 6:00 to 7:00 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 6L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"clothes shopping\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 7L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\"))))))))))))"
  },
  {
    "original_sentence": "This looks good!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "That will work just fine.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you tell me any events I have for tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Move the meeting with Yolanda and her supervisor to 3pm",
    "parse": "(let (x0 (PersonName.apply \"Yolanda\")) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Looks goat",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "create a lunch after shopping with John and his boss",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"shopping\"))))))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "That's it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Actually that is a bit late for lunch so rename it dinner instead.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"dinner\")))))"
  },
  {
    "original_sentence": "Hello, i'd like to set a reminder for a lunch date tomorrow at 3:00 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Awesome thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great - make sure to put down that it'll be at DiMaggios.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"DiMaggios\"))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change the time to 3 pm to 4 pm and afterwords make sure there isn't anything scheduled.",
    "parse": "(FenceConditional)"
  },
  {
    "original_sentence": "What's Tara's response to brunch?",
    "parse": "(Yield (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"brunch\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tara\"))))))))"
  },
  {
    "original_sentence": "Arrange the schedule with john at 4 pm in tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"john\")))))))))))"
  },
  {
    "original_sentence": "Make this at least an hour after any other event.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "The meeting with john is fine",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add Andrea to my meeting with John tomorrow",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Andrea\"))))))))))"
  },
  {
    "original_sentence": "Hi, can you tell me what events I have scheduled for noon today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (Noon)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "I want to cancel that lunch from my schedule.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "What event do I have in June",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (June)))))))"
  },
  {
    "original_sentence": "Did my manager arrange this?",
    "parse": "(Yield (== (Event.organizer (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (FindManager (toRecipient (CurrentUser)))))"
  },
  {
    "original_sentence": "Alright, did my boss organize the wardrobe shopping event?",
    "parse": "(Yield (== (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"wardrobe shopping\")))))) (FindManager (toRecipient (CurrentUser)))))"
  },
  {
    "original_sentence": "I need to contact my grandma at 900",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Add event called call grandma later today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"call grandma\")) (Event.start_? (DateTimeConstraint (Late) (Today)))))))"
  },
  {
    "original_sentence": "Actually it will need to be a little later than that.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Yes the second option is best. Schedule that one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Do I have anything on my schedule for 5PM tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Add something for 5pm tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"something\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "What do I have planned on January 10th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (nextMonthDay (Today) (January) 10L) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Delete that event please",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Delete the meeting with Luke",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Luke\")))))))))))"
  },
  {
    "original_sentence": "Actually please keep it.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "The Skate Park event is cancelled.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Skate Park\")))))))))"
  },
  {
    "original_sentence": "Never mind, don't cancel this.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "create lunch with mom on wednesday",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "create lunch with doug",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"doug\")))))))))))"
  },
  {
    "original_sentence": "MEETING WITH LEE TODAY NIGHT AT 9PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"LEE\")))))))))))"
  },
  {
    "original_sentence": "which looks pretty good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "The Meeting with Lee should be from 9:00 pm to 10:00 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lee\")))))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 9L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 10L))))))))"
  },
  {
    "original_sentence": "make metting next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"metting\")) (Event.start_? (DateTime.date_? (NextWeekList)))))))"
  },
  {
    "original_sentence": "ok thank you",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Reschedule my dinner with the family to next Monday. Make a event for Beyonce's concert on March 3 and show me as busy the whole time.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Will it be colder in Juneau, Alaska than Toronto next week?",
    "parse": "(let (x0 (NextWeekList)) (Yield (< (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Juneau, Alaska\"))) (DateTime.date_? x0))) (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Toronto\"))) (DateTime.date_? x0))))))"
  },
  {
    "original_sentence": "Hi",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "what is on my calendar for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you add business meeting to my calendar for monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"business meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))))))"
  },
  {
    "original_sentence": "Yes that works perfect",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Set business meeting for 10:00 am monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"business meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Yes perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "OK thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "can you check where is the today lunch with John's manager?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))) (EventOnDate (Today) (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "How expensive is that place",
    "parse": "(Yield (Place.price (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Is there a place to eat outside?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.OutdoorDining) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Is there a smokers section at this Cochon Butcher?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Can I order beer?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Remind me to pick up the boss at the airport on Wednesday afternoon at 4pm. Block out 2 hours for that and schedule dinner for afterwards.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Remove all events after this coming Saturday.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "When is my dentist appointment?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\")))))))"
  },
  {
    "original_sentence": "I see, okay thanks, can you also add a trip to the plant nursery on El Camino for Saturday at 2pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"trip to the plant nursery on El Camino\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "That is correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have anything else on my calendar on March 9?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (MD 9L (March)) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "Can you make that go to 11 pm?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 11L)))))))"
  },
  {
    "original_sentence": "Where will I be tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "OK! Where will i be day after tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (adjustByPeriod (Tomorrow) (toDays 1)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Add Eagles playoffs for Sunday 4:40pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Eagles playoffs\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (HourMinutePm 4L 40L))))))))"
  },
  {
    "original_sentence": "Add 3 hours to it.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 3))))))"
  },
  {
    "original_sentence": "Delete all events scheduled on January 2nd",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Can you tell me if there are events on January 3rd?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 3L (January)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you schedule a 1 hour meeting on January 3rd, starting at 1:20?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 3L (January)) (HourMinutePm 1L 20L)))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "I need you to delete anything I have going on the next day please.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Delete tomorrow's meeting at the office",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \"the office\"))) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "That's it, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, what else do I have that day?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Schedule date night from 6 p.m. to 10 p.m. on Friday.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 6L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"date night\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 10L)))))))))"
  },
  {
    "original_sentence": "that is perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make a new meeting tomorrow at 10am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "Cancel the lunhc meeting tomorrow",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"lunhc meeting\"))))))))))"
  },
  {
    "original_sentence": "Appointment",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Also, can you cancel the football game later that night?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Event.subject_? (?~= \"football game\"))) (Night)))))))))"
  },
  {
    "original_sentence": "Wait delete the baseball game instead.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"baseball game\")))))"
  },
  {
    "original_sentence": "What's Taylor's in Loomis' website?",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Taylor's in Loomis\"))))))"
  },
  {
    "original_sentence": "Does Ruby Steakhouse in Reno have a website?",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Ruby Steakhouse in Reno\"))))))"
  },
  {
    "original_sentence": "What is the website for Tiwa Kitchen Restaurant in Taos?",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Tiwa Kitchen Restaurant in Taos\"))))))"
  },
  {
    "original_sentence": "add baseball game may 25 at 5",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"baseball game\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 25L (May)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "awesome! thanks!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Did I schedule my dog's vet appointment for next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"dog's vet appointment\")) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "What do I have booked the day after that?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (adjustByPeriod (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (toDays 1)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Is there a board meeting next month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"board meeting\")) (FullMonthofMonth (NextMonth)))))) 0L))"
  },
  {
    "original_sentence": "What about this month?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today)))))))"
  },
  {
    "original_sentence": "What does it look like?",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "no thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I'd like to set up a lunch for Monday, around 11am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "great, make it til 12pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "perfect, can you put a location of Applebees on it?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Applebees\"))))))"
  },
  {
    "original_sentence": "perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I have a birthday party Sunday 3 pm to 7 pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"birthday party\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 7L)))))))))"
  },
  {
    "original_sentence": "yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please make Tuesday's lunch meeting to be for three hours.",
    "parse": "(do (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"lunch meeting\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 3)))))))"
  },
  {
    "original_sentence": "Do I have any appointments on July 7, 2019?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MDY 7L (July) (Year.apply 2019L)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Create a new event for July 7, 2019 titled \"Birthday Dinner\" at 7PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Birthday Dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (MDY 7L (July) (Year.apply 2019L)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you tell me if my wife has any events scheduled for May 28th?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "Create a new event titled Parent Teacher Conference at 4PM on May 28, 2019",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Parent Teacher Conference\")) (Event.start_? (?= (DateAtTimeWithDefaults (MDY 28L (May) (Year.apply 2019L)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Show me all of my events?",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Perfect thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Create a series of events every Tuesday at noon for 2 months titled Lunch with Mom",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "Change my current dental appointment to a week from this Thursday at 3 PM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dental appointment\")))))) (Event.start_? (?= (adjustByPeriodDuration (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 3L)) (PeriodDuration.apply (toWeeks 1))))))))"
  },
  {
    "original_sentence": "Actually make it at 2 pm.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))) (intension (NumberPM 2L)))))"
  },
  {
    "original_sentence": "Add 30 to today's meeting and take out 15 from the project task.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Make a 2 hour meeting on Friday at 8 am and a 1.5 hour meeting right after that called Catch-Up.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Make a new meeting with Jesse and their team.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindTeamOf x0))))))))"
  },
  {
    "original_sentence": "The afternoon time. Invite David Crim's team as well.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Invite David crim and his team to the meeting.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David crim\")))))) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindTeamOf x0))))))))"
  },
  {
    "original_sentence": "please conform the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "change the meeting to October 11 and add Kim Possible and Elli Parker to it",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.date_? (?= (MD 11L (October))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim Possible\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli Parker\"))))))))))))"
  },
  {
    "original_sentence": "tell me who I am",
    "parse": "(Yield (CurrentUser))"
  },
  {
    "original_sentence": "hello what will the weather be today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "what the weather be for the rest of the week?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (& (Later) (DateTime.date_? (ThisWeek)))))"
  },
  {
    "original_sentence": "Do we have in storms coming to our area?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Can you find any meetings scheduled between 2 and 5 pm next Friday?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))) (Yield (FindEventWrapperWithDefaults (EventDuringRangeDateTime (^(Event) EmptyStructConstraint) (DateTimeAndConstraint x0 (TimeAfterDateTime x0 (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "appointment for the next Friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "when is my next appointment",
    "parse": "(Yield (Event.start (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))"
  },
  {
    "original_sentence": "okay, thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Yes.put an appointment for library on calendar",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"appointment for library\")))))"
  },
  {
    "original_sentence": "can Abby meet with my earlier than 1pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (OnDateBeforeTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 1L))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "Ok! fine, please note the meeting end with 12 PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "Move it to later in the day.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Make an appointment with abby Gonano and Damon Strater on 10.30pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (HourMinutePm 10L 30L)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"abby Gonano\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon Strater\"))))))))))))"
  },
  {
    "original_sentence": "Make a apportionment for tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"apportionment\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "Order some more plastic forks and knives online for my upcoming party. I'll need 100.",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Is my uber on the way?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "put meeting with gloriya at aug 14",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (MD 14L (August))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"gloriya\")))))))))))"
  },
  {
    "original_sentence": "The 2nd one works great",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Well",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add to my calendar an appointment with John Tuesday afternoon from 4-5pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))))))"
  },
  {
    "original_sentence": "Change the time to 5pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "change that to be at aug 21, 6.00 pm - aug 22, 6.00 pm",
    "parse": "(let (x0 (MD 21L (August))) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (?= (DateAtTimeWithDefaults x0 (NumberPM 6L)))) (Event.end_? (?= (DateAtTimeWithDefaults (nextMonthDay x0 (August) 22L) (NumberPM 6L)))))))))"
  },
  {
    "original_sentence": "yes, invite Marie to the meeting with John",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marie\"))))))))))"
  },
  {
    "original_sentence": "cancel it",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Find a Starbucks in Seattle",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Starbucks in Seattle\")))"
  },
  {
    "original_sentence": "Will they accomodate a big group?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Find me Shilowan in Hawaii",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Shilowan in Hawaii\")))"
  },
  {
    "original_sentence": "Is that place good for groups",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "List the events marked in the calender today",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Start a conversation is at 4.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Start a conversation\")) (Event.start_? (?= (NextTime (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "yes ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Put cancel an appointment today at 1.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"cancel an appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "Nah, let's make it 2.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))) (intension (NumberPM 2L)))))"
  },
  {
    "original_sentence": "When is the trip to Yellowstone with Ian, John, Rena, and Angel.",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"trip to Yellowstone\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ian\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rena\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Angel\")))))))))))"
  },
  {
    "original_sentence": "Can you delete my Road Trip with Baron, Otto, Josef, and Brian on sunday please.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (& (Event.subject_? (?~= \"Road Trip\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Baron\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Otto\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Josef\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brian\"))))))))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you please create a stop at the geyser Old Faithful with Ian, John, Rena, and Angel?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"stop at the geyser Old Faithful\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ian\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rena\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Angel\"))))))))))))"
  },
  {
    "original_sentence": "Nevermind, delete it please.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "delete my today meetings from calendar",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I want my next meeting to be deleted.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))))"
  },
  {
    "original_sentence": "no, check for other meeting on the same day",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "change just lunch to just dinner",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"just lunch\")))))) (Event.subject_? (?= \"just dinner\")))))"
  },
  {
    "original_sentence": "Yes that looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please display status \"Out of Office\" for all day, tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (Tomorrow)))))"
  },
  {
    "original_sentence": "Set me as out of office from 11AM-7PM tomorrow",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 7L))))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have anything else that day>",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (DateTime.date (Event.start x0)) (Event.id_? (negate (?= (Event.id x0)))))))) 0L)))"
  },
  {
    "original_sentence": "What is the other event?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Can you add change batteries in smoke alarm to fall",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"change batteries in smoke alarm\")) (Event.start_? (DateTime.date_? (SeasonFall)))))))"
  },
  {
    "original_sentence": "The second one is best",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Great. Please add change oil in car for the spring.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"change oil in car\")) (Event.start_? (DateTime.date_? (SeasonSpring)))))))"
  },
  {
    "original_sentence": "The second one. Also add a picnic for the summer.",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"picnic\")) (Event.start_? (DateTime.date_? (SeasonSummer))))))))"
  },
  {
    "original_sentence": "The first one please. Also, create another picnic this summer around or on July 4th.",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"picnic\")) (Event.start_? (DateTime.date_? (?= (MD 4L (July))))))))))"
  },
  {
    "original_sentence": "Can you cancel all meetings that occur on Wednesday from 9:00 AM to 11:00 AM",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "i need a barber shop appointment before 2 pm Tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"barber shop appointment\")) (Event.start_? (OnDateBeforeTime (NextDOW (Tuesday)) (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Let`s go with the second one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "can you arrange with 12:00 PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "12 pm looks good",
    "parse": "(Yield (Execute (ConfirmCreateAndReturnAction (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "Do I have any events in the afternoon the week of June 18th?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (WeekOfDateNew (MD 18L (June))))))) 0L))"
  },
  {
    "original_sentence": "What is the temperature in Owensboro, KY",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Owensboro, KY\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "What is the humidity in Owensboro, KY",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (humidity) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Owensboro, KY\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "What is the weather in Owensboro, KY going to be like for Halloween",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Owensboro, KY\"))) (DateTime.date_? (?= (NextHolidayFromToday (Holiday.Halloween))))))"
  },
  {
    "original_sentence": "I would like to know what day st patricks day falls on please.",
    "parse": "(Yield (NextHolidayFromToday (Holiday.StPatricksDay)))"
  },
  {
    "original_sentence": "Remove John from the convention happening next year.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"convention\")))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))))"
  },
  {
    "original_sentence": "It'll work.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please put concert on my calendar next year on May 2nd.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"concert\")) (Event.start_? (DateTime.date_? (?= (MDY 2L (May) (NextYear)))))))))"
  },
  {
    "original_sentence": "Please set Out of Office from 9am to 12pm on Tuesday.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 9L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 12L))))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule team reorganization meeting for 3pm today for an hour.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"team reorganization meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "create arm wrestling tournament on monday at 8 until 0",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"arm wrestling tournament\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 0L)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change mom's birthday lunch to 2pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"mom's birthday lunch\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "I think this looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, can you schedule a birthday breakfast too?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"birthday breakfast\")))))"
  },
  {
    "original_sentence": "fix the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Great. Then put swimming at the X restaurant at 2 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"swimming\")) (Event.start_? (?= (NextTime (NumberPM 2L))))) (Event.location_? (?= (LocationKeyphrase.apply \"X restaurant\")))))))"
  },
  {
    "original_sentence": "when one on one with john ?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.isOneOnOne_? (?= true)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"john\"))))))))))"
  },
  {
    "original_sentence": "Make that meeting right after lunch",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (OnDateAfterTime (DateTime.date (Event.start x0)) (Lunch)))))))"
  },
  {
    "original_sentence": "Do I have anything after lunch tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (Tomorrow) (^(Event) EmptyStructConstraint) (Lunch))))) 0L))"
  },
  {
    "original_sentence": "Than move the meeting to 1 pm, that's right after lunch.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Yes, that looks perfect thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Kim Foster",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim Foster\")))))))"
  },
  {
    "original_sentence": "Heather Jones",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Heather Jones\")))))))"
  },
  {
    "original_sentence": "Jennifer Jones",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer Jones\")))))))"
  },
  {
    "original_sentence": "Tasha Gold",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tasha Gold\")))))))"
  },
  {
    "original_sentence": "Please make an appointment with hairdresser Thursday at 4pm.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Update the work sales trip to be from Tuesday to Thursday.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"work sales trip\"))))) x1 (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Tuesday))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (DateAndConstraint x1 (nextDayOfWeek x1 (Thursday))))))))"
  },
  {
    "original_sentence": "Yes please add.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Ok, and then on the 5th add fan convention for 3 days",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"fan convention\")) (nextDayOfMonth (Today) 5L) (toDays 3)))))"
  },
  {
    "original_sentence": "That is perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, that's all I need.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "On Friday, cancel my morning appointments and add an appointment from 8 am to 8 am called Kayak.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Add hiking with Adam on Saturday morning at 8am, then meet at the camp site at 3pm and fishing at 6pm.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Delete Kayak and instead schedule a board meeting from 9 am to 11 am.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "okay keep everything as is, thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Create an event called shopping for annual barbecue 4 days before Independence Day at 4 pm until 6 pm at Wall-Mart and show me as unknown at that time",
    "parse": "(let (x0 (DateAtTimeWithDefaults (PeriodBeforeDate (NextHolidayFromToday (Holiday.IndependenceDay)) (toDays 4)) (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (& (Event.subject_? (?= \"shopping for annual barbecue\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 6L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Wall-Mart\")))) (Event.showAs_? (?= (ShowAsStatus.Unknown))))))))"
  },
  {
    "original_sentence": "did anyone say they are not accepting the invitation to my 40th birthday party ?",
    "parse": "(Yield (> (size (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"40th birthday party\")))))) (ResponseStatusType.Accepted))) 0L))"
  },
  {
    "original_sentence": "who is coming to power yoga",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"power yoga\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Who declined by 40th birthday party?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"40th birthday party\")))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Call Hannah at 6.3",
    "parse": "(do (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Call Hannah\")) (Event.start_? (?= (NextTime (HourMinuteMilitary 6L 3L))))))) (Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "That should be 0630",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinuteMilitary 6L 30L)))))))"
  },
  {
    "original_sentence": "I need it 30 minutes longer",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (addDurations (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint)))) (toMinutes 30)))))))"
  },
  {
    "original_sentence": "The call will last until 0715.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (HourMinuteMilitary 7L 15L)))))))"
  },
  {
    "original_sentence": "whats my plans for today",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Add drinks with Amy this afternoon at 5:30 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"drinks\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (HourMinutePm 5L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\")))))))))))"
  },
  {
    "original_sentence": "Can you make it for 7 instead?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "Looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hi, id like to schedule for friday that i will be attending a swimming contest.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"swimming contest\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "yes we can do 10am",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "im meeting my friend charles tomorrow at 7pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 7L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"charles\")))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "and please cancel my appointment with jenny tonight at 5pm",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jenny\")))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "well, i am meeting with charles linker tomorrow at 7pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 7L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"charles linker\")))))))))))"
  },
  {
    "original_sentence": "great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule a doctor appointment in Toronto next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"doctor appointment\")) (Event.start_? (DateTime.date_? (NextWeekList)))) (Event.location_? (?= (LocationKeyphrase.apply \"Toronto\")))))))"
  },
  {
    "original_sentence": "The second one please",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What is the weather like for my doctor appointment?",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor appointment\")))))))"
  },
  {
    "original_sentence": "When is sunset schedule for?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunsetTime) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Is there any chance of rain?",
    "parse": "(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Remove John and Tim from the attendees to the summer ball.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"summer ball\")))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\"))))))))))))"
  },
  {
    "original_sentence": "Okay, Sally and Jim must also be removed.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sally\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\"))))))))))))"
  },
  {
    "original_sentence": "That looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Sally and Jim and Tim can't go to the party anymore",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"party\")))))) (Event.attendees_? (& (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sally\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\"))))))))))))"
  },
  {
    "original_sentence": "Bummer, can you remove Sally, Jim and Tim from the dinner on October 9",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 9L (October)) (Event.subject_? (?~= \"dinner\"))))))) (Event.attendees_? (& (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sally\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\"))))))))))))"
  },
  {
    "original_sentence": "Do I have any birthdays scheduled this month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"birthdays\")) (FullMonthofMonth (Date.month (Today))))))) 0L))"
  },
  {
    "original_sentence": "How about next month?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))))))"
  },
  {
    "original_sentence": "Can you show me what I have scheduled for January 20th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 20L (January)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you schedule a dentist appointment at 2pm on that day?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Do I have anything on January 15th?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 15L (January)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Create a meeting with upper management for next week at Vanilla Unicorn.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "When is the next date night with Jeff",
    "parse": "(Yield (Event.start (FindNumNextEvent (& (Event.subject_? (?~= \"date night\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeff\"))))) 1L)))"
  },
  {
    "original_sentence": "When is my next meeting with Anne?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Anne\")))) 1L)))"
  },
  {
    "original_sentence": "Thanks. When is the next time I'm meeting with Stacy?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Stacy\")))) 1L)))"
  },
  {
    "original_sentence": "Do I have any meeting after Stacy.",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (^(Event) EmptyStructConstraint) (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Stacy\")))))))))))) 0L))"
  },
  {
    "original_sentence": "When do I meet with Andy next?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Andy\")))) 1L)))"
  },
  {
    "original_sentence": "Cancel my doctor appointment last week, they had to reschedule it.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctor appointment\")) (LastWeekNew)))))))))"
  },
  {
    "original_sentence": "Yes, I could not make that time.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Could you also cancel my foot doctor appointment last Friday morning, I had last minute meeting.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (previousDayOfWeek (Today) (Friday)) (Event.subject_? (?~= \"foot doctor appointment\"))) (Morning)))))))))"
  },
  {
    "original_sentence": "Yep, perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Perfect, was there anything else after that?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))) 0L)))"
  },
  {
    "original_sentence": "Set alarm for 6:30am for the first monday of next month and cancel all other alarms except for Fridays morning alarms until then.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Make a appointment",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Yeah, the 10 am is fine, but can you tell me where my lunch with Jana is on next Tuesday?",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jana\"))))))))))))"
  },
  {
    "original_sentence": "Great, do they have a bar?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Does it run any happy hour specials?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.HappyHour) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Ok, what about take-out, do they offer that?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "What year does my lunch end?",
    "parse": "(Yield (Date.year (DateTime.date (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))))))"
  },
  {
    "original_sentence": "Find out if i have any plans at 5 pm today.",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 5L))))))"
  },
  {
    "original_sentence": "Can you tell me what I have planned for 8am to 5pm on monday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)) (TimeToTime (NumberAM 8L) (NumberPM 5L)))))"
  },
  {
    "original_sentence": "Please start it at 1:40 pm instead.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 1L 40L)))))))"
  },
  {
    "original_sentence": "yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what is your name?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "please create a meeting for thursday next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (DowOfWeekNew (Thursday) (NextWeekList))))))))"
  },
  {
    "original_sentence": "five pm",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "i would like to make an appointment for 5pm on thursday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "thanks looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to change my lunch meeting to Friday.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch meeting\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can we do lunch is late day saturday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTimeConstraint (LateAfternoon) (NextDOW (Saturday))))))))"
  },
  {
    "original_sentence": "Make it later in teh day",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Can you make it a little later still?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "What is the address of the antique store I'm meeting Brian at tomorrow at 1:00?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "I can't meet with John today, move the meeting to next week.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))) (Event.start_? (DateTime.date_? (NextWeekList))))))"
  },
  {
    "original_sentence": "The first one please.",
    "parse": "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Push back my football tournament to next week as well.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"football tournament\")))))) (Event.start_? (DateTime.date_? (NextWeekList))))))"
  },
  {
    "original_sentence": "Thanks - Yes, the second one is better.",
    "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "We need to move the staff meeting to next week, unfortunately.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"staff meeting\")))))) (Event.start_? (DateTime.date_? (NextWeekList))))))"
  },
  {
    "original_sentence": "I have a meeting at the South tower office on Tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))) (Event.location_? (?= (LocationKeyphrase.apply \"the South tower office\")))))))"
  },
  {
    "original_sentence": "Who didnt accept the Gulf War",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Gulf War\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Who hasnt declined the Asteroid Strike",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Asteroid Strike\")))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Who has not said Maybe to the Privateering",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Privateering\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "ommgg lol can you 029 (#(#) so much !!!",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "gddngj",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "hmmmmm",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "I need to cancel my dinner with family for sales trip.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "put the yoga session at 8.00 am on nov 2",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"yoga session\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 2L (November)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Yes, this looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "change the yoga session at 8.30 am - 9.00 am",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"yoga session\"))))) x1 (DateAtTimeWithDefaults (DateTime.date (Event.start x0)) (HourMinuteAm 8L 30L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= x1)) (Event.end_? (?= (TimeAfterDateTime x1 (NumberAM 9L)))))))))"
  },
  {
    "original_sentence": "Yes please update.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I'd like to change my date with Paul this evening.",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Paul and I will be meeting at 4.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paul\")))))))))))"
  },
  {
    "original_sentence": "Can you make that an hour long?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "actually change it to same time on Sunday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Sunday))))))))"
  },
  {
    "original_sentence": "Looks great thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When is Mom coming to visit?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Mom coming to visit\")))))))"
  },
  {
    "original_sentence": "Can you change that to Tuesday the 12th at 3 p.m. please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDay (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Day.apply 12L)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Add clean the house on Monday at 5:00 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"clean the house\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Cleaning the house is going to go to 6:30",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Cleaning the house\")))))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 6L 30L)))))))"
  },
  {
    "original_sentence": "Hey delete my Wet Feet event in the Winter",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Wet Feet\")) (SeasonWinter)))))))))"
  },
  {
    "original_sentence": "Si",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Where is my lunch with mom next week?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "okay ,",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Where is my lunch at this afternoon?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"lunch\"))) (Afternoon)))))))"
  },
  {
    "original_sentence": "Do they have a bar?",
    "parse": "(PlaceHasFeature (PlaceFeature.FullBar) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "We will have a big party for lunch, would Qdoba be accommodating of this?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Hi! I was hoping you could set a few appointments for me this month. I need to go to the dentist at 12 a week from Tuesday and I need to cancel my doctors appointment that I had set for early next month.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Change the Dentist appointment to 2 pm and I have a meeting on Friday at 11 am.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I need another 30 minutes for the meeting. I have another meeting on Monday and will need at least 1 hour for it.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Where was my meeting with George earlier this month?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"George\")))) (FullMonthofMonth (Date.month (Today))))))))))"
  },
  {
    "original_sentence": "Where was my birthday party held last week?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"birthday party\")) (EventDuringRange (^(Event) EmptyStructConstraint) (LastWeekNew))))))))"
  },
  {
    "original_sentence": "When was the cat festival held last month?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"cat festival\")) (FullMonthofLastMonth)))))))"
  },
  {
    "original_sentence": "Where was that located?",
    "parse": "(Yield (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Who went to it?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Is there anything on my calendar for tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Can you change the time to 9?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "That looks good, can you tell me what I have on Sunday?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Will I be doing anything after my 9:00 pm on Wednesday?",
    "parse": "(let (x0 (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 9L)) (^(Event) EmptyStructConstraint))))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))) 0L)))"
  },
  {
    "original_sentence": "Can you change the time to 10:30 instead?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 10L 30L)))))))"
  },
  {
    "original_sentence": "Can you schedule me a dentist appointment tomorrow before my hair appointment at 3 PM?",
    "parse": "(let (x0 (Tomorrow)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.end_? (?= (DateAtTimeWithDefaults x0 (DateTime.time (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults x0 (NumberPM 3L)) (Event.subject_? (?~= \"hair appointment\"))))))))))))))))"
  },
  {
    "original_sentence": "No, the dentist isn't open on weekends.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Make the dental appointment for this Thursday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dental appointment\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday)))))))))"
  },
  {
    "original_sentence": "yes, the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "thanks for your response",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What do I have on Saturday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you move my dog appointment to after my dental appointment?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dog appointment\")))))) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dental appointment\")))))))))))"
  },
  {
    "original_sentence": "When is my lunch date with Eric?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch date\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Eric\"))))))))))"
  },
  {
    "original_sentence": "Can you cancel the lunch date with Eric.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch date\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Eric\"))))))))))))"
  },
  {
    "original_sentence": "Yes that is correct",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great add a new lunch date on Sunday with Leslie",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch date\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Leslie\")))))))))))"
  },
  {
    "original_sentence": "Yes. The first one and the timeframe is 1 hour",
    "parse": "(let (x0 (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (do (Yield x0) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (^(Dynamic) item x0)) (Event.duration_? (?= (toHours 1))))))))"
  },
  {
    "original_sentence": "When is my next talk with Dr. Smith scheduled?",
    "parse": "(Yield (Event.start (FindNumNextEvent (& (Event.subject_? (?~= \"talk\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dr. Smith\"))))) 1L)))"
  },
  {
    "original_sentence": "After that event, set up a board meeting at Century Link Field.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"board meeting\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Century Link Field\")))))))"
  },
  {
    "original_sentence": "Put it on.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I have a conference call after that in Bahamas",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"conference call\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Bahamas\")))))))"
  },
  {
    "original_sentence": "Yes it is.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Now add lunch at the Palm after that",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Palm\")))))))"
  },
  {
    "original_sentence": "Schedule a meeting with supervisor on thursday at 10am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberAM 10L)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Actually change the time to 11am",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "Move this meeting on Saturday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Okay, this looks good.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "How much money does a meal at Houston's in Austin cost?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Houston's in Austin\"))))))"
  },
  {
    "original_sentence": "How much is Llama Inn in Brooklyn?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Llama Inn in Brooklyn\"))))))"
  },
  {
    "original_sentence": "How about Bamontes in Brooklyn - do you know how much that is?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Bamontes in Brooklyn\"))))))"
  },
  {
    "original_sentence": "Is Mark coming over to watch football tomorrow?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"watch football\")))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Great. Is Laura coming to the music festival Sunday afternoon?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"music festival\"))) (Afternoon))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Laura\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Nice. Is Chad coming to the softball game on Thursday?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.subject_? (?~= \"softball game\")))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chad\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Thanks. Is steve making the sales meeting?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"sales meeting\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"steve\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "thanks, it was look like good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Is Kim attending the sales lunch planning session?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"sales lunch planning\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "I need to update my calendar for next month.",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Can you add lunch with my mother to my calendar for June 14th at 12pm?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Ok. Can you tell me how many entries in my address book I have?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Thank you for your help.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "save in my calendar after 1 pm tomorrow go to shop",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go to shop\")) (Event.start_? (OnDateAfterTime (Tomorrow) (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "set go to the shop after 1PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go to the shop\")) (Event.start_? (OnDateAfterTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "The earlier one",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "The first one is look good",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "yes but extend til 3.00 pm",
    "parse": "(do (Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint)))) (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 3L))))))"
  },
  {
    "original_sentence": "Can you schedule a meeting at 10AM with Lisa and her supervisor?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lisa\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberAM 10L)))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "Yes, that's good to me, thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "events update time 11.00",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "Correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you also add mike and his boss?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"mike\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))))))))"
  },
  {
    "original_sentence": "Set up lunch with Debbie at noon tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Debbie\")))))))))))"
  },
  {
    "original_sentence": "What else is scheduled for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Add a four hour meeting at 8 am called Group meeting.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Group meeting\")) (Event.start_? (?= (NextTime (NumberAM 8L))))) (Event.duration_? (?= (toHours 4)))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When is my third event next month?",
    "parse": "(Yield (Event.start (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))) 3L)))"
  },
  {
    "original_sentence": "Where is my third event in March happening?",
    "parse": "(Yield (Event.location (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (March))) 3L)))"
  },
  {
    "original_sentence": "What is my third event in March?",
    "parse": "(Yield (Event.subject (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (March))) 3L)))"
  },
  {
    "original_sentence": "Can you add my afternoon hike to my calendar start tomorrow at 1 pm that will last an hour",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"afternoon hike\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What is my manager's first name?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "cancel my this week all events",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I need to know who my supervisor is.",
    "parse": "(Yield (FindManager (toRecipient (CurrentUser))))"
  },
  {
    "original_sentence": "Please make an event and invite my manager.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))))))"
  },
  {
    "original_sentence": "select first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Who has responded to the Pub Crawl?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Pub Crawl\")))))) (ResponseStatusType.None)))"
  },
  {
    "original_sentence": "Are there any responses for the camping trip?",
    "parse": "(Yield (> (size (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"camping trip\")))))) (ResponseStatusType.None))) 0L))"
  },
  {
    "original_sentence": "Are there any responses for the Erin Go Bragh event?",
    "parse": "(Yield (> (size (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Erin Go Bragh\")))))) (ResponseStatusType.None))) 0L))"
  },
  {
    "original_sentence": "Can you change my status for Wednesday February 13th as \"out of office?\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (MD 13L (February)))))))"
  },
  {
    "original_sentence": "Setup a date called a day at the museum for this Friday at 7pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"a day at the museum\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Do I have any other events that day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Do I have any events today at 1PM?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 1L)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "How about afterwards?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)))))"
  },
  {
    "original_sentence": "Do I have anything on Thursday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Will I have anything on the 24th?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 24L) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Do I have a flight scheduled for Sunday morning?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"flight\"))) (Morning))))) 0L))"
  },
  {
    "original_sentence": "Pick up the new shonen jump at 3 tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Pick up the new shonen jump\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "yes its perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Put read shonen jump from 3:30 to 5.",
    "parse": "(let (x0 (NextTime (HourMinutePm 3L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"read shonen jump\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "which is ok for me",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "babysit friday night",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"babysit\")) (Event.start_? (DateTimeConstraint (Night) (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "create a meeting called exam for tomorrw at 1 pm through the end of the day and invite jake",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"exam\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (EndOfWorkDay))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jake\"))))))))))))"
  },
  {
    "original_sentence": "That looks good to me!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Actually can you change it to 2pm to end of work day?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))) (Event.end_? (DateTime.time_? (?= (EndOfWorkDay))))))))"
  },
  {
    "original_sentence": "si si gracias",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great! Also, create a Study Session with Kim on Thursday that lasts from 2 pm until the end of the day.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Study Session\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (EndOfWorkDay))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))))))"
  },
  {
    "original_sentence": "boop blah bop",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "peieio i ehgeb hs e eh icr ceam",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "work lung wok",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "I want to meet with car mechanic at 1 pm today.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Afterwards, i want to go over the project with Cindy and William.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule go over project with Cindy and William at 3 pm on the 14th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"go over project\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 14L) (NumberPM 3L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cindy\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"William\"))))))))))))"
  },
  {
    "original_sentence": "yes looks good but change the end time to 5 pm",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Make for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Needs Title \"Doctor's Appointment\"",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"Doctor's Appointment\")))))"
  },
  {
    "original_sentence": "I guess so. Lunch time?",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (Lunch)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Salon Appointment Tuesday afternoon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Salon Appointment\")) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Tuesday))))))))"
  },
  {
    "original_sentence": "Start at 1 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Nope, show me more responses.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Please make an event for shopping with Amanda tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"shopping\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amanda\")))))))))))"
  },
  {
    "original_sentence": "No how about at 2pm?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Look well",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Check for Apex at 3.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"check for apex\")) (Event.start_? (DateTime.time_? (?= (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Find the last event that has a guest in my calendar",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "When is my last eye doctor appointment?",
    "parse": "(Yield (Event.start (FindLastEvent (Event.subject_? (?~= \"eye doctor appointment\")))))"
  },
  {
    "original_sentence": "Can you put it after the work meeting that day?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"work meeting\")))))))))))"
  },
  {
    "original_sentence": "yes please",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When is my next eye doctor appointment?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"eye doctor\")) 1L)))"
  },
  {
    "original_sentence": "Hey does Golden Flower in Reno have a bar?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Golden Flower in Reno\"))))))"
  },
  {
    "original_sentence": "Does Haru in Reno have a full bar?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Haru in Reno\"))))))"
  },
  {
    "original_sentence": "Does the Shangri La China Bistro in Modesto have a full bar?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Shangri La China Bistro in Modesto\"))))))"
  },
  {
    "original_sentence": "delete dinner party invite tomorrow",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"dinner party\"))))))))))"
  },
  {
    "original_sentence": "I need you to make a meeting from 8-10 am on Monday.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 10L)))))))))"
  },
  {
    "original_sentence": "Can you find the last time I had a dentist appointment?",
    "parse": "(Yield (takeRight (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (Event.subject_? (?~= \"dentist appointment\"))))) 1L))"
  },
  {
    "original_sentence": "Make a dentist appointment on the first Thursday of next month at 3 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (DowOfWeekNew (Thursday) (NumberWeekOfMonth 1L (NextMonth))) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Hey can you make my Birthday for early May 12th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Birthday\")) (Event.start_? (DateTimeConstraint (Early) (MD 12L (May))))))))"
  },
  {
    "original_sentence": "Looks good. Please make an event early on April 29",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Early) (MD 29L (April))))))))"
  },
  {
    "original_sentence": "Please schedule an event early Saturday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Early) (NextDOW (Saturday)))))))"
  },
  {
    "original_sentence": "Hello can you decline Pen shopping",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Pen shopping\"))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "yes that is it, and I also need to decline food shopping on March 1",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 1L (March)) (Event.subject_? (?~= \"food shopping\")))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "Great, thank you! Decline my Therapy Session and say that I'm feeling really happy right now",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I'm feeling really happy right now\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Therapy Session\"))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "who will be at the meeting tomorrow?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "That's right. Tell me who has tentatively accepted the department meeting?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"department meeting\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Who has declined the drinks event?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"drinks\")))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Am I free next Friday afternoon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"
  },
  {
    "original_sentence": "When is the Douglas meeting?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Douglas meeting\")))))))"
  },
  {
    "original_sentence": "Can you schedule that meeting on Friday at 10 am?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "Can you display my calendar please",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Please add a flight for January 26th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"flight\")) (Event.start_? (DateTime.date_? (?= (MD 26L (January)))))))))"
  },
  {
    "original_sentence": "Yes, the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please cancel my flight for January 26th and schedule the other flight",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Please cancel my flight for January 26th",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 26L (January)) (Event.subject_? (?~= \"flight\"))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Hi, I need to see all of the events I have scheduled for both Thursday and Friday of this week please.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (DowToDowOfWeek (Thursday) (Friday) (ThisWeek)))))"
  },
  {
    "original_sentence": "I have a meeting with Jaal and Evfra today from 4:30 for 4 hours.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (HourMinutePm 4L 30L)))) (Event.duration_? (?= (toHours 4)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jaal\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Evfra\"))))))))))))"
  },
  {
    "original_sentence": "Rename it to \"Correspond with New Alien Race\"",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"Correspond with New Alien Race\")))))"
  },
  {
    "original_sentence": "Nice. Confirm.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What do I have going on at this moment",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (Now) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Cancel my meeting with Yuri on Sunday scheduled for 12:00pm.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 12L)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Yuri\"))))))))))))"
  },
  {
    "original_sentence": "yeah!this one is i want to cancel.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "TELL ME MY SCHEDULE FOR THE DAY",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Move my appointment withe Kristen Clifford to right now",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kristen Clifford\")))))))) (Event.start_? (?= (Now))))))"
  },
  {
    "original_sentence": "Right as rain!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add lunch with Cher Roydon at 1:00om",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (NextTime (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher Roydon\")))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Meet with Wade Blakeley after lunch to discuss finances",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"discuss finances\")) (Event.start_? (OnDateAfterTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Lunch)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wade Blakeley\")))))))))))"
  },
  {
    "original_sentence": "a little later",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Move appointment to 2:00 pm",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "indicate a dentist appointment on Tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))))))"
  },
  {
    "original_sentence": "The first one looks good",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you cancel any meeting I have after this appointment please",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "what can you help with then",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Delete the event right after that one then",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))))))))"
  },
  {
    "original_sentence": "When is the second event happening next month?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))) 2L))"
  },
  {
    "original_sentence": "What is the second event i have tomorrow?",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) 2L))"
  },
  {
    "original_sentence": "What is my second event next month?",
    "parse": "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))) 2L))"
  },
  {
    "original_sentence": "When is my job interview scheduled for?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"job interview\")))))))"
  },
  {
    "original_sentence": "Set my status to busy for that.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.showAs_? (?= (ShowAsStatus.Busy))))))"
  },
  {
    "original_sentence": "Yea",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please decline my meeting in tomorrow?",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Decline the sales meeting tomorrow and say I had another meeting at the same time.",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I had another meeting at the same time\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"sales meeting\")))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Accept the invite for next week.",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Create a lunch meeting at the Baskin Robbins after my meeting at 11am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (?= (NextTime (HourMinuteAm 11L 30L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Baskin Robbins\")))))))"
  },
  {
    "original_sentence": "what is the weather right now?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (?= (Now))))"
  },
  {
    "original_sentence": "Erie",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"Erie\")))))))"
  },
  {
    "original_sentence": "how hot is it right now?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))"
  },
  {
    "original_sentence": "ERie, pa",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"ERie, pa\")))))))"
  },
  {
    "original_sentence": "allow location access",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Hi my name is Megan Bowen and I need help with my calendar",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Can you tell me when my lunch date with Paige Ashworth is?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch date\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\"))))))))))"
  },
  {
    "original_sentence": "Can you add a lunch date for tomorrow at 12 pm with Paige Ashworth?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 12L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\")))))))))))"
  },
  {
    "original_sentence": "Yes! it looks great!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you search for Kristen Clifford's birthday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Kristen Clifford's birthday\"))))"
  },
  {
    "original_sentence": "Can you add Kristen Clifford's birthday to May 30th as an annual event?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Kristen Clifford's birthday\")) (Event.start_? (DateTime.date_? (?= (MD 30L (May)))))))))"
  },
  {
    "original_sentence": "Yes the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "but I want it to repeat every year",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "what did i have today before now",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "When did I have my bake a cake event earlier today?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (EventOnDate (Today) (Event.subject_? (?~= \"bake a cake\")))))))))"
  },
  {
    "original_sentence": "When was my dance party earlier today?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (EventOnDate (Today) (Event.subject_? (?~= \"dance party\")))))))))"
  },
  {
    "original_sentence": "Add a sales meeting tomorrow afternoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"sales meeting\")) (Event.start_? (DateTimeConstraint (Afternoon) (Tomorrow)))))))"
  },
  {
    "original_sentence": "Actually call it a sales discussion.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"sales discussion\")))))"
  },
  {
    "original_sentence": "fix the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Schedule dinner and a movie for tomorrow night at 5 pm with Karen.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner and a movie\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\")))))))))))"
  },
  {
    "original_sentence": "Take Carol off this event and change the event to lunch.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.subject_? (?= \"lunch\")) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carol\"))))))))))))"
  },
  {
    "original_sentence": "How's my week looking?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
  },
  {
    "original_sentence": "hi, is the meeting still on?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "great add starbucks to the location here",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"starbucks\"))))))"
  },
  {
    "original_sentence": "Looks good, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete my meeting this afternoon.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Afternoon)))))))))"
  },
  {
    "original_sentence": "Can you see if I have any other meetings scheduled for this week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))"
  },
  {
    "original_sentence": "Alright, thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you add a meeting for Tuesday at 5 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "Name the meeting \"Budget Planning\".",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"Budget Planning\")))))"
  },
  {
    "original_sentence": "Does Bar of America in Truckee have happy hour?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.HappyHour) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Bar of America in Truckee\"))))))"
  },
  {
    "original_sentence": "looking goods",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Hey Bar Louie has happy hour specials, right?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.HappyHour) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Bar Louie\"))))))"
  },
  {
    "original_sentence": "Does Re:bar have happy hour",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.HappyHour) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Re:bar\"))))))"
  },
  {
    "original_sentence": "go away",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Create Cake Day on July 30 at 2 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Cake Day\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 30L (July)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "cats are the best",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "on the cake day, baking session",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"baking session\")) (Event.start_? (DateTime.date_? (?= (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"cake day\"))))))))))))))"
  },
  {
    "original_sentence": "Food",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you try to make a new dentist appointment for tomorrow?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "Is my soccer game tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"soccer game\")))))) 0L))"
  },
  {
    "original_sentence": "Do I have any football games this weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"football games\")) (ThisWeekend))))) 0L))"
  },
  {
    "original_sentence": "Is there a team meeting event this Month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"team meeting\")) (FullMonthofMonth (Date.month (Today))))))) 0L))"
  },
  {
    "original_sentence": "Do I have any meeting with Jeff",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeff\"))))))) 0L))"
  },
  {
    "original_sentence": "Do I have a meeting at UNR?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (?= (LocationKeyphrase.apply \"UNR\")))))) 0L))"
  },
  {
    "original_sentence": "Block off time on Tuesday of next week for an hour at 11:00 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (DowOfWeekNew (Tuesday) (NextWeekList)) (NumberAM 11L)))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Call it Project Planning and make sure it's set to be in Conference Room 2A",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.subject_? (?= \"Project Planning\")) (Event.location_? (?= (LocationKeyphrase.apply \"Conference Room 2A\")))))))"
  },
  {
    "original_sentence": "I think we're actually going to need more than an hour for that, so it needs to be moved. Make it from 1:30pm-3:00pm instead",
    "parse": "(let (x0 (DateAtTimeWithDefaults (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (HourMinutePm 1L 30L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L)))))))))"
  },
  {
    "original_sentence": "set dinner meeting tomorrow at 8 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "Can you add prom dress shopping for daughter at Oakdale Mall from 4 til 6 on Thursday and mark it as out of office?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (& (Event.subject_? (?= \"prom dress shopping for daughter\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 6L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Oakdale Mall\")))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add Holiday Inn to the last meeting location.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (FindLastEvent (EventBeforeDateTime (Now) (^(Event) EmptyStructConstraint)))) (Event.location_? (?= (LocationKeyphrase.apply \"Holiday Inn\"))))))"
  },
  {
    "original_sentence": "Yes looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What did I have scheduled with Todd last week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Todd\")))) (LastWeekNew))))"
  },
  {
    "original_sentence": "Set up a follow up meeting with Todd and Damon for Wed, July 17 at the same time.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"follow up meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 17L (July)) (DateTime.time (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Todd\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon\"))))))))))))"
  },
  {
    "original_sentence": "Great job. Thank you. Bye.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete the party planned for after my last doctor's appointment.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (Event.subject_? (?~= \"party\")) (Event.end (FindLastEvent (Event.subject_? (?~= \"doctor's appointment\"))))))))))))"
  },
  {
    "original_sentence": "Don't cancel it, move it to saturday at Lake Eola",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))) (Event.location_? (?= (LocationKeyphrase.apply \"Lake Eola\")))))))"
  },
  {
    "original_sentence": "That is correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What am I doing after my last basketball game next Friday?",
    "parse": "(let (x0 (Event.end (FindLastEvent (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"basketball game\")))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)))))"
  },
  {
    "original_sentence": "Can you delete it?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Good evening, I want to see what is on my calendar for the next week",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.start_? (DateTime.date_? (NextWeekList)))))"
  },
  {
    "original_sentence": "Great, thanks. Can you schedule a dentist appointment for Tuesday afternoon?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Tuesday))))))))"
  },
  {
    "original_sentence": "The second option.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks, do I have anything else going on on Tuesday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "What about tomorrow?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "ok thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make a fishing trip 3 days long starting tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"fishing trip\")) (Tomorrow) (toDays 3)))))"
  },
  {
    "original_sentence": "I need you to change that to be 5 days long instead.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 5)))))"
  },
  {
    "original_sentence": "fishing trip ALL DAY",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \"fishing trip\")) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Looks legit",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Looks great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please, tell me what do I have on Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is the second event i have on friday?",
    "parse": "(Yield (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Can you move the Lunch Saturday to be at 1 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"Lunch\"))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Oh I meant move lunch on next Sunday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"lunch\"))))))"
  },
  {
    "original_sentence": "Yes. And can you move the conference next wednesday to tuesday?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (Event.subject_? (?~= \"conference\"))))))) (do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Tuesday))))))))))"
  },
  {
    "original_sentence": "i meant the event GTC",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (Event.subject_? (?= \"GTC\")))))"
  },
  {
    "original_sentence": "Can you update my Event on the 20th to be tomorrow",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 20L) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "No, i actually meant the update to be for the lunch.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (Event.subject_? (?~= \"lunch\")))))"
  },
  {
    "original_sentence": "yup that's the one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add coffee with Sam for tomorrow at 11am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"coffee\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\")))))))))))"
  },
  {
    "original_sentence": "Yes, who's coming?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (AttendeesWithResponse (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (ResponseStatusType.Accepted))))"
  },
  {
    "original_sentence": "Who will be attending that event?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "OK, thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Who is attending the team meeting tomorrow afternoon?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (Event.subject_? (?~= \"team meeting\"))) (Afternoon)))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "thanks for your information",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "hello, please help me create n event for 21st FEB",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (MD 21L (February))))))))"
  },
  {
    "original_sentence": "The second one looks good",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks, do I have anything else scheduled on the 21st?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (nextDayOfMonth (Today) 21L) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Thanks, add coffee with Annie to my calendar on the 21st at 8:30 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"coffee\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 21L) (HourMinuteAm 8L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Annie\")))))))))))"
  },
  {
    "original_sentence": "That looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "what is my next event?",
    "parse": "(Yield (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L))"
  },
  {
    "original_sentence": "ok 9 am great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Remain me for that appointment",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "ok that's fine , what about the weather in texas yesterday?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"texas\"))) (DateTime.date_? (?= (Yesterday)))))"
  },
  {
    "original_sentence": "Can you change the appointment to Monday the 8th please.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 8L)))))))))"
  },
  {
    "original_sentence": "Delete all events that don't include Nicole.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "what meetings do i have next month",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth)))))"
  },
  {
    "original_sentence": "When is my next meeting that doesn't include Jim Smith?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim Smith\")))))))) 1L)))"
  },
  {
    "original_sentence": "How many events next week include Jim and Nicole, but not our manager?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nicole\")))) (AttendeeListExcludesRecipient (?= (FindManager (toRecipient (CurrentUser))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))))"
  },
  {
    "original_sentence": "Thank you. im done now",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is the weather going to be like tomorrow?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "Any rain in the forecast?",
    "parse": "(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Cancel all events with Carmen",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "cancel all my meetings with james cameron this week",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Cancel my first meeting with James Cameron this week.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James Cameron\")))) (ThisWeek)) 1L)))))"
  },
  {
    "original_sentence": "Yes, cancel that.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cancel my next meeting with Carmen.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carmen\")))) 1L)))))"
  },
  {
    "original_sentence": "Yes and do I have any other meetings scheduled with James Cameron?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James Cameron\")))))))) 0L)))"
  },
  {
    "original_sentence": "put meeting with rangeela",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"rangeela\"))))))))))"
  },
  {
    "original_sentence": "Actually cancel the meeting with Rangeela.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "please list my all events on my calander?",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "Are you sure? Please do not cancel the meeting with Rangeela.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "I mean cancel with Reggie instead.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Reggie\")))))))))))"
  },
  {
    "original_sentence": "I need to make a Doctor's Appointment for Tuesday afternoon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Doctor's Appointment\")) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Tuesday))))))))"
  },
  {
    "original_sentence": "Make it for 4:10 PM instead.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinutePm 4L 10L)))))))"
  },
  {
    "original_sentence": "Almost, make it for July 18th.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (MD 18L (July))))))))"
  },
  {
    "original_sentence": "make that 9-10:30",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))))))"
  },
  {
    "original_sentence": "Make this end at 11AM please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "How good is the Knowledge Center in Reno?",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Knowledge Center in Reno\"))))))"
  },
  {
    "original_sentence": "How is Thai 101 in Reno ranked?",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Thai 101 in Reno\"))))))"
  },
  {
    "original_sentence": "How is Taylor's in Loomis rated?",
    "parse": "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Taylor's in Loomis\"))))))"
  },
  {
    "original_sentence": "Can you tell me what I'm doing late morning on thursday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)) (LateMorning))))"
  },
  {
    "original_sentence": "That's going to end at 1.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need a dentist appointment late morning tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (DateTimeConstraint (LateMorning) (Tomorrow)))))))"
  },
  {
    "original_sentence": "10:30AM is perfect",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (HourMinuteAm 10L 30L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "well set and remember it",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "get rid of Friday event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "I think so",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Good, okay, can you now add a quick coffee meeting at Starbuck's with Jeff and Peter for Monday the 18th at 10:30 to 10:50 am?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (nextDayOfMonth (Today) 18L) (HourMinuteAm 10L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (& (Event.subject_? (?= \"quick coffee meeting\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinuteAm 10L 50L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Starbuck's\")))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeff\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Peter\")))))))))))))"
  },
  {
    "original_sentence": "Great. Can you move my meeting on friday to monday?",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I wanna grab Donuts Sunday morning at 6.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"grab Donuts\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 6L))))))))"
  },
  {
    "original_sentence": "Add Jamal to the event and make the location at Amy's Donuts.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.location_? (?= (LocationKeyphrase.apply \"Amy's Donuts\"))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamal\")))))))))))"
  },
  {
    "original_sentence": "Perfect! Thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make a meeting for Wednesday at 9",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "Plus Jamie will be there and it's at the new bakery now.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.location_? (?= (LocationKeyphrase.apply \"new bakery\"))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamie\")))))))))))"
  },
  {
    "original_sentence": "Can you find any meetings scheduled between 1 and 3 pm next Friday",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (NextDOW (Friday)) (^(Event) EmptyStructConstraint) (NumberPM 1L) (NumberPM 3L))))"
  },
  {
    "original_sentence": "What is the second event?",
    "parse": "(Yield (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Add Go to the Vet a half hour after Work with Dogs.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Go to the Vet\")) (Event.start_? (?= (adjustByPeriodDuration (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Work with Dogs\")))))) (PeriodDuration.apply :duration (toHours 0.5)))))))))"
  },
  {
    "original_sentence": "Can you add dinner with Alex after the Vet but before 6 PM?",
    "parse": "(let (x0 (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Vet\"))))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTimeAndConstraint x0 (TimeAfterDateTime x0 (NumberPM 6L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex\"))))))))))))"
  },
  {
    "original_sentence": "Add Dinner with Alex after my 3:00 pm appointment for \"Go to the Vet\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Dinner\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Go to the Vet\")) (EventAtTime (^(Event) EmptyStructConstraint) (NumberPM 3L)))))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex\")))))))))))"
  },
  {
    "original_sentence": "What is the temp right now?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))"
  },
  {
    "original_sentence": "in farenheit",
    "parse": "(Yield (inFahrenheit (Execute (refer (extensionConstraint (^(Temperature) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "What's the forcast for the week",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeek))))"
  },
  {
    "original_sentence": "Find events on my schedule that are not Crossfit.",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (negate (?~= \"Crossfit\")))))"
  },
  {
    "original_sentence": "Show me events besides eating.",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (negate (?~= \"eating\")))))"
  },
  {
    "original_sentence": "Does my calender have anything that is not work?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (negate (?~= \"work\")))))) 0L))"
  },
  {
    "original_sentence": "delete my first appointment in summer",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (SeasonSummer)) 1L)))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "make a board meeting in spring",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"board meeting\")) (Event.start_? (DateTime.date_? (SeasonSpring)))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Make an event for meeting with ceo on Friday from 3-5pm",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Make an event for boss meeting on Friday from 3-5pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"boss meeting\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "MAKE A PARTY WITH BOND ON NEXT MONTH",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"PARTY\")) (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"BOND\")))))))))))"
  },
  {
    "original_sentence": "the one on the 2nd is good thanks",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.day_? (?= (Day.apply 2L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok thank you",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "When is make the doctor appointment",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"make the doctor appointment\")))))))"
  },
  {
    "original_sentence": "Make it end at 11AM",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "the make the doctor appointment will be 9AM to 11AM",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor appointment\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (EventOnDate (DateTime.date (Event.start x0)) (& (Event.end_? (DateTime.time_? (?= (NumberAM 11L)))) (EventOnDate (DateTime.date (Event.start x0)) (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))))))))))"
  },
  {
    "original_sentence": "Where am I located?",
    "parse": "(Yield (Here))"
  },
  {
    "original_sentence": "Will you put on my schedule lunch with bob tomorrow at 1pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bob\")))))))))))"
  },
  {
    "original_sentence": "Yes this looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "make start time as 12:30 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 12L 30L)))))))"
  },
  {
    "original_sentence": "Yes this looks much better",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you delete my meeting before this event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.end_? (?= (Execute (refer (& (^(DateTime) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(DateTime) EmptyStructConstraint))))))))))))))"
  },
  {
    "original_sentence": "Cancel that meeting I have with Will and his boss at 2pm",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Will\")))))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 2L)) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Set up Dress Code Violation with Jessie and her manager on Monday at 9 am.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jessie\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Dress Code Violation\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 9L))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change the time to 10am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "Add coffee with Sam for tomorrow at 6am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"coffee\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 6L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\")))))))))))"
  },
  {
    "original_sentence": "look well",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks great work",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a meeting with bob between 1-5 for 45 minutes on friday",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTimeAndConstraint x0 (TimeAfterDateTime x0 (NumberPM 5L)))) (Event.duration_? (?= (toMinutes 45)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bob\"))))))))))))"
  },
  {
    "original_sentence": "The first one please.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "add Bob's manager to it please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))))))))"
  },
  {
    "original_sentence": "It does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "schedule Dentist Monday morning",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dentist\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Monday))))))))"
  },
  {
    "original_sentence": "The bottom one please",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "perfect thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "add meeting dentist on apr 15",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"meeting dentist\")) (Event.start_? (DateTime.date_? (?= (MD 15L (April)))))))))"
  },
  {
    "original_sentence": "first one is ok.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Create a Dinner Date tonight at Shalon hotel from 5pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Dinner Date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 5L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Shalon hotel\")))))))"
  },
  {
    "original_sentence": "Yep, it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, delete my flight to Amarillo",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Amarillo\")))))))))"
  },
  {
    "original_sentence": "Yes, I no longer need that.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, add a flight to Austin at the same time",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Hi!",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Can you please help me set up recurring dates in my calendar that are every 3 months?",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "Alright! No worries! Can you tell me if I am available during July 4th?",
    "parse": "(Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (?= (MD 4L (July))))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true))"
  },
  {
    "original_sentence": "Can you setup a doctor's appointment for May 23rd at 10AM?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"doctor's appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 23L (May)) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Nevermind it doesn't look correct",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Schedule 3 pm tentative shareholders huddle",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"shareholders huddle\")) (Event.start_? (?= (NextTime (NumberPM 3L))))) (Event.showAs_? (?= (ShowAsStatus.Tentative)))))))"
  },
  {
    "original_sentence": "Schedule meeting with Eric and Susan at 4pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 4L)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Eric\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Susan\"))))))))))))"
  },
  {
    "original_sentence": "Show me as \"out of office\" for 30 minutes.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (Now))) (Event.duration_? (?= (toMinutes 30)))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
  },
  {
    "original_sentence": "Schedule get food for Saturday barbeque at 9am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"get food for Saturday barbeque\")) (Event.start_? (?= (NextTime (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "when does the easter festival fall on",
    "parse": "(Yield (NextHolidayFromToday (Holiday.Easter)))"
  },
  {
    "original_sentence": "Then when does Good Friday fall on?",
    "parse": "(Yield (NextHolidayFromToday (Holiday.GoodFriday)))"
  },
  {
    "original_sentence": "What events do I have tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "When is easter in 2054?",
    "parse": "(Yield (HolidayYear (Holiday.Easter) (Year.apply 2054L)))"
  },
  {
    "original_sentence": "Thanks. How about good friday?",
    "parse": "(Yield (NextHolidayFromToday (Holiday.GoodFriday)))"
  },
  {
    "original_sentence": "NICE",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Let's make 2PM my golf time.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"golf time\")) (Event.start_? (?= (NextTime (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "WORK",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you change my golf time to 4 PM?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"golf time\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Thank you. Please search for any meetings with Jan.",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jan\"))))))"
  },
  {
    "original_sentence": "Whats the weather outside like today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "Whatll it be like tomorrow?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint DateTime)) roleConstraint (Path.apply \"time\")) (intension (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Whats the humidity level?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (humidity) (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))"
  },
  {
    "original_sentence": "What is the chance of rain for today?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "What is the current dew point?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "I have to make an event for the meeting on Tuesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))))))"
  },
  {
    "original_sentence": "Create a meeting with Jay for Friday before 11am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (OnDateBeforeTime (NextDOW (Friday)) (NumberAM 11L))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jay\")))))))))))"
  },
  {
    "original_sentence": "Let's go with the 12 AM and also add another meeting with Jay after that",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 12L)))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jay\"))))))))))))"
  },
  {
    "original_sentence": "The second one works.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "cancel the meeting with jay",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jay\")))))))))))"
  },
  {
    "original_sentence": "Yes, please get rid of that meeting.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I met with tim this morning at 6am, can you add that?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberAM 6L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"tim\")))))))))))"
  },
  {
    "original_sentence": "Yes. It should last 75 minutes.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toMinutes 75))))))"
  },
  {
    "original_sentence": "show me the another timing for the same meeting.",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "CHANGE THE MEETING TIMING FROM 6.00 AM TO 10.00 AM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberAM 6L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Cancel this meeting",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "When do I have practice without Ben?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"practice\")) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ben\"))))))))))))))"
  },
  {
    "original_sentence": "What about my next practice without Tina?",
    "parse": "(Yield (FindNumNextEvent (& (Event.subject_? (?~= \"practice\")) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tina\"))))))))) 1L))"
  },
  {
    "original_sentence": "Whens my next band concert without Tina or Ben?",
    "parse": "(Yield (Event.start (FindNumNextEvent (& (Event.subject_? (?~= \"band concert\")) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tina\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ben\")))))))))) 1L)))"
  },
  {
    "original_sentence": "When is my next meeting without Sarah?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\")))))))) 1L)))"
  },
  {
    "original_sentence": "When is my next meeting without Tina or Sarah?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tina\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\"))))))))) 1L)))"
  },
  {
    "original_sentence": "Move the manager's meeting forward by an hour.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"manager's meeting\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (PeriodDurationBeforeDateTime (Event.start x0) (PeriodDuration.apply :duration (toHours 1)))))))))"
  },
  {
    "original_sentence": "please change my lunch time 4pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "make start time as 3 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "What do I have on my calendar after that lunch on Sunday?",
    "parse": "(let (x0 (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"lunch\")))))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)))))"
  },
  {
    "original_sentence": "ok find it",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "create meeting with bob on monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bob\")))))))))))"
  },
  {
    "original_sentence": "Will I be at First Baptist Church Millersville anytime this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.location_? (?= (LocationKeyphrase.apply \"First Baptist Church Millersville\"))) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Okay 1PM is okay, and make sure it's at Central Park",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Make me an meeting at Central Park with Bob Smith.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"meeting at Central Park\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob Smith\")))))))))))"
  },
  {
    "original_sentence": "second one looks prefect fix it",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Do I have a meeting today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Do I have any other events today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "Can you please block off 2 hours tomorrow for a Soccer Practice with Jenna?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Soccer Practice\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.duration_? (?= (toHours 2)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jenna\")))))))))))"
  },
  {
    "original_sentence": "No, move the soccer practice to Saturday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))))))"
  },
  {
    "original_sentence": "I want it to be on the next saturday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))))))"
  },
  {
    "original_sentence": "Make a new appointment for thursday morning and then 20 minutes later make a new appointment for getting lunch.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I'm going to a concert with Alicia, Jenny, and Thomson and Zizagoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"concert\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alicia\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jenny\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Thomson\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Zizagoon\"))))))))))))"
  },
  {
    "original_sentence": "The concert starts at 7 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "The first option works, the concert is today",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Create a timer for 35 minutes from 6:30am",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Okay, can you make a reminder for 5:55am then?",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Yep, I like the reminder for 5:55 am is good but make it from 5:55 to 6:00 am on Saturday.",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Yes, could you please cancel my four o' clock appointment?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 4L)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Actually cancel my six o clock appointment.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDateTime (NextTime (NumberPM 6L)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Yes, please do that",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok now i need to remove my Flying Off Rocks event which is sunday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?= \"Flying Off Rocks\"))))))))))"
  },
  {
    "original_sentence": "cancel the appointment 6.00 pm to 7.00 pm",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint) (NumberPM 6L) (NumberPM 7L)))))))))"
  },
  {
    "original_sentence": "What is going on this weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "Thanks, now what do I have on the 28th after 4?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (nextDayOfMonth (Today) 28L) (^(Event) EmptyStructConstraint) (NumberPM 4L))))"
  },
  {
    "original_sentence": "Thank you for letting me know that my schedule is open after 4 PM.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What am I doing next weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekend))))"
  },
  {
    "original_sentence": "What do I have scheduled tomorrow afternoon?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Afternoon))))"
  },
  {
    "original_sentence": "i need to go shopping with Cecelia Waller and Wade Blakeley tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"go shopping\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cecelia Waller\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wade Blakeley\"))))))))))))"
  },
  {
    "original_sentence": "those times won't work",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "i need to go shopping tomorrow with Cecelia Waller and Wade Blakeley. We can go at 1pm until 5pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"go shopping\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cecelia Waller\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wade Blakeley\")))))))))))))"
  },
  {
    "original_sentence": "yes, indeed",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "awesome",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "can we go shopping from 5pm to 7pm instead?",
    "parse": "(let (x0 (NextTime (NumberPM 5L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"go shopping\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 7L)))))))))"
  },
  {
    "original_sentence": "i need to go shopping tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go shopping\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "no, i need to go shopping tomorrow from 5pm to 7pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L))) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 7L)))))))))"
  },
  {
    "original_sentence": "yes, it is!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "cool mr. bot. Have a nice night",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Is it agreeable if you could show my what I have?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))) 0L))"
  },
  {
    "original_sentence": "Please update Nicole's wedding to be Fri - Sun instead.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Nicole's wedding\"))))) x1 (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (DateAndConstraint x1 (nextDayOfWeek x1 (Sunday))))))))"
  },
  {
    "original_sentence": "Very good, thank you so much.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I will be at the Hawks game for 3 days starting tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"Hawks game\")) (Tomorrow) (toDays 3)))))"
  },
  {
    "original_sentence": "Pretty much. Could you make the location Seattle?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \"Seattle\"))))))"
  },
  {
    "original_sentence": "good game",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cancel the meeting and fire her",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Cancel my meeting with Alexa for this afternoon.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alexa\"))))) (Afternoon)))))))))"
  },
  {
    "original_sentence": "cancel the meeting with alexa",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"alexa\")))))))))))"
  },
  {
    "original_sentence": "Add a hiring meeting tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"hiring meeting\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "Yes the first one, add Jess to that meeting",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jess\")))))))))))"
  },
  {
    "original_sentence": "Make a appointment for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "The second one. Change the sales meeting to 2pm.",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"sales meeting\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "cancel this sales meeting",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Okay thank you!. i let you know once i need help",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "nothing else im done bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Yeah I'm gonna delete all of my events for this month",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "What time do I have my meeting with Tim?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\")))))))))"
  },
  {
    "original_sentence": "Can you set up a meeting called \"planning\" at 8AM on that same day?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"planning\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Sue's team is meeting with me right after the sales evaluation.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"sales evaluation\")))))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sue\"))))))))))))"
  },
  {
    "original_sentence": "Couldn't be better.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule an appointment with Sarah's team after the awards gala on Tuesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"awards gala\"))))))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\"))))))))))))"
  },
  {
    "original_sentence": "That is correct!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Mark in water polo with Jim on the 5th lasting until the 7th.",
    "parse": "(let (x0 (nextDayOfMonth (Today) 5L)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"water polo\")) (Event.start_? (DateTime.date_? (?= x0)))) (Event.end_? (DateTime.date_? (?= (nextDayOfMonth x0 7L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\"))))))))))))"
  },
  {
    "original_sentence": "Hi! I need help with my calendar",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "How many appointments do I have on my schedule tomorrow?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Ok I need to add a meeting with Fiona Mason from 2pm to 3pm",
    "parse": "(let (x0 (NextTime (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fiona Mason\"))))))))))))"
  },
  {
    "original_sentence": "Perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have a meeting with Cher Roydon on Friday or Thursday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher Roydon\")))))))) 0L))"
  },
  {
    "original_sentence": "Ok, I would like to delete the meeting I have with Cher on Friday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher\"))))))))))))"
  },
  {
    "original_sentence": "Ok, that's fine",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need a lunch scheduled with Abby on Wednesday. We will need a room",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday)))))) (Event.location_? (roomRequest))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "Those look good, put one of em on there",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need a room at Berkeley at 3pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 3L)))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Berkeley\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "Yeah",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need a room for a riot in Berkeley.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Berkeley\")) (roomRequest))))))"
  },
  {
    "original_sentence": "show me how my day looks",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "What's for dinner tonight?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Create a meeting in the afternoon on Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Monday)))))))"
  },
  {
    "original_sentence": "put on appointment time change in my calender",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "make that 9-10:30",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))))))"
  },
  {
    "original_sentence": "Yes this looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "hi",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Has Tom responded ot my email?",
    "parse": "(FenceSwitchTabs)"
  },
  {
    "original_sentence": "Can you send Mike an invite to my Party on Friday?",
    "parse": "(Yield (ForwardEventWrapper (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"Party\")))))) (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mike\"))))))))"
  },
  {
    "original_sentence": "Yes please do.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Did mike key get my forward?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "Am I meeting with Tove tomorrow morning?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tove\"))))) (Morning))))) 0L))"
  },
  {
    "original_sentence": "what is my last event for friday?",
    "parse": "(Yield (FindLastEvent (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "just a minute",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Can you delete that event?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Hrmm",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Go ahead and cancel that",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please schedule a lunch meeting for Monday at noon with Cindy.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (Noon))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cindy\")))))))))))"
  },
  {
    "original_sentence": "Yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add location of Denny's for lunch meeting on Monday.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"lunch meeting\"))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Denny's\"))))))"
  },
  {
    "original_sentence": "What doctor is the appointment with?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Do I have a doctor appointment soon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor appointment\"))))) 0L))"
  },
  {
    "original_sentence": "Can you change the time to 11am",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "That looks good to me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thank you very much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What room will I have for my hotel stay?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"hotel stay\")))))))"
  },
  {
    "original_sentence": "What day is my chiropractor on?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"chiropractor\")))))))"
  },
  {
    "original_sentence": "delete that please. Wrong day.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Could you please change my event on sunday to be in the am?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (ConvertTimeToAM (DateTime.time (Event.start x0))))))))))"
  },
  {
    "original_sentence": "Perfect, also change my Saturday meeting to be from AM to PM.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))) (do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (ConvertTimeToPM (DateTime.time (Event.start x0)))))))))))"
  },
  {
    "original_sentence": "Update my Bus Stop event occur in the AM",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?= \"Bus Stop\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (ConvertTimeToPM (DateTime.time (Event.start x0))))))))))"
  },
  {
    "original_sentence": "ok cool, but now can you change my meeting with Kim to be AM not PM.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))) (do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (ConvertTimeToAM (DateTime.time (Event.start x0)))))))))))"
  },
  {
    "original_sentence": "See tim?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"tim\"))))))"
  },
  {
    "original_sentence": "Meeting with Tim Cancel now.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\")))))))))))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Skype Call Friday morning",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Skype Call\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "I think number two.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Create birthday party december 29th 3pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"birthday party\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 29L (December)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Ok, can you search if I have other events that day?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "When does my meeting with James start?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\")))))))))"
  },
  {
    "original_sentence": "Is my meeting with Tony today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tony\")))))))) 0L))"
  },
  {
    "original_sentence": "If there are any meetings on Friday next week, delete them.",
    "parse": "(FenceConditional)"
  },
  {
    "original_sentence": "Hi can you tell me if I have anything scheduled tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Please create lunch with boss tomorrow at 11am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "When is the next meeting with Sarah and her manager?",
    "parse": "(let (x0 (PersonName.apply \"Sarah\")) (Yield (Event.start (FindNumNextEvent (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))) 1L))))"
  },
  {
    "original_sentence": "Please change that from PM, to 10:30 AM.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 10L 30L)))))))"
  },
  {
    "original_sentence": "I need it to start at 10am",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "can you tell me my events tomorrow",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Have my meeting with Sarah, Dan, and Damon go from 10:00 AM until 11:15 AM.",
    "parse": "(let (x0 (NextTime (NumberAM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinuteAm 11L 15L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon\")))))))))))))"
  },
  {
    "original_sentence": "What the weather like in Buffalo",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Buffalo\"))) (?= (Now))))"
  },
  {
    "original_sentence": "Will it rain tonight ?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTimeConstraint (Night) (Today)))))"
  },
  {
    "original_sentence": "When will it snow ?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Is it raining in Toronto ?",
    "parse": "(Yield (IsRainy (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Toronto\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "What'",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What's the weather forecast for Monday ?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextDOW (Monday))))))"
  },
  {
    "original_sentence": "How about the weather in Los Angeles on Monday",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Los Angeles\"))) (DateTime.date_? (?= (NextDOW (Monday))))))"
  },
  {
    "original_sentence": "What about Paris on Monday ?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"Paris\")))))))"
  },
  {
    "original_sentence": "In Singapore on Monday ?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Singapore\"))) (DateTime.date_? (?= (NextDOW (Monday))))))"
  },
  {
    "original_sentence": "Whtat about Denver Colorado on Monday",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Denver Colorado\"))) (DateTime.date_? (?= (NextDOW (Monday))))))"
  },
  {
    "original_sentence": "What about the windchill in Denver on Monday",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"Denver\")))))))"
  },
  {
    "original_sentence": "what was the weather like in buffalo last year on October 29",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"buffalo\"))) (DateTime.date_? (?= (MD 29L (October))))))"
  },
  {
    "original_sentence": "thankyou",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "goodbye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you tell me if I've got anything scheduled at Stinson Beach, CA next month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \"Stinson Beach, CA\"))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))))))"
  },
  {
    "original_sentence": "delete this event on my calender",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes. Will I be in Ventura this week?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.location_? (?= (LocationKeyphrase.apply \"Ventura\"))) (ThisWeek))))) 0L)))"
  },
  {
    "original_sentence": "Please have me listed in Ventura for next week.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.location_? (?= (LocationKeyphrase.apply \"Ventura\")))))))"
  },
  {
    "original_sentence": "Yes please put my flight back from Ventura for August 30",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"flight back from Ventura\")) (Event.start_? (DateTime.date_? (?= (MD 30L (August))))))))))"
  },
  {
    "original_sentence": "Delete the shopping trip from yesterday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Yesterday) (Event.subject_? (?~= \"shopping trip\"))))))))))"
  },
  {
    "original_sentence": "yes, because i have some work on yesterday",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please add work event on Wednesday at 2pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"work\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Great, let's also schedule a Push Up Break at 2:45 pm that day.",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Push Up Break\")) (Event.start_? (?= (DateAtTimeWithDefaults (DateTime.date (Event.start (^(Dynamic) item x0))) (HourMinutePm 2L 45L))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What time do I have to be at the salon tomorrow?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.location_? (?= (LocationKeyphrase.apply \"salon\")))))))))"
  },
  {
    "original_sentence": "Can you change it to 10 AM?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thank you very much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add Salon to my calendar for a month after that one.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Salon\")) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (DateTime.date (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (toMonths 1)))))))))"
  },
  {
    "original_sentence": "Where is my meeting being held right now?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (Now) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Change the end time to 3pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Change the time to 3pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "yes this looks much better",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "IT'S GOOD",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Create an event called \"School Meeting\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"School Meeting\")))))"
  },
  {
    "original_sentence": "Well, actually, can you make if for 1 in the afternoon instead please?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "No it should be an hour long",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "no, it needs to be a little later",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Can you please update my appointment tomorrow to 2 pm instead of 3 pm?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "That is correct!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please add Bike Ride with Kacey to the schedule next Friday at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Bike Ride\")) (Event.start_? (DateTimeConstraint (?= (Noon)) (NextDOW (Friday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kacey\")))))))))))"
  },
  {
    "original_sentence": "Replace Kacey with Amanda.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kacey\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amanda\")))))))))))"
  },
  {
    "original_sentence": "uh huh",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What events do I have next year?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullYearofYear (NextYear)))))"
  },
  {
    "original_sentence": "Sick! Make me a dentist appointment in 2099",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (DateTime.date_? (FullYearofYear (Year.apply 2099L))))))))"
  },
  {
    "original_sentence": "Yup! When does my Mexico Vacation start in 2021?>",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Mexico Vacation\")) (FullYearofYear (Year.apply 2021L)))))))))"
  },
  {
    "original_sentence": "Schedule a meeting for me tomorrow at 3PM for 1 hour with 10 attendees.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Put coffee date with Mercy on Monday night",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"coffee date\")) (Event.start_? (DateTimeConstraint (Night) (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mercy\")))))))))))"
  },
  {
    "original_sentence": "The 8 pm one, also schedule Bar Hop at 9:30 pm after that.",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Bar Hop\")) (Event.start_? (?= (TimeAfterDateTime (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (HourMinutePm 9L 30L)))))))))"
  },
  {
    "original_sentence": "yes this looks much better",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "change the bar hop time at 10.00 pm - 10.30 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"bar hop\")))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 10L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 10L 30L))))))))"
  },
  {
    "original_sentence": "Yes but can you add John to Bar Hop?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))))"
  },
  {
    "original_sentence": "I was with Kim at City Center a month ago",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (?= (PeriodBeforeDate (Today) (toMonths 1))))) (Event.location_? (?= (LocationKeyphrase.apply \"City Center\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))))))"
  },
  {
    "original_sentence": "The second option.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Am I going ice skating with Marissa on Tuesday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (& (Event.subject_? (?~= \"ice skating\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marissa\"))))))))) 0L))"
  },
  {
    "original_sentence": "i had a snowboard tourney last week?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"snowboard tourney\")) (Event.start_? (DateTime.date_? (LastWeekNew)))))))"
  },
  {
    "original_sentence": "the first one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "how is the weather in milwaukee ?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"milwaukee\"))) (?= (Now))))"
  },
  {
    "original_sentence": "what is the weather tomorrow in milwaukee",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"milwaukee\"))) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "When is my next Bonsai pruning?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"Bonsai pruning\")) 1L)))"
  },
  {
    "original_sentence": "I want to be with my team tomorrow in Bellevue",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.location_? (?= (LocationKeyphrase.apply \"Bellevue\")))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Try that again",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "That is correct, thank you.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please redo this.",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "Add a business meeting with Tony Monday at 5 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"business meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 5L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tony\")))))))))))"
  },
  {
    "original_sentence": "out of the office friday at 3pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L)))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
  },
  {
    "original_sentence": "At 5 pm I am going to a book fair at the mall.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"book fair\")) (Event.start_? (?= (NextTime (NumberPM 5L))))) (Event.location_? (?= (LocationKeyphrase.apply \"the mall\")))))))"
  },
  {
    "original_sentence": "Please delete book fair from my calendar",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Add dinner at 6pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (NextTime (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "Schedule morning run for tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"run\")) (Event.start_? (DateTimeConstraint (Morning) (Tomorrow)))))))"
  },
  {
    "original_sentence": "Will it rain on Saturday at Santa Cruz beach?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Santa Cruz beach\"))) (DateTime.date_? (?= (NextDOW (Saturday)))))))"
  },
  {
    "original_sentence": "Schedule a day at the beach on Monday from 9 am to 2 pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 9L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 2L))))) (Event.location_? (?= (LocationKeyphrase.apply \"the beach\"))))))))"
  },
  {
    "original_sentence": "Thank you for your help",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What will the weather by like at the beach that day?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"the beach\"))) (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Can you move that to the Santa Cruz boardwalk?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Santa Cruz boardwalk\"))))))"
  },
  {
    "original_sentence": "Was there a breakfast meeting scheduled this morning with Jesse's manager's manager and me?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (& (Event.subject_? (?~= \"breakfast meeting\")) (Event.attendees_? (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\"))))))))))) (Morning))))) 0L))"
  },
  {
    "original_sentence": "I can't make the breakfast meeting so cancel it.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"breakfast meeting\")))))))))"
  },
  {
    "original_sentence": "Yeah it is to be cancel one.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "create a new breakfast meeting on Friday with Jesse's manager",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"breakfast meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\"))))))))))))"
  },
  {
    "original_sentence": "Yes the first one please!",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What is my first available appointment on May 1",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "I need an appointment on may 1",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (MD 1L (May))))))))"
  },
  {
    "original_sentence": "Sure, can you add Brad to the meeting?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brad\"))))))))))"
  },
  {
    "original_sentence": "OH Lord, TY",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When is the next time that I have a staff meeting on thursday but not on friday the week before",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "What's on my calendar for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What is the second event?",
    "parse": "(Yield (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "What's the third event?",
    "parse": "(Yield (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 3L)) (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "I actually won't be able to make the dinner at the Commander's Palace.",
    "parse": "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.location_? (?= (LocationKeyphrase.apply \"Commander's Palace\"))))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Cancel Fancy Dinner on the 23rd.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 23L) (Event.subject_? (?~= \"Fancy Dinner\"))))))))))"
  },
  {
    "original_sentence": "My cousin has decided to purchase an online tutoring package so I will need you to cancel the event tutor my cousin in algebra.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"tutor my cousin in algebra\")))))))))"
  },
  {
    "original_sentence": "Yes, delete that.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "It's unfortunate that my cousin won't let me tutor him myself, but I guess it is what it is . . .",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I'm done for now. Thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Create a workout session for tomorrow at 6am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"workout session\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 6L))))))))"
  },
  {
    "original_sentence": "Can you make a lunch meeting at 12:30?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (?= (NextTime (HourMinutePm 12L 30L))))))))"
  },
  {
    "original_sentence": "Reschedule coffee meet to 19 military time",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"coffee meet\")))))) (Event.start_? (DateTime.time_? (?= (HourMilitary 19L)))))))"
  },
  {
    "original_sentence": "Change that to 1830 military time",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (HourMinuteMilitary 18L 30L)))))))"
  },
  {
    "original_sentence": "yes that looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "schedule time for errands after coffee",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"errands\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"coffee\"))))))))))))"
  },
  {
    "original_sentence": "Please update my movie date with Linda to 1750",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"movie date\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Linda\"))))))))) (Event.start_? (DateTime.time_? (?= (HourMinuteMilitary 17L 50L)))))))"
  },
  {
    "original_sentence": "How many months have 30 days?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Can you block off two hours tomorrow for a Guitar Lesson at 6:30 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Guitar lesson\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 6L 30L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Could you tell me the temperature right now?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))"
  },
  {
    "original_sentence": "Will it rain today?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "That's great! And will it rain tomorrow?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "Any idea how fast the wind speed is right now?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (windSpeed) (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))"
  },
  {
    "original_sentence": "help me buy a ribbon",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Prepare presentation materials",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "cancel the today events on calender",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "What's on today's agenda?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Do I have any meetings tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "What about the day after that?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "make meeting with tim friday morning 9.00 am - 9.30 am",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 9L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinuteAm 9L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"tim\"))))))))))))"
  },
  {
    "original_sentence": "How hot is it outside?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))"
  },
  {
    "original_sentence": "Will it rain tomorrow?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "What time of day is it likely to rain tomorrow?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "What will the temperature be tomorrow morning?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTimeConstraint (Morning) (Tomorrow)))))"
  },
  {
    "original_sentence": "What will the temperature be like in Seminole, Texas?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Seminole, Texas\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "Are there any thunderstorms on the road between here and Seminole, Texas?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Is it likely to rain in Seminole, Texas?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Seminole, Texas\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "Thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a cake walk fundraiser for next week for 4 hours",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"cake walk fundraiser\")) (Event.start_? (DateTime.date_? (NextWeekList)))) (Event.duration_? (?= (toHours 4)))))))"
  },
  {
    "original_sentence": "June 4 will work but I need you to mark me as busy from 9 am to 4 pm so I can set up and clean up after.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Schedule an 8 hour event on the 7th of June to Pack House with Andrew and Wade, starting at 9 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Pack House\")) (Event.start_? (DateTime.date_? (?= (MD 7L (June)))))) (Event.duration_? (?= (toHours 8)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Andrew\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wade\"))))))))))))"
  },
  {
    "original_sentence": "It should start at 9 am.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "Yes, that's correct",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "The pipes are calling! Who set that up?",
    "parse": "(Yield (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"The pipes are calling\")))))))"
  },
  {
    "original_sentence": "Who is making it to Poker Night?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?= \"Poker Night\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Thanks, that is not many people. Who hasn't responded to the Poker Night event yet?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Poker Night\")))))) (ResponseStatusType.NotResponded)))"
  },
  {
    "original_sentence": "Thanks. Who declined the wine & cheese event?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"wine & cheese\")))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "That's unfortunate. Do you have a list of attendees who accepted the wine and cheese event?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"wine and cheese\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Who accepted the invitation for my pool party?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"pool party\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "What is the title of my event today at 3pm?",
    "parse": "(Yield (Event.subject (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 3L)) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Is there anything scheduled tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Thanks. Add lunch with Jeff at noon to tomorrow's calendar.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeff\")))))))))))"
  },
  {
    "original_sentence": "Nevermind, delete that.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you search for meetings with Frank?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Frank\"))))))"
  },
  {
    "original_sentence": "End the time of the team building exercise August 28 to 7 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 28L (August)) (Event.subject_? (?~= \"team building exercise\"))))))) (Event.end_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "Change the date of this event to this past Monday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.date_? (?= (previousDayOfWeek (Today) (Monday))))))))"
  },
  {
    "original_sentence": "Can you change the time to have it start at 4 pm?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Yes and add Tammy to the event this past Monday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tammy\"))))))))))"
  },
  {
    "original_sentence": "Actually I meant Sammy, not Tammy.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sammy\")))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tammy\"))))))))))))"
  },
  {
    "original_sentence": "Hi I need to go to the city center for a meeting at 2:00PM on thursday for 3 hours.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 2L)))) (Event.duration_? (?= (toHours 3)))) (Event.location_? (?= (LocationKeyphrase.apply \"city center\")))))))"
  },
  {
    "original_sentence": "That is perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Okay! Good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "now i need a new conference room for this saturday in Berkeley",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Berkeley\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "the one at 1 is fine",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Add a cram session to my schedule for tomorrow at 2 pm to 4 pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"cram session\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L)))))))))"
  },
  {
    "original_sentence": "update the location to the HELD building",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"HELD building\"))))))"
  },
  {
    "original_sentence": "Change the subject to chemistry cram session",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"chemistry cram session\")))))"
  },
  {
    "original_sentence": "hi, can you help me update my calender",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Do I have a meeting with Jessie and Manager today?",
    "parse": "(let (x0 (PersonName.apply \"Jessie\")) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))))))) 0L)))"
  },
  {
    "original_sentence": "Okay. Adjust the time to 8pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "Actually please make it one hour long.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "ok make the meeting ends at 9.30 pm please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (HourMinutePm 9L 30L)))))))"
  },
  {
    "original_sentence": "i am sicked so can you please call the doctor",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Can you schedule an appointment with Dr. Smith for his earliest possible appointment?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Please add an appointment with Dr. Smith for 4 PM on Friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Smith\")))))))))))"
  },
  {
    "original_sentence": "That appointment should be to 5 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "yes looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What are my meetings with Carol this week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carol\")))) (ThisWeek))))"
  },
  {
    "original_sentence": "Do I have anything with Carol next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carol\")))) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "I need this to be on Monday",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Monday)))))))))"
  },
  {
    "original_sentence": "This is great but I don't need Carol anymore",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carol\")))))))))))"
  },
  {
    "original_sentence": "We need to make that meeting with Herschel",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Herschel\"))))))))))"
  },
  {
    "original_sentence": "Tell me if the Bones restaurant in Atlanta has waiter service please?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Bones restaurant in Atlanta\"))))))"
  },
  {
    "original_sentence": "i need to know if Pegs in Carson City has waiters",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Pegs in Carson City\"))))))"
  },
  {
    "original_sentence": "ok! can you tell me if the Applebee's in Carson City has waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Applebee's in Carson City\"))))))"
  },
  {
    "original_sentence": "Does M3 in Reno have waiter service?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"M3 in Reno\"))))))"
  },
  {
    "original_sentence": "Does Fogo de Chao in Cupertino have a full bar?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Fogo de Chao in Cupertino\"))))))"
  },
  {
    "original_sentence": "Okay, thank you. Please see if Taylor's in Loomis has a bar",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Taylor's in Loomis\"))))))"
  },
  {
    "original_sentence": "Now find out if Haru in Reno has a full bar",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Haru in Reno\"))))))"
  },
  {
    "original_sentence": "Where is it going to be colder tomorrow, Toronto, Vancouver, or Ottawa?",
    "parse": "(FenceComparison)"
  },
  {
    "original_sentence": "Book a meeting at 3am tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 3L)))))))"
  },
  {
    "original_sentence": "no that should be 3pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "the 3pm appointment looks good",
    "parse": "(Yield (Execute (ConfirmCreateAndReturnAction (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please schedule a meeting with the Jack tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jack\")))))))))))"
  },
  {
    "original_sentence": "The second one is look good",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "gimme the week",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))"
  },
  {
    "original_sentence": "hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "What is the weather like in Los Angeles",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Los Angeles\"))) (?= (Now))))"
  },
  {
    "original_sentence": "Will it rain soon?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Will it rain this week in Houston, Texas?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Houston, Texas\"))) (DateTime.date_? (ThisWeek)))))"
  },
  {
    "original_sentence": "What is the temperature in Houston",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Houston\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "What is that in Fahrenheit?",
    "parse": "(Yield (inFahrenheit (Execute (refer (extensionConstraint (^(Temperature) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Will it snow in houston?",
    "parse": "(Yield (WillSnow (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"houston\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Tell me who has responded as maybe for the beach trip this weekend.",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"beach trip\")) (ThisWeekend)))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Who might be coming on the trip to Portland?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"trip to Portland\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "who is possibly gonna be at the online meeting",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"online meeting\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "I've had some issues with friends recently and want to cancel some things. Start by getting rid of Friendsgiving in early fall.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Friendsgiving\")) (EarlyDateRange (SeasonFall))))))))))"
  },
  {
    "original_sentence": "Oops! I meant late fall.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (LateDateRange (SeasonFall))))))"
  },
  {
    "original_sentence": "Yeah. That's it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I also need to get rid of Ice Skating in the winter.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Ice Skating\")) (SeasonWinter)))))))))"
  },
  {
    "original_sentence": "Yup.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "help me put on my calendar at 3pm on tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Yes, please change the subject matter to Lunch with Dave and change the duration to 1 hour.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (& (Event.subject_? (?= \"matter\")) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dave\")))))))))))"
  },
  {
    "original_sentence": "I need to set a meeting for the 28th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 28L)))))))"
  },
  {
    "original_sentence": "The first will work but it has to last a hour.",
    "parse": "(do (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "This looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What events do I have coming up on Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you tell me what I have going on this weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "is my boss the organizer of the Event on May 24th?",
    "parse": "(Yield (== (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (DateTime.date_? (?= (MD 24L (May))))))))) (FindManager (toRecipient (CurrentUser)))))"
  },
  {
    "original_sentence": "Is my manager the organizer of the event on the 20?",
    "parse": "(Yield (== (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 20L) (^(Event) EmptyStructConstraint)))))) (FindManager (toRecipient (CurrentUser)))))"
  },
  {
    "original_sentence": "What day of the week is Halloween next year?",
    "parse": "(Yield (Date.dayOfWeek (HolidayYear (Holiday.Halloween) (NextYear))))"
  },
  {
    "original_sentence": "And what is the date of Thanksgiving next year?",
    "parse": "(Yield (HolidayYear (Holiday.Thanksgiving) (NextYear)))"
  },
  {
    "original_sentence": "When is Easter next year?",
    "parse": "(Yield (HolidayYear (Holiday.Easter) (NextYear)))"
  },
  {
    "original_sentence": "When is my flight to Georgia next year?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"flight to Georgia\")) (FullYearofYear (NextYear))))))))"
  },
  {
    "original_sentence": "when is Tax Day next year",
    "parse": "(Yield (HolidayYear (Holiday.TaxDay) (NextYear)))"
  },
  {
    "original_sentence": "Hello, I want to find a movie to see tonight.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"find a movie to see\")) (Event.start_? (DateTimeConstraint (Night) (Today)))))))"
  },
  {
    "original_sentence": "The second is correct.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make the time last 80 minutes.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toMinutes 80))))))"
  },
  {
    "original_sentence": "Yes, can you delete any events from last week",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceMultiAction))"
  },
  {
    "original_sentence": "Delete events on tuesday of last week",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Please delete one event from last Tuesday that I had scheduled.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Tuesday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "EXACTLY, CANCEL IT AND INTIMATE TO ME",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Delete the appointment I had on Friday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Friday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "I need to add a superintendent search meeting for the 8th from 9 am until noon. Add Justice, Naomi, and Loki. Naomi is optional.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (nextDayOfMonth (Today) 8L) (NumberAM 9L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"superintendent search meeting\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (Noon))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Justice\")))))) (AttendeeListHasRecipientWithType (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Naomi\"))))) (AttendeeType.Optional))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Loki\")))))))))))))"
  },
  {
    "original_sentence": "you got it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule a therapy appointment at 4:30 on Tuesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"therapy appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (HourMinutePm 4L 30L))))))))"
  },
  {
    "original_sentence": "Can you make it be 45 minutes?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toMinutes 45))))))"
  },
  {
    "original_sentence": "ye",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Is Susan still my boss?",
    "parse": "(Yield (== (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Susan\"))))) (FindManager (toRecipient (CurrentUser)))))"
  },
  {
    "original_sentence": "Can you schedule a meeting with Dan Schoffel for 6 pm tomorrow?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Schoffel\")))))))))))"
  },
  {
    "original_sentence": "put meet with rodney evg 7pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"rodney\")))))))))))"
  },
  {
    "original_sentence": "I like the one on the top",
    "parse": "(Yield (Execute (ChooseCreateEvent (TopResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Has Rodney responded?",
    "parse": "(Yield (AttendeeResponseStatus (AttendeeFromEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rodney\"))))))))"
  },
  {
    "original_sentence": "is there anyone who was invited who hasn't yet accepted my invitation to the party Friday?",
    "parse": "(Yield (> (size (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"party\"))))))) (ResponseStatusType.Accepted))) 0L))"
  },
  {
    "original_sentence": "who has accepted the Late Lunch?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Late Lunch\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Has anyone accepted my invite for costa loco??",
    "parse": "(Yield (> (size (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"costa loco\")))))) (ResponseStatusType.Accepted))) 0L))"
  },
  {
    "original_sentence": "Can you move my dinner date from tomorrow to the day after?",
    "parse": "(let (x0 (Tomorrow)) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate x0 (Event.subject_? (?~= \"dinner date\"))))))) (Event.start_? (DateTime.date_? (?= (adjustByPeriod x0 (toDays 1)))))))))"
  },
  {
    "original_sentence": "Change my dinner with John, Sara, Susan, Mike, and Ben to 7pm tomorrow",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (& (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sara\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Susan\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mike\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ben\")))))))))) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "That looks fantastic.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When do I have a Band Practice with Sara, Susan, John, and Mike?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Band Practice\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sara\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Susan\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mike\")))))))))))"
  },
  {
    "original_sentence": "Add band practice Sara, Susan, John, and Mike at 6:00 pm on Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"band practice\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 6L))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sara\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Susan\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))) (AttendeeListHasRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mike\"))))))))))"
  },
  {
    "original_sentence": "looks great ! wow",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule Emily's party for next Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Emily's party\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "Par-Ty",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "name it as emily's wedding anniversary party and the dress code is blue",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"emily's wedding anniversary party and the dress code is blue\")))))"
  },
  {
    "original_sentence": "Soup",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "Hwaaaaaa",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "can you move the meeting with sara from Arbys to Burget King?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \"Arbys\"))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"sara\"))))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Burget King\"))))))"
  },
  {
    "original_sentence": "can you change Report meeting from Floor 1 to Floor 3",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"Report meeting\")) (Event.location_? (?= (LocationKeyphrase.apply \"Floor 1\")))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Floor 3\"))))))"
  },
  {
    "original_sentence": "change the birthday from Robertos to Chuckee Cheese",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"birthday\")) (Event.location_? (?= (LocationKeyphrase.apply \"Robertos\")))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Chuckee Cheese\"))))))"
  },
  {
    "original_sentence": "When is my meeting with Cara?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cara\")))))))))"
  },
  {
    "original_sentence": "Can you delete my meeting with Cara?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cara\")))))))))))"
  },
  {
    "original_sentence": "Add \"Meeting with Cara\" for Friday 3:00 to 4:35 PM",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Meeting with Cara\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 4L 35L)))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you actually make it start at 2:30 instead?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 2L 30L)))))))"
  },
  {
    "original_sentence": "graduation gift tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"graduation gift\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "Schedule it for 2pm instead and add Annie to the event.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Annie\")))))))))))"
  },
  {
    "original_sentence": "Yes but make it longer time",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Ok. End at 4pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have a meeting on April 3rd that's shorter than 20 minutes?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.duration_? (?< (toMinutes 20))) (EventOnDate (MD 3L (April)) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "Okay, what about a meeting on the day before April 4th where my status is working elsewhere that lasts more than 30 minutes?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (& (Event.duration_? (?> (toMinutes 30))) (Event.showAs_? (?= (ShowAsStatus.WorkingElsewhere)))) (EventOnDate (PeriodBeforeDate (MD 4L (April)) (toDays 1)) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Do I have anything right now?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (Now) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "What is on my schedule this Saturday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Make a meeting with Sam for Friday evening",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Evening) (NextDOW (Friday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\")))))))))))"
  },
  {
    "original_sentence": "Neither works.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Make a secret meeting with Obama tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"secret meeting\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Obama\")))))))))))"
  },
  {
    "original_sentence": "No, add Mitt Romney",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mitt Romney\"))))))))))"
  },
  {
    "original_sentence": "put Put the Band Back Together starting at 8 am on Friday and ending at 6 pm, and show me as busy",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Put the Band Back Together\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 6L))))) (Event.showAs_? (?= (ShowAsStatus.Busy))))))))"
  },
  {
    "original_sentence": "put Practice with the Band on Saturday starting at 10 am lasting 3 hours, and show me as Out of Office",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "put Play First Gig with the Band starting on Monday at 7 pm for 2 hours, and show me as Unknown",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "What items called The Band do I have scheduled between today and Monday, lasting at least 1 hour?",
    "parse": "(let (x0 (Today)) (Yield (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \"The Band\")) (Event.duration_? (?>= (toHours 1)))) (DateAndConstraint x0 (nextDayOfWeek x0 (Monday)))))))"
  },
  {
    "original_sentence": "So what do I have on my calendar with Sara and Bec?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sara\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bec\")))))))"
  },
  {
    "original_sentence": "Do I have anything with people attending on my calendar?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "Do I have any events in March with people attending?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (negate (^((List Attendee)) AlwaysFalseConstraint))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (March))))))) 0L))"
  },
  {
    "original_sentence": "So do I have any events in June with people coming?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (negate (^((List Attendee)) AlwaysFalseConstraint))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (June))))))) 0L))"
  },
  {
    "original_sentence": "What meetings do I have on tuesday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What is my second event?",
    "parse": "(Yield (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "its ok, can you try it again?",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "Can you try to tell me what my second thing on Tuesday is?",
    "parse": "(Yield (FindNumNextEvent (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) 2L))"
  },
  {
    "original_sentence": "Help me locate Discovery Green.",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Discovery Green\")))"
  },
  {
    "original_sentence": "Can you add meeting at Discovery Green for Tuesday afternoon?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Tuesday)))) (Event.location_? (?= (LocationKeyphrase.apply \"Discovery Green\")))))))"
  },
  {
    "original_sentence": "I think the first one will work better for me.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What like weather be?",
    "parse": "(Yield (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "On the 8th I'm going to Paper Tiger in San Antonio from 7-10PM",
    "parse": "(let (x0 (NextTime (NumberPM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 8L)))) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 10L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Paper Tiger in San Antonio\"))))))))"
  },
  {
    "original_sentence": "When is Tết?",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "enter the meeting with Steve for tomorrow at 9:00 AM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steve\")))))))))))"
  },
  {
    "original_sentence": "wait a second",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Book that meeting.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "That was great.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add salon appointment next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"salon appointment\")) (Event.start_? (DateTime.date_? (NextWeekList)))))))"
  },
  {
    "original_sentence": "Let me debate with others.",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Put that with John",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))))"
  },
  {
    "original_sentence": "Wait for a minute I'll get back to you",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "What's the weather supposed to be like on Saturday?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextDOW (Saturday))))))"
  },
  {
    "original_sentence": "Good day to read a book. Put that on my calendar that day from 10am to 1pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberAM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"read a book\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 1L)))))))))"
  },
  {
    "original_sentence": "Do I have any available time on Thursday?",
    "parse": "(Yield (IsFree (RecipientAvailability (& (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday))))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
  },
  {
    "original_sentence": "Make an event called \"Meeting\" at 9am with Wade Blakeley",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Meeting\")) (Event.start_? (?= (NextTime (NumberAM 9L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wade Blakeley\")))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "OK thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Now that you mention it, I wanted you to set an alarm for 7am and repeat it daily, except weekends. For the weekends I want an alarm for 8am.",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "So, no alarm?",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What can you do?",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "How's the weather?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (?= (Now))))"
  },
  {
    "original_sentence": "It's actually 78.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Cancel meeting with Wade",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wade\")))))))))))"
  },
  {
    "original_sentence": "yea",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make event for the day after tomorrow and name it \"Coffe with Janice\".",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Coffe with Janice\")) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (Tomorrow) (toDays 1)))))))))"
  },
  {
    "original_sentence": "make it for 11am",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "nothing really",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "alright, bye.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a concert 3 hours from now",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"concert\")) (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 3)))))))))"
  },
  {
    "original_sentence": "Great!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please add the Pepsi Center as the location.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Pepsi Center\"))))))"
  },
  {
    "original_sentence": "Yes this looks much better",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "IT'S FINE",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "What events do I have on Wednesday afternoon?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint)) (Afternoon))))"
  },
  {
    "original_sentence": "I need to cancel the second one.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Yes, exactly.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you. Please move the first event to tomorrow.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 1L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Looks great!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hello, can you please confirm that I have a meeting with Elvis at three?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elvis\")))) (NumberPM 3L))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything scheduled today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Add meeting with Elvis to today's calendar at 3 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elvis\")))))))))))"
  },
  {
    "original_sentence": "Schedule employee review with Elvis on Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"employee review\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elvis\")))))))))))"
  },
  {
    "original_sentence": "The movie starts at 4.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"movie\")) (Event.start_? (?= (NextTime (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Thank you and add it to my calendar.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add Ice Cream with Abby right after the movie",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Ice Cream\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"movie\"))))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "Yes that is right but can you add Ben to Ice cream at 4:30 also?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ben\"))))))))))"
  },
  {
    "original_sentence": "Yes that looks great.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What events do I have on December 17?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 17L (December)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you add an appointment called Hair on that day from 3 to 4 pm?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Hair\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L)))))))))"
  },
  {
    "original_sentence": "Is thee anything on the schedule the day after that?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "When is my doctor appointment in january?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctor appointment\")) (FullMonthofMonth (January)))))))"
  },
  {
    "original_sentence": "Can you help me find any event with attendees?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Thanks. Do I have anything scheduled with people invited next Monday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint))) (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "I like very much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What meetings do I have with attendees next week? I need to free up some time on my schedule.",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))) 0L))"
  },
  {
    "original_sentence": "Let's do a dinner with Carmen and her supervisor for tomorrow at 7 pm.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carmen\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 7L))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "Yes, it looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you tell me when my meeting with Abby and his boss is?",
    "parse": "(let (x0 (PersonName.apply \"Abby\")) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))))))))))))"
  },
  {
    "original_sentence": "Okay. Schedule meeting next Tuesday and forward to Abby and Damon.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I need to know when my project meeting with Coleen and her supervisor is.",
    "parse": "(let (x0 (PersonName.apply \"Coleen\")) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"project meeting\")) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))))))))))"
  },
  {
    "original_sentence": "Do I have anything scheduled around 8 AM tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRangeDateTime (^(Event) EmptyStructConstraint) (AroundDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberAM 8L))))))) 0L))"
  },
  {
    "original_sentence": "ok make a Grocery Shopping event tomorrow around 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Grocery Shopping\")) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Alright let's make a clothes shopping event for Saturday around 12",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"clothes shopping\")) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "Create playdate for the dog January 10th 2 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"playdate for the dog\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 10L (January)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Schedule coffee with Karen at 9 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"coffee\")) (Event.start_? (?= (NextTime (NumberAM 9L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\")))))))))))"
  },
  {
    "original_sentence": "Add a meeting at 5 pm with Bob.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 5L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))))))))"
  },
  {
    "original_sentence": "Can you check to see if I have a board meeting next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"board meeting\")) (NextWeekList))))"
  },
  {
    "original_sentence": "Delete coffee with Ann.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"coffee\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ann\"))))))))))))"
  },
  {
    "original_sentence": "Hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "I need to move my tetris battle to 8 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"tetris battle\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))"
  },
  {
    "original_sentence": "Sure, looks fine",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you tell me who is unable to volunteer at the food bank?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"volunteer at the food bank\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "What is the number of people who have accepted for the employee training?",
    "parse": "(Yield (size (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"employee training\")))))) (ResponseStatusType.Accepted))))"
  },
  {
    "original_sentence": "who declined employee training?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"employee training\")))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "please show away from office on my calendar this afternoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Afternoon) (Today))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))"
  },
  {
    "original_sentence": "No, I mean the whole afternoon from 12:00 PM until 5:00 PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Change the name to 1-1 with Dave",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"1-1 with Dave\")))))"
  },
  {
    "original_sentence": "Perfect schedule that",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need another 1-1 with Steve after that",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (Event.isOneOnOne_? (?= true))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steve\")))))))))))"
  },
  {
    "original_sentence": "Cancel lunch with Bob Friday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))) (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"lunch\")))))))))))"
  },
  {
    "original_sentence": "Can you forward that to Bob?",
    "parse": "(Yield (ForwardEventWrapper (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\"))))))))"
  },
  {
    "original_sentence": "Yes please",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "where i was in last Sunday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Sunday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "oh ok ok, you know everything about me",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add haircut appointment on Tuesday at 8:30 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"haircut appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (HourMinutePm 8L 30L))))))))"
  },
  {
    "original_sentence": "Add Daniel to that appointment please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Daniel\"))))))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Check if I have any appointments with Lee Hyung-Soo this week.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lee Hyung-Soo\")))) (ThisWeek))))"
  },
  {
    "original_sentence": "Extend the end time of the Martial Arts Tournament to 7PM please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Martial Arts Tournament\")))))) (Event.end_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "Hello. Can you tell me the date of the Grammy?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Can you tell me the date of the Grammy's?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"the Grammy's\"))))"
  },
  {
    "original_sentence": "Do I have anything on my schedule on Monday afternoon",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"
  },
  {
    "original_sentence": "Let's add relaxation to my calendar on that day at 1 pm lasting for 2 hours and I need to be shown as busy during that time",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"relaxation\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 1L))))) (Event.duration_? (?= (toHours 2)))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))"
  },
  {
    "original_sentence": "Sure does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What was the status of that event again",
    "parse": "(Yield (Event.showAs (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Lets make that free in case someone wants to hang out",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.showAs_? (?= (ShowAsStatus.Free))))))"
  },
  {
    "original_sentence": "Sure.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Let's also make it only an hour long",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "hi, am looking for a hotel room",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Put down research hotels for 10AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"research hotels\")) (Event.start_? (?= (NextTime (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Add a one hour lunch to my calendar today at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (Noon))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Thanks, what do I have on my schedule this afternoon?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Afternoon))))"
  },
  {
    "original_sentence": "Great. Let's block off 1 til 5 for the Genesis Project.",
    "parse": "(let (x0 (NextTime (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Genesis Project\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "Is my manager free tomorrow afternoon?",
    "parse": "(Yield (IsFree (RecipientAvailability (& (Event.start_? (DateTimeConstraint (Afternoon) (Tomorrow))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))) false)))"
  },
  {
    "original_sentence": "TOMORROW SET SCHEDULE TO MEET Cindy's MANAGER AT 10 PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 10L)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cindy\"))))))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "okay fine",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a meeting with Ryan and Ryan's manager.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ryan\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))))))))"
  },
  {
    "original_sentence": "What restaurant am I going to dinner at tonight?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \"dinner\"))) (Night)))))))"
  },
  {
    "original_sentence": "Is it good for a big group?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "is it a good place for kids?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "are there outdoor tables ?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.OutdoorDining) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Does it have a gluten-free menu?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Can I order cocktails?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FullBar) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "I need to see Sam and Corazon on next Wednesday at 8 for 2 hours regarding performance!",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"performance\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 8L))))) (Event.duration_? (?= (toHours 2)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Corazon\"))))))))))))"
  },
  {
    "original_sentence": "Yes it does!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "hi, i need to delete my doctors appointment",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctors appointment\")))))))))"
  },
  {
    "original_sentence": "this is good time choose it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you for deleting the appointment from the calendar.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I would like to reschedule my doctors appointment for a later date.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctors appointment\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?> (DateTime.date (Event.start x0)))))))))"
  },
  {
    "original_sentence": "Create an event",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "No",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Create an event for Dr Appointment on May 4th at 8AM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dr Appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 4L (May)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "pick up kids at school on Friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"pick up kids\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.location_? (?= (LocationKeyphrase.apply \"school\")))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Cancel my dr appointment",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dr appointment\")))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I have an Eye Dr appointment on January 15, 2020.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Eye Dr appointment\")) (Event.start_? (DateTime.date_? (?= (MDY 15L (January) (Year.apply 2020L)))))))))"
  },
  {
    "original_sentence": "No, at 8:00AM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "Yes perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When do I pick up the kids?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"pick up the kids\")))))))"
  },
  {
    "original_sentence": "search pick up kids",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"pick up kids\"))))"
  },
  {
    "original_sentence": "when is that?",
    "parse": "(Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Cool thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When will the next conference be?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"conference\")) 1L)))"
  },
  {
    "original_sentence": "Do I have anything before that?",
    "parse": "(let (x0 (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateBeforeTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))) 0L)))"
  },
  {
    "original_sentence": "ok that's ggod , add a breakfast on friday 8am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"breakfast\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Perfect, add that for me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "add an hour longer",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toHours 1))))))))"
  },
  {
    "original_sentence": "that's good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Doggy needs a walk, schedule walk at 9AM and also at 3PM.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "delete the Monday event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "My next meeting was cancelled so delete it from the calendar.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))))"
  },
  {
    "original_sentence": "yeah confirm to cancel the meeting",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "THANK YOU, CREATE A CHECKLIST FOR ME",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Can you make an event for next Tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))))))"
  },
  {
    "original_sentence": "Create a calendar event for my appointment to get my oil changed at Jones' Auto Shop on Thursday the 23rd of this month at 2pm in the afternoon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"get my oil changed\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 23L) (NumberPM 2L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Jones' Auto Shop\")))))))"
  },
  {
    "original_sentence": "Yeah it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you schedule a tire rotation as well on the 16th at 11:15 am at Jone's Auto Shop?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"tire rotation\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 16L) (HourMinuteAm 11L 15L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Jone's Auto Shop\")))))))"
  },
  {
    "original_sentence": "That looks fine for my curret needs",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you also schedule a inspection sticker for Jones Auto shop for the 16th at 12:00 to 12:30?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (nextDayOfMonth (Today) 16L) (NumberPM 12L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"inspection sticker for Jones Auto shop\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 12L 30L)))))))))"
  },
  {
    "original_sentence": "Do I have any appointments on Monday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Put John's baseball from yesterday at 6pm on my events.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"John's baseball\")) (Event.start_? (?= (DateAtTimeWithDefaults (Yesterday) (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "Actually the event went til 7:00 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "Can you add David Larry and Nick please",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David Larry\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nick\")))))))))))"
  },
  {
    "original_sentence": "Correct, add Allison too while you are at it.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Allison\"))))))))))"
  },
  {
    "original_sentence": "Yes, but I just remembered David cancelled. Remove David.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David\")))))))))))"
  },
  {
    "original_sentence": "Is Trueblood's a very family friendly place to eat?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Trueblood\"))))))"
  },
  {
    "original_sentence": "Honest Mary's in Austin seems nice, but are they family friendly?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Honest Mary's in Austin\"))))))"
  },
  {
    "original_sentence": "is Rum Sugar Lime in Reno family friendly",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Rum Sugar Lime in Reno\"))))))"
  },
  {
    "original_sentence": "Delete lunch with mom",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I need to remove all my appointments for November.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you add a football game with Jake on Saturday at 12?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"football game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 12L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))))))))))"
  },
  {
    "original_sentence": "Yes, this one is right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add a baseball game viewing party with Mark Sunday at 3 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"baseball game viewing party\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 3L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))))))))))"
  },
  {
    "original_sentence": "Yes please add.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you have this event end at 6:30 PM?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 6L 30L)))))))"
  },
  {
    "original_sentence": "I need a meeting with bob when he gets finished with his last meeting on friday",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Show me any meetings with Bob.",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\"))))))"
  },
  {
    "original_sentence": "Do I also have any meetings with Lexi and Kara?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lexi\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kara\")))))))) 0L))"
  },
  {
    "original_sentence": "Make a appointment to tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "the second one is good",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "i need lunch for October 12 to be for 3 hours with jenny",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (MD 12L (October)))))) (Event.duration_? (?= (toHours 3)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jenny\")))))))))))"
  },
  {
    "original_sentence": "Hold on a second",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "the first one looks good",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make a appointment for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "wait a minute",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Yes it looks good.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "please conform",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "delete all events on my schedule this weekend",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Please mark me as busy all weekend then.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.showAs_? (?= (ShowAsStatus.Busy))) (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (ThisWeekend))))))"
  },
  {
    "original_sentence": "schedule a meeting with Karl and Janice Sunday at 1 for an hour",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 1L)))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karl\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice\"))))))))))))"
  },
  {
    "original_sentence": "yes it is",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "any event today on my calendar?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Thanks. Can you schedule movie time ending around 10pm tonight?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"movie time\")) (Event.end_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 10L))))))))"
  },
  {
    "original_sentence": "Yes this is good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule a dentist appointment ending at 4 pm Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.end_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "That is perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create an event reminder for my daughter's birthday on Friday.",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Hi - Is my afternoon free next Wednesday, between 3 and 5:30?",
    "parse": "(Yield (IsFree (RecipientAvailability (& (Event.start_? (DateTimeAndConstraint (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 3L)) (TimeAfterDateTime (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 3L)) (NumberPM 5L)))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
  },
  {
    "original_sentence": "Do I have any meetings Monday afternoon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"
  },
  {
    "original_sentence": "Add Jennifer and her supervisor's boss to the Friday roundtable.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"roundtable\")) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager (FindManager x0)))))))))"
  },
  {
    "original_sentence": "Yes it looks perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add Jesse's skip also",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\"))))))))))))"
  },
  {
    "original_sentence": "This looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Sounds great.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Bachelor party with Randy, Brent, Chent, and Funt",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Bachelor party\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Randy\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brent\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chent\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Funt\"))))))))))))"
  },
  {
    "original_sentence": "The second one works well.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "It needs to be extended by about 8 hours though .",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toHours 8))))))))"
  },
  {
    "original_sentence": "Yes and please add restaurant as the location.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.location_? (?= (LocationKeyphrase.apply \"restaurant\"))))))"
  },
  {
    "original_sentence": "Please schedule drinks after this event.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"drinks\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Do I have any meetings with Darren North this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Darren North\")))) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "What other meetings do I have with Darren North this month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Darren North\"))))) (FullMonthofMonth (Date.month (Today))))))"
  },
  {
    "original_sentence": "Is there one the next week as well?",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "no problem",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have anything else next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))) 0L))"
  },
  {
    "original_sentence": "I have a coffee date tomorrow at 11 am. It will be at an expensive hip cafe.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"coffee date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L))))) (Event.location_? (?= (LocationKeyphrase.apply \"an expensive hip cafe\")))))))"
  },
  {
    "original_sentence": "That's it!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What's the location?",
    "parse": "(Yield (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "What's the warmest it will be in Key West on February 1 at 2:30pm?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Key West\"))) (?= (DateAtTimeWithDefaults (MD 1L (February)) (HourMinutePm 2L 30L))))))"
  },
  {
    "original_sentence": "Too cold to go swimming for me, so add go sight seeing then.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go sight seeing\")) (Event.start_? (?= (Execute (refer (extensionConstraint (^(DateTime) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "I'm sorry, can you repeat that?",
    "parse": "(RepeatAgent)"
  },
  {
    "original_sentence": "Great, thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "dentist appointment at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (NextTime (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "please make that 3 pm to 4:30 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 4L 30L))))))))"
  },
  {
    "original_sentence": "That should be for an hour as well.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "What do I have scheduled this weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))"
  },
  {
    "original_sentence": "Change the name of that doctor appointment to Liv's doctor appointment.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"doctor appointment\")))))) (Event.subject_? (?= \"Liv's doctor appointment\")))))"
  },
  {
    "original_sentence": "Yep.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "please check if I have anything after 2 pm today",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (Today) (^(Event) EmptyStructConstraint) (NumberPM 2L))))"
  },
  {
    "original_sentence": "Good I am going to need to schedule yoga at 2 pm today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"yoga\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Extend yoga by half of an hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (addDurations (Event.duration (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (toHours 0.5)))))))"
  },
  {
    "original_sentence": "What time do I go to yoga?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"yoga\")))))))"
  },
  {
    "original_sentence": "I need the time for tuesday's team meeting",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \"team meeting\"))))))))"
  },
  {
    "original_sentence": "Thanks, Can you schedule prep time for 30 minutes before the team meeting.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"prep time\")) (Event.end_? (?= (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"team meeting\"))))))))) (Event.duration_? (?= (toMinutes 30)))))))"
  },
  {
    "original_sentence": "Yes, now can you also tell me what I've got going for late Saturday afternoon?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)) (LateAfternoon)))))"
  },
  {
    "original_sentence": "Thank you, that's perfect",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule out of office on Friday from 7 to 11 am.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 11L))))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))))))))"
  },
  {
    "original_sentence": "When is the maze run",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"maze run\")))))))"
  },
  {
    "original_sentence": "That's too early; move it to fall/",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (SeasonFall))))))"
  },
  {
    "original_sentence": "No",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "is there anything for today that is not dinner?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (negate (?~= \"dinner\"))))))) 0L))"
  },
  {
    "original_sentence": "Is there anything today that is not Lunch??",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (negate (?~= \"Lunch\"))))))) 0L))"
  },
  {
    "original_sentence": "What do I have that is not \"Sleep?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (negate (?~= \"Sleep\")))))"
  },
  {
    "original_sentence": "Schedule lunch between Saturday's run and drinks.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"run\")) (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))) x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"drinks\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTimeAndConstraintBetweenEvents x0 x1))) (Event.end_? (DateTimeAndConstraintBetweenEvents x0 x1)))))))"
  },
  {
    "original_sentence": "Yes, either will work.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Do I have any stops between work and picking up the kids tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBetweenEvents (^(Event) EmptyStructConstraint) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"work\"))))) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"picking up the kids\"))))))))) 0L))"
  },
  {
    "original_sentence": "Okay great, thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add wash the car between grocery shopping and prepping dinner",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"grocery shopping\"))))) x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"prepping dinner\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"wash the car\")) (Event.start_? (DateTimeAndConstraintBetweenEvents x0 x1))) (Event.end_? (DateTimeAndConstraintBetweenEvents x0 x1)))))))"
  },
  {
    "original_sentence": "who has not accepted happy hour",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"happy hour\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Who has not Declined the Mandalorian Civil War",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Mandalorian Civil War\")))))) (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Who has not tentatively accepted the Mandalorian Civil War?",
    "parse": "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Mandalorian Civil War\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "What do I have the 2nd week of november?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NumberWeekOfMonth 2L (November)))))"
  },
  {
    "original_sentence": "Please add Kim to the appointment.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))))))))))"
  },
  {
    "original_sentence": "Fine thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "How many meetings do I have with Kim Possible this week?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim Possible\")))) (ThisWeek))))))"
  },
  {
    "original_sentence": "What about next week?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))"
  },
  {
    "original_sentence": "Is Wade Blakeley available for a lunch meeting?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "When can I meet with Wade Blakeley?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wade Blakeley\"))))))))))"
  },
  {
    "original_sentence": "I need an appointment with Wade Blakeley",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wade Blakeley\"))))))))))"
  },
  {
    "original_sentence": "Yes, the first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you tell me what I am doing next weekend?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekend))))"
  },
  {
    "original_sentence": "Okay, thanks, can you add, \"Go to Movies with Kim\" on Sunday at 2 til 6pm as well please?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Go to Movies with Kim\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 6L)))))))))"
  },
  {
    "original_sentence": "Looks right to me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "At 7pm schedule dinner with Kim that day as well.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (NextTime (NumberPM 7L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))))))"
  },
  {
    "original_sentence": "Fine.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Actually, can you add a half hour to the dinner with Kim and change it to \"Lunch with Kim\" from 12 to 2pm instead?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))))) x1 (DateAtTimeWithDefaults (DateTime.date (Event.start x0)) (NumberPM 12L))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (& (& (Event.subject_? (?= \"Lunch with Kim\")) (Event.start_? (?= x1))) (Event.end_? (?= (TimeAfterDateTime x1 (NumberPM 2L))))) (Event.duration_? (?= (toHours 0.5))))))))"
  },
  {
    "original_sentence": "Change the title to \"Lunch with Kim\".",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"Lunch with Kim\")))))"
  },
  {
    "original_sentence": "i am in birthday party",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Put Birthday party at 7 pm to 10 pm on Sunday.",
    "parse": "(let (x0 (NextDOW (Sunday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Birthday party\")) (Event.start_? (?= (DateAtTimeWithDefaults x0 (NumberPM 7L))))) (Event.end_? (?= (DateAtTimeWithDefaults x0 (NumberPM 10L)))))))))"
  },
  {
    "original_sentence": "When is my next meeting with my boss?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))) 1L)))"
  },
  {
    "original_sentence": "Yes this looks correct, but I need to add Josh to the meeting",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Josh\"))))))))))"
  },
  {
    "original_sentence": "Yes that looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you. Please also schedule lunch for that day with Josh",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Josh\")))))))))))"
  },
  {
    "original_sentence": "The 3 pm works. And also invite Ross.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Change the finance meeting with Erica and her supervisor to Tuesday.",
    "parse": "(let (x0 (PersonName.apply \"Erica\") x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"finance meeting\")) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x1) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x1)) (Tuesday)))))))))"
  },
  {
    "original_sentence": "Looks fantastic",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cancel the lunch I have scheduled with Bob and his supervisor.",
    "parse": "(let (x0 (PersonName.apply \"Bob\")) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))))))))))))"
  },
  {
    "original_sentence": "Yes please.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you put a meeting at the cafe with Rick next week?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.location_? (?= (LocationKeyphrase.apply \"cafe\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rick\")))))))))))"
  },
  {
    "original_sentence": "Yugioh at 4.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Yugioh\")) (Event.start_? (?= (NextTime (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Nah, that's not it.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Yugioh is at 5PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Yugioh\")) (Event.start_? (?= (NextTime (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "No, add my deck to the schedule",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"deck\")))))"
  },
  {
    "original_sentence": "What's the weather like in Robertsdale Alabama",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Robertsdale Alabama\"))) (?= (Now))))"
  },
  {
    "original_sentence": "Will it rain today?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "Will it rain this weekend?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeekend)))))"
  },
  {
    "original_sentence": "What will the temperature be tomorrow for robertsdale",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "is the weather done changeing",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (?= (Now))))"
  },
  {
    "original_sentence": "is it going to warm up",
    "parse": "(Yield (IsHot (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "thankyou",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "goodbye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make me a Date Night sometime next week, but not on the weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Date Night\")) (Event.start_? (& (DateTime.date_? (NextWeekList)) (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))))"
  },
  {
    "original_sentence": "The one one Tuesday please. I also have a movie night not on the weekend",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"movie night\")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))))"
  },
  {
    "original_sentence": "yes is this work only",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Alright, last thing. Could you please put me down to do laundry sometime next week, so long as it's not on the weekend",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"laundry\")) (Event.start_? (& (DateTime.date_? (NextWeekList)) (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))))"
  },
  {
    "original_sentence": "Where can I but ice cream locally?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "He can you show me the website of Grand Sierra Resort and Casino",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Grand Sierra Resort and Casino\"))))))"
  },
  {
    "original_sentence": "Get me the website for cheesecake factory in charlotte",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"cheesecake factory in charlotte\"))))))"
  },
  {
    "original_sentence": "What's the URL for Black Coke Brewery in Rosewell?",
    "parse": "(Yield (Place.url (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Black Cock Brewery in Rosewell\"))))))"
  },
  {
    "original_sentence": "What is fate? destiny? Whatever my calendar dictates. Show me my destiny",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "How long will the chairman speak?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "How long is the chairman meeting?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"chairman meeting\")))))))"
  },
  {
    "original_sentence": "How long is my staff meeting on Thursday?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.subject_? (?~= \"staff meeting\"))))))))"
  },
  {
    "original_sentence": "What about my gym session after?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDateAfterTime (DateTime.date x0) (Event.subject_? (?~= \"gym session\")) (DateTime.time x0))))))"
  },
  {
    "original_sentence": "How many events do I have with Travis next month?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Travis\")))) (FullMonthofMonth (NextMonth)))))))"
  },
  {
    "original_sentence": "Schedule a history review for this Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"history review\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "I meant review my VHS collection",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"review my VHS collection\")))))"
  },
  {
    "original_sentence": "Yes, 1 PM, and let it last for 8 hours",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Change to 2pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "No i need to start that at 1",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "put on the meet at john and smith",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"john\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"smith\")))))))))))"
  },
  {
    "original_sentence": "First one looks good.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thank you!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you give me Cindy's email address?",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cindy\"))))))))"
  },
  {
    "original_sentence": "What time is my meeting on Friday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Cancel my meetings next Monday.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Aurora",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Aurora\")))))))"
  },
  {
    "original_sentence": "Brooklyn",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brooklyn\")))))))"
  },
  {
    "original_sentence": "Cora",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cora\")))))))"
  },
  {
    "original_sentence": "Please, add this event to the calendar: Meeting at Peter´s school. Wednesday 19th, December 2018 at 8:30 a.m.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MDY 19L (December) (Year.apply 2018L)) (HourMinuteAm 8L 30L)))) (Event.location_? (?= (LocationKeyphrase.apply \"Peter\\u00B4s school\")))))))"
  },
  {
    "original_sentence": "Show me out of office until 10 AM on December 28 2018.",
    "parse": "(let (x0 (Today)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"out of office\")) (Event.start_? (?= (DateAtTimeWithDefaults x0 (DateTime.time (Now)))))) (Event.end_? (?= (DateAtTimeWithDefaults (nextMonthDay x0 (December) 28L) (NumberAM 10L))))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))))))))"
  },
  {
    "original_sentence": "delete soccer event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"soccer\")))))))))"
  },
  {
    "original_sentence": "Yea.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Now add the same event for Sunday.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Perfect.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Extend both of those events to 4 hours each",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I need to schedule out a time on Friday to meet with the creative team at noon.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Schedule meeting with Creative Team tomorrow at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"meeting with Creative Team\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))))))"
  },
  {
    "original_sentence": "Make it 2 hours long please.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Now change the time from noon to 2 and make it 2:00 pm to 4:00 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Yes it is.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "i need to update the time on that",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "When is it officially winter?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "OK what is the coldest it has been in United States of America?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Simple question. When do you consider it to be winter weather?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Who has said they're probably coming to my Saturday party?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"party\"))))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Has anyone mentioned they might be able to attend the Conference?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Conference\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "So then who might have accepted the Game Night invite.",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Game Night\")))))) (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "put appointment with doctor",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "create appointment with doctor",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Create an appointment with Dane, James, and Yon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dane\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Yon\")))))))))))"
  },
  {
    "original_sentence": "have meeting end at 12",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "Yes. Also schedule a dinner wtih amanda , ryan and mickey.",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner\")) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"amanda\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"ryan\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"mickey\")))))))))))))"
  },
  {
    "original_sentence": "if u available now.",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "I want to meet with William and Antony at 2 pm today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 2L)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"William\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Antony\"))))))))))))"
  },
  {
    "original_sentence": "Can you add Josh to this for me please?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Josh\"))))))))))"
  },
  {
    "original_sentence": "Yes, very exciting meeting.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks. Can you add Marie to the meeting with william and others too?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Create a meeting in the afternoon on Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Monday)))))))"
  },
  {
    "original_sentence": "I will do the first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please add the location Ellis Island to that appointment.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Ellis Island\"))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "schedule my company picnic saturday at Yellowstone",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"company picnic\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))) (Event.location_? (?= (LocationKeyphrase.apply \"Yellowstone\")))))))"
  },
  {
    "original_sentence": "Make a new event for the birthday party next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"birthday party\")) (Event.start_? (DateTime.date_? (NextWeekList)))))))"
  },
  {
    "original_sentence": "Can you make it last three hours actually?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 3))))))"
  },
  {
    "original_sentence": "please fix the first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need a meeting with Sarah tomorrow morning at 11.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\")))))))))))"
  },
  {
    "original_sentence": "Can you make it last 2 hours and start at 12?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "Looking good!!! could you please reduce as an one hour",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Remove the meeting with Austin, Kristen, Seth, and Joseph from Friday's schedule.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Austin\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Seth\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kristen\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joseph\"))))))))))))"
  },
  {
    "original_sentence": "Yes get rid of it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Outstanding, thanks!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a brunch for Zelda, Yvonne, Tammie and Victoria on Sunday at 11 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"brunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 11L))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Zelda\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Yvonne\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tammie\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Victoria\"))))))))))))"
  },
  {
    "original_sentence": "I need it to start a bit later.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "volleyball match sunday morning",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"volleyball match\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Sunday))))))))"
  },
  {
    "original_sentence": "The first one please.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "okay, thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Set up swim meet for saturday at 8.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"swim meet\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "yeh look correct",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to find Ben's cell phone number.",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ben\"))))))))"
  },
  {
    "original_sentence": "please give ben's home address",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "ben's phone number not available please give any other number to contact ben",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "give me ben's email address.",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"ben\"))))))))"
  },
  {
    "original_sentence": "thank you, add it to my address book please",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "I want to see all events",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "who is the birthday card for",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "list all attendees for all events",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "what events is Cornelio Hernandez",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cornelio Hernandez\"))))))"
  },
  {
    "original_sentence": "Create a lunch for june 30th at 5pm with Cornelio Hernandez",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 30L (June)) (NumberPM 5L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cornelio Hernandez\")))))))))))"
  },
  {
    "original_sentence": "cancel lunch for June 30th",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 30L (June)) (Event.subject_? (?~= \"lunch\"))))))))))"
  },
  {
    "original_sentence": "cancel all lunch events",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "cancel lunch",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "cancel lunch",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"lunch\")))))))))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add \"Tend To Food Forest\" to my calendar. Repeat bi-daily mornings",
    "parse": "(FenceRecurring)"
  },
  {
    "original_sentence": "ok, create a schedule and name it as tend to food forest",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"tend to food forest\")))))"
  },
  {
    "original_sentence": "The 2nd one works better",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "fight",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Great, send an invite to Carol for tend to food forest.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"tend to food forest\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carol\"))))))))))"
  },
  {
    "original_sentence": "Remove my Meeting with Aaron on the 15th of August.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 15L (August)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Aaron\"))))))))))))"
  },
  {
    "original_sentence": "so is rock climbing",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule Wow Playing Session for tomorrow at 2 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Wow Playing Session\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "planting bananas",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Cancel my event on Sunday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "mm ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What events do I have in the last week of December?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NumberWeekFromEndOfMonth 1L (December)))))"
  },
  {
    "original_sentence": "Do I have any plans for New Year's eve?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextHolidayFromToday (Holiday.NewYearsEve)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "How is the weather in chicago today",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"chicago\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "is there any rain in the forecast for chicago",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"chicago\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "What will the weather be tomorrow in chicago",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"chicago\"))) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "what will the weather be on oct 27 in cape giraudeau missouri",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"cape girardeau missouri\"))) (DateTime.date_? (?= (MD 27L (October))))))"
  },
  {
    "original_sentence": "What will the weather be on oct 27 in cape girardeau missouri",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"cape girardeau missouri\"))) (DateTime.date_? (?= (MD 27L (October))))))"
  },
  {
    "original_sentence": "is there any chance of rain",
    "parse": "(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "what will the weather be like on oct 27 in memphis tn",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"memphis tn\"))) (DateTime.date_? (?= (MD 27L (October))))))"
  },
  {
    "original_sentence": "what will the weather be like on oct 27 in blytheville ar",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"blytheville ar\"))) (DateTime.date_? (?= (MD 27L (October))))))"
  },
  {
    "original_sentence": "is there any rain",
    "parse": "(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Add a lunch at 12:00pm to my calendar on Tuesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "Look not good",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "ok extend the end time til 1 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Make lunch in the afternoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.time_? (Afternoon)))))))"
  },
  {
    "original_sentence": "No, I need something at 2.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Schedule a dinner with Hammond for tomorrow at 8pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Hammond\")))))))))))"
  },
  {
    "original_sentence": "It should be two hours long",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "forward this to hammond",
    "parse": "(Yield (ForwardEventWrapper (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"hammond\"))))))))"
  },
  {
    "original_sentence": "can you forward it to Hammond and Nya too please?",
    "parse": "(Yield (ForwardEventWrapper (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (append (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Hammond\")))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nya\"))))))))"
  },
  {
    "original_sentence": "Schedule Jennifer and her team for a volleyball match",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"volleyball match\")) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasPeople (FindTeamOf x0)))))))))"
  },
  {
    "original_sentence": "The first option would be ideal.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "do I have anything with my team?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything with Kim and her team?",
    "parse": "(let (x0 (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\"))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint x0) (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint x0)))))))))) 0L)))"
  },
  {
    "original_sentence": "it's okay",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please schedule my chess game for next Wednesday at 4:30 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"chess game\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (HourMinutePm 4L 30L))))))))"
  },
  {
    "original_sentence": "Let's change it to football game",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"football game\")))))"
  },
  {
    "original_sentence": "Great, can we start that at 4:15?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinutePm 4L 15L)))))))"
  },
  {
    "original_sentence": "Yes, this is it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to put a game of checkers on the calendar as well",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"game of checkers\")))))"
  },
  {
    "original_sentence": "Cancel the meeting with Chris on Thursday.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chris\"))))))))))))"
  },
  {
    "original_sentence": "That is correct. \\",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Am I scheduled for a Meeting with David Wallace within the next two weeks/",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David Wallace\")))) (NextPeriod (toWeeks 2)))))) 0L))"
  },
  {
    "original_sentence": "How about in July?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (July))))))"
  },
  {
    "original_sentence": "August?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (August))))))"
  },
  {
    "original_sentence": "I need to make an appointment to poop my pants right now",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"poop my pants\")) (Event.start_? (?= (Now)))))))"
  },
  {
    "original_sentence": "That's correct",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "can you make it for 2 hours long",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "make an appointment for HOT DATE tonight at 11 till 3",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Today) (NumberPM 11L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"HOT DATE\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberAM 3L)))))))))"
  },
  {
    "original_sentence": "perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Whats the weather like tonight in venice california",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"venice california\"))) (DateTimeConstraint (Night) (Today))))"
  },
  {
    "original_sentence": "is it cloudy",
    "parse": "(Yield (IsCloudy (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "what is the humidity",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (humidity) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "whats the uv index",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (uvIndex) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "whats the air quality like",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "whats your name",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Please cancel all meetings today between 1 and 5 and reschedule my 2 meeting with Jennifer for Friday at 2 in Building B.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Add lunch with mom to 1 and cancel my doctor's appointment for Tuesday",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Schedule my flight to New York next weekend of Friday, go to concert on Saturday at 7pm and flight back home on Monday morning at 10am.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Friends Brunch tomorrow at 11:30 am. There will be morning drinks and mimosas so make it 3 hours. It will be at SeasonsDiner.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Friends Brunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinuteAm 11L 30L))))) (Event.duration_? (?= (toHours 3)))) (Event.location_? (?= (LocationKeyphrase.apply \"SeasonsDiner\")))))))"
  },
  {
    "original_sentence": "Yes it does",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cool perfect",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "remove new event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"new event\")))))))))"
  },
  {
    "original_sentence": "What meetings do I have on Tuesday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Do I have any other meetings the rest of the week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))) 0L))"
  },
  {
    "original_sentence": "Can you check next week too?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))"
  },
  {
    "original_sentence": "And the week after that?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (WeekOfDateNew (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toWeeks 1)))))))"
  },
  {
    "original_sentence": "awesome",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a lunch with Tom at noon today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (Noon))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))))))))"
  },
  {
    "original_sentence": "When is the fair scheduled for?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"fair\")))))))"
  },
  {
    "original_sentence": "Ok, how about the circus?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"circus\")))))"
  },
  {
    "original_sentence": "Who is coming to the circus?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"circus\")))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "How about the fair?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"fair\")))))"
  },
  {
    "original_sentence": "Add Beth and Sara to the Fair",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Fair\")))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Beth\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sara\")))))))))))"
  },
  {
    "original_sentence": "Dentist appointment wednesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dentist appointment\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday)))))))))"
  },
  {
    "original_sentence": "The one at 1:00 PM works and please mark me as Out of Office until 3:00PM.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "The one at 1 is correct.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "yes correct",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok proceed.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please accept the coffee party and say that I'm finna bring the stuff",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I'm finna bring the stuff\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"coffee party\"))))) :response (ResponseStatusType.Accepted) :sendResponse (RespondShouldSend.apply true)))"
  },
  {
    "original_sentence": "Actually can you decline it please.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(ResponseStatusType) AlwaysTrueConstraint)) (intension (ResponseStatusType.Declined)))))"
  },
  {
    "original_sentence": "No, just decline it and discard the response.",
    "parse": "(Yield (Execute (NewClobber (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(ResponseStatusType) AlwaysTrueConstraint)) (intension (ResponseStatusType.Declined))) (extensionConstraint (^(RespondShouldSend) AlwaysTrueConstraint)) (intension (RespondShouldSend.apply false)))))"
  },
  {
    "original_sentence": "Actually I want to accept it?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(ResponseStatusType) AlwaysTrueConstraint)) (intension (ResponseStatusType.Accepted)))))"
  },
  {
    "original_sentence": "When is the football game scheduled?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"football game\")))))))"
  },
  {
    "original_sentence": "Thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Is there anything scheduled immediately following the football game?",
    "parse": "(let (x0 (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"football game\"))))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))) 0L)))"
  },
  {
    "original_sentence": "schedule pizza party after the game",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pizza party\")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"game\"))))))))))))"
  },
  {
    "original_sentence": "that is good, but it needs to be 2 hours",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Schedule a meeting with my team",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser))))))))"
  },
  {
    "original_sentence": "Schedule a meeting with Paige Ashworth and Cher Roydon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher Roydon\")))))))))))"
  },
  {
    "original_sentence": "Make it for Monday April 8 2019 at 10:00 AM",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (?= (DateAtTimeWithDefaults (MDY 8L (April) (Year.apply 2019L)) (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Update meeting on April 8",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 8L (April)) (^(Event) EmptyStructConstraint)))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Meeting is about 2019 Financial Forecast",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"2019 Financial Forecast\")))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Reminder on April 8 to call Jerri Skinner RE: May Vacation",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Meeting on April 8 with Jerri Skinner at 3:00 PM to discuss May vacation time",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"discuss May vacation time\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 8L (April)) (NumberPM 3L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jerri Skinner\")))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Update April 8 1:00 meeting to begin at 1:15",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 1L 15L)))))))"
  },
  {
    "original_sentence": "No",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Hi bot bot !",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "How are you?",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "I've missed you Emily's bot!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Ok, so I need to know the weather in Palm Beach on Saturday",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Palm Beach\"))) (DateTime.date_? (?= (NextDOW (Saturday))))))"
  },
  {
    "original_sentence": "Oh no! Will there be rain that day?",
    "parse": "(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Are you serious bot bot??",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Is there rain there on Sunday as well?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextDOW (Sunday)))))))"
  },
  {
    "original_sentence": "Yikes. Well, forget it then. Thanks!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you accept my 1 pm meeting today and say I'll bring lunch.",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I'll bring lunch\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 1L)) (^(Event) EmptyStructConstraint))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Tentatively accept my nail appointment on March 1 2020 and ask if I can bring food with me to my appointment?",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"can I bring food with me to my appointment?\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 1L (March)) (Event.subject_? (?~= \"Nail appointment\")))))) :response (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Absolutely",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks. Accept my Star Gazing party and say that I will bring a telescope that we can use.",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I will bring a telescope that we can use\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Star Gazing party\"))))) :response (ResponseStatusType.TentativelyAccepted)))"
  },
  {
    "original_sentence": "Who is the current user?",
    "parse": "(Yield (CurrentUser))"
  },
  {
    "original_sentence": "Add lunch with my kids Saturday at 12pm",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I have to go to grocery store at 11 am today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go to grocery store\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "No, I just want it titled grocery store",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"grocery store\")))))"
  },
  {
    "original_sentence": "Look amazing",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Cancel grocery store",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"grocery store\")))))))))"
  },
  {
    "original_sentence": "Please , cancel that appointment on April 18",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 18L (April)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "I have a dentist appointment on the Sunday after April 26th from 3 pm to 5:30 pm where I'll be Out of Office.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (nextDayOfWeek (MD 26L (April)) (Sunday)) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 5L 30L))))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))))))))"
  },
  {
    "original_sentence": "Can you repeat that?",
    "parse": "(RepeatAgent)"
  },
  {
    "original_sentence": "Can you put that I had an International Business Meeting last week.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"International Business Meeting\")) (Event.start_? (DateTime.date_? (LastWeekNew)))))))"
  },
  {
    "original_sentence": "I had dinner last night with Abby",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTimeConstraint (Night) (Yesterday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "The second one looks good.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I met Abby two days ago at 9 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (PeriodBeforeDate (Today) (toDays 2)) (NumberPM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "Put that I went to church with Elli and Abby last week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"church\")) (Event.start_? (DateTime.date_? (LastWeekNew)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))))))))"
  },
  {
    "original_sentence": "Create an event for the 5th of March at 2:30 pm for New Client Introduction, and set my status to Busy.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"New Client Introduction\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 5L (March)) (HourMinutePm 2L 30L))))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))"
  },
  {
    "original_sentence": "Well, the time looks right, as long as the status is \"Busy\" but can you also check and tell me what I have on the schedule for Thursday afternoon please?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)) (Afternoon)))))"
  },
  {
    "original_sentence": "create pizza night tuesday at 12",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pizza night\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hi, what meetings do I have scheduled for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Is there something the next day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Set dinner with in-laws for Friday at 7pm.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Set dinner with Terri and John Friday at 7 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 7L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Terri\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\"))))))))))))"
  },
  {
    "original_sentence": "change the dinner at 7.30 pm - 8.00 pm",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Please change the start time to 7:30 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinutePm 7L 30L)))))))"
  },
  {
    "original_sentence": "yes, that is good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What event do I have planned for the end of the day on Thursday?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Thursday)) (EndOfWorkDay)) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "What events do I have planned at the end of the day on Monday ? \\",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Monday)) (EndOfWorkDay)) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "what events end at the day of the day tomorrow",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (EndOfWorkDay)) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "I need meet with Abby at 3:00 PM until the end of the day.",
    "parse": "(let (x0 (NextTime (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (EndOfWorkDay))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))))))))"
  },
  {
    "original_sentence": "What are the prices like at Chili's in Lawrence, Kansas",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Chili's in Lawrence, Kansas\"))))))"
  },
  {
    "original_sentence": "Do they do takeout there?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "What's the price for the Applebee's in Lawrence?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"Applebee's in Lawrence\"))))))"
  },
  {
    "original_sentence": "Great. And for Perkins in Dayton?",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(LocationKeyphrase) AlwaysTrueConstraint)) (intension (LocationKeyphrase.apply \"Perkins in Dayton\")))))"
  },
  {
    "original_sentence": "How much is pizza at emmy squared in brooklyn?",
    "parse": "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"emmy squared in brooklyn\"))))))"
  },
  {
    "original_sentence": "tell about today any official annoucement",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Any meetings on the agenda today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"meetings\")))))"
  },
  {
    "original_sentence": "Add the hockey game at PPG arena in Pittsburgh Saturday from 1pm to 4pm.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"hockey game\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L))))) (Event.location_? (?= (LocationKeyphrase.apply \"PPG arena in Pittsburgh\"))))))))"
  },
  {
    "original_sentence": "Is there anything scheduled next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "make an event to pick my mom up from the airport on october 12th at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pick my mom up from the airport\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 12L (October)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "I need to pick up my sister from practice at 2 pm instead of 1 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.subject_? (?~= \"pick up my sister from practice\")) (NumberPM 1L)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Can we change lunch with mom today to 1?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Cancel pick up my sister.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"pick up my sister\")))))))))"
  },
  {
    "original_sentence": "Actually change my dinner date from Thursday to Friday.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.subject_? (?~= \"dinner date\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)))))))))"
  },
  {
    "original_sentence": "do I have any appointment in the weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend))))) 0L))"
  },
  {
    "original_sentence": "When is my next doctor's appointment?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"doctor's appointment\")) 1L)))"
  },
  {
    "original_sentence": "ok that's good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "delete dentist appointment",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\")))))))))"
  },
  {
    "original_sentence": "For my meeting this month, who organized it?",
    "parse": "(Yield (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today)))))))))"
  },
  {
    "original_sentence": "What time does today's staff meeting start?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"staff meeting\"))))))))"
  },
  {
    "original_sentence": "What about tomorrow's?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "How about the day after tomorrow? Tell me the time and the location.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Oh okay. How many events do I have the day after tomorrow?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (adjustByPeriod (Tomorrow) (toDays 1)) (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "make it the main conference room?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (roomRequest)))))"
  },
  {
    "original_sentence": "What's slated on my schedule on Saturday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Hello, I need help with my calendar",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Can you add my work schedule in please?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"work\")) (Event.start_? (?= (Now)))))))"
  },
  {
    "original_sentence": "Adjust the time to 8am-5pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Can you search for birthdays",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "What birthdays are listed on my calendar?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \"birthday\"))))"
  },
  {
    "original_sentence": "What events do I have on the calendar for tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "I need a workout appointment next month!",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"workout appointment\")) (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth))))))))"
  },
  {
    "original_sentence": "Second one please",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you move my lunch with bob so that it's not during the weekend?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"bob\"))))))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "let's do the second option. And can you move yoga to not be on the weekend?",
    "parse": "(do (Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"yoga\")))))) (Event.start_? (DateTime.date_? (negate (ThisWeekend))))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Move my smash weekly to be not on the weekend",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"smash weekly\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Can you please add a team meeting to my calendar for this Friday and invite Paige, Cher, Jerri, and Janice?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jerri\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Janice\"))))))))))))"
  },
  {
    "original_sentence": "1:00 PM works",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please cancel any meetings on my calendar from April 17th to April 24th and add vacation time.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Please cancel any meetings on my calendar from April 17 to April 24.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Cancel any meetings scheduled for April 17th",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "please add vacation day to my calendar for April 17",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"vacation day\")) (Event.start_? (DateTime.date_? (?= (MD 17L (April)))))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "add vacation day from 8 a.m. to 5 p.m. on April 17",
    "parse": "(let (x0 (DateAtTimeWithDefaults (MD 17L (April)) (NumberAM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"vacation day\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create an event. Subject: My piano recital. Start on Saturday the 29th at 7:00 PM. Duration one hour. Status Busy.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"My piano recital\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 29L) (NumberPM 7L))))) (Event.duration_? (?= (toHours 1)))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))"
  },
  {
    "original_sentence": "It does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks. Do I have anything scheduled this week with my daughter?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"daughter\")))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))"
  },
  {
    "original_sentence": "Delete team meeting for today",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \"team meeting\"))))))))))"
  },
  {
    "original_sentence": "make Grandpa's 80th birthday party for next saturday at 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Grandpa's 80th birthday party\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Actually, name it Grandpa's 1st - 80th bday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"Grandpa's 1st - 80th bday\")))))"
  },
  {
    "original_sentence": "Ripperoni, actually make that Grandpa's Deathday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"Grandpa's Deathday\")))))"
  },
  {
    "original_sentence": "Need 3 pm Fri event",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "have this going until 4:00",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "put on my appointment in calender",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "2 pm Friday",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Please schedule me a later afternoon appontment for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (LateAfternoon) (Tomorrow))))))"
  },
  {
    "original_sentence": "Can You update my Calendar to add that tomorrow there is a meeting at 2 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Make my meeting tomorrow last 2 hours.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Change tomorrow's meeting at 3pm to 4pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Schedule for casting interviews next Saturday at 3pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"casting interviews\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Change time for casting interviews on saturday from 3:00 pm to 4:00pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 3L)) (Event.subject_? (?~= \"casting interviews\"))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Okay, what time are the casting interviews scheduled currently?",
    "parse": "(do (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"casting interviews\")))))) (Yield (DateTime.time (Execute (refer (^(DateTime) ActionIntensionConstraint))))))"
  },
  {
    "original_sentence": "ok!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Change my current dental appointment to a week from this Thursday at 3 PM.",
    "parse": "(do (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dental appointment\"))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (& (DateTime.date_? (?= (adjustByPeriod (NextDOW (Thursday)) (toWeeks 1)))) (DateTime.time_? (?= (NumberPM 3L)))))))))"
  },
  {
    "original_sentence": "Actually make it at 2 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Add 30 to today's meeting and take out 15 from the project task.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"project task\")))))) (do (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toMinutes 30))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x1) (Event.duration_? (?= (subtractDurations (Event.duration x1) (toMinutes 15)))))))))"
  },
  {
    "original_sentence": "Do I have a meeting with Rick this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rick\")))) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "okay sure good time meet",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add a meeting with Wendy at 3 pm Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wendy\")))))))))))"
  },
  {
    "original_sentence": "Creat a schedule for the dental checking.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"dental checking\")))))"
  },
  {
    "original_sentence": "I need my 5pm meeting to be shortened to 30 minutes.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))) (Event.duration_? (?= (toMinutes 30))))))"
  },
  {
    "original_sentence": "Can you change the barbecue to be at andrew's place",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"barbecue\")))))) (Event.location_? (?= (LocationKeyphrase.apply \"andrew's place\"))))))"
  },
  {
    "original_sentence": "change the staff meeting to 2pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"staff meeting\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Yes it is.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hey can you Add the PTA meeting on my calendar for this Friday at 4 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"PTA meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "I meant at 6 pm.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "Great, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please move the PTA meeting to 7:30 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"PTA meeting\")))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 7L 30L)))))))"
  },
  {
    "original_sentence": "It ends at 8:15.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (HourMinutePm 8L 15L)))))))"
  },
  {
    "original_sentence": "That's lookin good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need my grocery shopping to be moved to anytime not on the weekend",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"grocery shopping\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "Either works",
    "parse": "(Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you also change my Watch Netflix event to be not on the weekend?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Watch Netflix\")))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Saturday's game got rescheduled, can we move it so it's not on a weekend",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"game\")) (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))))) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))"
  },
  {
    "original_sentence": "make arrangement for team meeting to next week monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"team meeting\")) (Event.start_? (DateTime.date_? (?= (DowOfWeekNew (Monday) (NextWeekList)))))))))"
  },
  {
    "original_sentence": "10 am - 10.30 am ok",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "ok fine thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Who has not replied on the church meeting Sunday?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (Event.subject_? (?~= \"church meeting\"))))))) (ResponseStatusType.None)))"
  },
  {
    "original_sentence": "who hasn't responded to Gym Session ?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Gym Session\")))))) (ResponseStatusType.None)))"
  },
  {
    "original_sentence": "Who hasn't responded to the choir practice?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"choir practice\")))))) (ResponseStatusType.None)))"
  },
  {
    "original_sentence": "Can you check the weather for Saturday?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextDOW (Saturday))))))"
  },
  {
    "original_sentence": "Make an appointment in Central Park on Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))) (Event.location_? (?= (LocationKeyphrase.apply \"Central Park\")))))))"
  },
  {
    "original_sentence": "What time am I supposed to drop off my car tomorrow",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"drop off car\"))))))))"
  },
  {
    "original_sentence": "Can you delete any other appointments I have tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Move my budget meeting so it's 30 minutes later, and if that overlaps with going to the piano recital please just make the meeting shorter so they don't overlap.",
    "parse": "(FenceConditional)"
  },
  {
    "original_sentence": "Help me to get a conference room in Bellevue at 4 pm please.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 4L)))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Bellevue\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "Yeah that looks right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please book a room in Bellevue tomorrow morning",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Morning) (Tomorrow))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Bellevue\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "Choose the first one and put it on my calendar.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks. Lets book a room at Berkeley for building Ikea furniture on Friday afternoon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"building Ikea furniture\")) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Friday))))) (Event.location_? (& (?= (LocationKeyphrase.apply \"Berkeley\")) (roomRequest)))))))"
  },
  {
    "original_sentence": "I need to make a calendar entry for tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Can you make a meeting with Jonathan?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jonathan\"))))))))))"
  },
  {
    "original_sentence": "Actually exclude Jonathan and add Bradley.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jonathan\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bradley\")))))))))))"
  },
  {
    "original_sentence": "Anything earlier",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "Tuesday. But make it later",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Put dinner with Sally on my schedule for tomorrow at 5pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sally\")))))))))))"
  },
  {
    "original_sentence": "It should be an hour long",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Good, but change it to the 18th.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDay (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Day.apply 18L))))))))"
  },
  {
    "original_sentence": "Yeah is it .",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have anything else with Sally?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sally\")))))))) 0L))"
  },
  {
    "original_sentence": "Create dinner with family tonight at 6pm.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Cancel all events that were scheduled for the week after next. I will be out of town for that entire week.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I am busy all of next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.showAs_? (?= (ShowAsStatus.Busy))) (NextWeekList)))))"
  },
  {
    "original_sentence": "That looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I have a music festival with Rocky and Lola all next week.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rocky\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lola\")))))))) (EventAllDayForDateRange (Event.subject_? (?= \"music festival\")) (NextWeekList))))))"
  },
  {
    "original_sentence": "Actually, can you remove the first two days from that?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (Execute (refer (& (^(Date) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (toDays 2))))))))"
  },
  {
    "original_sentence": "Look for any meetings between next Thursday and next Saturday.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (DateAndConstraint (NextDOW (Thursday)) (NextDOW (Saturday))))))"
  },
  {
    "original_sentence": "Do I have any ad sales meetings tomorrow between 8 and 10 am?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (Tomorrow) (^(Event) EmptyStructConstraint) (NumberAM 8L) (NumberAM 10L))))) 0L))"
  },
  {
    "original_sentence": "Do I have plans tomorrow evening?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Evening))))) 0L))"
  },
  {
    "original_sentence": "What plans do I have tomorrow between 9 am and 12 am.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L))) (Yield (FindEventWrapperWithDefaults (EventDuringRangeDateTime (^(Event) EmptyStructConstraint) (DateTimeAndConstraint x0 (TimeAfterDateTime x0 (NumberAM 12L)))))))"
  },
  {
    "original_sentence": "Do I have any events tommorow before noon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateBeforeTime (Tomorrow) (^(Event) EmptyStructConstraint) (Noon))))) 0L))"
  },
  {
    "original_sentence": "I need to cancel that thing I had around tomorrow noon",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRangeDateTime (^(Event) EmptyStructConstraint) (AroundDateTime (DateAtTimeWithDefaults (Tomorrow) (Noon)))))))))))"
  },
  {
    "original_sentence": "Can you find me my events around 6 pm next Tuesday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRangeDateTime (^(Event) EmptyStructConstraint) (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 6L))))))"
  },
  {
    "original_sentence": "Hmm then lets make a meeting with my Team then for this Friday around noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (TimeAround (Noon)) (NextDOW (Friday)))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "I want to schedule a training next month with Fran",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"training\")) (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fran\")))))))))))"
  },
  {
    "original_sentence": "Take Fran off that training and call \"I train myself\".",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.subject_? (?= \"I train myself\")) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fran\"))))))))))))"
  },
  {
    "original_sentence": "The first one is better.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Add a work luncheon with Carlos tommorrow at noon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"work luncheon\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carlos\")))))))))))"
  },
  {
    "original_sentence": "Actually take Carlos off and make it dinner conference.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.subject_? (?= \"dinner conference\")) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carlos\"))))))))))))"
  },
  {
    "original_sentence": "Can you add Julian's employee review to the calendar on March 7 from 10:30 am until noon. Invite Julian, of course, and Emily both, please.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (MD 7L (March)) (HourMinuteAm 10L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Julian's employee review\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (Noon))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Julian\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\")))))))))))))"
  },
  {
    "original_sentence": "That looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Set up an event for work party with jerri skinner, fiona mason, and cecelia waller from 5-8pm",
    "parse": "(let (x0 (NextTime (NumberPM 5L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"work party\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 8L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jerri skinner\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"fiona mason\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"cecelia waller\")))))))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add project meeting with damon ellery",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"project meeting\")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"damon ellery\")))))))))))"
  },
  {
    "original_sentence": "Top one works",
    "parse": "(Yield (Execute (ChooseCreateEvent (TopResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I'm off to the golf course on Friday morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Friday)))) (Event.location_? (?= (LocationKeyphrase.apply \"the golf course\")))))))"
  },
  {
    "original_sentence": "Update my trip to Chicago to next week",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"trip to Chicago\")))))) (Event.start_? (DateTime.date_? (NextWeekList))))))"
  },
  {
    "original_sentence": "second one",
    "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Change that to be for 2 hours",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "That is perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What time am I supposed to help Abby, Kim, and Jake",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))))))"
  },
  {
    "original_sentence": "Set a meeting with Joe, Jim and Jane for this morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Morning) (Today))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joe\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\"))))))))))))"
  },
  {
    "original_sentence": "The first is good. Create a meeting with Freddie, Heather, and Jamie",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Freddie\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Heather\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamie\"))))))))))))"
  },
  {
    "original_sentence": "The first one works.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "That is pretty tasty",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Hair appointment with Rebecca is Wednesday at 10 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Hair appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 10L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rebecca\")))))))))))"
  },
  {
    "original_sentence": "Actually that should take 90 minutes",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toMinutes 90))))))"
  },
  {
    "original_sentence": "Can you actually make it 2 hours just in case",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 2))))))"
  },
  {
    "original_sentence": "Invite Jess to that",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jess\"))))))))))"
  },
  {
    "original_sentence": "invite moira bean",
    "parse": "(Yield (Execute (ChoosePersonFromConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"moira bean\")) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you tell me if I have a doctor's appointment scheduled next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctor's appointment\")) (NextWeekList))))"
  },
  {
    "original_sentence": "Can you put an extra 30 minutes on my doctors appointment to allow for xrays on Monday?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \"doctors appointment\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.duration_? (?= (addDurations (Event.duration x0) (toMinutes 30))))))))"
  },
  {
    "original_sentence": "Yes but cancel that. I need to reschedule it for another time.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "When is my next meeting at the office?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.location_? (?= (LocationKeyphrase.apply \"the office\"))) 1L)))"
  },
  {
    "original_sentence": "OK THAT'S FINE",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "perfect",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have anything on March 25th?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 25L (March)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Do I have anything else scheduled March 25?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (MD 25L (March)) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "Fix the location on the New York Marathon to Central Park.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"New York Marathon\")))))) (Event.location_? (?= (LocationKeyphrase.apply \"Central Park\"))))))"
  },
  {
    "original_sentence": "what else do I have in Central Park",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Central Park\"))))))"
  },
  {
    "original_sentence": "Oh then please make it at Magnuson Park then",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Magnuson Park\"))))))"
  },
  {
    "original_sentence": "do I have anything else there",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))) 0L))"
  },
  {
    "original_sentence": "Hello! Add a dentist appointment for me this afternoon at 3pm. It should take about an hour.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Make an annual review in 3 hours",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"annual review\")) (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 3)))))))))"
  },
  {
    "original_sentence": "No it doesn't look right, pliease fixed in 3 hours",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 3))))))))"
  },
  {
    "original_sentence": "Let's move that annual review to Monday the 4th, please.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"annual review\")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 4L)))))))))"
  },
  {
    "original_sentence": "Yes, thank you. Also cancel my meeting 15 hours from now.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 15))) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Yes can you cancel that?",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I have to add lunch to my calendar tomorrow for 45 minutes starting at noon at \"Burger King\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))) (Event.duration_? (?= (toMinutes 45)))) (Event.location_? (?= (LocationKeyphrase.apply \"Burger King\")))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "DO I HAVE ANY MEETING WITH HAGRID THIS MONTH",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"HAGRID\")))) (FullMonthofMonth (Date.month (Today))))))) 0L))"
  },
  {
    "original_sentence": "Add a meeting at The Three Broomsticks with Harry, Hermione and Ron.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \"Three Broomsticks\"))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harry\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Hermione\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ron\"))))))))))))"
  },
  {
    "original_sentence": "July 26 works",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 26L (July))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "it's good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you push my appointment with Harry, Sally, and Carrie back by 1 day please?",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harry\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sally\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carrie\"))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply (toDays 1)))))))))"
  },
  {
    "original_sentence": "The conference last tuesday was held at the Marriot instead of the Esquire Inn.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \"Esquire Inn\"))) (EventOnDate (previousDayOfWeek (Today) (Tuesday)) (Event.subject_? (?~= \"conference\")))))))) (Event.location_? (?= (LocationKeyphrase.apply \"the Marriot\"))))))"
  },
  {
    "original_sentence": "Can you add that Karina attended.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karina\"))))))))))"
  },
  {
    "original_sentence": "I forgot that Mark attended the event too.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\"))))))))))"
  },
  {
    "original_sentence": "It was actually Monday not Tuesday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Monday))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add dinner with Sam for tomorrow at 9pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 9L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\")))))))))))"
  },
  {
    "original_sentence": "Yes, that'll work.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "please change my meeting with nick from thursday to friday at the same time",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"nick\"))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)) (DateTime.time (Event.start x0)))))))))"
  },
  {
    "original_sentence": "yes and thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have any other appointments for March 29?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (MD 29L (March)) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "nice",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you make me a meeting with Kim and Dan Schoffel for end of work day?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (EndOfWorkDay)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Schoffel\"))))))))))))"
  },
  {
    "original_sentence": "Add John Peter in the meeting list.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John Peter\"))))))))))"
  },
  {
    "original_sentence": "Great! Oh, and can you make Groceries at the end of the work day this Friday.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Groceries\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (EndOfWorkDay)))))))))"
  },
  {
    "original_sentence": "great, thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you set up a meeting with Jake on monday at 4 pm through the end of the day?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (EndOfWorkDay))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\"))))))))))))"
  },
  {
    "original_sentence": "What time is the staff meeting tomorrow?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"staff meeting\"))))))))"
  },
  {
    "original_sentence": "Great - can you block out the board room for it?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"board room\"))))))"
  },
  {
    "original_sentence": "yeah",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Appreciate it. Invite Robert and Tom from work.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Robert\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tom\")))))))))))"
  },
  {
    "original_sentence": "yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Ok set up a lunch at 12 am the same day.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberAM 12L))))))))"
  },
  {
    "original_sentence": "yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have anything else scheduled for that day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (^(Event) EmptyStructConstraint)))))) 0L))"
  },
  {
    "original_sentence": "What's on my calendar for next Thursday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Can you cancel that one?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "that's the one",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Actually, add that back please.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Great!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add pay light bill on thursday at 9 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pay light bill\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberAM 9L))))))))"
  },
  {
    "original_sentence": "Perfect.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Good! And also cancel the meeting that was scheduled after pay light bill.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (EventAfterDateTime (^(Event) EmptyStructConstraint) (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"pay light bill\"))))))) 1L)))))"
  },
  {
    "original_sentence": "Yes delete that",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks. Set up lunch with Abby the Monday after that",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (nextDayOfWeek (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Monday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "Please add lunch with Dave at panera at 2pm on the 4th to my calendar",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 4L) (NumberPM 2L))))) (Event.location_? (?= (LocationKeyphrase.apply \"panera\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dave\")))))))))))"
  },
  {
    "original_sentence": "Nah I meant the 14th, not the 4th.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDay (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Day.apply 14L))))))))"
  },
  {
    "original_sentence": "Can you make it last one hour?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Yes that is good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule a Team Happy Hour at the West End Bar on the 22nd at 6:30 pm with Kayla, Alex, Jeremy, and Todd.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Team Happy Hour\")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 22L) (HourMinutePm 6L 30L))))) (Event.location_? (?= (LocationKeyphrase.apply \"West End Bar\")))) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kayla\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alex\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jeremy\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Todd\"))))))))))))"
  },
  {
    "original_sentence": "Create event movie night Friday 6 p.m.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"movie night\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "It should be 3 hours long.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 3))))))"
  },
  {
    "original_sentence": "Create an event for Drink's with Mike Friday night at 9:30 PM on Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Drink's\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 9L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mike\")))))))))))"
  },
  {
    "original_sentence": "Please, make it till 11:30 p.m.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (HourMinutePm 11L 30L)))))))"
  },
  {
    "original_sentence": "This Monday is my sons birthday party.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"my sons birthday party\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))))))"
  },
  {
    "original_sentence": "No, please move the party to Saturday. But put birthday dinner the 5th at 7pm",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "please move the party to Saturday",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday))))))))"
  },
  {
    "original_sentence": "I would like to keep the time the same.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "what will be the weather tomorrow at 8am?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTimeConstraint (?= (NumberAM 8L)) (Tomorrow))))"
  },
  {
    "original_sentence": "I am in Los Angeles.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"Los Angeles\")))))))"
  },
  {
    "original_sentence": "I have a hike at a park in Los Angeles on Sunday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"hike\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))) (Event.location_? (?= (LocationKeyphrase.apply \"park in Los Angeles\")))))))"
  },
  {
    "original_sentence": "Move my 4 o clock meeting on Thursday to 2 o clock on Friday",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 4L)) (^(Event) EmptyStructConstraint)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Yes, can you also make if for an hour as well?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Yep",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "How tight is tomorrows schedule?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "the appointment should be changed on next monday",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))))))"
  },
  {
    "original_sentence": "Where is my lunch on Wednesday?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (Event.subject_? (?~= \"lunch\"))))))))"
  },
  {
    "original_sentence": "Do they have outdoor seating?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.OutdoorDining) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "We have a large party. Do they have enough seating?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "hi, help me cancel all my meetings",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Hi, I want to create an event called birthday party for Friday at 3pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"birthday party\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "no, make it to 6pm please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "check my events for Friday.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "the time is wrong",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "delete the event birthday party from calendar.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"birthday party\")))))))))"
  },
  {
    "original_sentence": "thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have any meetings with Jimmy this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jimmy\")))) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Is there anything with Barbara this weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barbara\")))) (ThisWeekend))))) 0L))"
  },
  {
    "original_sentence": "can you invite stacy too please?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"stacy\"))))))))))"
  },
  {
    "original_sentence": "yes, alex wants to come too",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"alex\"))))))))))"
  },
  {
    "original_sentence": "Yeah this looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Schedule a meeting at brunch",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.time_? (?= (Brunch)))))))"
  },
  {
    "original_sentence": "good",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Ok now delete my meeting at brunch time on April 29th",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (MD 29L (April)) (Brunch)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Yes that's it. Thankyou",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make a meeting on Monday after brunch.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (OnDateAfterTime (NextDOW (Monday)) (Brunch))))))"
  },
  {
    "original_sentence": "It does.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please set up a dermatologist appointment for today at 4:20 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dermatologist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (HourMinutePm 4L 20L))))))))"
  },
  {
    "original_sentence": "At 5 I am going to a Dinner so put that on the schedule.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dinner\")) (Event.start_? (?= (NextTime (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "Block out an hour for the dinner.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\")))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "What do I have to do at 4:00 PM?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 4L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Create a new appointment for my eyedoctor tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"eyedoctor\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "Make it start at 11:15 am.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 11L 15L)))))))"
  },
  {
    "original_sentence": "Looks about right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Looks right but make it for 1 day later.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (DateTime.date (Event.start x0)) (toDays 1)))))))))"
  },
  {
    "original_sentence": "make that 9-10:30 am",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))))))"
  },
  {
    "original_sentence": "My meeting tomorrow with Jim ends up 7 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.end_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 7L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))))))))))"
  },
  {
    "original_sentence": "Yes, it is. Can you add that I have dinner with Jim afterwords ending at 7:30 PM?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction)) x1 (Event.end (^(Dynamic) item x0))) (do (Yield x0) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (?= x1))) (Event.end_? (?= (TimeAfterDateTime x1 (HourMinutePm 7L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))))))))))))"
  },
  {
    "original_sentence": "Looks great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I have a sales conference ending at 5 pm on Friday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"sales conference\")) (Event.end_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "i need an event with end 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.end_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "I need to plan a family event on sunday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"family event\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))))))"
  },
  {
    "original_sentence": "Let's do the second",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Delete all events that fall on Monday",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Does Easter happen next week?",
    "parse": "(Yield (allows (NextWeekList) (NextHolidayFromToday (Holiday.Easter))))"
  },
  {
    "original_sentence": "is Flag Day in May",
    "parse": "(Yield (allows (FullMonthofMonth (May)) (NextHolidayFromToday (Holiday.FlagDay))))"
  },
  {
    "original_sentence": "Is Tax Day next month",
    "parse": "(Yield (allows (FullMonthofMonth (NextMonth)) (NextHolidayFromToday (Holiday.TaxDay))))"
  },
  {
    "original_sentence": "Please delete my Wednesday lunch with Jim Baker, Charles Danger, and Fred Worth.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (& (Event.subject_? (?~= \"lunch\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim Baker\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Charles Danger\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fred Worth\")))))) (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "Yes, Please cancel it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make a meeting with Kim, Abby, and Jake",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))))))))))"
  },
  {
    "original_sentence": "The second one. Now could you please add a Dinner with Elli, Jesse and Jennifer tomorrow at 7 pm",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 7L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer\")))))))))))))"
  },
  {
    "original_sentence": "can you create a 30 minutes meeting with jJeremy at 7 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (NextTime (NumberPM 7L)))) (Event.duration_? (?= (toMinutes 30)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jJeremy\")))))))))))"
  },
  {
    "original_sentence": "Yes, can you please set that for me?",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "great could you add the ale house to the location",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"the ale house\"))))))"
  },
  {
    "original_sentence": "can you schedule a dog bath for Tuesday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dog bath\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))))))"
  },
  {
    "original_sentence": "yes, the first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need help with my personal calendar",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Do I have anything scheduled with Paige Ashworth?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\"))))))) 0L))"
  },
  {
    "original_sentence": "Ok. Please schedule lunch with Paige Ashworth on Monday May 13, 2019 from 12 pm to 1pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (MDY 13L (May) (Year.apply 2019L)) (NumberPM 12L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\"))))))))))))"
  },
  {
    "original_sentence": "No",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Please schedule lunch for 1 hour at 12 pm on Monday May 13, 2019 with Paige Ashworth.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (MDY 13L (May) (Year.apply 2019L)) (NumberPM 12L))))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paige Ashworth\")))))))))))"
  },
  {
    "original_sentence": "That is good. Thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "do I have anything with Scot on my calendar?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scot\"))))))) 0L))"
  },
  {
    "original_sentence": "Scot Hanson has requested a meeting on Tuesday May 14 at 4:30 pm. If I don't have anything scheduled at that time please schedule it.",
    "parse": "(FenceAggregation)"
  },
  {
    "original_sentence": "Do i have anything planned on Tuesday May 14 at 4:30 pm?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (MD 14L (May)) (HourMinutePm 4L 30L)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Please schedule a meeting with Scot Hanson at 4:30pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (HourMinutePm 4L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scot Hanson\")))))))))))"
  },
  {
    "original_sentence": "Change the date to May 14",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (MD 14L (May))))))))"
  },
  {
    "original_sentence": "make it last until 5:30",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (HourMinutePm 5L 30L)))))))"
  },
  {
    "original_sentence": "great.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please list all events on my calendar for the week of May 13",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (WeekOfDateNew (MD 13L (May))))))"
  },
  {
    "original_sentence": "thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please remove my lunch on MAy 13",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 13L (May)) (Event.subject_? (?~= \"lunch\"))))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "That's all I need for now.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Do I have anything to do after brunch tomorrow?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (Tomorrow) (^(Event) EmptyStructConstraint) (Brunch))))) 0L))"
  },
  {
    "original_sentence": "Great then could we make a meeting tomorrow at brunch with Kim and Abby.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Brunch)))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\"))))))))))))"
  },
  {
    "original_sentence": "ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Make an event after brunch please",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (GreaterThanFromStructDateTime (?= (NextTime (Brunch))))))))"
  },
  {
    "original_sentence": "I need to schedule a meeting",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Let's go with the 10AM please",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Thank you very much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make an event for Tuesday at 2pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Add Brian Smith to that please.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Brian Smith\"))))))))))"
  },
  {
    "original_sentence": "Hi, I think I have an appointment with the endocrinologist on Monday at 3:20 and I need to reschedule that for Wednesday at 3 instead.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Monday)) (HourMinutePm 3L 20L)) (Event.subject_? (?= \"appointment with the endocrinologist\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Wednesday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "i need today date..?",
    "parse": "(Yield (Today))"
  },
  {
    "original_sentence": "Sure. Let me ask another way. Can you tell me today's date in terms of month, day? If today is the 8th, can you put all of today's appointments on the 12th?",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "change my name on the schedule",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "I am hiking the greatest mountain in the world tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"hiking the greatest mountain in the world\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "The first one is the best for me",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Cool, now add rock climbing practice on the 22nd",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"rock climbing practice\")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 22L))))))))"
  },
  {
    "original_sentence": "THe second one thanks",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "1 hour tomorrow morning for a meeting with YOU",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Find me 1 hour tomorrow for a meeting with Jessie.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jessie\")))))))))))"
  },
  {
    "original_sentence": "the 2nd one works well",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you find an hour on Sunday for me to attend church?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"attend church\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "The first one works. Now find me a time for supper afterwards.",
    "parse": "(let (x0 (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (do (Yield x0) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"supper\")) (Event.start_? (?= (Event.end (^(Dynamic) item x0))))))))))"
  },
  {
    "original_sentence": "Can you put down \"drop off donation\" at 2 pm on Wednesday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"drop off donation\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Sure",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Then add pick up Gavin from play date for tomorrow at 6 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pick up Gavin from play date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "Right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "And my nail appointment is Friday at 9:30 am and will take an hour",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"nail appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteAm 9L 30L))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Yes thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "what's on my calendar on tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "What time is my early morning workout scheduled to start?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"early morning workout\")))))))"
  },
  {
    "original_sentence": "when is my next doctor appointment?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"doctor appointment\")) 1L)))"
  },
  {
    "original_sentence": "ok, thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is the 2nd event on my calendar tomorrow?",
    "parse": "(do (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))) (Yield (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Mark my schedule as busy from Monday at 10am until Tuesday at 6pm and remind me that I have a meeting on tueday at 2:00pm one hour before.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Create an event on December 19th at 9am for 1 hour, subject is \"discuss next steps of planning\".",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"discuss next steps of planning\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 19L (December)) (NumberAM 9L))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "Do I have anything else for that day?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "set my status to out of office on friday the 4th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (nextDayOfMonth (Today) 4L)))))"
  },
  {
    "original_sentence": "Add shopping trip with mom at park meadows on friday 9am",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "add shopping trip at Park Meadows Friday at 9 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"shopping trip\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 9L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Park Meadows\")))))))"
  },
  {
    "original_sentence": "It should be an hour long!",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Looks good, set that for me.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "what will the weather be like for my shopping trip?",
    "parse": "(Yield (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"shopping trip\")))))))"
  },
  {
    "original_sentence": "I need to set a luch date with a exeutive for work",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Help me with my calender",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "When is my meeting with Scot?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Scot\")))))))))"
  },
  {
    "original_sentence": "Do I have any events with Cher?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher\"))))))) 0L))"
  },
  {
    "original_sentence": "Schedule a meeting with Cher Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Cher\")))))))))))"
  },
  {
    "original_sentence": "first one is good",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "ok I will",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I'm visiting a friend at noon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"visiting a friend\")) (Event.start_? (?= (NextTime (Noon))))))))"
  },
  {
    "original_sentence": "Make a appointment for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "Let's go with the second option please.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Looks good man!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Correct that appointment to cover the entire day.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.isAllDay_? (?= true)))))"
  },
  {
    "original_sentence": "create work meeting on sunday at 5",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"work meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "How many appointments do i have earlier than 2pm tomorrow?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateBeforeTime (Tomorrow) (^(Event) EmptyStructConstraint) (NumberPM 2L))))))"
  },
  {
    "original_sentence": "Do I have anything later after the appointment?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))) 0L)))"
  },
  {
    "original_sentence": "Cancel this event please",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Yes do that one.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Did I have any appointment before that?",
    "parse": "(let (x0 (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateBeforeTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0))))) 0L)))"
  },
  {
    "original_sentence": "What do I have on my calendar next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "Find a good time for tea with barb in the afternoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"tea\")) (Event.start_? (DateTime.time_? (Afternoon)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"barb\")))))))))))"
  },
  {
    "original_sentence": "The second one is good.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "which city is the University hospital for my appointment on February 3rd",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "How much time do I have before my next meeting?",
    "parse": "(Yield (TimeSinceEvent (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))"
  },
  {
    "original_sentence": "What events do i have early next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (EarlyDateRange (NextWeekList)))))"
  },
  {
    "original_sentence": "what about late next week?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (LateDateRange (NextWeekList))))))"
  },
  {
    "original_sentence": "What about early next month",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (EarlyDateRange (FullMonthofMonth (NextMonth)))))))"
  },
  {
    "original_sentence": "WE ARE GOING TO TOUR",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "Can you add an appointment for Thursday at 3 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Do I have anything else schedule on Thursday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "I need to schedule an appointment with my team for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "I want the 2nd one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "schedule a meeting with my team on saturday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Me and my team are going to have to meet on Saturday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Let's go with the 1:00 PM option.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Do I have a meeting scheduled?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))) 0L))"
  },
  {
    "original_sentence": "What's the next?",
    "parse": "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Move that to Friday at 11 am.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Friday)) (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "I will be Making Money with Abby tomorrow. We need a room",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"Making Money\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.location_? (roomRequest))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "I would like to book the 2nd one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Book a conference room for tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.location_? (roomRequest))))))"
  },
  {
    "original_sentence": "Yeah, the one in the afternoon is better.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (Afternoon))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Get me a room at Cambridge with Tony.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (& (?= (LocationKeyphrase.apply \"Cambridge\")) (roomRequest))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tony\")))))))))))"
  },
  {
    "original_sentence": "Open all the windows in the house at 4.",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you schedule Bowling Date for tomorrow at 9:30 pm?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Bowling Date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 9L 30L))))))))"
  },
  {
    "original_sentence": "yes it's right",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Ok thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "OK",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need a meeting with Jake tomorrow at 7 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 7L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))))))))))"
  },
  {
    "original_sentence": "update it to PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (ConvertTimeToPM (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))))))))))))"
  },
  {
    "original_sentence": "Can you schedule me an event on Sunday at 8 am?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 8L)))))))"
  },
  {
    "original_sentence": "I meant the PM my bad",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (ConvertTimeToPM (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))))))))))))"
  },
  {
    "original_sentence": "yes. Now please schedule an event on Sunday at 8 for me",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "I meant for PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (ConvertTimeToPM (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint))))))))))))"
  },
  {
    "original_sentence": "the boss won't be able to make it, please cancel tomorrow's appointment",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Uninvite Beth from the work meeting tomorrow.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (& (Event.subject_? (?~= \"work\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Beth\")))))))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Beth\")))))))))))"
  },
  {
    "original_sentence": "Take Noah off the attendee list for work meeting.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Noah\")))))))))))"
  },
  {
    "original_sentence": "When can you take Noah off the attendee list?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Noah\")))))))))))"
  },
  {
    "original_sentence": "Beth should be disinvite too.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Beth\")))))))))))"
  },
  {
    "original_sentence": "Uninvite Beth from work meeting.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Beth\")))))))))))"
  },
  {
    "original_sentence": "Can you look what i have on my calendar for today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Okay, can you tell me what the other meeting is today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Are you sure that's today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "you make my life easier, god that I would do without you, thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "add dinner party on the 23rd at Nancy's",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner party\")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 23L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Nancy's\")))))))"
  },
  {
    "original_sentence": "Hi can you add golfing on Thursday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"golfing\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday)))))))))"
  },
  {
    "original_sentence": "Yes, the second one.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Also add lunch at 12 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (NextTime (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "Yes.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hi, I have to cancel the Lawyer's meeting I set up for tomorrow at 4pm and move it to Friday at 3pm please.",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L)) (Event.subject_? (?~= \"Lawyer's meeting\"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "I have yoga on Thursday at 10 am and I am going to the Juice bar at 11 am.",
    "parse": "(let (x0 (NextDOW (Thursday))) (do (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"yoga\")) (Event.start_? (?= (DateAtTimeWithDefaults x0 (NumberAM 10L)))))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults x0 (NumberAM 11L)))) (Event.location_? (?= (LocationKeyphrase.apply \"the Juice bar\")))))))))"
  },
  {
    "original_sentence": "Tell me the location of the juice bar.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Delete tomorrow morning's appointments and add a dentist from 9am to 10pm",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I need to know when my next meeting with Amy is.",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\")))) 1L)))"
  },
  {
    "original_sentence": "When is the next meeting with Accounting",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I am meeting next with James when?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\")))) 1L)))"
  },
  {
    "original_sentence": "When is the first event I have with Jamaal?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamaal\")))) 1L)))"
  },
  {
    "original_sentence": "Sounds good!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you cancel my dentist appointment for Thursday and change it for Friday instead. Also set a cook timer for 1 hour.",
    "parse": "(do (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dentist appointment\")) (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)))))))))) (FenceScope))"
  },
  {
    "original_sentence": "Alright, now add an appointment after my date on the 3rd of next month for 4pm on the 4th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"date\")) (EventOnDate (MD 3L (NextMonth)) (^(Event) EmptyStructConstraint)))))))) 4L) (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Hi",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "Can i get the weather report in california",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"california\"))) (?= (Now))))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "change time doctor appointment at 1.00 pm",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Can you change the time to 2pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Will I be seeing Nicole in August?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nicole\")))) (FullMonthofMonth (August)))))) 0L))"
  },
  {
    "original_sentence": "Am I free for the hour after that?",
    "parse": "(Yield (RecipientAvailability (& (Event.start_? (?= (adjustByPeriodDuration (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply :duration (toHours 1))))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true))"
  },
  {
    "original_sentence": "Is there anything scheduled this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))) 0L))"
  },
  {
    "original_sentence": "Make a lunch with Sam, Sara, Ricky and Jon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"lunch\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sara\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ricky\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jon\"))))))))))))"
  },
  {
    "original_sentence": "The 28th would work better for me. Lets add Cynthia.",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "When am I going to the movies with Carol, Laura, Ciara, and Stacy?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"movies\")) (Event.attendees_? (& (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carol\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Laura\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ciara\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Stacy\")))))))))))"
  },
  {
    "original_sentence": "Schedule a dinner date with Michelle, Michael, David Lax, and Greg.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dinner date\")) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Michelle\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Michael\"))))))) (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David Lax\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Greg\")))))))))))))"
  },
  {
    "original_sentence": "Friday would be best.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "yes, I definitely want to attend Stars and say that I'm gonna become one",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I'm gonna become one\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Stars\"))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Please accept my dancing with the moon event and say that I will become a star",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I will become a star\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dancing with the moon\"))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Yes and accept the bachelorette party next week and say im so excited!!",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"im so excited!!!\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"bachelorette party\")) (NextWeekList))))) :response (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Can you tell me how long today's meeting will take?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "What about the one tomorrow?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "And the one next week?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))"
  },
  {
    "original_sentence": "And the one on Sept 19th",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (MD 19L (September)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "And the one on October 19th?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventOnDate (MD 19L (October)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Make a shopping spree event later on today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventOnDate (Today) (& (Event.subject_? (?~= \"shopping spree\")) (Event.start_? (Later)))))))"
  },
  {
    "original_sentence": "the 2nd one looks awesome",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Okay, thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Please schedule a meeting with the pope tomorrow.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Delete my appointment that's going on right now",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (Now) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "Add dentist appointment at 4:00 PM on Wednesday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "Yes, I need the dentist appointment to be at 4:00 pm but can you put another 30 minutes?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))) (Event.duration_? (?= (addDurations (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint)))) (toMinutes 30))))))))"
  },
  {
    "original_sentence": "perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to eat some cakes tomorrow with my team",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"eat some cakes\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "hmm, can you do that again",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "Let's put the second option on the calendar.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Could you give that another go?",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "redo it please.",
    "parse": "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))"
  },
  {
    "original_sentence": "could you schedule hair appt for Thursday?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"hair appt\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday)))))))))"
  },
  {
    "original_sentence": "I don't mind either.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Set timing for hair appointment to evening.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"hair appointment\")) (Event.start_? (DateTime.time_? (Evening)))))))"
  },
  {
    "original_sentence": "either is ok.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "tomorrow joining the appointment",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make an event for January 21 from 1:00 to 2:30 called meet with contractor.",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Can you make a public event that says i will be out of the office from 12:00 til 3:00 on the 21st?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (nextDayOfMonth (Today) 21L) (NumberPM 12L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"public\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L))))) (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))))))))"
  },
  {
    "original_sentence": "Thanks, also add meeting with Jim to Monday at 9 a.m.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jim\")))))))))))"
  },
  {
    "original_sentence": "Can you delete that meeting, I forgot it was on tuesday",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Add a meeting Tuesday at 9 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 9L)))))))"
  },
  {
    "original_sentence": "Do I have time for a wedding on the 27th of april?",
    "parse": "(Yield (IsFree (RecipientAvailability (& (& (Event.subject_? (?= \"wedding\")) (Event.start_? (DateTime.date_? (?= (MD 27L (April)))))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
  },
  {
    "original_sentence": "Actually, check on April 28th.?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (MD 28L (April))))))))"
  },
  {
    "original_sentence": "Check my availability on May 5th.",
    "parse": "(Yield (IsFree (RecipientAvailability (& (Event.start_? (DateTime.date_? (?= (MD 5L (May))))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))"
  },
  {
    "original_sentence": "Could you check May 3rd instead?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (MD 3L (May))))))))"
  },
  {
    "original_sentence": "Hi, please set up a coffee date with Lisa for tomorrow at 2 PM at Starbucks.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"coffee date\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Starbucks\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lisa\")))))))))))"
  },
  {
    "original_sentence": "yessiree",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, will it be really cold that day?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (IsCold (WeatherQueryApi (AtPlace (FindPlace (Event.location x0))) (DateTime.date_? (?= (DateTime.date (Event.start x0))))))))"
  },
  {
    "original_sentence": "Maybe they should fix their heater...Can you move that back one day and tell me the weather again?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1))))))))"
  },
  {
    "original_sentence": "Please begin my three month maternity leave February 10th and mark me as out of the office.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (EventAllDayStartingDateForPeriod (Event.subject_? (?= \"maternity leave\")) (MD 10L (February)) (toMonths 3))))))"
  },
  {
    "original_sentence": "Oh, it should actually start on Oct 21 and last for 30 days.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (MD 21L (October)) (toDays 30)))))"
  },
  {
    "original_sentence": "Good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I am going on a hunting trip starting November 5th and lasting four days. Mark me as unavailable on those days.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (& (Event.subject_? (?= \"hunting trip\")) (Event.showAs_? (?= (ShowAsStatus.Busy)))) (MD 5L (November)) (toDays 4)))))"
  },
  {
    "original_sentence": "That's great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "I need to put something on my schedule at 1 pmTuesday of next week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (DowOfWeekNew (Tuesday) (NextWeekList)) (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Make that for cooking for mom",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \"cooking for mom\")))))"
  },
  {
    "original_sentence": "Do I have any cooking I gotta do coming up?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"cooking\"))))) 0L))"
  },
  {
    "original_sentence": "create a lunch meeting at 12pm with Jill",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (?= (NextTime (NumberPM 12L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jill\")))))))))))"
  },
  {
    "original_sentence": "the weather supposed to be Saturday",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextDOW (Saturday))))))"
  },
  {
    "original_sentence": "I will give you more access",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "APPOINTMENT WITH JOHN NEXT MONDAY",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (nextDayOfWeek (Today) (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"JOHN\")))))))))))"
  },
  {
    "original_sentence": "the bottom.",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "please help I need to know it you've gotta show it my calendar",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "please cancel Saturday event",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "No nevermind.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "What movies are playing today?",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "When am I going to the movies?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"movies\")))))))"
  },
  {
    "original_sentence": "What other days am I going to the movies after that?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventAfterDateTime (Event.subject_? (?~= \"movies\")) (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "Are there any concerts?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"concerts\"))))) 0L))"
  },
  {
    "original_sentence": "How long is the team meeting next Wednesday morning?",
    "parse": "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Wednesday)) (Event.subject_? (?~= \"team meeting\"))) (Morning)))))))"
  },
  {
    "original_sentence": "When is the next meeting with Jon coming up next?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jon\")))) 1L)))"
  },
  {
    "original_sentence": "Sounds good. When is the next time I am meeting with Matt?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Matt\")))) 1L)))"
  },
  {
    "original_sentence": "Ok, and what time do I see Griffin next?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Griffin\")))) 1L)))"
  },
  {
    "original_sentence": "Sweet, when am I meeting next with Carlos?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carlos\")))) 1L)))"
  },
  {
    "original_sentence": "I want to see my meeting with Amy.",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\"))))))))"
  },
  {
    "original_sentence": "hi",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "what is the weather report now",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (?= (Now))))"
  },
  {
    "original_sentence": "im in new york",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"new york\")))))))"
  },
  {
    "original_sentence": "thank you very much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Move my meeting with Grant Hill to 2 PM, please.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Grant Hill\")))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Yes this is correct.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "when i will meet my father?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "can you make a meeting for 3pm tomorrow to meet boos",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"meet boos\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "Did I have a lunch last week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"lunch\")) (LastWeekNew))))) 0L))"
  },
  {
    "original_sentence": "Who was invited to Lunch Date?",
    "parse": "(Yield (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (Event.subject_? (?~= \"Lunch Date\"))))))))"
  },
  {
    "original_sentence": "add john to this lunch date as well",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (Event.subject_? (?~= \"lunch date\")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"john\"))))))))))"
  },
  {
    "original_sentence": "Yes. The location was Mandolin Aegean Bistro",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.location_? (?= (LocationKeyphrase.apply \"Mandolin Aegean Bistro\"))))))"
  },
  {
    "original_sentence": "Update Lunch with John at on Wednesday at 12:00 pm to add location Mandolin Aegean Bistro.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 12L)) (& (Event.subject_? (?~= \"Lunch\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Mandolin Aegean Bistro\"))))))"
  },
  {
    "original_sentence": "I would like to add lunch on Wednesday with Ron and Sarah at 12:30PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (HourMinutePm 12L 30L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ron\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\"))))))))))))"
  },
  {
    "original_sentence": "OK WELL SUPER",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Wait, that's not my right timezone. Set it to 12:30 EST.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "ok fine, where is my meeting with warner this week?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"warner\")))) (ThisWeek)))))))"
  },
  {
    "original_sentence": "ok iam meeting set remander",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Can you add a 2 hour hair appointment this Saturday at noon?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"hair appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (Noon))))) (Event.duration_? (?= (toHours 2)))))))"
  },
  {
    "original_sentence": "Yes, it is right. What is the weather looking like for the event?",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (WeatherForEvent (^(Dynamic) item x0)))))"
  },
  {
    "original_sentence": "Uninvite Luis, Juan Paulina and Monica from my birthday",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"birthday\")))))) (Event.attendees_? (& (& (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Luis\"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Juan\")))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paulina\")))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Monica\"))))))))))))"
  },
  {
    "original_sentence": "Update it to 3pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Add Carol, and Kacey to that please.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carol\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kacey\")))))))))))"
  },
  {
    "original_sentence": "Add Tina as well.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tina\"))))))))))"
  },
  {
    "original_sentence": "Yes, looks perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "What time is the soccer game?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"soccer game\")))))))"
  },
  {
    "original_sentence": "I need it rescheduled now.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Can you please reschedule the soccer game?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (EventRescheduled (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Can we move this to the middle of next week?",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "That time looks good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hello, I need to book an event next month",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth)))))))"
  },
  {
    "original_sentence": "Can you create an event for a wedding on May 2nd?\\",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"wedding\")) (Event.start_? (DateTime.date_? (?= (MD 2L (May)))))))))"
  },
  {
    "original_sentence": "It starts at 6PM and won't end until late",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "Create an event for a wedding 6PM-midnight on May 2nd",
    "parse": "(let (x0 (DateAtTimeWithDefaults (MD 2L (May)) (NumberPM 6L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"wedding\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (Midnight)))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have any appointments in December?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (December)))))) 0L))"
  },
  {
    "original_sentence": "What events did I have last month?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (LastPeriod (toMonths 1)))))"
  },
  {
    "original_sentence": "Do I have any events next month?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth)))))) 0L))"
  },
  {
    "original_sentence": "Do I have any events in May?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (May)))))) 0L))"
  },
  {
    "original_sentence": "Hey give me the John's contact info",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))))))"
  },
  {
    "original_sentence": "Whats Kaladin's email?",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kaladin\"))))))))"
  },
  {
    "original_sentence": "Just show me his contact info",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Can you tell me when my next dentist appointment is?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"dentist appointment\")) 1L)))"
  },
  {
    "original_sentence": "when is my next meeting",
    "parse": "(Yield (Event.start (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))"
  },
  {
    "original_sentence": "And what's on the agenda after that?",
    "parse": "(let (x0 (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (^(Event) EmptyStructConstraint) (DateTime.time x0)))))"
  },
  {
    "original_sentence": "when is the meeting with my parents?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "It should be moved to the 30th.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDay (DateTime.date (Event.start x0)) (Day.apply 30L)))))))))"
  },
  {
    "original_sentence": "Is friday open earlier than 5 but later than 1?",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "ok give your any other option???",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "What is available Friday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "The second one is best but can it be later in the afternoon",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "What will the weather be tomorrow?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow)))))"
  },
  {
    "original_sentence": "Get rid of tomorrow morning's coffee with Milford and his manager.",
    "parse": "(let (x0 (PersonName.apply \"Milford\")) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (& (Event.subject_? (?~= \"coffee\")) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))))))) (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Morning)))))))))))"
  },
  {
    "original_sentence": "OK",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create a new meeting with Catalina and her manager at 1:15 pm on Tuesday.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Catalina\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (HourMinutePm 1L 15L)))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "change to launch time is better meeting time is 12.30 PM to 1.00 PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (& (Event.subject_? (?= \"launch time\")) (Event.start_? (DateTime.time_? (?= (HourMinutePm 12L 30L))))) (Event.end_? (DateTime.time_? (?= (NumberPM 1L))))))))"
  },
  {
    "original_sentence": "this looks perfect thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add roller skating practice to my calendar on Tuesday at 7.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"roller skating practice\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 7L))))))))"
  },
  {
    "original_sentence": "Looks good, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Decline Makeup lesson on Feb 26 2020 and say I don't need makeup",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I don't need makeup\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MDY 26L (February) (Year.apply 2020L)) (Event.subject_? (?~= \"Makeup lesson\")))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks. Decline my Lawyers' Lunch and say that I'm going to be in court all day and don't have time to go.",
    "parse": "(Yield (EventAttendance (RespondComment.apply \"I'm going to be in court all day and don't have time to go\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Lawyers' Lunch\"))))) :response (ResponseStatusType.Declined)))"
  },
  {
    "original_sentence": "Yes that's ok and also please cancel Lunch on Saturday while I'm at it, tell her I have jury duty and can't get drunk.",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \"I have jury duty and can't get drunk.\") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"Lunch\")))))) :response (ResponseStatusType.Declined))))"
  },
  {
    "original_sentence": "put meeting with johny at aug 31 10.00 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 31L (August)) (NumberAM 10L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"johny\")))))))))))"
  },
  {
    "original_sentence": "Emily came too",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\"))))))))))"
  },
  {
    "original_sentence": "That is perfect!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Can you delete the planning meeting from last week? Nobody showed up.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"planning meeting\")) (LastWeekNew)))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "meeting with Jake and his supervisor.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))))))))"
  },
  {
    "original_sentence": "Option two looks best.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I want to meet with Jake and his supervisor on Tuesday.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jake\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "I want the last one.",
    "parse": "(Yield (Execute (ChooseCreateEvent (BottomResult) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Great, I want to put a conference with Lenny and his supervisor on Friday.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lenny\")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"conference\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"
  },
  {
    "original_sentence": "Who are Chett?",
    "parse": "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chett\")))))))"
  },
  {
    "original_sentence": "What is Chett's email?",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chett\"))))))))"
  },
  {
    "original_sentence": "I will meet Bob tomorrow for lunch. Can you put that on the calendar?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))))))))"
  },
  {
    "original_sentence": "The second one works best, but make it last an hour.",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1)))))))"
  },
  {
    "original_sentence": "cancel it",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"
  },
  {
    "original_sentence": "No, instead I need you to make a meeting \"Send It\" for right after it ends",
    "parse": "(do (DoNotConfirm) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Send It\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))))"
  },
  {
    "original_sentence": "add Abby's team to a meeting please",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "Meeting with Jesse Rosenfeld's team.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse Rosenfeld\")))))))))))"
  },
  {
    "original_sentence": "Let's go with the second one. Who is on my team?",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (FindTeamOf (toRecipient (CurrentUser)))))"
  },
  {
    "original_sentence": "Thanks, I was curious about Dan Morton. Is he free at that time?",
    "parse": "(Yield (RecipientAvailability (& (Event.start_? (?= (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Marton\")))))))) false))"
  },
  {
    "original_sentence": "What about Kim Possible's team?",
    "parse": "(Yield (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim Possible\")))))))"
  },
  {
    "original_sentence": "set a meeting with joe smith on Monday morning.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Monday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"joe smith\")))))))))))"
  },
  {
    "original_sentence": "never mind cancel that",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Schedule a Brunch with Kayla and Charlie.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Brunch\")) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kayla\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Charlie\"))))))))))))"
  },
  {
    "original_sentence": "Kayla got sick so I need to cancel that request.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Cancel the meeting with Kayla also",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kayla\")))))))))))"
  },
  {
    "original_sentence": "Create new event \"Dinner\" at 5 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dinner\")) (Event.start_? (?= (NextTime (NumberPM 5L))))))))"
  },
  {
    "original_sentence": "What is on my calendar on January 5th and 6th?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (MonthDayToDay (January) (Day.apply 5L) (Day.apply 6L)))))"
  },
  {
    "original_sentence": "Do I have an event with anyone on Kim Possible's team?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasPeopleAnyOf (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim Possible\"))))))))))) 0L))"
  },
  {
    "original_sentence": "Great, can you check for any meetings with anyone on Dan Morton's team?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasPeopleAnyOf (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Morton\"))))))))))"
  },
  {
    "original_sentence": "Can you make a meeting with Dan Marton's team",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Marton\")))))))))))"
  },
  {
    "original_sentence": "The first option.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Am I meeting with Elli or any of her team next week?",
    "parse": "(let (x0 (PersonName.apply \"Elli\")) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (orConstraint (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasPeopleAnyOf (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))) (NextWeekList))))) 0L)))"
  },
  {
    "original_sentence": "Hi I need to delete the event for my dentist appointment",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dentist appointment\")))))))))"
  },
  {
    "original_sentence": "Also anything on that day, I need deleted.",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "I was wondering when my last dentist appointment was.",
    "parse": "(Yield (FindLastEvent (EventBeforeDateTime (Now) (Event.subject_? (?~= \"dentist appointment\")))))"
  },
  {
    "original_sentence": "Can you schedule a dentist appointment on June 21st at 8 am?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dentist appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 21L (June)) (NumberAM 8L))))))))"
  },
  {
    "original_sentence": "Delete the staff meeting scheduled for Monday, March 25.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 25L (March)) (Event.subject_? (?~= \"staff meeting\"))))))))))"
  },
  {
    "original_sentence": "WANT ME TO THE EVERTHING CANCEL",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Let's cancel that staff meeting on the 25th.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 25L) (Event.subject_? (?~= \"staff meeting\"))))))))))"
  },
  {
    "original_sentence": "YES CANCEL TO MEETING",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Great, thanks.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "List my events between 2 and 6 on the 24th",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (nextDayOfMonth (Today) 24L) (^(Event) EmptyStructConstraint) (NumberPM 2L) (NumberPM 6L))))"
  },
  {
    "original_sentence": "Do I have anything tomorrow afternoon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"
  },
  {
    "original_sentence": "What's going on in the morning next Tuesday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) (Morning))))"
  },
  {
    "original_sentence": "Is there any appointments on Wednesday afternoon?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"
  },
  {
    "original_sentence": "Do I have any meetings Tuesday from 2 to 4:00 pm?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint) (NumberPM 2L) (NumberPM 4L))))) 0L))"
  },
  {
    "original_sentence": "Who am I meeting with on July 27th?",
    "parse": "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 27L (July)) (^(Event) EmptyStructConstraint)))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Great. Please change the movie time to 7:00 PM",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"movie\")))))) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "put meeting with rosiyana",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"meeting with rosiyana\")))))"
  },
  {
    "original_sentence": "ok,make it on jul 25",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (MD 25L (July))))))))"
  },
  {
    "original_sentence": "Hey what's going on with Katy tomorrow again?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Katy\")))) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Is it raining in Plattsburgh?",
    "parse": "(Yield (IsRainy (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Plattsburgh\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "Okay. Can you add an appointment with Juan Carlos at 5:30 pm on the same date?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (HourMinutePm 5L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Juan Carlos\")))))))))))"
  },
  {
    "original_sentence": "Let's put time with the kids after 4PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"time with the kids\")) (Event.start_? (OnDateAfterTime (Today) (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "The second one. Cancel the Ice Cream Party scheduled after that though.",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (Event.subject_? (?~= \"Ice Cream Party\")) (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))))))"
  },
  {
    "original_sentence": "Yes, and reschedule for the same time tomorrow",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))"
  },
  {
    "original_sentence": "It was supposed to start at 1PM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Yes this looks much better",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Deletw the meeting at new castle at noon",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.start_? (DateTime.time_? (?= (Noon)))) (Event.location_? (?= (LocationKeyphrase.apply \"new castle\")))))))))))"
  },
  {
    "original_sentence": "no hold this appointment.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "actually yeah delete it",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "make an event for 3 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "it's fine",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "perfect!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a meeting with Amy on Friday at 10:30 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteAm 10L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Amy\")))))))))))"
  },
  {
    "original_sentence": "wait a minute",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Anything on my schedule for this evening?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Night))))"
  },
  {
    "original_sentence": "I need an event made for last wednesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (previousDayOfWeek (Today) (Wednesday))))))))"
  },
  {
    "original_sentence": "The first option.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Put the birthday party I went to last Sunday onto my calendar",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"birthday party\")) (Event.start_? (DateTime.date_? (?= (previousDayOfWeek (Today) (Sunday)))))))))"
  },
  {
    "original_sentence": "The second option works.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I went to a birthday party last monday at 8 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"birthday party\")) (Event.start_? (?= (DateAtTimeWithDefaults (previousDayOfWeek (Today) (Monday)) (NumberPM 8L))))))))"
  },
  {
    "original_sentence": "Is Tracey coming to my dinner party?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner party\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tracey\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "make that 9-10:30 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 10L 30L))))))))"
  },
  {
    "original_sentence": "Good. Is Marianne showing up at the gathering?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"gathering\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Marianne\")))))))) (ResponseStatusType.Accepted))))"
  },
  {
    "original_sentence": "Is Dave going to make the dinner party as well?",
    "parse": "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner party\"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dave\")))))))) (ResponseStatusType.Accepted)))"
  },
  {
    "original_sentence": "Yes this looks good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Delete event \"Tracy's wedding\"",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Tracy's wedding\")))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create all day event \"work trip\"",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"work trip\")) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (Today))))))"
  },
  {
    "original_sentence": "Can you move the meeting with Max and his boss to 2",
    "parse": "(let (x0 (PersonName.apply \"Max\")) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L))))))))"
  },
  {
    "original_sentence": "Looks great!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "DONE",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a coffee break with Chelsea's manager tomorrow at 11 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"coffee break\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 11L))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chelsea\"))))))))))))"
  },
  {
    "original_sentence": "Looks great. Keep it.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When do I meet with Dan again?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan\")))))))))"
  },
  {
    "original_sentence": "Can we make this meeting earlier in the day?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?< (DateTime.time (Event.start x0)))))))))"
  },
  {
    "original_sentence": "The second option please.",
    "parse": "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Add Dan Marton's boss and his skip to the meeting on December 2nd.",
    "parse": "(let (x0 (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Marton\"))))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (MD 2L (December))))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager (FindManager x0))))))))))"
  },
  {
    "original_sentence": "Can you add Jennifer's skip?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jennifer\"))))))))))))"
  },
  {
    "original_sentence": "Did the judge confirm the allegations",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "Can you tell me is Kate got the invite?",
    "parse": "(Yield (allows (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kate\"))) (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "I need to invite mark to that dinner as well",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"mark\"))))))))))"
  },
  {
    "original_sentence": "looks perfect",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Looks good but please also invite Kathy",
    "parse": "(Yield (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kathy\")))))))))"
  },
  {
    "original_sentence": "What can you do?",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "What does my calendar look like?",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "I would like to update tomorrow for a specific activity.",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Add 12:30pm to my calendar tomorrow, titled, \"Lunch\".",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Lunch\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 12L 30L))))))))"
  },
  {
    "original_sentence": "Can you make the time from 12:30PM to 1:15PM?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (HourMinutePm 12L 30L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 1L 15L))))))))"
  },
  {
    "original_sentence": "That is not correct.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you pencil me in for lunch tomorrow from 12:30PM -1:15PM?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 12L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (HourMinutePm 1L 15L)))))))))"
  },
  {
    "original_sentence": "That will do!",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Excellent, thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need to add a tetris battle to my calendar tomorrow at 6 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"tetris battle\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L))))))))"
  },
  {
    "original_sentence": "Yep, good job",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hey can you please call Antonio?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Antonio\"))))))))"
  },
  {
    "original_sentence": "find the number for John Spark and call the number",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John Spark\"))))))))"
  },
  {
    "original_sentence": "Search my contact list for George Smith and give him a call.",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"George Smith\"))))))))"
  },
  {
    "original_sentence": "Call Martin Scorsece",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Martin Scorsece\"))))))))"
  },
  {
    "original_sentence": "Please call Linda!",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Linda\"))))))))"
  },
  {
    "original_sentence": "Find Wild River Grille in Reno for me",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Wild River Grille in Reno\")))"
  },
  {
    "original_sentence": "Do they accommodate groups well?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "is there a place called Blue Coyote in Truckee?",
    "parse": "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \"Blue Coyote in Truckee\")))"
  },
  {
    "original_sentence": "Can the accomodate groups?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "What is the date two weeks and three days from now",
    "parse": "(Yield (adjustByPeriod (Today) (addPeriods (toWeeks 2) (toDays 3))))"
  },
  {
    "original_sentence": "Create a new appointment that's half as long as my last one 3 days from today",
    "parse": "(FenceAggregation)"
  },
  {
    "original_sentence": "When is my parents anniversary?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"parents anniversary\")))))))"
  },
  {
    "original_sentence": "Make an event to go swimming on Sunday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go swimming\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))))))"
  },
  {
    "original_sentence": "Hi can u get the address of local park of OH?",
    "parse": "(Yield (PlaceDescribableLocation (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \"local park of OH\"))))))"
  },
  {
    "original_sentence": "Its k Thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Thank you.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "When is my staff meeting?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"staff meeting\")))))))"
  },
  {
    "original_sentence": "make start time as 1:30 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 1L 30L)))))))"
  },
  {
    "original_sentence": "Yes, thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Also make the staff meeting location to be at Logan's steakhouse.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"staff meeting\")))))) (Event.location_? (?= (LocationKeyphrase.apply \"Logan's steakhouse\"))))))"
  },
  {
    "original_sentence": "Please add Mark and Dan Sanders to the meeting as well.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mark\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Sanders\")))))))))))"
  },
  {
    "original_sentence": "make a meet with jane tomorrow 1p.m.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jane\")))))))))))"
  },
  {
    "original_sentence": "Can we make it to 2PM please?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "Make appointment to today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Today)))))))"
  },
  {
    "original_sentence": "yep 4pm works",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Great",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I want to know where I'm having dinner tomorrow?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"dinner\"))))))))"
  },
  {
    "original_sentence": "thanks for your information",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Is that a casual restaurant?",
    "parse": "(PlaceHasFeature (PlaceFeature.Casual) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Does it have happy hour?",
    "parse": "(Yield (PlaceHasFeature (PlaceFeature.HappyHour) (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))))"
  },
  {
    "original_sentence": "Where do I go for Breakfast on Friday?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"Breakfast\"))))))))"
  },
  {
    "original_sentence": "What events are on now?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (Now) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Is it going to be sunny tomorrow?",
    "parse": "(Yield (IsSunny (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "Make a appointment for tomorrow at office meeting.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.location_? (?= (LocationKeyphrase.apply \"office meeting\")))))))"
  },
  {
    "original_sentence": "That will do for me thank you",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make the office meeting at 1:00 PM and add that Claire and Jim will be present.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "create a lunch date with dad at 12 pm today",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "Lunch appointment is at 12.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Lunch appointment\")) (Event.start_? (?= (NextTime (NumberPM 12L))))))))"
  },
  {
    "original_sentence": "tomorrow meeting on lunch",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"meeting on lunch\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"
  },
  {
    "original_sentence": "You can choose either.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Yeah it's good.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Indicate that i am meeting Jay on Monday 2 PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jay\")))))))))))"
  },
  {
    "original_sentence": "Invite Jimmy Fallon to this meeting.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jimmy Fallon\"))))))))))"
  },
  {
    "original_sentence": "it's look very well",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Change the time to 3pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Yes. And add dress rehearsal afterwards",
    "parse": "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dress rehearsal\")) (Event.start_? (?= (Event.end (^(Dynamic) item x0))))))))))"
  },
  {
    "original_sentence": "Can you tell me whose playing next week?",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "What is on my schedule today?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Schedule work from 10 to 1 pm.",
    "parse": "(let (x0 (NextTime (NumberAM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"work\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 1L)))))))))"
  },
  {
    "original_sentence": "Schedule time for a haircut early next Monday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"haircut\")) (Event.start_? (DateTimeConstraint (Early) (NextDOW (Monday))))))))"
  },
  {
    "original_sentence": "Never mind, instead schedule Shampoo Buying on the 25 early",
    "parse": "(do (DoNotConfirm) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Shampoo Buying\")) (Event.start_? (DateTimeConstraint (Early) (nextDayOfMonth (Today) 25L))))))))"
  },
  {
    "original_sentence": "Yes the first one please.",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Please schedule a swim workout on Monday in the early hours",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"swim workout\")) (Event.start_? (DateTimeConstraint (Early) (NextDOW (Monday))))))))"
  },
  {
    "original_sentence": "I can't go ice skating on Saturday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \"ice skating\"))))))))))"
  },
  {
    "original_sentence": "Don't cancel",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "i wanna met with lovx at 8 pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 8L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"lovx\")))))))))))"
  },
  {
    "original_sentence": "make it as one hour",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "It's look good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create another meeting tomorrow with Jack",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jack\")))))))))))"
  },
  {
    "original_sentence": "sure, 1 pm sounds good",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you put me down to go to the bank tomorrow at noon?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go to the bank\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (Noon))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "No, schedule go to the bank tomorrow at 4:00 pm.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"go to the bank\"))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Yes, thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Sounds good thanks for the update",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Can you create a meeting with Sarah today at 11 AM?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberAM 11L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\")))))))))))"
  },
  {
    "original_sentence": "Can you tell me what I have planned on February 1st?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 1L (February)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "Add a meeting at 10 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberAM 10L)))))))"
  },
  {
    "original_sentence": "Delete the following events: Dad's Birthday, Dad's dentist appointment",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "I need to make a dinner event on the day of the birthday was going to be.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "Add cleaning the first week of spring",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "cancel dinner meeting",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner meeting\")))))))))"
  },
  {
    "original_sentence": "That would be great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Add a trip to the farm in the summer.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"trip to the farm\")) (Event.start_? (DateTime.date_? (SeasonSummer)))))))"
  },
  {
    "original_sentence": "I want to go on Monday",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Make an event on Saturday called Dinner",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Dinner\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))))))"
  },
  {
    "original_sentence": "no those are too early, let's pick a later time",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (Evening))))))"
  },
  {
    "original_sentence": "The 2nd one works fine",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Perfect, thanks!",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make an event for Monday at 3pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "I need to change my appointment with Jamie to next Tuesday at 3 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamie\")))))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 3L)))))))"
  },
  {
    "original_sentence": "Can you update it again to me on Monday.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Monday))))))))"
  },
  {
    "original_sentence": "Create an event for A Basketball Game on 5:30 pm tomorrow.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"A Basketball Game\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 5L 30L))))))))"
  },
  {
    "original_sentence": "Set event for my hair appointment Saturday afternoon at 3:30 PM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"hair appointment\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (HourMinutePm 3L 30L))))))))"
  },
  {
    "original_sentence": "It should be 90 minutes.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toMinutes 90))))))"
  },
  {
    "original_sentence": "Ok, good.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Do I have anything else scheduled this weekend?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeekend)))))) 0L))"
  },
  {
    "original_sentence": "I need to get stuff for dinner at 3 pm on Saturday as well.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"get stuff for dinner\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "I need to know what date valentines day fell on last year.",
    "parse": "(Yield (HolidayYear (Holiday.ValentinesDay) (LastYear)))"
  },
  {
    "original_sentence": "How many seminars did I attend last year?",
    "parse": "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"seminars\")) (FullYearofYear (LastYear)))))))"
  },
  {
    "original_sentence": "Hello. I would like to set up lunch with Fiona Mason on Saturday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Fiona Mason\")))))))))))"
  },
  {
    "original_sentence": "Neither of them work.",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you have it start at 12pm instead?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))))))"
  },
  {
    "original_sentence": "Can you add to my calendar grocery shopping on Saturday from 12:00 to 3:00 pm?",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 12L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"grocery shopping\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 3L)))))))))"
  },
  {
    "original_sentence": "yeah, it's correct",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks, do I have any other events scheduled on Saturday?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))"
  },
  {
    "original_sentence": "Put tap dancing lessons on the calender at 4:00 to 5:00 on Saturday.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 4L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"tap dancing lessons\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "Looks good, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Put a meeting with Simon on my schedule for tomorrow at 1pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 1L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Simon\")))))))))))"
  },
  {
    "original_sentence": "Look very well",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok extend time til 2.00 pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 2L)))))))"
  },
  {
    "original_sentence": "great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "that is good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Find my Girlfriend Birthday Last Year?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"Girlfriend Birthday\")) (FullYearofYear (LastYear)))))))"
  },
  {
    "original_sentence": "When was my birthday party last year?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"birthday party\")) (FullYearofYear (LastYear))))))))"
  },
  {
    "original_sentence": "Delete my call with Elli and her skip",
    "parse": "(let (x0 (PersonName.apply \"Elli\")) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"call\")) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0))))))))))))))))))"
  },
  {
    "original_sentence": "Yes please cancel.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please inform my manager that the call is canceled.",
    "parse": "(FenceScope)"
  },
  {
    "original_sentence": "good for me",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a call to my manager for today at 1:00 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"call\")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "Does Janice have anything on her calendar for next week?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "Book our study group session for Saturday from 5 to 9 pm and put us in Cambridge.",
    "parse": "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 5L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"study group session\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 9L))))) (Event.location_? (?= (LocationKeyphrase.apply \"Cambridge\"))))))))"
  },
  {
    "original_sentence": "I'd like to put a meeting on my calendar for coffee with my boss at Macrina Bakery on Wednesday at their Belltown location.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"coffee\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday)))))) (Event.location_? (?= (LocationKeyphrase.apply \"Macrina Bakery\")))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "no thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a hike through the Rocky Mountains tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"hike\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.location_? (?= (LocationKeyphrase.apply \"the Rocky Mountains\")))))))"
  },
  {
    "original_sentence": "The first one",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Will it be windy at all?",
    "parse": "(Yield (IsWindy (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "What will the wind be today",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (windSpeed) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "create office meeting on friday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"office meeting\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"
  },
  {
    "original_sentence": "GOOD",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I need the office meeting to last an hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"office meeting\")))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "I have a meeting at 5 am Tuesday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 5L)))))))"
  },
  {
    "original_sentence": "can you arrange with 5.30am",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 5L 30L)))))))"
  },
  {
    "original_sentence": "Is my meeting with John still for 5:30 AM tomorrow?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))) (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (HourMinuteAm 5L 30L)) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Move that thing back by two hours please.",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?= (adjustByDuration (DateTime.time (Event.start x0)) (toHours 2)))))))))"
  },
  {
    "original_sentence": "Look is good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Let's cancel anything after 8AM on the 20th",
    "parse": "(FenceMultiAction)"
  },
  {
    "original_sentence": "Nope, thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Add the Balloon festival from last week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Balloon festival\")) (Event.start_? (DateTime.date_? (LastWeekNew)))))))"
  },
  {
    "original_sentence": "The first one is fine. Now, this past Sunday who was my business dinner with?",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Sunday)) (Event.subject_? (?~= \"business dinner\")))))))))"
  },
  {
    "original_sentence": "What other meeting did I have with David Lax earlier than that?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventBeforeDateTime (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"David Lax\"))))))))"
  },
  {
    "original_sentence": "Was my meeting with Jamie on the 15th?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousDayOfMonth (Today) 15L) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamie\")))))))) 0L))"
  },
  {
    "original_sentence": "When was the last dinner meeting I had?",
    "parse": "(Yield (Event.start (FindLastEvent (EventBeforeDateTime (Now) (Event.subject_? (?~= \"dinner meeting\"))))))"
  },
  {
    "original_sentence": "Please add my dad's 74th birthday for the 5th.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"dad's 74th birthday\")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 5L))))))))"
  },
  {
    "original_sentence": "Yeah. Also schedule time to watch 50 First Dates on Valentine's Day.",
    "parse": "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"watch 50 First Dates\")) (Event.start_? (DateTime.date_? (?= (NextHolidayFromToday (Holiday.ValentinesDay))))))))))"
  },
  {
    "original_sentence": "the first one works. also make 8th annual soup cook off for the 10th of March",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"8th annual soup cook off\")) (Event.start_? (DateTime.date_? (?= (MD 10L (March))))))))))"
  },
  {
    "original_sentence": "Hello, what is the fastest route from Los Angeles to San Diego?",
    "parse": "(FenceNavigation)"
  },
  {
    "original_sentence": "Set trip to San Diego for this weekend from Friday at noon to Sunday at 10 pm.",
    "parse": "(let (x0 (DowOfWeekNew (Friday) (ThisWeekend))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"trip to San Diego\")) (Event.start_? (?= (DateAtTimeWithDefaults x0 (Noon))))) (Event.end_? (?= (DateAtTimeWithDefaults (nextDayOfWeek x0 (Sunday)) (NumberPM 10L)))))))))"
  },
  {
    "original_sentence": "Do I have any meetings in the morning next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)) (Morning))))) 0L))"
  },
  {
    "original_sentence": "I would like to set up a lunch meeting with Joe for tomorrow at noon.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"lunch meeting\")) (Event.start_? (DateTimeConstraint (?= (Noon)) (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joe\")))))))))))"
  },
  {
    "original_sentence": "Hmm, let me call Joe and find out real quick. One Second",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "that looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks. Put a call with Monica after",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"call\")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Monica\")))))))))))"
  },
  {
    "original_sentence": "Actually I want to call Mona instead.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mona\"))))))"
  },
  {
    "original_sentence": "Wait, what is the name of Mona's boss again?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Mona\")))))))"
  },
  {
    "original_sentence": "put doctor appointment",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"doctor appointment\")))))"
  },
  {
    "original_sentence": "Schedule me for the Friday appointment.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "Is Sonia included in the next meeting at sarova?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \"sarova\"))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sonia\")))))))) 0L))"
  },
  {
    "original_sentence": "Which upcoming meeting do i have that doesn't include sonia?",
    "parse": "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"sonia\"))))))))))"
  },
  {
    "original_sentence": "Is Rachel not coming to any of the lunches this week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rachel\")))))))) (EventDuringRange (Event.subject_? (?~= \"lunches\")) (ThisWeek)))))) 0L))"
  },
  {
    "original_sentence": "Where will the second one be?",
    "parse": "(Yield (Event.location (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "When is my next skiing trip without Tonya?",
    "parse": "(Yield (FindNumNextEvent (& (Event.subject_? (?~= \"skiing trip\")) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tonya\"))))))))) 1L))"
  },
  {
    "original_sentence": "Do I have any events scheduled today?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "When do I have a meeting with John next week?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"John\")))) (NextWeekList)))))))"
  },
  {
    "original_sentence": "I want to schedule a meeting at 11 AM with John next Monday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"John\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "Is there going to be a board meeting next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"board meeting\")) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "Can you tell me if I have a lunch meeting tomorrow?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \"lunch meeting\")))))"
  },
  {
    "original_sentence": "When do I have events scheduled with my kids?",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "When is my next vacation?",
    "parse": "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \"vacation\")) 1L)))"
  },
  {
    "original_sentence": "Move the timing to the next quarter.",
    "parse": "(FenceDateTime)"
  },
  {
    "original_sentence": "the cruise vacation should be an hour",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"cruise vacation\")))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Is there any meeting in the month of July",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (July)))))) 0L))"
  },
  {
    "original_sentence": "I'm going to have dinner with my mom at 8th",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "put dinner with mary at 8th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"dinner\")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"mary\")))))))))))"
  },
  {
    "original_sentence": "When was dinner again?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\")))))))"
  },
  {
    "original_sentence": "is dinner still set for 1300?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.start_? (DateTime.time_? (?= (HourMinuteMilitary 13L 0L)))))))) 0L))"
  },
  {
    "original_sentence": "Make dinner from 1300 to 1400 on Saturday.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"dinner\")))))) (& (Event.start_? (DateTime.time_? (?= (HourMinuteMilitary 13L 0L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteMilitary 14L 0L))))))))"
  },
  {
    "original_sentence": "Schedule dinner with my family on easter sunday",
    "parse": "(FenceAttendee)"
  },
  {
    "original_sentence": "I would like to create an event on easter sunday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextHolidayFromToday (Holiday.Easter))))))))"
  },
  {
    "original_sentence": "Yes, the one at 1 pm",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Who is in my address book?",
    "parse": "(FencePeopleQa)"
  },
  {
    "original_sentence": "Cancel my 1-1 with Rob next week",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.isOneOnOne_? (?= true)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rob\"))))) (NextWeekList)))))))))"
  },
  {
    "original_sentence": "Yes cancel that",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "ok! thanks to you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "I need a 1-1 with Kathy today",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (?= (Today)))) (Event.isOneOnOne_? (?= true))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kathy\")))))))))))"
  },
  {
    "original_sentence": "yes the afternoon meeting looks great",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (Afternoon))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you cancel my meeting with Damon Ellery?",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon Ellery\")))))))))))"
  },
  {
    "original_sentence": "Ok, I needed to change it anyhow. Schedule a meeting with Damon tomorrow at 3PM",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon\")))))))))))"
  },
  {
    "original_sentence": "Have it go until 4 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Perfect, thanks.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "create meeting on monday at 5",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "have this ending at 6",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 6L)))))))"
  },
  {
    "original_sentence": "peaches and pies",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Schedule a meeting with Eric on Tuesday at 9:30 AM.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (HourMinuteAm 9L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Eric\")))))))))))"
  },
  {
    "original_sentence": "bth",
    "parse": "(FenceGibberish)"
  },
  {
    "original_sentence": "Do I have anything on Thursday?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "Create Doctors Appointment on Thursday",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Doctors Appointment\")) (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday)))))))))"
  },
  {
    "original_sentence": "The first",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Change my appointment tomorrow from 10:00 AM to 1:00 PM",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberAM 10L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Move the appointment from tomorrow to friday",
    "parse": "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "cancel my appointment friday",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create a event in 10 days to get a job",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"get a job\")) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (Today) (toDays 10)))))))))"
  },
  {
    "original_sentence": "no",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Create a event in 10 days to get a job at 2:00 PM to 4:00 PM",
    "parse": "(let (x0 (DateAtTimeWithDefaults (adjustByPeriod (Today) (toDays 10)) (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"get a job\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L)))))))))"
  },
  {
    "original_sentence": "No",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Do I have anything on my schedule for today",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"
  },
  {
    "original_sentence": "remind me to go to the doctor tomorrow at 3pm",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"go to the doctor\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "have this from 3-4",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "change the time to 4pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Set the location to Mount Sinai Hospital",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \"Mount Sinai Hospital\"))))))"
  },
  {
    "original_sentence": "Can you schedule an appointment for me?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "yes",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "could you note that the appointment is with Barack Obama?",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "What will the weather be like tomorrow at 4pm?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (Here)) (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L)))))"
  },
  {
    "original_sentence": "Houston, Texas.",
    "parse": "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \"place\")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \"Houston, Texas\")))))))"
  },
  {
    "original_sentence": "Can you make a new meeting with Johnson on Wednesday in the morning called reactions to last night's board meeting?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"reactions to last night's board meeting\")) (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Wednesday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Johnson\")))))))))))"
  },
  {
    "original_sentence": "The 2nd one works for me.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Can you actually change that so it is an hour long?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Create an event for July 3rd name it watch a big match",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"watch a big match\")) (Event.start_? (DateTime.date_? (?= (MD 3L (July)))))))))"
  },
  {
    "original_sentence": "the one that starts at 1 pm.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "looks super",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "great, well done",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "The big match will go until 5, change it to that.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"big match\")))))) (Event.end_? (DateTime.time_? (?= (NumberPM 5L)))))))"
  },
  {
    "original_sentence": "where is the meeting next week?",
    "parse": "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))))"
  },
  {
    "original_sentence": "what else is at the Reno office",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \"Reno office\"))))))"
  },
  {
    "original_sentence": "Great! anything else in the area?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))"
  },
  {
    "original_sentence": "The meeting with Jane on Friday is cancelled.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jane\"))))))))))))"
  },
  {
    "original_sentence": "yes it is",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "awesome. Please add a meeting with nick for tomorrow from 2-4 pm",
    "parse": "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"nick\"))))))))))))"
  },
  {
    "original_sentence": "Yes I confirm.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Also add monica to this meeting",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"monica\"))))))))))"
  },
  {
    "original_sentence": "Schedule a meeting with Sam today in the late morning",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (LateMorning) (Today))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\")))))))))))"
  },
  {
    "original_sentence": "10:30 works",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (HourMinuteAm 10L 30L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "What else is scheduled this morning?",
    "parse": "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Morning)))))"
  },
  {
    "original_sentence": "set breakfast at 11.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"breakfast\")) (Event.start_? (?= (NextTime (NumberAM 11L))))))))"
  },
  {
    "original_sentence": "yes right ok",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Hello",
    "parse": "(GenericPleasantry)"
  },
  {
    "original_sentence": "What is the temperature?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))"
  },
  {
    "original_sentence": "What is the low today?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "What is the high today?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "Will it thunder?",
    "parse": "(Yield (IsStormy (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Is it raining?",
    "parse": "(Yield (IsRainy (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "What is the hourly forecast?",
    "parse": "(FenceWeather)"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Bye",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "What is the weather in High Point?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"High Point\"))) (?= (Now))))"
  },
  {
    "original_sentence": "What is the weather in Boone?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Boone\"))) (?= (Now))))"
  },
  {
    "original_sentence": "Will it snow in boone?",
    "parse": "(Yield (WillSnow (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"boone\"))) (DateTime.date_? (?= (Today))))))"
  },
  {
    "original_sentence": "Thank you",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Put down that I have to pick up my parents from the airport this Sunday at 4 pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"pick up my parents from the airport\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 4L))))))))"
  },
  {
    "original_sentence": "What is on my calendar next week?",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))"
  },
  {
    "original_sentence": "Search for meetings at 8 am on Monday.",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 8L)) (^(Event) EmptyStructConstraint))))"
  },
  {
    "original_sentence": "I have a meeting with molly in the late afternoon today.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (LateAfternoon) (Today))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"molly\")))))))))))"
  },
  {
    "original_sentence": "Yes that's good, can you add Thomas to that meeting too?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Thomas\"))))))))))"
  },
  {
    "original_sentence": "the first one would be great",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Schedule Anniversary dinner Monday evening",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Anniversary dinner\")) (Event.start_? (DateTimeConstraint (Evening) (NextDOW (Monday))))))))"
  },
  {
    "original_sentence": "The first one is great",
    "parse": "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "I have a supplies meeting with Jen on Tuesday at 3pm .",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"supplies meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 3L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jen\")))))))))))"
  },
  {
    "original_sentence": "Craig is coming too.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Craig\"))))))))))"
  },
  {
    "original_sentence": "This looks great, thank you",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thank you very much",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Make an event for Thursday this week",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (DowOfWeekNew (Thursday) (ThisWeek))))))))"
  },
  {
    "original_sentence": "Put on schedule workout with boss on Friday at 10 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"workout\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 10L))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"
  },
  {
    "original_sentence": "that looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "have this ending at 11 please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "Delete my last workout tomorrow.",
    "parse": "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindLastEvent (EventOnDate (Tomorrow) (Event.subject_? (?~= \"workout\"))))))))"
  },
  {
    "original_sentence": "Have this ending at 11:00 please",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 11L)))))))"
  },
  {
    "original_sentence": "iam work please remainder my calender at next week",
    "parse": "(FenceReminder)"
  },
  {
    "original_sentence": "Where is Jen's office at?",
    "parse": "(Yield (Person.officeLocation (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jen\"))))))))"
  },
  {
    "original_sentence": "please my office address find and remainder in my calender",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "What is Jen's office phone number?",
    "parse": "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jen\"))))))))"
  },
  {
    "original_sentence": "Can you also remind me of Joel's email address? I'm trying to get a hold of him.",
    "parse": "(Yield (Person.emailAddress (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joel\"))))))))"
  },
  {
    "original_sentence": "I am leaving for Japan next month.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Japan\")) (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth))))))))"
  },
  {
    "original_sentence": "I meant I am going to my travel agent for a meeting about Japan",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \"going to my travel agent for a meeting about Japan\")))))"
  },
  {
    "original_sentence": "No, what else do I have available?",
    "parse": "(Yield (RecipientAvailability (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser)))) true))"
  },
  {
    "original_sentence": "How about something available on December 5th?",
    "parse": "(Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (?= (MDY 5L (December) (Year.apply 2019L))))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true))"
  },
  {
    "original_sentence": "ok set the second one appointment timing",
    "parse": "(Yield (CreateCommitEventWrapper (Execute (refer (& (^(CreateCommitEvent) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(CreateCommitEvent) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "What day of the week is it?",
    "parse": "(FenceTriviaQa)"
  },
  {
    "original_sentence": "Can you schedule a Soccer Practice for Jane at 5:30 pm on Wednesday night?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"Soccer Practice for Jane\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (HourMinutePm 5L 30L))))))))"
  },
  {
    "original_sentence": "Make it an hour, then it's fine",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "Change dinner and a movie time on Friday to 7pm",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \"dinner and a movie\"))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))"
  },
  {
    "original_sentence": "Good, and when is company fall meeting?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"company fall meeting\"))))))))"
  },
  {
    "original_sentence": "And when is my one-on-one with Jan?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.isOneOnOne_? (?= true)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jan\"))))))))))"
  },
  {
    "original_sentence": "Can you change that to Friday?",
    "parse": "(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)))))))))"
  },
  {
    "original_sentence": "No, sorry, I meant the following Friday.",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.date_? (?= (nextDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Friday))))))))"
  },
  {
    "original_sentence": "Who is Bobby's manager?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bobby\")))))))"
  },
  {
    "original_sentence": "Who is the supervisor of Huey?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Huey\")))))))"
  },
  {
    "original_sentence": "What time is my meeting on Friday?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))))"
  },
  {
    "original_sentence": "Does Dan Schoffel report to anybody?",
    "parse": "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dan Schoffel\")))))))"
  },
  {
    "original_sentence": "Can you make an event for Friday the 13th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 13L)))))))"
  },
  {
    "original_sentence": "Prepare presentation materials",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \"Prepare presentation materials\")))))"
  },
  {
    "original_sentence": "The second one does.",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Change the duration to one hour.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"
  },
  {
    "original_sentence": "yes right okay",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Set my status as busy all Monday afternoon after 1pm.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.showAs_? (?= (ShowAsStatus.Busy))) (NextDOW (Monday))))))"
  },
  {
    "original_sentence": "I need all doctor appointments that I went to last month",
    "parse": "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"doctor appointments\")) (FullMonthofMonth (Date.month (PeriodBeforeDate (Today) (toMonths 1)))))))"
  },
  {
    "original_sentence": "Alright.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "look for tea party event",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"tea party\"))))))"
  },
  {
    "original_sentence": "It's not that type of tea party - it's a political rally.",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Is it raining in Raleigh?",
    "parse": "(Yield (IsRainy (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Raleigh\"))) (?= (Now)))))"
  },
  {
    "original_sentence": "OK THAT'S FINE",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Set a meeting in Raleigh with Paul Mainer for Wednesday at 10 am.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 10L)))) (Event.location_? (?= (LocationKeyphrase.apply \"Raleigh\")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Paul Mainer\")))))))))))"
  },
  {
    "original_sentence": "What's the weather in Raleigh for tomorrow at 10 AM?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"Raleigh\"))) (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 10L)))))"
  },
  {
    "original_sentence": "good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "How are you?",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Create a hiking trip for Saturday at 10 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"hiking trip\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 10L))))))))"
  },
  {
    "original_sentence": "Yes it does.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Will it rain on Saturday?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextDOW (Saturday)))))))"
  },
  {
    "original_sentence": "I'm going to another hiking trip tomorrow at 3",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"hiking trip\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))))))))"
  },
  {
    "original_sentence": "will it rain in lancaster tomorrow?",
    "parse": "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"lancaster\"))) (DateTime.date_? (?= (Tomorrow))))))"
  },
  {
    "original_sentence": "that looks good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Please change my hiking trip to going metal detecting once my metal detector arrives via UPS",
    "parse": "(FenceSpecify)"
  },
  {
    "original_sentence": "Hold that thought",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "Request to show me events",
    "parse": "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"
  },
  {
    "original_sentence": "need a meeting tomorrow around 7 am",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 7L)))))))"
  },
  {
    "original_sentence": "It looks right.",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks. Do I have a follow-up appointment next week?",
    "parse": "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"follow-up appointment\")) (NextWeekList))))) 0L))"
  },
  {
    "original_sentence": "good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "Appointment day is good",
    "parse": "(PleasantryAnythingElseCombined)"
  },
  {
    "original_sentence": "help me with my schedule on today.",
    "parse": "(PleasantryCalendar)"
  },
  {
    "original_sentence": "Let's scheule a meeting with Ben for the 30th",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ben\")))))))))))"
  },
  {
    "original_sentence": "The first one looks good, but please schedule a arm workout at noon after that.",
    "parse": "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"arm workout\")) (Event.start_? (?= (TimeAfterDateTime (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (NumberPM 12L)))))))))"
  },
  {
    "original_sentence": "defer the meeting with David and loris at 5 pm today.",
    "parse": "(FenceOther)"
  },
  {
    "original_sentence": "When is my meeting with Daveed?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Daveed\")))))))))"
  },
  {
    "original_sentence": "Block my calendar for an hour before my presentation so I can get ready.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (PeriodDurationBeforeDateTime (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"presentation\")))))) (PeriodDuration.apply :duration (toHours 1))))))))"
  },
  {
    "original_sentence": "Anything earlier than that?",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \"start\")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"
  },
  {
    "original_sentence": "cancel the appointment on calender",
    "parse": "(DoNotConfirm)"
  },
  {
    "original_sentence": "Can you make my meeting with Darryl a little earlier next week?",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Darryl\")))) (NextWeekList)))))) (Event.start_? (DateTime.date_? (EarlyDateRange (NextWeekList)))))))"
  },
  {
    "original_sentence": "how about 4.00 pm - 4.30 pm",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (UpdateEventIntensionConstraint) (& (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 4L 30L))))))))"
  },
  {
    "original_sentence": "I have a meeting tomorrow at 2pm. It's with Nora, Emily and James.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Nora\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Emily\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"James\"))))))))))))"
  },
  {
    "original_sentence": "Yes that looks great",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When am I having dinner with Justin, Carl, and Philip?",
    "parse": "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"dinner\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Justin\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Carl\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Philip\"))))))))))"
  },
  {
    "original_sentence": "please cancel it and inform to others",
    "parse": "(do (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (FenceScope))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "i need a bar night next year",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"bar night\")) (Event.start_? (DateTime.date_? (FullYearofYear (NextYear))))))))"
  },
  {
    "original_sentence": "Can you set up a karaoke night for next year?",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"karaoke night\")) (Event.start_? (DateTime.date_? (FullYearofYear (NextYear))))))))"
  },
  {
    "original_sentence": "When is my graduation ceremony next year?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \"graduation ceremony\")) (FullYearofYear (NextYear))))))))"
  },
  {
    "original_sentence": "What is the weather in El Segundo today?",
    "parse": "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \"El Segundo\"))) (DateTime.date_? (?= (Today)))))"
  },
  {
    "original_sentence": "Is it foggy there?",
    "parse": "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (visibility) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"
  },
  {
    "original_sentence": "Please add coffee meeting at 2pm tomorrow with Ashley, jeff, and steve.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"coffee meeting\")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ashley\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"jeff\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"steve\"))))))))))))"
  },
  {
    "original_sentence": "That's great, thanks",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Put Go to the Store to Buy Party Supplies with Jack, April, and Jen on my schedule at noon on Sunday.",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"Go to the Store to Buy Party Supplies\")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (Noon))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jack\")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"April\"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jen\"))))))))))))"
  },
  {
    "original_sentence": "yes,but change the start time as 11 AM",
    "parse": "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \"output\"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"
  },
  {
    "original_sentence": "Great. When is the birthday party with ned, joffrey, and sansa?",
    "parse": "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \"birthday party\")) (Event.attendees_? (& (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"ned\"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"joffrey\")))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"sansa\"))))))))))))"
  },
  {
    "original_sentence": "Make a meeting with Abby tomorrow",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Abby\")))))))))))"
  },
  {
    "original_sentence": "Hmm, I have to think about this",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "please wait",
    "parse": "(UserPauseResponse)"
  },
  {
    "original_sentence": "please confirm the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "yes, please confirm",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "When is Jen's wedding?",
    "parse": "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \"Jen's wedding\")))))))"
  },
  {
    "original_sentence": "add a reminder for jens wedding on april 15th 2019",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"jens wedding\")) (Event.start_? (DateTime.date_? (?= (MDY 15L (April) (Year.apply 2019L)))))))))"
  },
  {
    "original_sentence": "conference call friday afternoon",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"conference call\")) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Friday))))))))"
  },
  {
    "original_sentence": "The 2PM one. Also mark me as busy for that meeting.",
    "parse": "(Yield (Execute (ChooseCreateEventFromConstraint (& (Event.showAs_? (?= (ShowAsStatus.Busy))) (EventAtTime (^(Event) EmptyStructConstraint) (NumberPM 2L))) (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Schedule a meeting with Lori for March 29",
    "parse": "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (MD 29L (March))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Lori\")))))))))))"
  },
  {
    "original_sentence": "the second one",
    "parse": "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"
  },
  {
    "original_sentence": "Add Loriri to that meeting.",
    "parse": "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Loriri\"))))))))))"
  },
  {
    "original_sentence": "Create event for jogging between 3-4pm",
    "parse": "(let (x0 (NextTime (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"jogging\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 4L)))))))))"
  },
  {
    "original_sentence": "Yes",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Create event for stretching between 4:30 to 5pm",
    "parse": "(let (x0 (NextTime (HourMinutePm 4L 30L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \"stretching\")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L)))))))))"
  },
  {
    "original_sentence": "Good",
    "parse": "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"
  },
  {
    "original_sentence": "Thanks",
    "parse": "(PleasantryAnythingElseCombined)"
  }
]